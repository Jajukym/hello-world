ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"counterShift.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	counterShift_initVar
  19              		.bss
  20              		.type	counterShift_initVar, %object
  21              		.size	counterShift_initVar, 1
  22              	counterShift_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.counterShift_Init,"ax",%progbits
  25              		.align	2
  26              		.global	counterShift_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	counterShift_Init, %function
  30              	counterShift_Init:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\counterShift.c"
   1:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/counterShift.c **** * File Name: counterShift.c  
   3:Generated_Source\PSoC5/counterShift.c **** * Version 3.0
   4:Generated_Source\PSoC5/counterShift.c **** *
   5:Generated_Source\PSoC5/counterShift.c **** *  Description:
   6:Generated_Source\PSoC5/counterShift.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/counterShift.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/counterShift.c **** *
   9:Generated_Source\PSoC5/counterShift.c **** *   Note:
  10:Generated_Source\PSoC5/counterShift.c **** *     None
  11:Generated_Source\PSoC5/counterShift.c **** *
  12:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
  13:Generated_Source\PSoC5/counterShift.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/counterShift.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/counterShift.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/counterShift.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/counterShift.c **** 
  19:Generated_Source\PSoC5/counterShift.c **** #include "counterShift.h"
  20:Generated_Source\PSoC5/counterShift.c **** 
  21:Generated_Source\PSoC5/counterShift.c **** uint8 counterShift_initVar = 0u;
  22:Generated_Source\PSoC5/counterShift.c **** 
  23:Generated_Source\PSoC5/counterShift.c **** 
  24:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_Init
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 2


  26:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
  27:Generated_Source\PSoC5/counterShift.c **** * Summary:
  28:Generated_Source\PSoC5/counterShift.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/counterShift.c **** * 
  30:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
  31:Generated_Source\PSoC5/counterShift.c **** *  void  
  32:Generated_Source\PSoC5/counterShift.c **** *
  33:Generated_Source\PSoC5/counterShift.c **** * Return: 
  34:Generated_Source\PSoC5/counterShift.c **** *  void
  35:Generated_Source\PSoC5/counterShift.c **** *
  36:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/counterShift.c **** void counterShift_Init(void) 
  38:Generated_Source\PSoC5/counterShift.c **** {
  33              		.loc 1 38 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/counterShift.c ****         #if (!counterShift_UsingFixedFunction && !counterShift_ControlRegRemoved)
  40:Generated_Source\PSoC5/counterShift.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/counterShift.c ****         #endif /* (!counterShift_UsingFixedFunction && !counterShift_ControlRegRemoved) */
  42:Generated_Source\PSoC5/counterShift.c ****         
  43:Generated_Source\PSoC5/counterShift.c ****         #if(!counterShift_UsingFixedFunction) 
  44:Generated_Source\PSoC5/counterShift.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/counterShift.c ****             uint8 counterShift_interruptState;
  46:Generated_Source\PSoC5/counterShift.c ****         #endif /* (!counterShift_UsingFixedFunction) */
  47:Generated_Source\PSoC5/counterShift.c ****         
  48:Generated_Source\PSoC5/counterShift.c ****         #if (counterShift_UsingFixedFunction)
  49:Generated_Source\PSoC5/counterShift.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/counterShift.c ****             counterShift_CONTROL &= counterShift_CTRL_ENABLE;
  43              		.loc 1 50 0
  44 0004 204A     		ldr	r2, .L2
  45 0006 204B     		ldr	r3, .L2
  46 0008 1B78     		ldrb	r3, [r3]
  47 000a DBB2     		uxtb	r3, r3
  48 000c 03F00103 		and	r3, r3, #1
  49 0010 DBB2     		uxtb	r3, r3
  50 0012 1370     		strb	r3, [r2]
  51:Generated_Source\PSoC5/counterShift.c ****             
  52:Generated_Source\PSoC5/counterShift.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/counterShift.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/counterShift.c ****                 counterShift_CONTROL2 &= ((uint8)(~counterShift_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/counterShift.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/counterShift.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/counterShift.c ****                 counterShift_CONTROL3 &= ((uint8)(~counterShift_CTRL_MODE_MASK));                
  51              		.loc 1 57 0
  52 0014 1D4A     		ldr	r2, .L2+4
  53 0016 1D4B     		ldr	r3, .L2+4
  54 0018 1B78     		ldrb	r3, [r3]
  55 001a DBB2     		uxtb	r3, r3
  56 001c 23F00303 		bic	r3, r3, #3
  57 0020 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 3


  58 0022 1370     		strb	r3, [r2]
  58:Generated_Source\PSoC5/counterShift.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/counterShift.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/counterShift.c ****             #if (counterShift_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/counterShift.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/counterShift.c ****                 counterShift_CONTROL |= counterShift_ONESHOT;
  63:Generated_Source\PSoC5/counterShift.c ****             #endif /* (counterShift_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/counterShift.c ****             
  65:Generated_Source\PSoC5/counterShift.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/counterShift.c ****             counterShift_CONTROL2 |= counterShift_CTRL2_IRQ_SEL;
  59              		.loc 1 66 0
  60 0024 1A4A     		ldr	r2, .L2+8
  61 0026 1A4B     		ldr	r3, .L2+8
  62 0028 1B78     		ldrb	r3, [r3]
  63 002a DBB2     		uxtb	r3, r3
  64 002c 43F00103 		orr	r3, r3, #1
  65 0030 DBB2     		uxtb	r3, r3
  66 0032 1370     		strb	r3, [r2]
  67:Generated_Source\PSoC5/counterShift.c ****             
  68:Generated_Source\PSoC5/counterShift.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/counterShift.c ****             counterShift_RT1 &= ((uint8)(~counterShift_RT1_MASK));
  67              		.loc 1 69 0
  68 0034 174A     		ldr	r2, .L2+12
  69 0036 174B     		ldr	r3, .L2+12
  70 0038 1B78     		ldrb	r3, [r3]
  71 003a DBB2     		uxtb	r3, r3
  72 003c 23F03003 		bic	r3, r3, #48
  73 0040 DBB2     		uxtb	r3, r3
  74 0042 1370     		strb	r3, [r2]
  70:Generated_Source\PSoC5/counterShift.c ****             counterShift_RT1 |= counterShift_SYNC;     
  75              		.loc 1 70 0
  76 0044 134A     		ldr	r2, .L2+12
  77 0046 134B     		ldr	r3, .L2+12
  78 0048 1B78     		ldrb	r3, [r3]
  79 004a DBB2     		uxtb	r3, r3
  80 004c 43F03003 		orr	r3, r3, #48
  81 0050 DBB2     		uxtb	r3, r3
  82 0052 1370     		strb	r3, [r2]
  71:Generated_Source\PSoC5/counterShift.c ****                     
  72:Generated_Source\PSoC5/counterShift.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/counterShift.c ****             counterShift_RT1 &= ((uint8)(~counterShift_SYNCDSI_MASK));
  83              		.loc 1 73 0
  84 0054 0F4A     		ldr	r2, .L2+12
  85 0056 0F4B     		ldr	r3, .L2+12
  86 0058 1B78     		ldrb	r3, [r3]
  87 005a DBB2     		uxtb	r3, r3
  88 005c 23F00F03 		bic	r3, r3, #15
  89 0060 DBB2     		uxtb	r3, r3
  90 0062 1370     		strb	r3, [r2]
  74:Generated_Source\PSoC5/counterShift.c ****             counterShift_RT1 |= counterShift_SYNCDSI_EN;
  91              		.loc 1 74 0
  92 0064 0B4A     		ldr	r2, .L2+12
  93 0066 0B4B     		ldr	r3, .L2+12
  94 0068 1B78     		ldrb	r3, [r3]
  95 006a DBB2     		uxtb	r3, r3
  96 006c 43F00F03 		orr	r3, r3, #15
  97 0070 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 4


  98 0072 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/counterShift.c **** 
  76:Generated_Source\PSoC5/counterShift.c ****         #else
  77:Generated_Source\PSoC5/counterShift.c ****             #if(!counterShift_ControlRegRemoved)
  78:Generated_Source\PSoC5/counterShift.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/counterShift.c ****             ctrl = counterShift_CONTROL & ((uint8)(~counterShift_CTRL_CMPMODE_MASK));
  80:Generated_Source\PSoC5/counterShift.c ****             counterShift_CONTROL = ctrl | counterShift_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/counterShift.c ****             
  82:Generated_Source\PSoC5/counterShift.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/counterShift.c ****             ctrl = counterShift_CONTROL & ((uint8)(~counterShift_CTRL_CAPMODE_MASK));
  84:Generated_Source\PSoC5/counterShift.c ****             
  85:Generated_Source\PSoC5/counterShift.c ****             #if( 0 != counterShift_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/counterShift.c ****                 counterShift_CONTROL = ctrl | counterShift_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/counterShift.c ****             #else
  88:Generated_Source\PSoC5/counterShift.c ****                 counterShift_CONTROL = ctrl;
  89:Generated_Source\PSoC5/counterShift.c ****             #endif /* 0 != counterShift_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/counterShift.c ****             
  91:Generated_Source\PSoC5/counterShift.c ****             #endif /* (!counterShift_ControlRegRemoved) */
  92:Generated_Source\PSoC5/counterShift.c ****         #endif /* (counterShift_UsingFixedFunction) */
  93:Generated_Source\PSoC5/counterShift.c ****         
  94:Generated_Source\PSoC5/counterShift.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/counterShift.c ****         #if (!counterShift_UsingFixedFunction)
  96:Generated_Source\PSoC5/counterShift.c ****             counterShift_ClearFIFO();
  97:Generated_Source\PSoC5/counterShift.c ****         #endif /* (!counterShift_UsingFixedFunction) */
  98:Generated_Source\PSoC5/counterShift.c ****         
  99:Generated_Source\PSoC5/counterShift.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/counterShift.c ****         counterShift_WritePeriod(counterShift_INIT_PERIOD_VALUE);
  99              		.loc 1 100 0
 100 0074 0820     		movs	r0, #8
 101 0076 FFF7FEFF 		bl	counterShift_WritePeriod
 101:Generated_Source\PSoC5/counterShift.c ****         #if (!(counterShift_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/counterShift.c ****             counterShift_WriteCounter(counterShift_INIT_COUNTER_VALUE);
 102              		.loc 1 102 0
 103 007a 0820     		movs	r0, #8
 104 007c FFF7FEFF 		bl	counterShift_WriteCounter
 103:Generated_Source\PSoC5/counterShift.c ****         #endif /* (!(counterShift_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/counterShift.c ****         counterShift_SetInterruptMode(counterShift_INIT_INTERRUPTS_MASK);
 105              		.loc 1 104 0
 106 0080 0020     		movs	r0, #0
 107 0082 FFF7FEFF 		bl	counterShift_SetInterruptMode
 105:Generated_Source\PSoC5/counterShift.c ****         
 106:Generated_Source\PSoC5/counterShift.c ****         #if (!counterShift_UsingFixedFunction)
 107:Generated_Source\PSoC5/counterShift.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/counterShift.c ****             (void)counterShift_ReadStatusRegister();
 109:Generated_Source\PSoC5/counterShift.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/counterShift.c ****             counterShift_WriteCompare(counterShift_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/counterShift.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/counterShift.c ****             
 113:Generated_Source\PSoC5/counterShift.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/counterShift.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/counterShift.c ****             counterShift_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/counterShift.c ****             
 117:Generated_Source\PSoC5/counterShift.c ****             counterShift_STATUS_AUX_CTRL |= counterShift_STATUS_ACTL_INT_EN_MASK;
 118:Generated_Source\PSoC5/counterShift.c ****             
 119:Generated_Source\PSoC5/counterShift.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/counterShift.c ****             CyExitCriticalSection(counterShift_interruptState);
 121:Generated_Source\PSoC5/counterShift.c ****             
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 5


 122:Generated_Source\PSoC5/counterShift.c ****         #endif /* (!counterShift_UsingFixedFunction) */
 123:Generated_Source\PSoC5/counterShift.c **** }
 108              		.loc 1 123 0
 109 0086 80BD     		pop	{r7, pc}
 110              	.L3:
 111              		.align	2
 112              	.L2:
 113 0088 004F0040 		.word	1073762048
 114 008c 024F0040 		.word	1073762050
 115 0090 014F0040 		.word	1073762049
 116 0094 0B4F0040 		.word	1073762059
 117              		.cfi_endproc
 118              	.LFE0:
 119              		.size	counterShift_Init, .-counterShift_Init
 120              		.section	.text.counterShift_Enable,"ax",%progbits
 121              		.align	2
 122              		.global	counterShift_Enable
 123              		.thumb
 124              		.thumb_func
 125              		.type	counterShift_Enable, %function
 126              	counterShift_Enable:
 127              	.LFB1:
 124:Generated_Source\PSoC5/counterShift.c **** 
 125:Generated_Source\PSoC5/counterShift.c **** 
 126:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_Enable
 128:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 129:Generated_Source\PSoC5/counterShift.c **** * Summary:
 130:Generated_Source\PSoC5/counterShift.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/counterShift.c **** * 
 132:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 133:Generated_Source\PSoC5/counterShift.c **** *  void  
 134:Generated_Source\PSoC5/counterShift.c **** *
 135:Generated_Source\PSoC5/counterShift.c **** * Return: 
 136:Generated_Source\PSoC5/counterShift.c **** *  void
 137:Generated_Source\PSoC5/counterShift.c **** *
 138:Generated_Source\PSoC5/counterShift.c **** * Side Effects: 
 139:Generated_Source\PSoC5/counterShift.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/counterShift.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/counterShift.c **** *
 142:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/counterShift.c **** void counterShift_Enable(void) 
 144:Generated_Source\PSoC5/counterShift.c **** {
 128              		.loc 1 144 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0000 80B4     		push	{r7}
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/counterShift.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/counterShift.c ****     #if (counterShift_UsingFixedFunction)
 147:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_ENABLE |= counterShift_BLOCK_EN_MASK;
 138              		.loc 1 147 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 6


 139 0004 0D4A     		ldr	r2, .L5
 140 0006 0D4B     		ldr	r3, .L5
 141 0008 1B78     		ldrb	r3, [r3]
 142 000a DBB2     		uxtb	r3, r3
 143 000c 43F00103 		orr	r3, r3, #1
 144 0010 DBB2     		uxtb	r3, r3
 145 0012 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_STBY_ENABLE |= counterShift_BLOCK_STBY_EN_MASK;
 146              		.loc 1 148 0
 147 0014 0A4A     		ldr	r2, .L5+4
 148 0016 0A4B     		ldr	r3, .L5+4
 149 0018 1B78     		ldrb	r3, [r3]
 150 001a DBB2     		uxtb	r3, r3
 151 001c 43F00103 		orr	r3, r3, #1
 152 0020 DBB2     		uxtb	r3, r3
 153 0022 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/counterShift.c ****         
 151:Generated_Source\PSoC5/counterShift.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/counterShift.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/counterShift.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/counterShift.c ****     #if(!counterShift_ControlRegRemoved || counterShift_UsingFixedFunction)
 155:Generated_Source\PSoC5/counterShift.c ****         counterShift_CONTROL |= counterShift_CTRL_ENABLE;                
 154              		.loc 1 155 0
 155 0024 074A     		ldr	r2, .L5+8
 156 0026 074B     		ldr	r3, .L5+8
 157 0028 1B78     		ldrb	r3, [r3]
 158 002a DBB2     		uxtb	r3, r3
 159 002c 43F00103 		orr	r3, r3, #1
 160 0030 DBB2     		uxtb	r3, r3
 161 0032 1370     		strb	r3, [r2]
 156:Generated_Source\PSoC5/counterShift.c ****     #endif /* (!counterShift_ControlRegRemoved || counterShift_UsingFixedFunction) */
 157:Generated_Source\PSoC5/counterShift.c ****     
 158:Generated_Source\PSoC5/counterShift.c **** }
 162              		.loc 1 158 0
 163 0034 BD46     		mov	sp, r7
 164              		.cfi_def_cfa_register 13
 165              		@ sp needed
 166 0036 5DF8047B 		ldr	r7, [sp], #4
 167              		.cfi_restore 7
 168              		.cfi_def_cfa_offset 0
 169 003a 7047     		bx	lr
 170              	.L6:
 171              		.align	2
 172              	.L5:
 173 003c A3430040 		.word	1073759139
 174 0040 B3430040 		.word	1073759155
 175 0044 004F0040 		.word	1073762048
 176              		.cfi_endproc
 177              	.LFE1:
 178              		.size	counterShift_Enable, .-counterShift_Enable
 179              		.section	.text.counterShift_Start,"ax",%progbits
 180              		.align	2
 181              		.global	counterShift_Start
 182              		.thumb
 183              		.thumb_func
 184              		.type	counterShift_Start, %function
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 7


 185              	counterShift_Start:
 186              	.LFB2:
 159:Generated_Source\PSoC5/counterShift.c **** 
 160:Generated_Source\PSoC5/counterShift.c **** 
 161:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_Start
 163:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 164:Generated_Source\PSoC5/counterShift.c **** * Summary:
 165:Generated_Source\PSoC5/counterShift.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/counterShift.c **** *
 167:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 168:Generated_Source\PSoC5/counterShift.c **** *  void  
 169:Generated_Source\PSoC5/counterShift.c **** *
 170:Generated_Source\PSoC5/counterShift.c **** * Return: 
 171:Generated_Source\PSoC5/counterShift.c **** *  void
 172:Generated_Source\PSoC5/counterShift.c **** *
 173:Generated_Source\PSoC5/counterShift.c **** * Global variables:
 174:Generated_Source\PSoC5/counterShift.c **** *  counterShift_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/counterShift.c **** *   first time. Is used to ensure that initialization happens only once.
 176:Generated_Source\PSoC5/counterShift.c **** *
 177:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/counterShift.c **** void counterShift_Start(void) 
 179:Generated_Source\PSoC5/counterShift.c **** {
 187              		.loc 1 179 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 180:Generated_Source\PSoC5/counterShift.c ****     if(counterShift_initVar == 0u)
 197              		.loc 1 180 0
 198 0004 054B     		ldr	r3, .L9
 199 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 200 0008 002B     		cmp	r3, #0
 201 000a 04D1     		bne	.L8
 181:Generated_Source\PSoC5/counterShift.c ****     {
 182:Generated_Source\PSoC5/counterShift.c ****         counterShift_Init();
 202              		.loc 1 182 0
 203 000c FFF7FEFF 		bl	counterShift_Init
 183:Generated_Source\PSoC5/counterShift.c ****         
 184:Generated_Source\PSoC5/counterShift.c ****         counterShift_initVar = 1u; /* Clear this bit for Initialization */        
 204              		.loc 1 184 0
 205 0010 024B     		ldr	r3, .L9
 206 0012 0122     		movs	r2, #1
 207 0014 1A70     		strb	r2, [r3]
 208              	.L8:
 185:Generated_Source\PSoC5/counterShift.c ****     }
 186:Generated_Source\PSoC5/counterShift.c ****     
 187:Generated_Source\PSoC5/counterShift.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/counterShift.c ****     counterShift_Enable();        
 209              		.loc 1 188 0
 210 0016 FFF7FEFF 		bl	counterShift_Enable
 189:Generated_Source\PSoC5/counterShift.c **** }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 8


 211              		.loc 1 189 0
 212 001a 80BD     		pop	{r7, pc}
 213              	.L10:
 214              		.align	2
 215              	.L9:
 216 001c 00000000 		.word	counterShift_initVar
 217              		.cfi_endproc
 218              	.LFE2:
 219              		.size	counterShift_Start, .-counterShift_Start
 220              		.section	.text.counterShift_Stop,"ax",%progbits
 221              		.align	2
 222              		.global	counterShift_Stop
 223              		.thumb
 224              		.thumb_func
 225              		.type	counterShift_Stop, %function
 226              	counterShift_Stop:
 227              	.LFB3:
 190:Generated_Source\PSoC5/counterShift.c **** 
 191:Generated_Source\PSoC5/counterShift.c **** 
 192:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_Stop
 194:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 195:Generated_Source\PSoC5/counterShift.c **** * Summary:
 196:Generated_Source\PSoC5/counterShift.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/counterShift.c **** *
 198:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 199:Generated_Source\PSoC5/counterShift.c **** *  void  
 200:Generated_Source\PSoC5/counterShift.c **** *
 201:Generated_Source\PSoC5/counterShift.c **** * Return: 
 202:Generated_Source\PSoC5/counterShift.c **** *  void
 203:Generated_Source\PSoC5/counterShift.c **** *
 204:Generated_Source\PSoC5/counterShift.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/counterShift.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/counterShift.c **** *
 207:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/counterShift.c **** void counterShift_Stop(void) 
 209:Generated_Source\PSoC5/counterShift.c **** {
 228              		.loc 1 209 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 210:Generated_Source\PSoC5/counterShift.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/counterShift.c ****     #if(!counterShift_ControlRegRemoved || counterShift_UsingFixedFunction)
 212:Generated_Source\PSoC5/counterShift.c ****         counterShift_CONTROL &= ((uint8)(~counterShift_CTRL_ENABLE));        
 238              		.loc 1 212 0
 239 0004 0D4A     		ldr	r2, .L12
 240 0006 0D4B     		ldr	r3, .L12
 241 0008 1B78     		ldrb	r3, [r3]
 242 000a DBB2     		uxtb	r3, r3
 243 000c 23F00103 		bic	r3, r3, #1
 244 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 9


 245 0012 1370     		strb	r3, [r2]
 213:Generated_Source\PSoC5/counterShift.c ****     #endif /* (!counterShift_ControlRegRemoved || counterShift_UsingFixedFunction) */
 214:Generated_Source\PSoC5/counterShift.c ****     
 215:Generated_Source\PSoC5/counterShift.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/counterShift.c ****     #if (counterShift_UsingFixedFunction)
 217:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_ENABLE &= ((uint8)(~counterShift_BLOCK_EN_MASK));
 246              		.loc 1 217 0
 247 0014 0A4A     		ldr	r2, .L12+4
 248 0016 0A4B     		ldr	r3, .L12+4
 249 0018 1B78     		ldrb	r3, [r3]
 250 001a DBB2     		uxtb	r3, r3
 251 001c 23F00103 		bic	r3, r3, #1
 252 0020 DBB2     		uxtb	r3, r3
 253 0022 1370     		strb	r3, [r2]
 218:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_STBY_ENABLE &= ((uint8)(~counterShift_BLOCK_STBY_EN_MASK));
 254              		.loc 1 218 0
 255 0024 074A     		ldr	r2, .L12+8
 256 0026 074B     		ldr	r3, .L12+8
 257 0028 1B78     		ldrb	r3, [r3]
 258 002a DBB2     		uxtb	r3, r3
 259 002c 23F00103 		bic	r3, r3, #1
 260 0030 DBB2     		uxtb	r3, r3
 261 0032 1370     		strb	r3, [r2]
 219:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 220:Generated_Source\PSoC5/counterShift.c **** }
 262              		.loc 1 220 0
 263 0034 BD46     		mov	sp, r7
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 0036 5DF8047B 		ldr	r7, [sp], #4
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 003a 7047     		bx	lr
 270              	.L13:
 271              		.align	2
 272              	.L12:
 273 003c 004F0040 		.word	1073762048
 274 0040 A3430040 		.word	1073759139
 275 0044 B3430040 		.word	1073759155
 276              		.cfi_endproc
 277              	.LFE3:
 278              		.size	counterShift_Stop, .-counterShift_Stop
 279              		.section	.text.counterShift_SetInterruptMode,"ax",%progbits
 280              		.align	2
 281              		.global	counterShift_SetInterruptMode
 282              		.thumb
 283              		.thumb_func
 284              		.type	counterShift_SetInterruptMode, %function
 285              	counterShift_SetInterruptMode:
 286              	.LFB4:
 221:Generated_Source\PSoC5/counterShift.c **** 
 222:Generated_Source\PSoC5/counterShift.c **** 
 223:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_SetInterruptMode
 225:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 226:Generated_Source\PSoC5/counterShift.c **** * Summary:
 227:Generated_Source\PSoC5/counterShift.c **** * Configures which interrupt sources are enabled to generate the final interrupt
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 10


 228:Generated_Source\PSoC5/counterShift.c **** *
 229:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 230:Generated_Source\PSoC5/counterShift.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/counterShift.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/counterShift.c **** *
 233:Generated_Source\PSoC5/counterShift.c **** * Return: 
 234:Generated_Source\PSoC5/counterShift.c **** *  void
 235:Generated_Source\PSoC5/counterShift.c **** *
 236:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/counterShift.c **** void counterShift_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/counterShift.c **** {
 287              		.loc 1 238 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 83B0     		sub	sp, sp, #12
 296              		.cfi_def_cfa_offset 16
 297 0004 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
 299 0006 0346     		mov	r3, r0
 300 0008 FB71     		strb	r3, [r7, #7]
 239:Generated_Source\PSoC5/counterShift.c ****     counterShift_STATUS_MASK = interruptsMask;
 301              		.loc 1 239 0
 302 000a 044A     		ldr	r2, .L15
 303 000c FB79     		ldrb	r3, [r7, #7]
 304 000e 1370     		strb	r3, [r2]
 240:Generated_Source\PSoC5/counterShift.c **** }
 305              		.loc 1 240 0
 306 0010 0C37     		adds	r7, r7, #12
 307              		.cfi_def_cfa_offset 4
 308 0012 BD46     		mov	sp, r7
 309              		.cfi_def_cfa_register 13
 310              		@ sp needed
 311 0014 5DF8047B 		ldr	r7, [sp], #4
 312              		.cfi_restore 7
 313              		.cfi_def_cfa_offset 0
 314 0018 7047     		bx	lr
 315              	.L16:
 316 001a 00BF     		.align	2
 317              	.L15:
 318 001c 034F0040 		.word	1073762051
 319              		.cfi_endproc
 320              	.LFE4:
 321              		.size	counterShift_SetInterruptMode, .-counterShift_SetInterruptMode
 322              		.section	.text.counterShift_ReadStatusRegister,"ax",%progbits
 323              		.align	2
 324              		.global	counterShift_ReadStatusRegister
 325              		.thumb
 326              		.thumb_func
 327              		.type	counterShift_ReadStatusRegister, %function
 328              	counterShift_ReadStatusRegister:
 329              	.LFB5:
 241:Generated_Source\PSoC5/counterShift.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 11


 242:Generated_Source\PSoC5/counterShift.c **** 
 243:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_ReadStatusRegister
 245:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 246:Generated_Source\PSoC5/counterShift.c **** * Summary:
 247:Generated_Source\PSoC5/counterShift.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/counterShift.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/counterShift.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/counterShift.c **** *
 251:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 252:Generated_Source\PSoC5/counterShift.c **** *  void
 253:Generated_Source\PSoC5/counterShift.c **** *
 254:Generated_Source\PSoC5/counterShift.c **** * Return: 
 255:Generated_Source\PSoC5/counterShift.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/counterShift.c **** *
 257:Generated_Source\PSoC5/counterShift.c **** * Side Effects:
 258:Generated_Source\PSoC5/counterShift.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/counterShift.c **** *
 260:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/counterShift.c **** uint8   counterShift_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/counterShift.c **** {
 330              		.loc 1 262 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 263:Generated_Source\PSoC5/counterShift.c ****     return counterShift_STATUS;
 340              		.loc 1 263 0
 341 0004 034B     		ldr	r3, .L19
 342 0006 1B78     		ldrb	r3, [r3]
 343 0008 DBB2     		uxtb	r3, r3
 264:Generated_Source\PSoC5/counterShift.c **** }
 344              		.loc 1 264 0
 345 000a 1846     		mov	r0, r3
 346 000c BD46     		mov	sp, r7
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 000e 5DF8047B 		ldr	r7, [sp], #4
 350              		.cfi_restore 7
 351              		.cfi_def_cfa_offset 0
 352 0012 7047     		bx	lr
 353              	.L20:
 354              		.align	2
 355              	.L19:
 356 0014 034F0040 		.word	1073762051
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	counterShift_ReadStatusRegister, .-counterShift_ReadStatusRegister
 360              		.section	.text.counterShift_ReadControlRegister,"ax",%progbits
 361              		.align	2
 362              		.global	counterShift_ReadControlRegister
 363              		.thumb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 12


 364              		.thumb_func
 365              		.type	counterShift_ReadControlRegister, %function
 366              	counterShift_ReadControlRegister:
 367              	.LFB6:
 265:Generated_Source\PSoC5/counterShift.c **** 
 266:Generated_Source\PSoC5/counterShift.c **** 
 267:Generated_Source\PSoC5/counterShift.c **** #if(!counterShift_ControlRegRemoved)
 268:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_ReadControlRegister
 270:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 271:Generated_Source\PSoC5/counterShift.c **** * Summary:
 272:Generated_Source\PSoC5/counterShift.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/counterShift.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/counterShift.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/counterShift.c **** *
 276:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 277:Generated_Source\PSoC5/counterShift.c **** *  void
 278:Generated_Source\PSoC5/counterShift.c **** *
 279:Generated_Source\PSoC5/counterShift.c **** * Return: 
 280:Generated_Source\PSoC5/counterShift.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/counterShift.c **** *
 282:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/counterShift.c **** uint8   counterShift_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/counterShift.c **** {
 368              		.loc 1 284 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              		.cfi_def_cfa_offset 4
 375              		.cfi_offset 7, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 285:Generated_Source\PSoC5/counterShift.c ****     return counterShift_CONTROL;
 378              		.loc 1 285 0
 379 0004 034B     		ldr	r3, .L23
 380 0006 1B78     		ldrb	r3, [r3]
 381 0008 DBB2     		uxtb	r3, r3
 286:Generated_Source\PSoC5/counterShift.c **** }
 382              		.loc 1 286 0
 383 000a 1846     		mov	r0, r3
 384 000c BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 000e 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0012 7047     		bx	lr
 391              	.L24:
 392              		.align	2
 393              	.L23:
 394 0014 004F0040 		.word	1073762048
 395              		.cfi_endproc
 396              	.LFE6:
 397              		.size	counterShift_ReadControlRegister, .-counterShift_ReadControlRegister
 398              		.section	.text.counterShift_WriteControlRegister,"ax",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 13


 399              		.align	2
 400              		.global	counterShift_WriteControlRegister
 401              		.thumb
 402              		.thumb_func
 403              		.type	counterShift_WriteControlRegister, %function
 404              	counterShift_WriteControlRegister:
 405              	.LFB7:
 287:Generated_Source\PSoC5/counterShift.c **** 
 288:Generated_Source\PSoC5/counterShift.c **** 
 289:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_WriteControlRegister
 291:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 292:Generated_Source\PSoC5/counterShift.c **** * Summary:
 293:Generated_Source\PSoC5/counterShift.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/counterShift.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/counterShift.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/counterShift.c **** *
 297:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 298:Generated_Source\PSoC5/counterShift.c **** *  void
 299:Generated_Source\PSoC5/counterShift.c **** *
 300:Generated_Source\PSoC5/counterShift.c **** * Return: 
 301:Generated_Source\PSoC5/counterShift.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/counterShift.c **** *
 303:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/counterShift.c **** void    counterShift_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/counterShift.c **** {
 406              		.loc 1 305 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 83B0     		sub	sp, sp, #12
 415              		.cfi_def_cfa_offset 16
 416 0004 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 418 0006 0346     		mov	r3, r0
 419 0008 FB71     		strb	r3, [r7, #7]
 306:Generated_Source\PSoC5/counterShift.c ****     counterShift_CONTROL = control;
 420              		.loc 1 306 0
 421 000a 044A     		ldr	r2, .L26
 422 000c FB79     		ldrb	r3, [r7, #7]
 423 000e 1370     		strb	r3, [r2]
 307:Generated_Source\PSoC5/counterShift.c **** }
 424              		.loc 1 307 0
 425 0010 0C37     		adds	r7, r7, #12
 426              		.cfi_def_cfa_offset 4
 427 0012 BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 0014 5DF8047B 		ldr	r7, [sp], #4
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
 433 0018 7047     		bx	lr
 434              	.L27:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 14


 435 001a 00BF     		.align	2
 436              	.L26:
 437 001c 004F0040 		.word	1073762048
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	counterShift_WriteControlRegister, .-counterShift_WriteControlRegister
 441              		.section	.text.counterShift_WriteCounter,"ax",%progbits
 442              		.align	2
 443              		.global	counterShift_WriteCounter
 444              		.thumb
 445              		.thumb_func
 446              		.type	counterShift_WriteCounter, %function
 447              	counterShift_WriteCounter:
 448              	.LFB8:
 308:Generated_Source\PSoC5/counterShift.c **** 
 309:Generated_Source\PSoC5/counterShift.c **** #endif  /* (!counterShift_ControlRegRemoved) */
 310:Generated_Source\PSoC5/counterShift.c **** 
 311:Generated_Source\PSoC5/counterShift.c **** 
 312:Generated_Source\PSoC5/counterShift.c **** #if (!(counterShift_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_WriteCounter
 315:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 316:Generated_Source\PSoC5/counterShift.c **** * Summary:
 317:Generated_Source\PSoC5/counterShift.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/counterShift.c **** *
 319:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 320:Generated_Source\PSoC5/counterShift.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/counterShift.c **** *
 322:Generated_Source\PSoC5/counterShift.c **** * Return: 
 323:Generated_Source\PSoC5/counterShift.c **** *  void 
 324:Generated_Source\PSoC5/counterShift.c **** *
 325:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/counterShift.c **** void counterShift_WriteCounter(uint8 counter) \
 327:Generated_Source\PSoC5/counterShift.c ****                                    
 328:Generated_Source\PSoC5/counterShift.c **** {
 449              		.loc 1 328 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 8
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453 0000 80B5     		push	{r7, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 82B0     		sub	sp, sp, #8
 458              		.cfi_def_cfa_offset 16
 459 0004 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 0006 0346     		mov	r3, r0
 462 0008 FB71     		strb	r3, [r7, #7]
 329:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 330:Generated_Source\PSoC5/counterShift.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/counterShift.c ****         CYASSERT (0u == (counterShift_GLOBAL_ENABLE & counterShift_BLOCK_EN_MASK));
 463              		.loc 1 331 0
 464 000a 104B     		ldr	r3, .L30
 465 000c 1B78     		ldrb	r3, [r3]
 466 000e DBB2     		uxtb	r3, r3
 467 0010 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 15


 468 0014 002B     		cmp	r3, #0
 469 0016 02D0     		beq	.L29
 470              		.loc 1 331 0 is_stmt 0 discriminator 1
 471 0018 0020     		movs	r0, #0
 472 001a FFF7FEFF 		bl	CyHalt
 473              	.L29:
 332:Generated_Source\PSoC5/counterShift.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_ENABLE |= counterShift_BLOCK_EN_MASK;
 474              		.loc 1 333 0 is_stmt 1
 475 001e 0B4A     		ldr	r2, .L30
 476 0020 0A4B     		ldr	r3, .L30
 477 0022 1B78     		ldrb	r3, [r3]
 478 0024 DBB2     		uxtb	r3, r3
 479 0026 43F00103 		orr	r3, r3, #1
 480 002a DBB2     		uxtb	r3, r3
 481 002c 1370     		strb	r3, [r2]
 334:Generated_Source\PSoC5/counterShift.c ****         CY_SET_REG16(counterShift_COUNTER_LSB_PTR, (uint16)counter);
 482              		.loc 1 334 0
 483 002e 084B     		ldr	r3, .L30+4
 484 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 485 0032 92B2     		uxth	r2, r2
 486 0034 1A80     		strh	r2, [r3]	@ movhi
 335:Generated_Source\PSoC5/counterShift.c ****         counterShift_GLOBAL_ENABLE &= ((uint8)(~counterShift_BLOCK_EN_MASK));
 487              		.loc 1 335 0
 488 0036 054A     		ldr	r2, .L30
 489 0038 044B     		ldr	r3, .L30
 490 003a 1B78     		ldrb	r3, [r3]
 491 003c DBB2     		uxtb	r3, r3
 492 003e 23F00103 		bic	r3, r3, #1
 493 0042 DBB2     		uxtb	r3, r3
 494 0044 1370     		strb	r3, [r2]
 336:Generated_Source\PSoC5/counterShift.c ****     #else
 337:Generated_Source\PSoC5/counterShift.c ****         CY_SET_REG8(counterShift_COUNTER_LSB_PTR, counter);
 338:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 339:Generated_Source\PSoC5/counterShift.c **** }
 495              		.loc 1 339 0
 496 0046 0837     		adds	r7, r7, #8
 497              		.cfi_def_cfa_offset 8
 498 0048 BD46     		mov	sp, r7
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 004a 80BD     		pop	{r7, pc}
 502              	.L31:
 503              		.align	2
 504              	.L30:
 505 004c A3430040 		.word	1073759139
 506 0050 064F0040 		.word	1073762054
 507              		.cfi_endproc
 508              	.LFE8:
 509              		.size	counterShift_WriteCounter, .-counterShift_WriteCounter
 510              		.section	.text.counterShift_ReadCounter,"ax",%progbits
 511              		.align	2
 512              		.global	counterShift_ReadCounter
 513              		.thumb
 514              		.thumb_func
 515              		.type	counterShift_ReadCounter, %function
 516              	counterShift_ReadCounter:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 16


 517              	.LFB9:
 340:Generated_Source\PSoC5/counterShift.c **** #endif /* (!(counterShift_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/counterShift.c **** 
 342:Generated_Source\PSoC5/counterShift.c **** 
 343:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_ReadCounter
 345:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 346:Generated_Source\PSoC5/counterShift.c **** * Summary:
 347:Generated_Source\PSoC5/counterShift.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/counterShift.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/counterShift.c **** *
 350:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 351:Generated_Source\PSoC5/counterShift.c **** *  void:  
 352:Generated_Source\PSoC5/counterShift.c **** *
 353:Generated_Source\PSoC5/counterShift.c **** * Return: 
 354:Generated_Source\PSoC5/counterShift.c **** *  (uint8) The present value of the counter.
 355:Generated_Source\PSoC5/counterShift.c **** *
 356:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/counterShift.c **** uint8 counterShift_ReadCounter(void) 
 358:Generated_Source\PSoC5/counterShift.c **** {
 518              		.loc 1 358 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523 0000 80B4     		push	{r7}
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0002 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 359:Generated_Source\PSoC5/counterShift.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/counterShift.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/counterShift.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 363:Generated_Source\PSoC5/counterShift.c **** 		(void)CY_GET_REG16(counterShift_COUNTER_LSB_PTR);
 528              		.loc 1 363 0
 529 0004 054B     		ldr	r3, .L34
 530 0006 1B88     		ldrh	r3, [r3]	@ movhi
 364:Generated_Source\PSoC5/counterShift.c **** 	#else
 365:Generated_Source\PSoC5/counterShift.c **** 		(void)CY_GET_REG8(counterShift_COUNTER_LSB_PTR_8BIT);
 366:Generated_Source\PSoC5/counterShift.c **** 	#endif/* (counterShift_UsingFixedFunction) */
 367:Generated_Source\PSoC5/counterShift.c ****     
 368:Generated_Source\PSoC5/counterShift.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 370:Generated_Source\PSoC5/counterShift.c ****         return ((uint8)CY_GET_REG16(counterShift_STATICCOUNT_LSB_PTR));
 531              		.loc 1 370 0
 532 0008 054B     		ldr	r3, .L34+4
 533 000a 1B88     		ldrh	r3, [r3]	@ movhi
 534 000c 9BB2     		uxth	r3, r3
 535 000e DBB2     		uxtb	r3, r3
 371:Generated_Source\PSoC5/counterShift.c ****     #else
 372:Generated_Source\PSoC5/counterShift.c ****         return (CY_GET_REG8(counterShift_STATICCOUNT_LSB_PTR));
 373:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 374:Generated_Source\PSoC5/counterShift.c **** }
 536              		.loc 1 374 0
 537 0010 1846     		mov	r0, r3
 538 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 17


 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 0014 5DF8047B 		ldr	r7, [sp], #4
 542              		.cfi_restore 7
 543              		.cfi_def_cfa_offset 0
 544 0018 7047     		bx	lr
 545              	.L35:
 546 001a 00BF     		.align	2
 547              	.L34:
 548 001c 064F0040 		.word	1073762054
 549 0020 084F0040 		.word	1073762056
 550              		.cfi_endproc
 551              	.LFE9:
 552              		.size	counterShift_ReadCounter, .-counterShift_ReadCounter
 553              		.section	.text.counterShift_ReadCapture,"ax",%progbits
 554              		.align	2
 555              		.global	counterShift_ReadCapture
 556              		.thumb
 557              		.thumb_func
 558              		.type	counterShift_ReadCapture, %function
 559              	counterShift_ReadCapture:
 560              	.LFB10:
 375:Generated_Source\PSoC5/counterShift.c **** 
 376:Generated_Source\PSoC5/counterShift.c **** 
 377:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_ReadCapture
 379:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 380:Generated_Source\PSoC5/counterShift.c **** * Summary:
 381:Generated_Source\PSoC5/counterShift.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/counterShift.c **** *
 383:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 384:Generated_Source\PSoC5/counterShift.c **** *  void
 385:Generated_Source\PSoC5/counterShift.c **** *
 386:Generated_Source\PSoC5/counterShift.c **** * Return: 
 387:Generated_Source\PSoC5/counterShift.c **** *  (uint8) Present Capture value.
 388:Generated_Source\PSoC5/counterShift.c **** *
 389:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/counterShift.c **** uint8 counterShift_ReadCapture(void) 
 391:Generated_Source\PSoC5/counterShift.c **** {
 561              		.loc 1 391 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 392:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 393:Generated_Source\PSoC5/counterShift.c ****         return ((uint8)CY_GET_REG16(counterShift_STATICCOUNT_LSB_PTR));
 571              		.loc 1 393 0
 572 0004 044B     		ldr	r3, .L38
 573 0006 1B88     		ldrh	r3, [r3]	@ movhi
 574 0008 9BB2     		uxth	r3, r3
 575 000a DBB2     		uxtb	r3, r3
 394:Generated_Source\PSoC5/counterShift.c ****     #else
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 18


 395:Generated_Source\PSoC5/counterShift.c ****         return (CY_GET_REG8(counterShift_STATICCOUNT_LSB_PTR));
 396:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 397:Generated_Source\PSoC5/counterShift.c **** }
 576              		.loc 1 397 0
 577 000c 1846     		mov	r0, r3
 578 000e BD46     		mov	sp, r7
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0010 5DF8047B 		ldr	r7, [sp], #4
 582              		.cfi_restore 7
 583              		.cfi_def_cfa_offset 0
 584 0014 7047     		bx	lr
 585              	.L39:
 586 0016 00BF     		.align	2
 587              	.L38:
 588 0018 084F0040 		.word	1073762056
 589              		.cfi_endproc
 590              	.LFE10:
 591              		.size	counterShift_ReadCapture, .-counterShift_ReadCapture
 592              		.section	.text.counterShift_WritePeriod,"ax",%progbits
 593              		.align	2
 594              		.global	counterShift_WritePeriod
 595              		.thumb
 596              		.thumb_func
 597              		.type	counterShift_WritePeriod, %function
 598              	counterShift_WritePeriod:
 599              	.LFB11:
 398:Generated_Source\PSoC5/counterShift.c **** 
 399:Generated_Source\PSoC5/counterShift.c **** 
 400:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_WritePeriod
 402:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 403:Generated_Source\PSoC5/counterShift.c **** * Summary:
 404:Generated_Source\PSoC5/counterShift.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/counterShift.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/counterShift.c **** *
 407:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 408:Generated_Source\PSoC5/counterShift.c **** *  period: (uint8) A value of 0 will result in
 409:Generated_Source\PSoC5/counterShift.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/counterShift.c **** *
 411:Generated_Source\PSoC5/counterShift.c **** * Return: 
 412:Generated_Source\PSoC5/counterShift.c **** *  void
 413:Generated_Source\PSoC5/counterShift.c **** *
 414:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/counterShift.c **** void counterShift_WritePeriod(uint8 period) 
 416:Generated_Source\PSoC5/counterShift.c **** {
 600              		.loc 1 416 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605 0000 80B4     		push	{r7}
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 0002 83B0     		sub	sp, sp, #12
 609              		.cfi_def_cfa_offset 16
 610 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 19


 611              		.cfi_def_cfa_register 7
 612 0006 0346     		mov	r3, r0
 613 0008 FB71     		strb	r3, [r7, #7]
 417:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 418:Generated_Source\PSoC5/counterShift.c ****         CY_SET_REG16(counterShift_PERIOD_LSB_PTR,(uint16)period);
 614              		.loc 1 418 0
 615 000a 044B     		ldr	r3, .L41
 616 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 617 000e 92B2     		uxth	r2, r2
 618 0010 1A80     		strh	r2, [r3]	@ movhi
 419:Generated_Source\PSoC5/counterShift.c ****     #else
 420:Generated_Source\PSoC5/counterShift.c ****         CY_SET_REG8(counterShift_PERIOD_LSB_PTR, period);
 421:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 422:Generated_Source\PSoC5/counterShift.c **** }
 619              		.loc 1 422 0
 620 0012 0C37     		adds	r7, r7, #12
 621              		.cfi_def_cfa_offset 4
 622 0014 BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0016 5DF8047B 		ldr	r7, [sp], #4
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 001a 7047     		bx	lr
 629              	.L42:
 630              		.align	2
 631              	.L41:
 632 001c 044F0040 		.word	1073762052
 633              		.cfi_endproc
 634              	.LFE11:
 635              		.size	counterShift_WritePeriod, .-counterShift_WritePeriod
 636              		.section	.text.counterShift_ReadPeriod,"ax",%progbits
 637              		.align	2
 638              		.global	counterShift_ReadPeriod
 639              		.thumb
 640              		.thumb_func
 641              		.type	counterShift_ReadPeriod, %function
 642              	counterShift_ReadPeriod:
 643              	.LFB12:
 423:Generated_Source\PSoC5/counterShift.c **** 
 424:Generated_Source\PSoC5/counterShift.c **** 
 425:Generated_Source\PSoC5/counterShift.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/counterShift.c **** * Function Name: counterShift_ReadPeriod
 427:Generated_Source\PSoC5/counterShift.c **** ********************************************************************************
 428:Generated_Source\PSoC5/counterShift.c **** * Summary:
 429:Generated_Source\PSoC5/counterShift.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/counterShift.c **** *
 431:Generated_Source\PSoC5/counterShift.c **** * Parameters:  
 432:Generated_Source\PSoC5/counterShift.c **** *  void:  
 433:Generated_Source\PSoC5/counterShift.c **** *
 434:Generated_Source\PSoC5/counterShift.c **** * Return: 
 435:Generated_Source\PSoC5/counterShift.c **** *  (uint8) Present period value.
 436:Generated_Source\PSoC5/counterShift.c **** *
 437:Generated_Source\PSoC5/counterShift.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/counterShift.c **** uint8 counterShift_ReadPeriod(void) 
 439:Generated_Source\PSoC5/counterShift.c **** {
 644              		.loc 1 439 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 20


 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 440:Generated_Source\PSoC5/counterShift.c ****     #if(counterShift_UsingFixedFunction)
 441:Generated_Source\PSoC5/counterShift.c ****         return ((uint8)CY_GET_REG16(counterShift_PERIOD_LSB_PTR));
 654              		.loc 1 441 0
 655 0004 044B     		ldr	r3, .L45
 656 0006 1B88     		ldrh	r3, [r3]	@ movhi
 657 0008 9BB2     		uxth	r3, r3
 658 000a DBB2     		uxtb	r3, r3
 442:Generated_Source\PSoC5/counterShift.c ****     #else
 443:Generated_Source\PSoC5/counterShift.c ****         return (CY_GET_REG8(counterShift_PERIOD_LSB_PTR));
 444:Generated_Source\PSoC5/counterShift.c ****     #endif /* (counterShift_UsingFixedFunction) */
 445:Generated_Source\PSoC5/counterShift.c **** }
 659              		.loc 1 445 0
 660 000c 1846     		mov	r0, r3
 661 000e BD46     		mov	sp, r7
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 0010 5DF8047B 		ldr	r7, [sp], #4
 665              		.cfi_restore 7
 666              		.cfi_def_cfa_offset 0
 667 0014 7047     		bx	lr
 668              	.L46:
 669 0016 00BF     		.align	2
 670              	.L45:
 671 0018 044F0040 		.word	1073762052
 672              		.cfi_endproc
 673              	.LFE12:
 674              		.size	counterShift_ReadPeriod, .-counterShift_ReadPeriod
 675              		.text
 676              	.Letext0:
 677              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 678              		.section	.debug_info,"",%progbits
 679              	.Ldebug_info0:
 680 0000 17020000 		.4byte	0x217
 681 0004 0400     		.2byte	0x4
 682 0006 00000000 		.4byte	.Ldebug_abbrev0
 683 000a 04       		.byte	0x4
 684 000b 01       		.uleb128 0x1
 685 000c B8010000 		.4byte	.LASF34
 686 0010 01       		.byte	0x1
 687 0011 4A010000 		.4byte	.LASF35
 688 0015 27000000 		.4byte	.LASF36
 689 0019 00000000 		.4byte	.Ldebug_ranges0+0
 690 001d 00000000 		.4byte	0
 691 0021 00000000 		.4byte	.Ldebug_line0
 692 0025 02       		.uleb128 0x2
 693 0026 01       		.byte	0x1
 694 0027 06       		.byte	0x6
 695 0028 16030000 		.4byte	.LASF0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 21


 696 002c 02       		.uleb128 0x2
 697 002d 01       		.byte	0x1
 698 002e 08       		.byte	0x8
 699 002f 37010000 		.4byte	.LASF1
 700 0033 02       		.uleb128 0x2
 701 0034 02       		.byte	0x2
 702 0035 05       		.byte	0x5
 703 0036 F0020000 		.4byte	.LASF2
 704 003a 02       		.uleb128 0x2
 705 003b 02       		.byte	0x2
 706 003c 07       		.byte	0x7
 707 003d 7A000000 		.4byte	.LASF3
 708 0041 02       		.uleb128 0x2
 709 0042 04       		.byte	0x4
 710 0043 05       		.byte	0x5
 711 0044 FA020000 		.4byte	.LASF4
 712 0048 02       		.uleb128 0x2
 713 0049 04       		.byte	0x4
 714 004a 07       		.byte	0x7
 715 004b 70010000 		.4byte	.LASF5
 716 004f 02       		.uleb128 0x2
 717 0050 08       		.byte	0x8
 718 0051 05       		.byte	0x5
 719 0052 C5020000 		.4byte	.LASF6
 720 0056 02       		.uleb128 0x2
 721 0057 08       		.byte	0x8
 722 0058 07       		.byte	0x7
 723 0059 73020000 		.4byte	.LASF7
 724 005d 03       		.uleb128 0x3
 725 005e 04       		.byte	0x4
 726 005f 05       		.byte	0x5
 727 0060 696E7400 		.ascii	"int\000"
 728 0064 02       		.uleb128 0x2
 729 0065 04       		.byte	0x4
 730 0066 07       		.byte	0x7
 731 0067 66020000 		.4byte	.LASF8
 732 006b 04       		.uleb128 0x4
 733 006c 82010000 		.4byte	.LASF9
 734 0070 02       		.byte	0x2
 735 0071 9201     		.2byte	0x192
 736 0073 2C000000 		.4byte	0x2c
 737 0077 04       		.uleb128 0x4
 738 0078 4D020000 		.4byte	.LASF10
 739 007c 02       		.byte	0x2
 740 007d 9301     		.2byte	0x193
 741 007f 3A000000 		.4byte	0x3a
 742 0083 02       		.uleb128 0x2
 743 0084 04       		.byte	0x4
 744 0085 04       		.byte	0x4
 745 0086 14010000 		.4byte	.LASF11
 746 008a 02       		.uleb128 0x2
 747 008b 08       		.byte	0x8
 748 008c 04       		.byte	0x4
 749 008d 46020000 		.4byte	.LASF12
 750 0091 02       		.uleb128 0x2
 751 0092 01       		.byte	0x1
 752 0093 08       		.byte	0x8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 22


 753 0094 D3020000 		.4byte	.LASF13
 754 0098 04       		.uleb128 0x4
 755 0099 45010000 		.4byte	.LASF14
 756 009d 02       		.byte	0x2
 757 009e 3C02     		.2byte	0x23c
 758 00a0 A4000000 		.4byte	0xa4
 759 00a4 05       		.uleb128 0x5
 760 00a5 6B000000 		.4byte	0x6b
 761 00a9 04       		.uleb128 0x4
 762 00aa 00000000 		.4byte	.LASF15
 763 00ae 02       		.byte	0x2
 764 00af 3D02     		.2byte	0x23d
 765 00b1 B5000000 		.4byte	0xb5
 766 00b5 05       		.uleb128 0x5
 767 00b6 77000000 		.4byte	0x77
 768 00ba 02       		.uleb128 0x2
 769 00bb 04       		.byte	0x4
 770 00bc 07       		.byte	0x7
 771 00bd BC020000 		.4byte	.LASF16
 772 00c1 06       		.uleb128 0x6
 773 00c2 A7000000 		.4byte	.LASF17
 774 00c6 01       		.byte	0x1
 775 00c7 25       		.byte	0x25
 776 00c8 00000000 		.4byte	.LFB0
 777 00cc 98000000 		.4byte	.LFE0-.LFB0
 778 00d0 01       		.uleb128 0x1
 779 00d1 9C       		.byte	0x9c
 780 00d2 07       		.uleb128 0x7
 781 00d3 8A020000 		.4byte	.LASF18
 782 00d7 01       		.byte	0x1
 783 00d8 8F       		.byte	0x8f
 784 00d9 00000000 		.4byte	.LFB1
 785 00dd 48000000 		.4byte	.LFE1-.LFB1
 786 00e1 01       		.uleb128 0x1
 787 00e2 9C       		.byte	0x9c
 788 00e3 06       		.uleb128 0x6
 789 00e4 03030000 		.4byte	.LASF19
 790 00e8 01       		.byte	0x1
 791 00e9 B2       		.byte	0xb2
 792 00ea 00000000 		.4byte	.LFB2
 793 00ee 20000000 		.4byte	.LFE2-.LFB2
 794 00f2 01       		.uleb128 0x1
 795 00f3 9C       		.byte	0x9c
 796 00f4 07       		.uleb128 0x7
 797 00f5 54020000 		.4byte	.LASF20
 798 00f9 01       		.byte	0x1
 799 00fa D0       		.byte	0xd0
 800 00fb 00000000 		.4byte	.LFB3
 801 00ff 48000000 		.4byte	.LFE3-.LFB3
 802 0103 01       		.uleb128 0x1
 803 0104 9C       		.byte	0x9c
 804 0105 08       		.uleb128 0x8
 805 0106 9E020000 		.4byte	.LASF23
 806 010a 01       		.byte	0x1
 807 010b ED       		.byte	0xed
 808 010c 00000000 		.4byte	.LFB4
 809 0110 20000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 23


 810 0114 01       		.uleb128 0x1
 811 0115 9C       		.byte	0x9c
 812 0116 29010000 		.4byte	0x129
 813 011a 09       		.uleb128 0x9
 814 011b 90010000 		.4byte	.LASF25
 815 011f 01       		.byte	0x1
 816 0120 ED       		.byte	0xed
 817 0121 6B000000 		.4byte	0x6b
 818 0125 02       		.uleb128 0x2
 819 0126 91       		.byte	0x91
 820 0127 77       		.sleb128 -9
 821 0128 00       		.byte	0
 822 0129 0A       		.uleb128 0xa
 823 012a F4000000 		.4byte	.LASF21
 824 012e 01       		.byte	0x1
 825 012f 0501     		.2byte	0x105
 826 0131 6B000000 		.4byte	0x6b
 827 0135 00000000 		.4byte	.LFB5
 828 0139 18000000 		.4byte	.LFE5-.LFB5
 829 013d 01       		.uleb128 0x1
 830 013e 9C       		.byte	0x9c
 831 013f 0A       		.uleb128 0xa
 832 0140 06000000 		.4byte	.LASF22
 833 0144 01       		.byte	0x1
 834 0145 1B01     		.2byte	0x11b
 835 0147 6B000000 		.4byte	0x6b
 836 014b 00000000 		.4byte	.LFB6
 837 014f 18000000 		.4byte	.LFE6-.LFB6
 838 0153 01       		.uleb128 0x1
 839 0154 9C       		.byte	0x9c
 840 0155 0B       		.uleb128 0xb
 841 0156 B9000000 		.4byte	.LASF24
 842 015a 01       		.byte	0x1
 843 015b 3001     		.2byte	0x130
 844 015d 00000000 		.4byte	.LFB7
 845 0161 20000000 		.4byte	.LFE7-.LFB7
 846 0165 01       		.uleb128 0x1
 847 0166 9C       		.byte	0x9c
 848 0167 7B010000 		.4byte	0x17b
 849 016b 0C       		.uleb128 0xc
 850 016c 88010000 		.4byte	.LASF26
 851 0170 01       		.byte	0x1
 852 0171 3001     		.2byte	0x130
 853 0173 6B000000 		.4byte	0x6b
 854 0177 02       		.uleb128 0x2
 855 0178 91       		.byte	0x91
 856 0179 77       		.sleb128 -9
 857 017a 00       		.byte	0
 858 017b 0D       		.uleb128 0xd
 859 017c 8D000000 		.4byte	.LASF27
 860 0180 01       		.byte	0x1
 861 0181 4601     		.2byte	0x146
 862 0183 00000000 		.4byte	.LFB8
 863 0187 54000000 		.4byte	.LFE8-.LFB8
 864 018b 01       		.uleb128 0x1
 865 018c 9C       		.byte	0x9c
 866 018d A1010000 		.4byte	0x1a1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 24


 867 0191 0C       		.uleb128 0xc
 868 0192 1A010000 		.4byte	.LASF28
 869 0196 01       		.byte	0x1
 870 0197 4601     		.2byte	0x146
 871 0199 6B000000 		.4byte	0x6b
 872 019d 02       		.uleb128 0x2
 873 019e 91       		.byte	0x91
 874 019f 77       		.sleb128 -9
 875 01a0 00       		.byte	0
 876 01a1 0A       		.uleb128 0xa
 877 01a2 DB000000 		.4byte	.LASF29
 878 01a6 01       		.byte	0x1
 879 01a7 6501     		.2byte	0x165
 880 01a9 6B000000 		.4byte	0x6b
 881 01ad 00000000 		.4byte	.LFB9
 882 01b1 24000000 		.4byte	.LFE9-.LFB9
 883 01b5 01       		.uleb128 0x1
 884 01b6 9C       		.byte	0x9c
 885 01b7 0A       		.uleb128 0xa
 886 01b8 22030000 		.4byte	.LASF30
 887 01bc 01       		.byte	0x1
 888 01bd 8601     		.2byte	0x186
 889 01bf 6B000000 		.4byte	0x6b
 890 01c3 00000000 		.4byte	.LFB10
 891 01c7 1C000000 		.4byte	.LFE10-.LFB10
 892 01cb 01       		.uleb128 0x1
 893 01cc 9C       		.byte	0x9c
 894 01cd 0B       		.uleb128 0xb
 895 01ce 9F010000 		.4byte	.LASF31
 896 01d2 01       		.byte	0x1
 897 01d3 9F01     		.2byte	0x19f
 898 01d5 00000000 		.4byte	.LFB11
 899 01d9 20000000 		.4byte	.LFE11-.LFB11
 900 01dd 01       		.uleb128 0x1
 901 01de 9C       		.byte	0x9c
 902 01df F3010000 		.4byte	0x1f3
 903 01e3 0C       		.uleb128 0xc
 904 01e4 73000000 		.4byte	.LASF32
 905 01e8 01       		.byte	0x1
 906 01e9 9F01     		.2byte	0x19f
 907 01eb 6B000000 		.4byte	0x6b
 908 01ef 02       		.uleb128 0x2
 909 01f0 91       		.byte	0x91
 910 01f1 77       		.sleb128 -9
 911 01f2 00       		.byte	0
 912 01f3 0A       		.uleb128 0xa
 913 01f4 D8020000 		.4byte	.LASF33
 914 01f8 01       		.byte	0x1
 915 01f9 B601     		.2byte	0x1b6
 916 01fb 6B000000 		.4byte	0x6b
 917 01ff 00000000 		.4byte	.LFB12
 918 0203 1C000000 		.4byte	.LFE12-.LFB12
 919 0207 01       		.uleb128 0x1
 920 0208 9C       		.byte	0x9c
 921 0209 0E       		.uleb128 0xe
 922 020a 22010000 		.4byte	.LASF37
 923 020e 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 25


 924 020f 15       		.byte	0x15
 925 0210 6B000000 		.4byte	0x6b
 926 0214 05       		.uleb128 0x5
 927 0215 03       		.byte	0x3
 928 0216 00000000 		.4byte	counterShift_initVar
 929 021a 00       		.byte	0
 930              		.section	.debug_abbrev,"",%progbits
 931              	.Ldebug_abbrev0:
 932 0000 01       		.uleb128 0x1
 933 0001 11       		.uleb128 0x11
 934 0002 01       		.byte	0x1
 935 0003 25       		.uleb128 0x25
 936 0004 0E       		.uleb128 0xe
 937 0005 13       		.uleb128 0x13
 938 0006 0B       		.uleb128 0xb
 939 0007 03       		.uleb128 0x3
 940 0008 0E       		.uleb128 0xe
 941 0009 1B       		.uleb128 0x1b
 942 000a 0E       		.uleb128 0xe
 943 000b 55       		.uleb128 0x55
 944 000c 17       		.uleb128 0x17
 945 000d 11       		.uleb128 0x11
 946 000e 01       		.uleb128 0x1
 947 000f 10       		.uleb128 0x10
 948 0010 17       		.uleb128 0x17
 949 0011 00       		.byte	0
 950 0012 00       		.byte	0
 951 0013 02       		.uleb128 0x2
 952 0014 24       		.uleb128 0x24
 953 0015 00       		.byte	0
 954 0016 0B       		.uleb128 0xb
 955 0017 0B       		.uleb128 0xb
 956 0018 3E       		.uleb128 0x3e
 957 0019 0B       		.uleb128 0xb
 958 001a 03       		.uleb128 0x3
 959 001b 0E       		.uleb128 0xe
 960 001c 00       		.byte	0
 961 001d 00       		.byte	0
 962 001e 03       		.uleb128 0x3
 963 001f 24       		.uleb128 0x24
 964 0020 00       		.byte	0
 965 0021 0B       		.uleb128 0xb
 966 0022 0B       		.uleb128 0xb
 967 0023 3E       		.uleb128 0x3e
 968 0024 0B       		.uleb128 0xb
 969 0025 03       		.uleb128 0x3
 970 0026 08       		.uleb128 0x8
 971 0027 00       		.byte	0
 972 0028 00       		.byte	0
 973 0029 04       		.uleb128 0x4
 974 002a 16       		.uleb128 0x16
 975 002b 00       		.byte	0
 976 002c 03       		.uleb128 0x3
 977 002d 0E       		.uleb128 0xe
 978 002e 3A       		.uleb128 0x3a
 979 002f 0B       		.uleb128 0xb
 980 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 26


 981 0031 05       		.uleb128 0x5
 982 0032 49       		.uleb128 0x49
 983 0033 13       		.uleb128 0x13
 984 0034 00       		.byte	0
 985 0035 00       		.byte	0
 986 0036 05       		.uleb128 0x5
 987 0037 35       		.uleb128 0x35
 988 0038 00       		.byte	0
 989 0039 49       		.uleb128 0x49
 990 003a 13       		.uleb128 0x13
 991 003b 00       		.byte	0
 992 003c 00       		.byte	0
 993 003d 06       		.uleb128 0x6
 994 003e 2E       		.uleb128 0x2e
 995 003f 00       		.byte	0
 996 0040 3F       		.uleb128 0x3f
 997 0041 19       		.uleb128 0x19
 998 0042 03       		.uleb128 0x3
 999 0043 0E       		.uleb128 0xe
 1000 0044 3A       		.uleb128 0x3a
 1001 0045 0B       		.uleb128 0xb
 1002 0046 3B       		.uleb128 0x3b
 1003 0047 0B       		.uleb128 0xb
 1004 0048 27       		.uleb128 0x27
 1005 0049 19       		.uleb128 0x19
 1006 004a 11       		.uleb128 0x11
 1007 004b 01       		.uleb128 0x1
 1008 004c 12       		.uleb128 0x12
 1009 004d 06       		.uleb128 0x6
 1010 004e 40       		.uleb128 0x40
 1011 004f 18       		.uleb128 0x18
 1012 0050 9642     		.uleb128 0x2116
 1013 0052 19       		.uleb128 0x19
 1014 0053 00       		.byte	0
 1015 0054 00       		.byte	0
 1016 0055 07       		.uleb128 0x7
 1017 0056 2E       		.uleb128 0x2e
 1018 0057 00       		.byte	0
 1019 0058 3F       		.uleb128 0x3f
 1020 0059 19       		.uleb128 0x19
 1021 005a 03       		.uleb128 0x3
 1022 005b 0E       		.uleb128 0xe
 1023 005c 3A       		.uleb128 0x3a
 1024 005d 0B       		.uleb128 0xb
 1025 005e 3B       		.uleb128 0x3b
 1026 005f 0B       		.uleb128 0xb
 1027 0060 27       		.uleb128 0x27
 1028 0061 19       		.uleb128 0x19
 1029 0062 11       		.uleb128 0x11
 1030 0063 01       		.uleb128 0x1
 1031 0064 12       		.uleb128 0x12
 1032 0065 06       		.uleb128 0x6
 1033 0066 40       		.uleb128 0x40
 1034 0067 18       		.uleb128 0x18
 1035 0068 9742     		.uleb128 0x2117
 1036 006a 19       		.uleb128 0x19
 1037 006b 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 27


 1038 006c 00       		.byte	0
 1039 006d 08       		.uleb128 0x8
 1040 006e 2E       		.uleb128 0x2e
 1041 006f 01       		.byte	0x1
 1042 0070 3F       		.uleb128 0x3f
 1043 0071 19       		.uleb128 0x19
 1044 0072 03       		.uleb128 0x3
 1045 0073 0E       		.uleb128 0xe
 1046 0074 3A       		.uleb128 0x3a
 1047 0075 0B       		.uleb128 0xb
 1048 0076 3B       		.uleb128 0x3b
 1049 0077 0B       		.uleb128 0xb
 1050 0078 27       		.uleb128 0x27
 1051 0079 19       		.uleb128 0x19
 1052 007a 11       		.uleb128 0x11
 1053 007b 01       		.uleb128 0x1
 1054 007c 12       		.uleb128 0x12
 1055 007d 06       		.uleb128 0x6
 1056 007e 40       		.uleb128 0x40
 1057 007f 18       		.uleb128 0x18
 1058 0080 9742     		.uleb128 0x2117
 1059 0082 19       		.uleb128 0x19
 1060 0083 01       		.uleb128 0x1
 1061 0084 13       		.uleb128 0x13
 1062 0085 00       		.byte	0
 1063 0086 00       		.byte	0
 1064 0087 09       		.uleb128 0x9
 1065 0088 05       		.uleb128 0x5
 1066 0089 00       		.byte	0
 1067 008a 03       		.uleb128 0x3
 1068 008b 0E       		.uleb128 0xe
 1069 008c 3A       		.uleb128 0x3a
 1070 008d 0B       		.uleb128 0xb
 1071 008e 3B       		.uleb128 0x3b
 1072 008f 0B       		.uleb128 0xb
 1073 0090 49       		.uleb128 0x49
 1074 0091 13       		.uleb128 0x13
 1075 0092 02       		.uleb128 0x2
 1076 0093 18       		.uleb128 0x18
 1077 0094 00       		.byte	0
 1078 0095 00       		.byte	0
 1079 0096 0A       		.uleb128 0xa
 1080 0097 2E       		.uleb128 0x2e
 1081 0098 00       		.byte	0
 1082 0099 3F       		.uleb128 0x3f
 1083 009a 19       		.uleb128 0x19
 1084 009b 03       		.uleb128 0x3
 1085 009c 0E       		.uleb128 0xe
 1086 009d 3A       		.uleb128 0x3a
 1087 009e 0B       		.uleb128 0xb
 1088 009f 3B       		.uleb128 0x3b
 1089 00a0 05       		.uleb128 0x5
 1090 00a1 27       		.uleb128 0x27
 1091 00a2 19       		.uleb128 0x19
 1092 00a3 49       		.uleb128 0x49
 1093 00a4 13       		.uleb128 0x13
 1094 00a5 11       		.uleb128 0x11
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 28


 1095 00a6 01       		.uleb128 0x1
 1096 00a7 12       		.uleb128 0x12
 1097 00a8 06       		.uleb128 0x6
 1098 00a9 40       		.uleb128 0x40
 1099 00aa 18       		.uleb128 0x18
 1100 00ab 9742     		.uleb128 0x2117
 1101 00ad 19       		.uleb128 0x19
 1102 00ae 00       		.byte	0
 1103 00af 00       		.byte	0
 1104 00b0 0B       		.uleb128 0xb
 1105 00b1 2E       		.uleb128 0x2e
 1106 00b2 01       		.byte	0x1
 1107 00b3 3F       		.uleb128 0x3f
 1108 00b4 19       		.uleb128 0x19
 1109 00b5 03       		.uleb128 0x3
 1110 00b6 0E       		.uleb128 0xe
 1111 00b7 3A       		.uleb128 0x3a
 1112 00b8 0B       		.uleb128 0xb
 1113 00b9 3B       		.uleb128 0x3b
 1114 00ba 05       		.uleb128 0x5
 1115 00bb 27       		.uleb128 0x27
 1116 00bc 19       		.uleb128 0x19
 1117 00bd 11       		.uleb128 0x11
 1118 00be 01       		.uleb128 0x1
 1119 00bf 12       		.uleb128 0x12
 1120 00c0 06       		.uleb128 0x6
 1121 00c1 40       		.uleb128 0x40
 1122 00c2 18       		.uleb128 0x18
 1123 00c3 9742     		.uleb128 0x2117
 1124 00c5 19       		.uleb128 0x19
 1125 00c6 01       		.uleb128 0x1
 1126 00c7 13       		.uleb128 0x13
 1127 00c8 00       		.byte	0
 1128 00c9 00       		.byte	0
 1129 00ca 0C       		.uleb128 0xc
 1130 00cb 05       		.uleb128 0x5
 1131 00cc 00       		.byte	0
 1132 00cd 03       		.uleb128 0x3
 1133 00ce 0E       		.uleb128 0xe
 1134 00cf 3A       		.uleb128 0x3a
 1135 00d0 0B       		.uleb128 0xb
 1136 00d1 3B       		.uleb128 0x3b
 1137 00d2 05       		.uleb128 0x5
 1138 00d3 49       		.uleb128 0x49
 1139 00d4 13       		.uleb128 0x13
 1140 00d5 02       		.uleb128 0x2
 1141 00d6 18       		.uleb128 0x18
 1142 00d7 00       		.byte	0
 1143 00d8 00       		.byte	0
 1144 00d9 0D       		.uleb128 0xd
 1145 00da 2E       		.uleb128 0x2e
 1146 00db 01       		.byte	0x1
 1147 00dc 3F       		.uleb128 0x3f
 1148 00dd 19       		.uleb128 0x19
 1149 00de 03       		.uleb128 0x3
 1150 00df 0E       		.uleb128 0xe
 1151 00e0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 29


 1152 00e1 0B       		.uleb128 0xb
 1153 00e2 3B       		.uleb128 0x3b
 1154 00e3 05       		.uleb128 0x5
 1155 00e4 27       		.uleb128 0x27
 1156 00e5 19       		.uleb128 0x19
 1157 00e6 11       		.uleb128 0x11
 1158 00e7 01       		.uleb128 0x1
 1159 00e8 12       		.uleb128 0x12
 1160 00e9 06       		.uleb128 0x6
 1161 00ea 40       		.uleb128 0x40
 1162 00eb 18       		.uleb128 0x18
 1163 00ec 9642     		.uleb128 0x2116
 1164 00ee 19       		.uleb128 0x19
 1165 00ef 01       		.uleb128 0x1
 1166 00f0 13       		.uleb128 0x13
 1167 00f1 00       		.byte	0
 1168 00f2 00       		.byte	0
 1169 00f3 0E       		.uleb128 0xe
 1170 00f4 34       		.uleb128 0x34
 1171 00f5 00       		.byte	0
 1172 00f6 03       		.uleb128 0x3
 1173 00f7 0E       		.uleb128 0xe
 1174 00f8 3A       		.uleb128 0x3a
 1175 00f9 0B       		.uleb128 0xb
 1176 00fa 3B       		.uleb128 0x3b
 1177 00fb 0B       		.uleb128 0xb
 1178 00fc 49       		.uleb128 0x49
 1179 00fd 13       		.uleb128 0x13
 1180 00fe 3F       		.uleb128 0x3f
 1181 00ff 19       		.uleb128 0x19
 1182 0100 02       		.uleb128 0x2
 1183 0101 18       		.uleb128 0x18
 1184 0102 00       		.byte	0
 1185 0103 00       		.byte	0
 1186 0104 00       		.byte	0
 1187              		.section	.debug_aranges,"",%progbits
 1188 0000 7C000000 		.4byte	0x7c
 1189 0004 0200     		.2byte	0x2
 1190 0006 00000000 		.4byte	.Ldebug_info0
 1191 000a 04       		.byte	0x4
 1192 000b 00       		.byte	0
 1193 000c 0000     		.2byte	0
 1194 000e 0000     		.2byte	0
 1195 0010 00000000 		.4byte	.LFB0
 1196 0014 98000000 		.4byte	.LFE0-.LFB0
 1197 0018 00000000 		.4byte	.LFB1
 1198 001c 48000000 		.4byte	.LFE1-.LFB1
 1199 0020 00000000 		.4byte	.LFB2
 1200 0024 20000000 		.4byte	.LFE2-.LFB2
 1201 0028 00000000 		.4byte	.LFB3
 1202 002c 48000000 		.4byte	.LFE3-.LFB3
 1203 0030 00000000 		.4byte	.LFB4
 1204 0034 20000000 		.4byte	.LFE4-.LFB4
 1205 0038 00000000 		.4byte	.LFB5
 1206 003c 18000000 		.4byte	.LFE5-.LFB5
 1207 0040 00000000 		.4byte	.LFB6
 1208 0044 18000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 30


 1209 0048 00000000 		.4byte	.LFB7
 1210 004c 20000000 		.4byte	.LFE7-.LFB7
 1211 0050 00000000 		.4byte	.LFB8
 1212 0054 54000000 		.4byte	.LFE8-.LFB8
 1213 0058 00000000 		.4byte	.LFB9
 1214 005c 24000000 		.4byte	.LFE9-.LFB9
 1215 0060 00000000 		.4byte	.LFB10
 1216 0064 1C000000 		.4byte	.LFE10-.LFB10
 1217 0068 00000000 		.4byte	.LFB11
 1218 006c 20000000 		.4byte	.LFE11-.LFB11
 1219 0070 00000000 		.4byte	.LFB12
 1220 0074 1C000000 		.4byte	.LFE12-.LFB12
 1221 0078 00000000 		.4byte	0
 1222 007c 00000000 		.4byte	0
 1223              		.section	.debug_ranges,"",%progbits
 1224              	.Ldebug_ranges0:
 1225 0000 00000000 		.4byte	.LFB0
 1226 0004 98000000 		.4byte	.LFE0
 1227 0008 00000000 		.4byte	.LFB1
 1228 000c 48000000 		.4byte	.LFE1
 1229 0010 00000000 		.4byte	.LFB2
 1230 0014 20000000 		.4byte	.LFE2
 1231 0018 00000000 		.4byte	.LFB3
 1232 001c 48000000 		.4byte	.LFE3
 1233 0020 00000000 		.4byte	.LFB4
 1234 0024 20000000 		.4byte	.LFE4
 1235 0028 00000000 		.4byte	.LFB5
 1236 002c 18000000 		.4byte	.LFE5
 1237 0030 00000000 		.4byte	.LFB6
 1238 0034 18000000 		.4byte	.LFE6
 1239 0038 00000000 		.4byte	.LFB7
 1240 003c 20000000 		.4byte	.LFE7
 1241 0040 00000000 		.4byte	.LFB8
 1242 0044 54000000 		.4byte	.LFE8
 1243 0048 00000000 		.4byte	.LFB9
 1244 004c 24000000 		.4byte	.LFE9
 1245 0050 00000000 		.4byte	.LFB10
 1246 0054 1C000000 		.4byte	.LFE10
 1247 0058 00000000 		.4byte	.LFB11
 1248 005c 20000000 		.4byte	.LFE11
 1249 0060 00000000 		.4byte	.LFB12
 1250 0064 1C000000 		.4byte	.LFE12
 1251 0068 00000000 		.4byte	0
 1252 006c 00000000 		.4byte	0
 1253              		.section	.debug_line,"",%progbits
 1254              	.Ldebug_line0:
 1255 0000 5B010000 		.section	.debug_str,"MS",%progbits,1
 1255      02004900 
 1255      00000201 
 1255      FB0E0D00 
 1255      01010101 
 1256              	.LASF15:
 1257 0000 72656731 		.ascii	"reg16\000"
 1257      3600
 1258              	.LASF22:
 1259 0006 636F756E 		.ascii	"counterShift_ReadControlRegister\000"
 1259      74657253 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 31


 1259      68696674 
 1259      5F526561 
 1259      64436F6E 
 1260              	.LASF36:
 1261 0027 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\PSoC Creator\\Puls"
 1261      73657273 
 1261      5C627279 
 1261      616E2E6C 
 1261      65655C44 
 1262 0055 655F7073 		.ascii	"e_psoc5\\Combine\\Combine.cydsn\000"
 1262      6F63355C 
 1262      436F6D62 
 1262      696E655C 
 1262      436F6D62 
 1263              	.LASF32:
 1264 0073 70657269 		.ascii	"period\000"
 1264      6F6400
 1265              	.LASF3:
 1266 007a 73686F72 		.ascii	"short unsigned int\000"
 1266      7420756E 
 1266      7369676E 
 1266      65642069 
 1266      6E7400
 1267              	.LASF27:
 1268 008d 636F756E 		.ascii	"counterShift_WriteCounter\000"
 1268      74657253 
 1268      68696674 
 1268      5F577269 
 1268      7465436F 
 1269              	.LASF17:
 1270 00a7 636F756E 		.ascii	"counterShift_Init\000"
 1270      74657253 
 1270      68696674 
 1270      5F496E69 
 1270      7400
 1271              	.LASF24:
 1272 00b9 636F756E 		.ascii	"counterShift_WriteControlRegister\000"
 1272      74657253 
 1272      68696674 
 1272      5F577269 
 1272      7465436F 
 1273              	.LASF29:
 1274 00db 636F756E 		.ascii	"counterShift_ReadCounter\000"
 1274      74657253 
 1274      68696674 
 1274      5F526561 
 1274      64436F75 
 1275              	.LASF21:
 1276 00f4 636F756E 		.ascii	"counterShift_ReadStatusRegister\000"
 1276      74657253 
 1276      68696674 
 1276      5F526561 
 1276      64537461 
 1277              	.LASF11:
 1278 0114 666C6F61 		.ascii	"float\000"
 1278      7400
 1279              	.LASF28:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 32


 1280 011a 636F756E 		.ascii	"counter\000"
 1280      74657200 
 1281              	.LASF37:
 1282 0122 636F756E 		.ascii	"counterShift_initVar\000"
 1282      74657253 
 1282      68696674 
 1282      5F696E69 
 1282      74566172 
 1283              	.LASF1:
 1284 0137 756E7369 		.ascii	"unsigned char\000"
 1284      676E6564 
 1284      20636861 
 1284      7200
 1285              	.LASF14:
 1286 0145 72656738 		.ascii	"reg8\000"
 1286      00
 1287              	.LASF35:
 1288 014a 47656E65 		.ascii	"Generated_Source\\PSoC5\\counterShift.c\000"
 1288      72617465 
 1288      645F536F 
 1288      75726365 
 1288      5C50536F 
 1289              	.LASF5:
 1290 0170 6C6F6E67 		.ascii	"long unsigned int\000"
 1290      20756E73 
 1290      69676E65 
 1290      6420696E 
 1290      7400
 1291              	.LASF9:
 1292 0182 75696E74 		.ascii	"uint8\000"
 1292      3800
 1293              	.LASF26:
 1294 0188 636F6E74 		.ascii	"control\000"
 1294      726F6C00 
 1295              	.LASF25:
 1296 0190 696E7465 		.ascii	"interruptsMask\000"
 1296      72727570 
 1296      74734D61 
 1296      736B00
 1297              	.LASF31:
 1298 019f 636F756E 		.ascii	"counterShift_WritePeriod\000"
 1298      74657253 
 1298      68696674 
 1298      5F577269 
 1298      74655065 
 1299              	.LASF34:
 1300 01b8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1300      4320342E 
 1300      392E3320 
 1300      32303135 
 1300      30333033 
 1301 01eb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1301      20726576 
 1301      6973696F 
 1301      6E203232 
 1301      31323230 
 1302 021e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 33


 1302      66756E63 
 1302      74696F6E 
 1302      2D736563 
 1302      74696F6E 
 1303              	.LASF12:
 1304 0246 646F7562 		.ascii	"double\000"
 1304      6C6500
 1305              	.LASF10:
 1306 024d 75696E74 		.ascii	"uint16\000"
 1306      313600
 1307              	.LASF20:
 1308 0254 636F756E 		.ascii	"counterShift_Stop\000"
 1308      74657253 
 1308      68696674 
 1308      5F53746F 
 1308      7000
 1309              	.LASF8:
 1310 0266 756E7369 		.ascii	"unsigned int\000"
 1310      676E6564 
 1310      20696E74 
 1310      00
 1311              	.LASF7:
 1312 0273 6C6F6E67 		.ascii	"long long unsigned int\000"
 1312      206C6F6E 
 1312      6720756E 
 1312      7369676E 
 1312      65642069 
 1313              	.LASF18:
 1314 028a 636F756E 		.ascii	"counterShift_Enable\000"
 1314      74657253 
 1314      68696674 
 1314      5F456E61 
 1314      626C6500 
 1315              	.LASF23:
 1316 029e 636F756E 		.ascii	"counterShift_SetInterruptMode\000"
 1316      74657253 
 1316      68696674 
 1316      5F536574 
 1316      496E7465 
 1317              	.LASF16:
 1318 02bc 73697A65 		.ascii	"sizetype\000"
 1318      74797065 
 1318      00
 1319              	.LASF6:
 1320 02c5 6C6F6E67 		.ascii	"long long int\000"
 1320      206C6F6E 
 1320      6720696E 
 1320      7400
 1321              	.LASF13:
 1322 02d3 63686172 		.ascii	"char\000"
 1322      00
 1323              	.LASF33:
 1324 02d8 636F756E 		.ascii	"counterShift_ReadPeriod\000"
 1324      74657253 
 1324      68696674 
 1324      5F526561 
 1324      64506572 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccrhXKYf.s 			page 34


 1325              	.LASF2:
 1326 02f0 73686F72 		.ascii	"short int\000"
 1326      7420696E 
 1326      7400
 1327              	.LASF4:
 1328 02fa 6C6F6E67 		.ascii	"long int\000"
 1328      20696E74 
 1328      00
 1329              	.LASF19:
 1330 0303 636F756E 		.ascii	"counterShift_Start\000"
 1330      74657253 
 1330      68696674 
 1330      5F537461 
 1330      727400
 1331              	.LASF0:
 1332 0316 7369676E 		.ascii	"signed char\000"
 1332      65642063 
 1332      68617200 
 1333              	.LASF30:
 1334 0322 636F756E 		.ascii	"counterShift_ReadCapture\000"
 1334      74657253 
 1334      68696674 
 1334      5F526561 
 1334      64436170 
 1335              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
