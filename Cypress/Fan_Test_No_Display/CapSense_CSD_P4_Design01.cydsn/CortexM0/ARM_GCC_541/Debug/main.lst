ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	curPos,2,2
  20              		.comm	oldPos,2,2
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 46616E5F 		.ascii	"Fan_Test\000"
  24      54657374 
  24      00
  25              		.section	.text.main,"ax",%progbits
  26              		.align	2
  27              		.global	main
  28              		.code	16
  29              		.thumb_func
  30              		.type	main, %function
  31              	main:
  32              	.LFB35:
  33              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  The project explains the usage of CapSense CSD component. The 2 buttons and
   8:main.c        **** *  linear sliders are used as sensing elements. LED displays buttons active 
   9:main.c        **** *  state and slider position is shown on LCD.
  10:main.c        **** *
  11:main.c        **** ********************************************************************************
  12:main.c        **** * Copyright 2013, Cypress Semiconductor Corporation. All rights reserved.
  13:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  14:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  15:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  16:main.c        **** * accompanying the software package from which you obtained this software.
  17:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  18:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  19:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  20:main.c        **** *******************************************************************************/
  21:main.c        **** 
  22:main.c        **** #include "project.h"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 2


  23:main.c        **** 
  24:main.c        **** /* CapSense Slider resoluton is set to 127 (7 bits).
  25:main.c        **** *  Since PWM has 16 bit resolution, slider position value should be shifted left
  26:main.c        **** *  by 9 bits.
  27:main.c        **** */
  28:main.c        **** #define SLIDER_POS_TO_COMPARE_SHIFT    (9u)
  29:main.c        **** 
  30:main.c        **** void CapSense_DisplayState(void);
  31:main.c        **** 
  32:main.c        **** uint16 curPos, oldPos;
  33:main.c        **** 
  34:main.c        **** /*******************************************************************************
  35:main.c        **** * Function Name: main
  36:main.c        **** ********************************************************************************
  37:main.c        **** * Summary:
  38:main.c        **** *  Main function performs following functions:
  39:main.c        **** *   1. Enable global interrupts.
  40:main.c        **** *   2. Initialize CapSense CSD and Start the sensor scanning loop.
  41:main.c        **** *   3. Process scanning results and display it on with LEDs.
  42:main.c        **** *
  43:main.c        **** * Parameters:
  44:main.c        **** *  None
  45:main.c        **** *
  46:main.c        **** * Return:
  47:main.c        **** *  None
  48:main.c        **** *
  49:main.c        **** *******************************************************************************/
  50:main.c        **** int main()
  51:main.c        **** {
  34              		.loc 1 51 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  52:main.c        ****     /* Enable global interrupts */
  53:main.c        ****     CyGlobalIntEnable;
  44              		.loc 1 53 0
  45              		.syntax divided
  46              	@ 53 "main.c" 1
  47 0004 62B6     		CPSIE   i
  48              	@ 0 "" 2
  54:main.c        ****     ADC_SAR_Seq_Button_Start();
  49              		.loc 1 54 0
  50              		.thumb
  51              		.syntax unified
  52 0006 FFF7FEFF 		bl	ADC_SAR_Seq_Button_Start
  55:main.c        ****     ADC_SAR_Seq_Button_StartConvert();
  53              		.loc 1 55 0
  54 000a FFF7FEFF 		bl	ADC_SAR_Seq_Button_StartConvert
  56:main.c        ****     PWMBacklight_Start();
  55              		.loc 1 56 0
  56 000e FFF7FEFF 		bl	PWMBacklight_Start
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 3


  57:main.c        ****     PWMBacklight_WriteCompare(32768);
  57              		.loc 1 57 0
  58 0012 8023     		movs	r3, #128
  59 0014 1B02     		lsls	r3, r3, #8
  60 0016 1800     		movs	r0, r3
  61 0018 FFF7FEFF 		bl	PWMBacklight_WriteCompare
  58:main.c        ****     LCD_Start();
  62              		.loc 1 58 0
  63 001c FFF7FEFF 		bl	LCD_Start
  59:main.c        ****     LCD_ClearDisplay();
  64              		.loc 1 59 0
  65 0020 0120     		movs	r0, #1
  66 0022 FFF7FEFF 		bl	LCD_WriteControl
  60:main.c        ****     LCD_Position(0,4);
  67              		.loc 1 60 0
  68 0026 0421     		movs	r1, #4
  69 0028 0020     		movs	r0, #0
  70 002a FFF7FEFF 		bl	LCD_Position
  61:main.c        ****     LCD_PrintString("Fan_Test");
  71              		.loc 1 61 0
  72 002e 0C4B     		ldr	r3, .L4
  73 0030 1800     		movs	r0, r3
  74 0032 FFF7FEFF 		bl	LCD_PrintString
  62:main.c        ****     
  63:main.c        ****     /* Start PWM and CapSense components */
  64:main.c        ****     LED_CONTROL_Start();
  75              		.loc 1 64 0
  76 0036 FFF7FEFF 		bl	LED_CONTROL_Start
  65:main.c        ****     LED_CONTROL_1_Start();
  77              		.loc 1 65 0
  78 003a FFF7FEFF 		bl	LED_CONTROL_1_Start
  66:main.c        ****     CapSense_CSD_Start();	
  79              		.loc 1 66 0
  80 003e FFF7FEFF 		bl	CapSense_CSD_Start
  67:main.c        **** 
  68:main.c        ****     /* Initialize baselines */ 
  69:main.c        ****     CapSense_CSD_InitializeAllBaselines();
  81              		.loc 1 69 0
  82 0042 FFF7FEFF 		bl	CapSense_CSD_InitializeAllBaselines
  83              	.L3:
  70:main.c        ****     
  71:main.c        ****     while(1u)
  72:main.c        ****     {
  73:main.c        ****         /* Update all baselines */
  74:main.c        ****         CapSense_CSD_UpdateEnabledBaselines();
  84              		.loc 1 74 0
  85 0046 FFF7FEFF 		bl	CapSense_CSD_UpdateEnabledBaselines
  75:main.c        ****         
  76:main.c        ****    		/* Start scanning all enabled sensors */
  77:main.c        ****     	CapSense_CSD_ScanEnabledWidgets();
  86              		.loc 1 77 0
  87 004a FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
  78:main.c        ****     
  79:main.c        ****         /* Wait for scanning to complete */
  80:main.c        **** 		while(CapSense_CSD_IsBusy() != 0)
  88              		.loc 1 80 0
  89 004e C046     		nop
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 4


  90              	.L2:
  91              		.loc 1 80 0 is_stmt 0 discriminator 1
  92 0050 FFF7FEFF 		bl	CapSense_CSD_IsBusy
  93 0054 031E     		subs	r3, r0, #0
  94 0056 FBD1     		bne	.L2
  81:main.c        **** 		{
  82:main.c        **** 			/* Loop until condition true */
  83:main.c        **** 		}
  84:main.c        **** 
  85:main.c        **** 		/* Display CapSense state using LEDs */
  86:main.c        ****         CapSense_DisplayState();
  95              		.loc 1 86 0 is_stmt 1
  96 0058 FFF7FEFF 		bl	CapSense_DisplayState
  87:main.c        ****     }
  97              		.loc 1 87 0
  98 005c F3E7     		b	.L3
  99              	.L5:
 100 005e C046     		.align	2
 101              	.L4:
 102 0060 00000000 		.word	.LC0
 103              		.cfi_endproc
 104              	.LFE35:
 105              		.size	main, .-main
 106              		.section	.text.CapSense_DisplayState,"ax",%progbits
 107              		.align	2
 108              		.global	CapSense_DisplayState
 109              		.code	16
 110              		.thumb_func
 111              		.type	CapSense_DisplayState, %function
 112              	CapSense_DisplayState:
 113              	.LFB36:
  88:main.c        **** }
  89:main.c        **** 
  90:main.c        **** /*******************************************************************************
  91:main.c        **** * Function Name: CapSense_DisplayState
  92:main.c        **** ********************************************************************************
  93:main.c        **** * Summary:
  94:main.c        **** *  Changes LEDs brightness by changing the duty cycle of PWM signals.
  95:main.c        **** *
  96:main.c        **** * Parameters:
  97:main.c        **** *  None
  98:main.c        **** *
  99:main.c        **** * Return:
 100:main.c        **** *  None
 101:main.c        **** *
 102:main.c        **** *******************************************************************************/
 103:main.c        **** void CapSense_DisplayState(void)
 104:main.c        **** {
 114              		.loc 1 104 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 5


 123              		.cfi_def_cfa_register 7
 105:main.c        ****     /* Find Slider Position */
 106:main.c        ****     curPos = CapSense_CSD_GetCentroidPos(CapSense_CSD_LINEARSLIDER0__LS);    
 124              		.loc 1 106 0
 125 0004 0020     		movs	r0, #0
 126 0006 FFF7FEFF 		bl	CapSense_CSD_GetCentroidPos
 127 000a 0300     		movs	r3, r0
 128 000c 1A00     		movs	r2, r3
 129 000e 184B     		ldr	r3, .L10
 130 0010 1A80     		strh	r2, [r3]
 107:main.c        ****     
 108:main.c        ****     /* Reset position */
 109:main.c        ****     if(curPos == 0xFFFFu)
 131              		.loc 1 109 0
 132 0012 174B     		ldr	r3, .L10
 133 0014 1B88     		ldrh	r3, [r3]
 134 0016 174A     		ldr	r2, .L10+4
 135 0018 9342     		cmp	r3, r2
 136 001a 02D1     		bne	.L7
 110:main.c        ****     {
 111:main.c        ****         curPos = 0x0u;
 137              		.loc 1 111 0
 138 001c 144B     		ldr	r3, .L10
 139 001e 0022     		movs	r2, #0
 140 0020 1A80     		strh	r2, [r3]
 141              	.L7:
 112:main.c        ****     }
 113:main.c        ****                 
 114:main.c        ****     /* Move bargraph */
 115:main.c        ****     if (curPos != oldPos)
 142              		.loc 1 115 0
 143 0022 134B     		ldr	r3, .L10
 144 0024 1A88     		ldrh	r2, [r3]
 145 0026 144B     		ldr	r3, .L10+8
 146 0028 1B88     		ldrh	r3, [r3]
 147 002a 9A42     		cmp	r2, r3
 148 002c 1CD0     		beq	.L9
 116:main.c        ****     {
 117:main.c        ****         oldPos = curPos;
 149              		.loc 1 117 0
 150 002e 104B     		ldr	r3, .L10
 151 0030 1A88     		ldrh	r2, [r3]
 152 0032 114B     		ldr	r3, .L10+8
 153 0034 1A80     		strh	r2, [r3]
 118:main.c        ****         /* Display Slider bargraph */
 119:main.c        ****         if (curPos != 0x0u)
 154              		.loc 1 119 0
 155 0036 0E4B     		ldr	r3, .L10
 156 0038 1B88     		ldrh	r3, [r3]
 157 003a 002B     		cmp	r3, #0
 158 003c 14D0     		beq	.L9
 120:main.c        ****         {
 121:main.c        ****             LED_CONTROL_WriteCompare((uint32)curPos << SLIDER_POS_TO_COMPARE_SHIFT);
 159              		.loc 1 121 0
 160 003e 0C4B     		ldr	r3, .L10
 161 0040 1B88     		ldrh	r3, [r3]
 162 0042 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 6


 163 0044 1800     		movs	r0, r3
 164 0046 FFF7FEFF 		bl	LED_CONTROL_WriteCompare
 122:main.c        ****             LED_CONTROL_1_WriteCompare((uint32)curPos); //wihout the bit shift
 165              		.loc 1 122 0
 166 004a 094B     		ldr	r3, .L10
 167 004c 1B88     		ldrh	r3, [r3]
 168 004e 1800     		movs	r0, r3
 169 0050 FFF7FEFF 		bl	LED_CONTROL_1_WriteCompare
 123:main.c        ****             LCD_Position(1,7);
 170              		.loc 1 123 0
 171 0054 0721     		movs	r1, #7
 172 0056 0120     		movs	r0, #1
 173 0058 FFF7FEFF 		bl	LCD_Position
 124:main.c        ****             LCD_PutChar(curPos);
 174              		.loc 1 124 0
 175 005c 044B     		ldr	r3, .L10
 176 005e 1B88     		ldrh	r3, [r3]
 177 0060 DBB2     		uxtb	r3, r3
 178 0062 1800     		movs	r0, r3
 179 0064 FFF7FEFF 		bl	LCD_PutChar
 180              	.L9:
 125:main.c        ****         }        
 126:main.c        ****     }
 127:main.c        **** }
 181              		.loc 1 127 0
 182 0068 C046     		nop
 183 006a BD46     		mov	sp, r7
 184              		@ sp needed
 185 006c 80BD     		pop	{r7, pc}
 186              	.L11:
 187 006e C046     		.align	2
 188              	.L10:
 189 0070 00000000 		.word	curPos
 190 0074 FFFF0000 		.word	65535
 191 0078 00000000 		.word	oldPos
 192              		.cfi_endproc
 193              	.LFE36:
 194              		.size	CapSense_DisplayState, .-CapSense_DisplayState
 195              		.text
 196              	.Letext0:
 197              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 198              		.section	.debug_info,"",%progbits
 199              	.Ldebug_info0:
 200 0000 EB000000 		.4byte	0xeb
 201 0004 0400     		.2byte	0x4
 202 0006 00000000 		.4byte	.Ldebug_abbrev0
 203 000a 04       		.byte	0x4
 204 000b 01       		.uleb128 0x1
 205 000c 30000000 		.4byte	.LASF20
 206 0010 0C       		.byte	0xc
 207 0011 29000000 		.4byte	.LASF21
 208 0015 F4000000 		.4byte	.LASF22
 209 0019 00000000 		.4byte	.Ldebug_ranges0+0
 210 001d 00000000 		.4byte	0
 211 0021 00000000 		.4byte	.Ldebug_line0
 212 0025 02       		.uleb128 0x2
 213 0026 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 7


 214 0027 06       		.byte	0x6
 215 0028 78010000 		.4byte	.LASF0
 216 002c 02       		.uleb128 0x2
 217 002d 01       		.byte	0x1
 218 002e 08       		.byte	0x8
 219 002f 42010000 		.4byte	.LASF1
 220 0033 02       		.uleb128 0x2
 221 0034 02       		.byte	0x2
 222 0035 05       		.byte	0x5
 223 0036 95010000 		.4byte	.LASF2
 224 003a 02       		.uleb128 0x2
 225 003b 02       		.byte	0x2
 226 003c 07       		.byte	0x7
 227 003d 65010000 		.4byte	.LASF3
 228 0041 02       		.uleb128 0x2
 229 0042 04       		.byte	0x4
 230 0043 05       		.byte	0x5
 231 0044 55010000 		.4byte	.LASF4
 232 0048 02       		.uleb128 0x2
 233 0049 04       		.byte	0x4
 234 004a 07       		.byte	0x7
 235 004b BE000000 		.4byte	.LASF5
 236 004f 02       		.uleb128 0x2
 237 0050 08       		.byte	0x8
 238 0051 05       		.byte	0x5
 239 0052 00000000 		.4byte	.LASF6
 240 0056 02       		.uleb128 0x2
 241 0057 08       		.byte	0x8
 242 0058 07       		.byte	0x7
 243 0059 D0000000 		.4byte	.LASF7
 244 005d 03       		.uleb128 0x3
 245 005e 04       		.byte	0x4
 246 005f 05       		.byte	0x5
 247 0060 696E7400 		.ascii	"int\000"
 248 0064 02       		.uleb128 0x2
 249 0065 04       		.byte	0x4
 250 0066 07       		.byte	0x7
 251 0067 15000000 		.4byte	.LASF8
 252 006b 04       		.uleb128 0x4
 253 006c 9F010000 		.4byte	.LASF9
 254 0070 02       		.byte	0x2
 255 0071 E501     		.2byte	0x1e5
 256 0073 3A000000 		.4byte	0x3a
 257 0077 04       		.uleb128 0x4
 258 0078 0E000000 		.4byte	.LASF10
 259 007c 02       		.byte	0x2
 260 007d E601     		.2byte	0x1e6
 261 007f 48000000 		.4byte	0x48
 262 0083 02       		.uleb128 0x2
 263 0084 04       		.byte	0x4
 264 0085 04       		.byte	0x4
 265 0086 EE000000 		.4byte	.LASF11
 266 008a 02       		.uleb128 0x2
 267 008b 08       		.byte	0x8
 268 008c 04       		.byte	0x4
 269 008d 5E010000 		.4byte	.LASF12
 270 0091 02       		.uleb128 0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 8


 271 0092 01       		.byte	0x1
 272 0093 08       		.byte	0x8
 273 0094 50010000 		.4byte	.LASF13
 274 0098 02       		.uleb128 0x2
 275 0099 04       		.byte	0x4
 276 009a 07       		.byte	0x7
 277 009b BC010000 		.4byte	.LASF14
 278 009f 02       		.uleb128 0x2
 279 00a0 08       		.byte	0x8
 280 00a1 04       		.byte	0x4
 281 00a2 89010000 		.4byte	.LASF15
 282 00a6 05       		.uleb128 0x5
 283 00a7 84010000 		.4byte	.LASF16
 284 00ab 01       		.byte	0x1
 285 00ac 32       		.byte	0x32
 286 00ad 5D000000 		.4byte	0x5d
 287 00b1 00000000 		.4byte	.LFB35
 288 00b5 64000000 		.4byte	.LFE35-.LFB35
 289 00b9 01       		.uleb128 0x1
 290 00ba 9C       		.byte	0x9c
 291 00bb 06       		.uleb128 0x6
 292 00bc A6010000 		.4byte	.LASF17
 293 00c0 01       		.byte	0x1
 294 00c1 67       		.byte	0x67
 295 00c2 00000000 		.4byte	.LFB36
 296 00c6 7C000000 		.4byte	.LFE36-.LFB36
 297 00ca 01       		.uleb128 0x1
 298 00cb 9C       		.byte	0x9c
 299 00cc 07       		.uleb128 0x7
 300 00cd E7000000 		.4byte	.LASF18
 301 00d1 01       		.byte	0x1
 302 00d2 20       		.byte	0x20
 303 00d3 6B000000 		.4byte	0x6b
 304 00d7 05       		.uleb128 0x5
 305 00d8 03       		.byte	0x3
 306 00d9 00000000 		.4byte	curPos
 307 00dd 07       		.uleb128 0x7
 308 00de 22000000 		.4byte	.LASF19
 309 00e2 01       		.byte	0x1
 310 00e3 20       		.byte	0x20
 311 00e4 6B000000 		.4byte	0x6b
 312 00e8 05       		.uleb128 0x5
 313 00e9 03       		.byte	0x3
 314 00ea 00000000 		.4byte	oldPos
 315 00ee 00       		.byte	0
 316              		.section	.debug_abbrev,"",%progbits
 317              	.Ldebug_abbrev0:
 318 0000 01       		.uleb128 0x1
 319 0001 11       		.uleb128 0x11
 320 0002 01       		.byte	0x1
 321 0003 25       		.uleb128 0x25
 322 0004 0E       		.uleb128 0xe
 323 0005 13       		.uleb128 0x13
 324 0006 0B       		.uleb128 0xb
 325 0007 03       		.uleb128 0x3
 326 0008 0E       		.uleb128 0xe
 327 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 9


 328 000a 0E       		.uleb128 0xe
 329 000b 55       		.uleb128 0x55
 330 000c 17       		.uleb128 0x17
 331 000d 11       		.uleb128 0x11
 332 000e 01       		.uleb128 0x1
 333 000f 10       		.uleb128 0x10
 334 0010 17       		.uleb128 0x17
 335 0011 00       		.byte	0
 336 0012 00       		.byte	0
 337 0013 02       		.uleb128 0x2
 338 0014 24       		.uleb128 0x24
 339 0015 00       		.byte	0
 340 0016 0B       		.uleb128 0xb
 341 0017 0B       		.uleb128 0xb
 342 0018 3E       		.uleb128 0x3e
 343 0019 0B       		.uleb128 0xb
 344 001a 03       		.uleb128 0x3
 345 001b 0E       		.uleb128 0xe
 346 001c 00       		.byte	0
 347 001d 00       		.byte	0
 348 001e 03       		.uleb128 0x3
 349 001f 24       		.uleb128 0x24
 350 0020 00       		.byte	0
 351 0021 0B       		.uleb128 0xb
 352 0022 0B       		.uleb128 0xb
 353 0023 3E       		.uleb128 0x3e
 354 0024 0B       		.uleb128 0xb
 355 0025 03       		.uleb128 0x3
 356 0026 08       		.uleb128 0x8
 357 0027 00       		.byte	0
 358 0028 00       		.byte	0
 359 0029 04       		.uleb128 0x4
 360 002a 16       		.uleb128 0x16
 361 002b 00       		.byte	0
 362 002c 03       		.uleb128 0x3
 363 002d 0E       		.uleb128 0xe
 364 002e 3A       		.uleb128 0x3a
 365 002f 0B       		.uleb128 0xb
 366 0030 3B       		.uleb128 0x3b
 367 0031 05       		.uleb128 0x5
 368 0032 49       		.uleb128 0x49
 369 0033 13       		.uleb128 0x13
 370 0034 00       		.byte	0
 371 0035 00       		.byte	0
 372 0036 05       		.uleb128 0x5
 373 0037 2E       		.uleb128 0x2e
 374 0038 00       		.byte	0
 375 0039 3F       		.uleb128 0x3f
 376 003a 19       		.uleb128 0x19
 377 003b 03       		.uleb128 0x3
 378 003c 0E       		.uleb128 0xe
 379 003d 3A       		.uleb128 0x3a
 380 003e 0B       		.uleb128 0xb
 381 003f 3B       		.uleb128 0x3b
 382 0040 0B       		.uleb128 0xb
 383 0041 49       		.uleb128 0x49
 384 0042 13       		.uleb128 0x13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 10


 385 0043 11       		.uleb128 0x11
 386 0044 01       		.uleb128 0x1
 387 0045 12       		.uleb128 0x12
 388 0046 06       		.uleb128 0x6
 389 0047 40       		.uleb128 0x40
 390 0048 18       		.uleb128 0x18
 391 0049 9642     		.uleb128 0x2116
 392 004b 19       		.uleb128 0x19
 393 004c 00       		.byte	0
 394 004d 00       		.byte	0
 395 004e 06       		.uleb128 0x6
 396 004f 2E       		.uleb128 0x2e
 397 0050 00       		.byte	0
 398 0051 3F       		.uleb128 0x3f
 399 0052 19       		.uleb128 0x19
 400 0053 03       		.uleb128 0x3
 401 0054 0E       		.uleb128 0xe
 402 0055 3A       		.uleb128 0x3a
 403 0056 0B       		.uleb128 0xb
 404 0057 3B       		.uleb128 0x3b
 405 0058 0B       		.uleb128 0xb
 406 0059 27       		.uleb128 0x27
 407 005a 19       		.uleb128 0x19
 408 005b 11       		.uleb128 0x11
 409 005c 01       		.uleb128 0x1
 410 005d 12       		.uleb128 0x12
 411 005e 06       		.uleb128 0x6
 412 005f 40       		.uleb128 0x40
 413 0060 18       		.uleb128 0x18
 414 0061 9642     		.uleb128 0x2116
 415 0063 19       		.uleb128 0x19
 416 0064 00       		.byte	0
 417 0065 00       		.byte	0
 418 0066 07       		.uleb128 0x7
 419 0067 34       		.uleb128 0x34
 420 0068 00       		.byte	0
 421 0069 03       		.uleb128 0x3
 422 006a 0E       		.uleb128 0xe
 423 006b 3A       		.uleb128 0x3a
 424 006c 0B       		.uleb128 0xb
 425 006d 3B       		.uleb128 0x3b
 426 006e 0B       		.uleb128 0xb
 427 006f 49       		.uleb128 0x49
 428 0070 13       		.uleb128 0x13
 429 0071 3F       		.uleb128 0x3f
 430 0072 19       		.uleb128 0x19
 431 0073 02       		.uleb128 0x2
 432 0074 18       		.uleb128 0x18
 433 0075 00       		.byte	0
 434 0076 00       		.byte	0
 435 0077 00       		.byte	0
 436              		.section	.debug_aranges,"",%progbits
 437 0000 24000000 		.4byte	0x24
 438 0004 0200     		.2byte	0x2
 439 0006 00000000 		.4byte	.Ldebug_info0
 440 000a 04       		.byte	0x4
 441 000b 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 11


 442 000c 0000     		.2byte	0
 443 000e 0000     		.2byte	0
 444 0010 00000000 		.4byte	.LFB35
 445 0014 64000000 		.4byte	.LFE35-.LFB35
 446 0018 00000000 		.4byte	.LFB36
 447 001c 7C000000 		.4byte	.LFE36-.LFB36
 448 0020 00000000 		.4byte	0
 449 0024 00000000 		.4byte	0
 450              		.section	.debug_ranges,"",%progbits
 451              	.Ldebug_ranges0:
 452 0000 00000000 		.4byte	.LFB35
 453 0004 64000000 		.4byte	.LFE35
 454 0008 00000000 		.4byte	.LFB36
 455 000c 7C000000 		.4byte	.LFE36
 456 0010 00000000 		.4byte	0
 457 0014 00000000 		.4byte	0
 458              		.section	.debug_line,"",%progbits
 459              	.Ldebug_line0:
 460 0000 8A000000 		.section	.debug_str,"MS",%progbits,1
 460      02004100 
 460      00000201 
 460      FB0E0D00 
 460      01010101 
 461              	.LASF6:
 462 0000 6C6F6E67 		.ascii	"long long int\000"
 462      206C6F6E 
 462      6720696E 
 462      7400
 463              	.LASF10:
 464 000e 75696E74 		.ascii	"uint32\000"
 464      333200
 465              	.LASF8:
 466 0015 756E7369 		.ascii	"unsigned int\000"
 466      676E6564 
 466      20696E74 
 466      00
 467              	.LASF19:
 468 0022 6F6C6450 		.ascii	"oldPos\000"
 468      6F7300
 469              	.LASF21:
 470 0029 6D61696E 		.ascii	"main.c\000"
 470      2E6300
 471              	.LASF20:
 472 0030 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 472      43313120 
 472      352E342E 
 472      31203230 
 472      31363036 
 473 0063 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 473      20726576 
 473      6973696F 
 473      6E203233 
 473      37373135 
 474 0096 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 474      66756E63 
 474      74696F6E 
 474      2D736563 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 12


 474      74696F6E 
 475              	.LASF5:
 476 00be 6C6F6E67 		.ascii	"long unsigned int\000"
 476      20756E73 
 476      69676E65 
 476      6420696E 
 476      7400
 477              	.LASF7:
 478 00d0 6C6F6E67 		.ascii	"long long unsigned int\000"
 478      206C6F6E 
 478      6720756E 
 478      7369676E 
 478      65642069 
 479              	.LASF18:
 480 00e7 63757250 		.ascii	"curPos\000"
 480      6F7300
 481              	.LASF11:
 482 00ee 666C6F61 		.ascii	"float\000"
 482      7400
 483              	.LASF22:
 484 00f4 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Desktop\\Fan_Test_No_Display\\"
 484      73657273 
 484      5C627279 
 484      616E2E6C 
 484      65655C44 
 485 0123 43617053 		.ascii	"CapSense_CSD_P4_Design01.cydsn\000"
 485      656E7365 
 485      5F435344 
 485      5F50345F 
 485      44657369 
 486              	.LASF1:
 487 0142 756E7369 		.ascii	"unsigned char\000"
 487      676E6564 
 487      20636861 
 487      7200
 488              	.LASF13:
 489 0150 63686172 		.ascii	"char\000"
 489      00
 490              	.LASF4:
 491 0155 6C6F6E67 		.ascii	"long int\000"
 491      20696E74 
 491      00
 492              	.LASF12:
 493 015e 646F7562 		.ascii	"double\000"
 493      6C6500
 494              	.LASF3:
 495 0165 73686F72 		.ascii	"short unsigned int\000"
 495      7420756E 
 495      7369676E 
 495      65642069 
 495      6E7400
 496              	.LASF0:
 497 0178 7369676E 		.ascii	"signed char\000"
 497      65642063 
 497      68617200 
 498              	.LASF16:
 499 0184 6D61696E 		.ascii	"main\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccxQnkfC.s 			page 13


 499      00
 500              	.LASF15:
 501 0189 6C6F6E67 		.ascii	"long double\000"
 501      20646F75 
 501      626C6500 
 502              	.LASF2:
 503 0195 73686F72 		.ascii	"short int\000"
 503      7420696E 
 503      7400
 504              	.LASF9:
 505 019f 75696E74 		.ascii	"uint16\000"
 505      313600
 506              	.LASF17:
 507 01a6 43617053 		.ascii	"CapSense_DisplayState\000"
 507      656E7365 
 507      5F446973 
 507      706C6179 
 507      53746174 
 508              	.LASF14:
 509 01bc 73697A65 		.ascii	"sizetype\000"
 509      74797065 
 509      00
 510              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
