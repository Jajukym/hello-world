ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 4


  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 140 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 149 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 150 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 5


  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 430 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 434 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 437 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 448 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 451 0
 112 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 453 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 454 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 11


 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 474 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 476 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 478 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 12


 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 482 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 484 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 498 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 13


 187              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 511 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 515 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 525 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 528 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 531 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 14


 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 566 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 15


 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 569 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 571 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 573 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 572 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 571 0
 257 001e 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 576 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 577 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 273              		.align	2
 274              		.global	CySysClkWriteImoFreq
 275              		.code	16
 276              		.thumb_func
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 16


 277              		.type	CySysClkWriteImoFreq, %function
 278              	CySysClkWriteImoFreq:
 279              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 624 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL16:
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 17


 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 289 0002 86B0     		sub	sp, sp, #24
 290              		.cfi_def_cfa_offset 32
 291 0004 0400     		movs	r4, r0
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 292              		.loc 1 647 0
 293 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 294              	.LVL17:
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 18


 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 295              		.loc 1 681 0
 296 000a 0E4B     		ldr	r3, .L22
 297 000c 1B68     		ldr	r3, [r3]
 298 000e 0093     		str	r3, [sp]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 299              		.loc 1 682 0
 300 0010 0D4B     		ldr	r3, .L22+4
 301 0012 1B68     		ldr	r3, [r3]
 302 0014 0193     		str	r3, [sp, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 303              		.loc 1 683 0
 304 0016 033C     		subs	r4, r4, #3
 305              	.LVL18:
 306 0018 0C4B     		ldr	r3, .L22+8
 307 001a 1B5D     		ldrb	r3, [r3, r4]
 308 001c 0293     		str	r3, [sp, #8]
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 309              		.loc 1 684 0
 310 001e 0C4B     		ldr	r3, .L22+12
 311 0020 1B68     		ldr	r3, [r3]
 312 0022 0393     		str	r3, [sp, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 313              		.loc 1 686 0
 314 0024 04AA     		add	r2, sp, #16
 315 0026 0B4B     		ldr	r3, .L22+16
 316 0028 0493     		str	r3, [sp, #16]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 317              		.loc 1 689 0
 318 002a 6B46     		mov	r3, sp
 319 002c 0593     		str	r3, [sp, #20]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 320              		.loc 1 691 0
 321 002e 0A4B     		ldr	r3, .L22+20
 322 0030 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 323              		.loc 1 692 0
 324 0032 0A49     		ldr	r1, .L22+24
 325 0034 0A4A     		ldr	r2, .L22+28
 326 0036 1160     		str	r1, [r2]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 327              		.loc 1 693 0
 328 0038 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 19


 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 20


 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 21


 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 329              		.loc 1 823 0
 330 003a FFF7FEFF 		bl	CyExitCriticalSection
 331              	.LVL19:
 824:Generated_Source\PSoC4/CyLib.c ****     }
 332              		.loc 1 824 0
 333 003e 06B0     		add	sp, sp, #24
 334              		@ sp needed
 335              	.LVL20:
 336 0040 10BD     		pop	{r4, pc}
 337              	.L23:
 338 0042 C046     		.align	2
 339              	.L22:
 340 0044 08010B40 		.word	1074462984
 341 0048 00010B40 		.word	1074462976
 342 004c 00000000 		.word	.LANCHOR1
 343 0050 30001040 		.word	1074790448
 344 0054 B6EA0000 		.word	60086
 345 0058 08001040 		.word	1074790408
 346 005c 17000080 		.word	-2147483625
 347 0060 04001040 		.word	1074790404
 348              		.cfi_endproc
 349              	.LFE8:
 350              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 351              		.section	.text.CySysClkEcoStop,"ax",%progbits
 352              		.align	2
 353              		.global	CySysClkEcoStop
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysClkEcoStop, %function
 357              	CySysClkEcoStop:
 358              	.LFB10:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 22


 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 23


 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 24


 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 25


1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 26


1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 27


1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 1170 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 364              		.loc 1 1173 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 28


 365 0000 054A     		ldr	r2, .L25
 366 0002 1368     		ldr	r3, [r2]
 367 0004 0121     		movs	r1, #1
 368 0006 8B43     		bics	r3, r1
 369 0008 1360     		str	r3, [r2]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 370              		.loc 1 1176 0
 371 000a 044A     		ldr	r2, .L25+4
 372 000c 1168     		ldr	r1, [r2]
 373 000e 044B     		ldr	r3, .L25+8
 374 0010 0B40     		ands	r3, r1
 375 0012 1360     		str	r3, [r2]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 376              		.loc 1 1182 0
 377              		@ sp needed
 378 0014 7047     		bx	lr
 379              	.L26:
 380 0016 C046     		.align	2
 381              	.L25:
 382 0018 60F02E40 		.word	1076818016
 383 001c 10002E40 		.word	1076756496
 384 0020 FF7FFFFF 		.word	-32769
 385              		.cfi_endproc
 386              	.LFE10:
 387              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 388              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 389              		.align	2
 390              		.global	CySysClkEcoReadStatus
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysClkEcoReadStatus, %function
 394              	CySysClkEcoReadStatus:
 395              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 29


1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 396              		.loc 1 1204 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 401              		.loc 1 1208 0
 402 0000 024B     		ldr	r3, .L28
 403 0002 1B68     		ldr	r3, [r3]
 404 0004 0120     		movs	r0, #1
 405 0006 1840     		ands	r0, r3
 406              	.LVL21:
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1221 0
 408              		@ sp needed
 409 0008 7047     		bx	lr
 410              	.L29:
 411 000a C046     		.align	2
 412              	.L28:
 413 000c 0C002E40 		.word	1076756492
 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 417              		.section	.text.CySysLvdDisable,"ax",%progbits
 418              		.align	2
 419              		.global	CySysLvdDisable
 420              		.code	16
 421              		.thumb_func
 422              		.type	CySysLvdDisable, %function
 423              	CySysLvdDisable:
 424              	.LFB14:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 30


1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 31


1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 32


1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 33


1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 34


1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 35


1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 36


1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 37


1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 38


1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 39


1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 40


1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 41


1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 42


1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 43


1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 44


2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 45


2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 46


2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 425              		.loc 1 2149 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 430              		.loc 1 2150 0
 431 0000 054A     		ldr	r2, .L31
 432 0002 1368     		ldr	r3, [r2]
 433 0004 0221     		movs	r1, #2
 434 0006 8B43     		bics	r3, r1
 435 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 436              		.loc 1 2151 0
 437 000a 044A     		ldr	r2, .L31+4
 438 000c 1368     		ldr	r3, [r2]
 439 000e 0139     		subs	r1, r1, #1
 440 0010 8B43     		bics	r3, r1
 441 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 2152 0
 443              		@ sp needed
 444 0014 7047     		bx	lr
 445              	.L32:
 446 0016 C046     		.align	2
 447              	.L31:
 448 0018 08000B40 		.word	1074462728
 449 001c 18000B40 		.word	1074462744
 450              		.cfi_endproc
 451              	.LFE14:
 452              		.size	CySysLvdDisable, .-CySysLvdDisable
 453              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 454              		.align	2
 455              		.global	CySysLvdGetInterruptSource
 456              		.code	16
 457              		.thumb_func
 458              		.type	CySysLvdGetInterruptSource, %function
 459              	CySysLvdGetInterruptSource:
 460              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 47


2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 461              		.loc 1 2167 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 466              		.loc 1 2168 0
 467 0000 024B     		ldr	r3, .L34
 468 0002 1B68     		ldr	r3, [r3]
 469 0004 0220     		movs	r0, #2
 470 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 471              		.loc 1 2169 0
 472              		@ sp needed
 473 0008 7047     		bx	lr
 474              	.L35:
 475 000a C046     		.align	2
 476              	.L34:
 477 000c 04000B40 		.word	1074462724
 478              		.cfi_endproc
 479              	.LFE15:
 480              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 481              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 482              		.align	2
 483              		.global	CySysLvdClearInterrupt
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysLvdClearInterrupt, %function
 487              	CySysLvdClearInterrupt:
 488              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 489              		.loc 1 2183 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 48


 494              		.loc 1 2184 0
 495 0000 0222     		movs	r2, #2
 496 0002 014B     		ldr	r3, .L37
 497 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 498              		.loc 1 2185 0
 499              		@ sp needed
 500 0006 7047     		bx	lr
 501              	.L38:
 502              		.align	2
 503              	.L37:
 504 0008 04000B40 		.word	1074462724
 505              		.cfi_endproc
 506              	.LFE16:
 507              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 508              		.section	.text.CySysGetResetReason,"ax",%progbits
 509              		.align	2
 510              		.global	CySysGetResetReason
 511              		.code	16
 512              		.thumb_func
 513              		.type	CySysGetResetReason, %function
 514              	CySysGetResetReason:
 515              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 516              		.loc 1 2209 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521              	.LVL22:
 522 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 49


 523              		.loc 1 2212 0
 524 0002 1920     		movs	r0, #25
 525              	.LVL23:
 526 0004 0240     		ands	r2, r0
 527              	.LVL24:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 528              		.loc 1 2213 0
 529 0006 0249     		ldr	r1, .L40
 530 0008 0B68     		ldr	r3, [r1]
 531 000a 1840     		ands	r0, r3
 532              	.LVL25:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 533              		.loc 1 2215 0
 534 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 535              		.loc 1 2218 0
 536              		@ sp needed
 537 000e 7047     		bx	lr
 538              	.L41:
 539              		.align	2
 540              	.L40:
 541 0010 00030B40 		.word	1074463488
 542              		.cfi_endproc
 543              	.LFE17:
 544              		.size	CySysGetResetReason, .-CySysGetResetReason
 545              		.section	.text.CyDisableInts,"ax",%progbits
 546              		.align	2
 547              		.global	CyDisableInts
 548              		.code	16
 549              		.thumb_func
 550              		.type	CyDisableInts, %function
 551              	CyDisableInts:
 552              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 553              		.loc 1 2232 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 50


2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 558              		.loc 1 2236 0
 559 0000 024B     		ldr	r3, .L43
 560 0002 1868     		ldr	r0, [r3]
 561              	.LVL26:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 562              		.loc 1 2239 0
 563 0004 0122     		movs	r2, #1
 564 0006 5242     		rsbs	r2, r2, #0
 565 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 566              		.loc 1 2242 0
 567              		@ sp needed
 568 000a 7047     		bx	lr
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 000c 80E100E0 		.word	-536813184
 573              		.cfi_endproc
 574              	.LFE18:
 575              		.size	CyDisableInts, .-CyDisableInts
 576              		.section	.text.CyEnableInts,"ax",%progbits
 577              		.align	2
 578              		.global	CyEnableInts
 579              		.code	16
 580              		.thumb_func
 581              		.type	CyEnableInts, %function
 582              	CyEnableInts:
 583              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 584              		.loc 1 2255 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL27:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 590              		.loc 1 2256 0
 591 0000 014B     		ldr	r3, .L46
 592 0002 1860     		str	r0, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 51


2257:Generated_Source\PSoC4/CyLib.c **** }
 593              		.loc 1 2257 0
 594              		@ sp needed
 595 0004 7047     		bx	lr
 596              	.L47:
 597 0006 C046     		.align	2
 598              	.L46:
 599 0008 00E100E0 		.word	-536813312
 600              		.cfi_endproc
 601              	.LFE19:
 602              		.size	CyEnableInts, .-CyEnableInts
 603              		.section	.text.CyIntEnable,"ax",%progbits
 604              		.align	2
 605              		.global	CyIntEnable
 606              		.code	16
 607              		.thumb_func
 608              		.type	CyIntEnable, %function
 609              	CyIntEnable:
 610              	.LFB26:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 52


2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 53


2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 54


2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 611              		.loc 1 2438 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL28:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 617              		.loc 1 2439 0
 618 0000 1F23     		movs	r3, #31
 619 0002 1840     		ands	r0, r3
 620              	.LVL29:
 621 0004 1E3B     		subs	r3, r3, #30
 622 0006 8340     		lsls	r3, r3, r0
 623 0008 014A     		ldr	r2, .L49
 624 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 625              		.loc 1 2440 0
 626              		@ sp needed
 627 000c 7047     		bx	lr
 628              	.L50:
 629 000e C046     		.align	2
 630              	.L49:
 631 0010 00E100E0 		.word	-536813312
 632              		.cfi_endproc
 633              	.LFE26:
 634              		.size	CyIntEnable, .-CyIntEnable
 635              		.section	.text.CyIntGetState,"ax",%progbits
 636              		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 55


 637              		.global	CyIntGetState
 638              		.code	16
 639              		.thumb_func
 640              		.type	CyIntGetState, %function
 641              	CyIntGetState:
 642              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 643              		.loc 1 2456 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL30:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 649              		.loc 1 2458 0
 650 0000 044B     		ldr	r3, .L52
 651 0002 1B68     		ldr	r3, [r3]
 652 0004 1F22     		movs	r2, #31
 653 0006 1040     		ands	r0, r2
 654              	.LVL31:
 655 0008 C340     		lsrs	r3, r3, r0
 656 000a 1800     		movs	r0, r3
 657 000c 0123     		movs	r3, #1
 658 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 659              		.loc 1 2459 0
 660              		@ sp needed
 661 0010 7047     		bx	lr
 662              	.L53:
 663 0012 C046     		.align	2
 664              	.L52:
 665 0014 00E100E0 		.word	-536813312
 666              		.cfi_endproc
 667              	.LFE27:
 668              		.size	CyIntGetState, .-CyIntGetState
 669              		.section	.text.CyIntDisable,"ax",%progbits
 670              		.align	2
 671              		.global	CyIntDisable
 672              		.code	16
 673              		.thumb_func
 674              		.type	CyIntDisable, %function
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 56


 675              	CyIntDisable:
 676              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 677              		.loc 1 2472 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL32:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 683              		.loc 1 2473 0
 684 0000 1F23     		movs	r3, #31
 685 0002 1840     		ands	r0, r3
 686              	.LVL33:
 687 0004 1E3B     		subs	r3, r3, #30
 688 0006 8340     		lsls	r3, r3, r0
 689 0008 014A     		ldr	r2, .L55
 690 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
 691              		.loc 1 2474 0
 692              		@ sp needed
 693 000c 7047     		bx	lr
 694              	.L56:
 695 000e C046     		.align	2
 696              	.L55:
 697 0010 80E100E0 		.word	-536813184
 698              		.cfi_endproc
 699              	.LFE28:
 700              		.size	CyIntDisable, .-CyIntDisable
 701              		.section	.text.CyIntSetPending,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetPending
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetPending, %function
 707              	CyIntSetPending:
 708              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 57


2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 709              		.loc 1 2486 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL34:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 715              		.loc 1 2487 0
 716 0000 1F23     		movs	r3, #31
 717 0002 1840     		ands	r0, r3
 718              	.LVL35:
 719 0004 1E3B     		subs	r3, r3, #30
 720 0006 8340     		lsls	r3, r3, r0
 721 0008 014A     		ldr	r2, .L58
 722 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2488 0
 724              		@ sp needed
 725 000c 7047     		bx	lr
 726              	.L59:
 727 000e C046     		.align	2
 728              	.L58:
 729 0010 00E200E0 		.word	-536813056
 730              		.cfi_endproc
 731              	.LFE29:
 732              		.size	CyIntSetPending, .-CyIntSetPending
 733              		.section	.text.CyIntClearPending,"ax",%progbits
 734              		.align	2
 735              		.global	CyIntClearPending
 736              		.code	16
 737              		.thumb_func
 738              		.type	CyIntClearPending, %function
 739              	CyIntClearPending:
 740              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 741              		.loc 1 2501 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL36:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 58


2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 747              		.loc 1 2502 0
 748 0000 1F23     		movs	r3, #31
 749 0002 1840     		ands	r0, r3
 750              	.LVL37:
 751 0004 1E3B     		subs	r3, r3, #30
 752 0006 8340     		lsls	r3, r3, r0
 753 0008 014A     		ldr	r2, .L61
 754 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 2503 0
 756              		@ sp needed
 757 000c 7047     		bx	lr
 758              	.L62:
 759 000e C046     		.align	2
 760              	.L61:
 761 0010 80E200E0 		.word	-536812928
 762              		.cfi_endproc
 763              	.LFE30:
 764              		.size	CyIntClearPending, .-CyIntClearPending
 765              		.section	.text.CyHalt,"ax",%progbits
 766              		.align	2
 767              		.global	CyHalt
 768              		.code	16
 769              		.thumb_func
 770              		.type	CyHalt, %function
 771              	CyHalt:
 772              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 773              		.loc 1 2516 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL38:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 779              		.loc 1 2525 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 59


 780              		.syntax divided
 781              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 782 0000 01BE     		    bkpt    1
 783              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 784              		.loc 1 2529 0
 785              		.thumb
 786              		.syntax unified
 787              		@ sp needed
 788 0002 7047     		bx	lr
 789              		.cfi_endproc
 790              	.LFE31:
 791              		.size	CyHalt, .-CyHalt
 792              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 793              		.align	2
 794              		.global	CySysClkWriteEcoDiv
 795              		.code	16
 796              		.thumb_func
 797              		.type	CySysClkWriteEcoDiv, %function
 798              	CySysClkWriteEcoDiv:
 799              	.LFB12:
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 800              		.loc 1 1251 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL39:
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
1254:Generated_Source\PSoC4/CyLib.c ****             {
 810              		.loc 1 1254 0
 811 0004 0A4B     		ldr	r3, .L67
 812 0006 1B68     		ldr	r3, [r3]
 813 0008 0722     		movs	r2, #7
 814 000a 1340     		ands	r3, r2
 815 000c 022B     		cmp	r3, #2
 816 000e 0BD0     		beq	.L65
1256:Generated_Source\PSoC4/CyLib.c **** 
 817              		.loc 1 1256 0
 818 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 819              	.LVL40:
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 820              		.loc 1 1258 0
 821 0014 0321     		movs	r1, #3
 822 0016 0C40     		ands	r4, r1
 823              	.LVL41:
1259:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 1259 0
 825 0018 064A     		ldr	r2, .L67+4
 826 001a 1368     		ldr	r3, [r2]
 827 001c 8B43     		bics	r3, r1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 60


1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 828              		.loc 1 1258 0
 829 001e 2343     		orrs	r3, r4
 830 0020 1360     		str	r3, [r2]
1261:Generated_Source\PSoC4/CyLib.c ****             }
 831              		.loc 1 1261 0
 832 0022 FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL42:
 834 0026 02E0     		b	.L64
 835              	.LVL43:
 836              	.L65:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 837              		.loc 1 1266 0 discriminator 1
 838 0028 0020     		movs	r0, #0
 839              	.LVL44:
 840 002a FFF7FEFF 		bl	CyHalt
 841              	.LVL45:
 842              	.L64:
1268:Generated_Source\PSoC4/CyLib.c **** 
 843              		.loc 1 1268 0
 844              		@ sp needed
 845 002e 10BD     		pop	{r4, pc}
 846              	.L68:
 847              		.align	2
 848              	.L67:
 849 0030 00010B40 		.word	1074462976
 850 0034 64F02E40 		.word	1076818020
 851              		.cfi_endproc
 852              	.LFE12:
 853              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 854              		.section	.text.CyIntSetSysVector,"ax",%progbits
 855              		.align	2
 856              		.global	CyIntSetSysVector
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyIntSetSysVector, %function
 860              	CyIntSetSysVector:
 861              	.LFB20:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 862              		.loc 1 2280 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL46:
 867 0000 70B5     		push	{r4, r5, r6, lr}
 868              		.cfi_def_cfa_offset 16
 869              		.cfi_offset 4, -16
 870              		.cfi_offset 5, -12
 871              		.cfi_offset 6, -8
 872              		.cfi_offset 14, -4
 873 0002 0400     		movs	r4, r0
 874 0004 0D00     		movs	r5, r1
 875              	.LVL47:
2284:Generated_Source\PSoC4/CyLib.c **** 
 876              		.loc 1 2284 0
 877 0006 0F28     		cmp	r0, #15
 878 0008 02D9     		bls	.L70
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 61


2284:Generated_Source\PSoC4/CyLib.c **** 
 879              		.loc 1 2284 0 is_stmt 0 discriminator 1
 880 000a 0020     		movs	r0, #0
 881              	.LVL48:
 882 000c FFF7FEFF 		bl	CyHalt
 883              	.LVL49:
 884              	.L70:
2287:Generated_Source\PSoC4/CyLib.c **** 
 885              		.loc 1 2287 0 is_stmt 1
 886 0010 A400     		lsls	r4, r4, #2
 887 0012 8023     		movs	r3, #128
 888 0014 9B05     		lsls	r3, r3, #22
 889 0016 9C46     		mov	ip, r3
 890 0018 6444     		add	r4, r4, ip
 891 001a 2068     		ldr	r0, [r4]
 892              	.LVL50:
2290:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2290 0
 894 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2293 0
 896              		@ sp needed
 897              	.LVL51:
 898 001e 70BD     		pop	{r4, r5, r6, pc}
 899              		.cfi_endproc
 900              	.LFE20:
 901              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 902              		.section	.text.CyIntGetSysVector,"ax",%progbits
 903              		.align	2
 904              		.global	CyIntGetSysVector
 905              		.code	16
 906              		.thumb_func
 907              		.type	CyIntGetSysVector, %function
 908              	CyIntGetSysVector:
 909              	.LFB21:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 910              		.loc 1 2314 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL52:
 915 0000 10B5     		push	{r4, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 4, -8
 918              		.cfi_offset 14, -4
 919 0002 0400     		movs	r4, r0
 920              	.LVL53:
2317:Generated_Source\PSoC4/CyLib.c **** 
 921              		.loc 1 2317 0
 922 0004 0F28     		cmp	r0, #15
 923 0006 02D9     		bls	.L72
2317:Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2317 0 is_stmt 0 discriminator 1
 925 0008 0020     		movs	r0, #0
 926              	.LVL54:
 927 000a FFF7FEFF 		bl	CyHalt
 928              	.LVL55:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 62


 929              	.L72:
2319:Generated_Source\PSoC4/CyLib.c **** }
 930              		.loc 1 2319 0 is_stmt 1
 931 000e A400     		lsls	r4, r4, #2
 932 0010 8023     		movs	r3, #128
 933 0012 9B05     		lsls	r3, r3, #22
 934 0014 9C46     		mov	ip, r3
 935 0016 6444     		add	r4, r4, ip
 936 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2320 0
 938              		@ sp needed
 939 001a 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
 941              	.LFE21:
 942              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 943              		.section	.text.CyIntSetVector,"ax",%progbits
 944              		.align	2
 945              		.global	CyIntSetVector
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetVector, %function
 949              	CyIntSetVector:
 950              	.LFB22:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 951              		.loc 1 2336 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL56:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
 963 0004 0D00     		movs	r5, r1
 964              	.LVL57:
2340:Generated_Source\PSoC4/CyLib.c **** 
 965              		.loc 1 2340 0
 966 0006 1F28     		cmp	r0, #31
 967 0008 02D9     		bls	.L74
2340:Generated_Source\PSoC4/CyLib.c **** 
 968              		.loc 1 2340 0 is_stmt 0 discriminator 1
 969 000a 0020     		movs	r0, #0
 970              	.LVL58:
 971 000c FFF7FEFF 		bl	CyHalt
 972              	.LVL59:
 973              	.L74:
2343:Generated_Source\PSoC4/CyLib.c **** 
 974              		.loc 1 2343 0 is_stmt 1
 975 0010 1034     		adds	r4, r4, #16
 976 0012 A400     		lsls	r4, r4, #2
 977 0014 8023     		movs	r3, #128
 978 0016 9B05     		lsls	r3, r3, #22
 979 0018 9C46     		mov	ip, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 63


 980 001a 6444     		add	r4, r4, ip
 981 001c 2068     		ldr	r0, [r4]
 982              	.LVL60:
2346:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2346 0
 984 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2349 0
 986              		@ sp needed
 987              	.LVL61:
 988 0020 70BD     		pop	{r4, r5, r6, pc}
 989              		.cfi_endproc
 990              	.LFE22:
 991              		.size	CyIntSetVector, .-CyIntSetVector
 992 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 993              		.align	2
 994              		.global	CyIntGetVector
 995              		.code	16
 996              		.thumb_func
 997              		.type	CyIntGetVector, %function
 998              	CyIntGetVector:
 999              	.LFB23:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1000              		.loc 1 2364 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              	.LVL62:
 1005 0000 10B5     		push	{r4, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 4, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0400     		movs	r4, r0
 1010              	.LVL63:
2367:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2367 0
 1012 0004 1F28     		cmp	r0, #31
 1013 0006 02D9     		bls	.L76
2367:Generated_Source\PSoC4/CyLib.c **** 
 1014              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1015 0008 0020     		movs	r0, #0
 1016              	.LVL64:
 1017 000a FFF7FEFF 		bl	CyHalt
 1018              	.LVL65:
 1019              	.L76:
2369:Generated_Source\PSoC4/CyLib.c **** }
 1020              		.loc 1 2369 0 is_stmt 1
 1021 000e 1034     		adds	r4, r4, #16
 1022 0010 A400     		lsls	r4, r4, #2
 1023 0012 8023     		movs	r3, #128
 1024 0014 9B05     		lsls	r3, r3, #22
 1025 0016 9C46     		mov	ip, r3
 1026 0018 6444     		add	r4, r4, ip
 1027 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2370 0
 1029              		@ sp needed
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 64


 1030 001c 10BD     		pop	{r4, pc}
 1031              		.cfi_endproc
 1032              	.LFE23:
 1033              		.size	CyIntGetVector, .-CyIntGetVector
 1034 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1035              		.align	2
 1036              		.global	CyIntSetPriority
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CyIntSetPriority, %function
 1040              	CyIntSetPriority:
 1041              	.LFB24:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1042              		.loc 1 2383 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL66:
 1047 0000 70B5     		push	{r4, r5, r6, lr}
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 4, -16
 1050              		.cfi_offset 5, -12
 1051              		.cfi_offset 6, -8
 1052              		.cfi_offset 14, -4
 1053 0002 0400     		movs	r4, r0
 1054 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1055              		.loc 1 2388 0
 1056 0006 0329     		cmp	r1, #3
 1057 0008 02D9     		bls	.L78
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1058              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1059 000a 0020     		movs	r0, #0
 1060              	.LVL67:
 1061 000c FFF7FEFF 		bl	CyHalt
 1062              	.LVL68:
 1063              	.L78:
2389:Generated_Source\PSoC4/CyLib.c **** 
 1064              		.loc 1 2389 0 is_stmt 1
 1065 0010 1F2C     		cmp	r4, #31
 1066 0012 02D9     		bls	.L79
2389:Generated_Source\PSoC4/CyLib.c **** 
 1067              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1068 0014 0020     		movs	r0, #0
 1069 0016 FFF7FEFF 		bl	CyHalt
 1070              	.LVL69:
 1071              	.L79:
2391:Generated_Source\PSoC4/CyLib.c **** 
 1072              		.loc 1 2391 0 is_stmt 1
 1073 001a 0325     		movs	r5, #3
 1074 001c 2540     		ands	r5, r4
 1075 001e ED00     		lsls	r5, r5, #3
 1076 0020 0635     		adds	r5, r5, #6
 1077              	.LVL70:
2393:Generated_Source\PSoC4/CyLib.c **** 
 1078              		.loc 1 2393 0
 1079 0022 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 65


 1080              	.LVL71:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1081              		.loc 1 2395 0
 1082 0026 A408     		lsrs	r4, r4, #2
 1083 0028 A400     		lsls	r4, r4, #2
 1084 002a 074B     		ldr	r3, .L80
 1085 002c 9C46     		mov	ip, r3
 1086 002e 6444     		add	r4, r4, ip
 1087 0030 2168     		ldr	r1, [r4]
 1088              	.LVL72:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1089              		.loc 1 2396 0
 1090 0032 0323     		movs	r3, #3
 1091 0034 AB40     		lsls	r3, r3, r5
 1092 0036 9943     		bics	r1, r3
 1093              	.LVL73:
 1094 0038 0B00     		movs	r3, r1
 1095              	.LVL74:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1096              		.loc 1 2397 0
 1097 003a 3100     		movs	r1, r6
 1098              	.LVL75:
 1099 003c A940     		lsls	r1, r1, r5
 1100 003e 1943     		orrs	r1, r3
 1101              	.LVL76:
2398:Generated_Source\PSoC4/CyLib.c **** 
 1102              		.loc 1 2398 0
 1103 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 1104              		.loc 1 2400 0
 1105 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1106              	.LVL77:
2401:Generated_Source\PSoC4/CyLib.c **** 
 1107              		.loc 1 2401 0
 1108              		@ sp needed
 1109              	.LVL78:
 1110 0046 70BD     		pop	{r4, r5, r6, pc}
 1111              	.L81:
 1112              		.align	2
 1113              	.L80:
 1114 0048 00E400E0 		.word	-536812544
 1115              		.cfi_endproc
 1116              	.LFE24:
 1117              		.size	CyIntSetPriority, .-CyIntSetPriority
 1118              		.section	.text.CyIntGetPriority,"ax",%progbits
 1119              		.align	2
 1120              		.global	CyIntGetPriority
 1121              		.code	16
 1122              		.thumb_func
 1123              		.type	CyIntGetPriority, %function
 1124              	CyIntGetPriority:
 1125              	.LFB25:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1126              		.loc 1 2417 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 66


 1130              	.LVL79:
 1131 0000 10B5     		push	{r4, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
 1135 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 1136              		.loc 1 2420 0
 1137 0004 1F28     		cmp	r0, #31
 1138 0006 02D9     		bls	.L83
2420:Generated_Source\PSoC4/CyLib.c **** 
 1139              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1140 0008 0020     		movs	r0, #0
 1141              	.LVL80:
 1142 000a FFF7FEFF 		bl	CyHalt
 1143              	.LVL81:
 1144              	.L83:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1145              		.loc 1 2422 0 is_stmt 1
 1146 000e A308     		lsrs	r3, r4, #2
 1147 0010 9B00     		lsls	r3, r3, #2
 1148 0012 054A     		ldr	r2, .L84
 1149 0014 9446     		mov	ip, r2
 1150 0016 6344     		add	r3, r3, ip
 1151 0018 1868     		ldr	r0, [r3]
 1152 001a 0323     		movs	r3, #3
 1153 001c 1C40     		ands	r4, r3
 1154 001e E400     		lsls	r4, r4, #3
 1155 0020 0634     		adds	r4, r4, #6
 1156 0022 E040     		lsrs	r0, r0, r4
 1157              	.LVL82:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1158              		.loc 1 2424 0
 1159 0024 1840     		ands	r0, r3
 1160              	.LVL83:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 2425 0
 1162              		@ sp needed
 1163 0026 10BD     		pop	{r4, pc}
 1164              	.L85:
 1165              		.align	2
 1166              	.L84:
 1167 0028 00E400E0 		.word	-536812544
 1168              		.cfi_endproc
 1169              	.LFE25:
 1170              		.size	CyIntGetPriority, .-CyIntGetPriority
 1171              		.section	.text.CySoftwareReset,"ax",%progbits
 1172              		.align	2
 1173              		.global	CySoftwareReset
 1174              		.code	16
 1175              		.thumb_func
 1176              		.type	CySoftwareReset, %function
 1177              	CySoftwareReset:
 1178              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 67


2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1179              		.loc 1 2540 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1184              		.loc 1 2545 0
 1185 0000 034A     		ldr	r2, .L87
 1186 0002 1368     		ldr	r3, [r2]
 1187 0004 1B04     		lsls	r3, r3, #16
 1188 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1189              		.loc 1 2546 0
 1190 0008 0249     		ldr	r1, .L87+4
 1191 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1192              		.loc 1 2545 0
 1193 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1194              		.loc 1 2547 0
 1195              		@ sp needed
 1196 000e 7047     		bx	lr
 1197              	.L88:
 1198              		.align	2
 1199              	.L87:
 1200 0010 0CED00E0 		.word	-536810228
 1201 0014 0400FA05 		.word	100270084
 1202              		.cfi_endproc
 1203              	.LFE32:
 1204              		.size	CySoftwareReset, .-CySoftwareReset
 1205              		.section	.text.CyDelay,"ax",%progbits
 1206              		.align	2
 1207              		.global	CyDelay
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	CyDelay, %function
 1211              	CyDelay:
 1212              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 68


2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1213              		.loc 1 2560 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              	.LVL84:
 1218 0000 10B5     		push	{r4, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 1222 0002 0400     		movs	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1223              		.loc 1 2561 0
 1224 0004 06E0     		b	.L90
 1225              	.LVL85:
 1226              	.L91:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1227              		.loc 1 2566 0
 1228 0006 084B     		ldr	r3, .L92
 1229 0008 5868     		ldr	r0, [r3, #4]
 1230 000a FFF7FEFF 		bl	CyDelayCycles
 1231              	.LVL86:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1232              		.loc 1 2567 0
 1233 000e 074B     		ldr	r3, .L92+4
 1234 0010 9C46     		mov	ip, r3
 1235 0012 6444     		add	r4, r4, ip
 1236              	.LVL87:
 1237              	.L90:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1238              		.loc 1 2561 0
 1239 0014 8023     		movs	r3, #128
 1240 0016 1B02     		lsls	r3, r3, #8
 1241 0018 9C42     		cmp	r4, r3
 1242 001a F4D8     		bhi	.L91
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1243              		.loc 1 2570 0
 1244 001c 024B     		ldr	r3, .L92
 1245 001e 9868     		ldr	r0, [r3, #8]
 1246 0020 6043     		muls	r0, r4
 1247 0022 FFF7FEFF 		bl	CyDelayCycles
 1248              	.LVL88:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1249              		.loc 1 2571 0
 1250              		@ sp needed
 1251              	.LVL89:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 69


 1252 0026 10BD     		pop	{r4, pc}
 1253              	.L93:
 1254              		.align	2
 1255              	.L92:
 1256 0028 00000000 		.word	.LANCHOR0
 1257 002c 0080FFFF 		.word	-32768
 1258              		.cfi_endproc
 1259              	.LFE33:
 1260              		.size	CyDelay, .-CyDelay
 1261              		.section	.text.CyDelayUs,"ax",%progbits
 1262              		.align	2
 1263              		.global	CyDelayUs
 1264              		.code	16
 1265              		.thumb_func
 1266              		.type	CyDelayUs, %function
 1267              	CyDelayUs:
 1268              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1269              		.loc 1 2583 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              	.LVL90:
 1274 0000 10B5     		push	{r4, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 4, -8
 1277              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1278              		.loc 1 2584 0
 1279 0002 034B     		ldr	r3, .L95
 1280 0004 1B7B     		ldrb	r3, [r3, #12]
 1281 0006 5843     		muls	r0, r3
 1282              	.LVL91:
 1283 0008 FFF7FEFF 		bl	CyDelayCycles
 1284              	.LVL92:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1285              		.loc 1 2585 0
 1286              		@ sp needed
 1287 000c 10BD     		pop	{r4, pc}
 1288              	.L96:
 1289 000e C046     		.align	2
 1290              	.L95:
 1291 0010 00000000 		.word	.LANCHOR0
 1292              		.cfi_endproc
 1293              	.LFE34:
 1294              		.size	CyDelayUs, .-CyDelayUs
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 70


 1295              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1296              		.align	2
 1297              		.global	CySysClkEcoStart
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	CySysClkEcoStart, %function
 1301              	CySysClkEcoStart:
 1302              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1303              		.loc 1 1028 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL93:
 1308 0000 10B5     		push	{r4, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 1312 0002 0400     		movs	r4, r0
 1313              	.LVL94:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 1033 0
 1315 0004 0F4A     		ldr	r2, .L102
 1316 0006 1168     		ldr	r1, [r2]
 1317 0008 0123     		movs	r3, #1
 1318 000a 0B43     		orrs	r3, r1
 1319 000c 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1320              		.loc 1 1036 0
 1321 000e 0E4A     		ldr	r2, .L102+4
 1322 0010 0E4B     		ldr	r3, .L102+8
 1323 0012 1A60     		str	r2, [r3]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1324              		.loc 1 1039 0
 1325 0014 0E4A     		ldr	r2, .L102+12
 1326 0016 1368     		ldr	r3, [r2]
 1327 0018 8021     		movs	r1, #128
 1328 001a 0902     		lsls	r1, r1, #8
 1329 001c 0B43     		orrs	r3, r1
 1330 001e 1360     		str	r3, [r2]
1137:Generated_Source\PSoC4/CyLib.c ****         {
 1331              		.loc 1 1137 0
 1332 0020 0028     		cmp	r0, #0
 1333 0022 09D1     		bne	.L98
1029:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 1029 0
 1335 0024 0020     		movs	r0, #0
 1336              	.LVL95:
 1337 0026 0CE0     		b	.L99
 1338              	.L100:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 1143 0
 1340 0028 0120     		movs	r0, #1
 1341 002a FFF7FEFF 		bl	CyDelayUs
 1342              	.LVL96:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1343              		.loc 1 1145 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 71


 1344 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1345              	.LVL97:
 1346 0032 0028     		cmp	r0, #0
 1347 0034 04D1     		bne	.L101
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1348              		.loc 1 1141 0
 1349 0036 013C     		subs	r4, r4, #1
 1350              	.LVL98:
 1351              	.L98:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1352              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1353 0038 002C     		cmp	r4, #0
 1354 003a F5D1     		bne	.L100
1139:Generated_Source\PSoC4/CyLib.c **** 
 1355              		.loc 1 1139 0 is_stmt 1
 1356 003c 1020     		movs	r0, #16
 1357 003e 00E0     		b	.L99
 1358              	.L101:
1147:Generated_Source\PSoC4/CyLib.c ****                     break;
 1359              		.loc 1 1147 0
 1360 0040 0020     		movs	r0, #0
 1361              	.L99:
 1362              	.LVL99:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 1155 0
 1364              		@ sp needed
 1365              	.LVL100:
 1366 0042 10BD     		pop	{r4, pc}
 1367              	.L103:
 1368              		.align	2
 1369              	.L102:
 1370 0044 60F02E40 		.word	1076818016
 1371 0048 02200000 		.word	8194
 1372 004c 78002E40 		.word	1076756600
 1373 0050 10002E40 		.word	1076756496
 1374              		.cfi_endproc
 1375              	.LFE9:
 1376              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1377              		.section	.text.CySysLvdEnable,"ax",%progbits
 1378              		.align	2
 1379              		.global	CySysLvdEnable
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CySysLvdEnable, %function
 1383              	CySysLvdEnable:
 1384              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1385              		.loc 1 2119 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL101:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 72


 1395              		.cfi_offset 14, -4
 1396 0002 0300     		movs	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1397              		.loc 1 2121 0
 1398 0004 0D4C     		ldr	r4, .L105
 1399 0006 2268     		ldr	r2, [r4]
 1400 0008 0225     		movs	r5, #2
 1401 000a AA43     		bics	r2, r5
 1402 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1403              		.loc 1 2124 0
 1404 000e 0C4A     		ldr	r2, .L105+4
 1405 0010 1168     		ldr	r1, [r2]
 1406 0012 1E20     		movs	r0, #30
 1407              	.LVL102:
 1408 0014 8143     		bics	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1409              		.loc 1 2125 0
 1410 0016 5B00     		lsls	r3, r3, #1
 1411              	.LVL103:
 1412 0018 1840     		ands	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1413              		.loc 1 2124 0
 1414 001a 0843     		orrs	r0, r1
 1415 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1416              		.loc 1 2128 0
 1417 001e 1168     		ldr	r1, [r2]
 1418 0020 0123     		movs	r3, #1
 1419 0022 0B43     		orrs	r3, r1
 1420 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1421              		.loc 1 2131 0
 1422 0026 FA20     		movs	r0, #250
 1423 0028 8000     		lsls	r0, r0, #2
 1424 002a FFF7FEFF 		bl	CyDelayUs
 1425              	.LVL104:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1426              		.loc 1 2134 0
 1427 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1428              	.LVL105:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1429              		.loc 1 2137 0
 1430 0032 2368     		ldr	r3, [r4]
 1431 0034 1D43     		orrs	r5, r3
 1432 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1433              		.loc 1 2138 0
 1434              		@ sp needed
 1435 0038 70BD     		pop	{r4, r5, r6, pc}
 1436              	.L106:
 1437 003a C046     		.align	2
 1438              	.L105:
 1439 003c 08000B40 		.word	1074462728
 1440 0040 18000B40 		.word	1074462744
 1441              		.cfi_endproc
 1442              	.LFE13:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 73


 1443              		.size	CySysLvdEnable, .-CySysLvdEnable
 1444              		.global	__aeabi_uidiv
 1445              		.section	.text.CyDelayFreq,"ax",%progbits
 1446              		.align	2
 1447              		.global	CyDelayFreq
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CyDelayFreq, %function
 1451              	CyDelayFreq:
 1452              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1453              		.loc 1 2597 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              	.LVL106:
 1458 0000 70B5     		push	{r4, r5, r6, lr}
 1459              		.cfi_def_cfa_offset 16
 1460              		.cfi_offset 4, -16
 1461              		.cfi_offset 5, -12
 1462              		.cfi_offset 6, -8
 1463              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1464              		.loc 1 2598 0
 1465 0002 0028     		cmp	r0, #0
 1466 0004 02D0     		beq	.L108
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1467              		.loc 1 2600 0
 1468 0006 0C4B     		ldr	r3, .L110
 1469 0008 1861     		str	r0, [r3, #16]
 1470 000a 02E0     		b	.L109
 1471              	.L108:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1472              		.loc 1 2604 0
 1473 000c 0B4A     		ldr	r2, .L110+4
 1474 000e 0A4B     		ldr	r3, .L110
 1475 0010 1A61     		str	r2, [r3, #16]
 1476              	.L109:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1477              		.loc 1 2607 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 74


 1478 0012 094C     		ldr	r4, .L110
 1479 0014 2569     		ldr	r5, [r4, #16]
 1480 0016 0A4B     		ldr	r3, .L110+8
 1481 0018 E818     		adds	r0, r5, r3
 1482              	.LVL107:
 1483 001a 0A49     		ldr	r1, .L110+12
 1484 001c FFF7FEFF 		bl	__aeabi_uidiv
 1485              	.LVL108:
 1486 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1487              		.loc 1 2608 0
 1488 0022 094B     		ldr	r3, .L110+16
 1489 0024 E818     		adds	r0, r5, r3
 1490 0026 FA21     		movs	r1, #250
 1491 0028 8900     		lsls	r1, r1, #2
 1492 002a FFF7FEFF 		bl	__aeabi_uidiv
 1493              	.LVL109:
 1494 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1495              		.loc 1 2609 0
 1496 0030 C003     		lsls	r0, r0, #15
 1497 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2610 0
 1499              		@ sp needed
 1500 0034 70BD     		pop	{r4, r5, r6, pc}
 1501              	.L111:
 1502 0036 C046     		.align	2
 1503              	.L110:
 1504 0038 00000000 		.word	.LANCHOR0
 1505 003c 00366E01 		.word	24000000
 1506 0040 3F420F00 		.word	999999
 1507 0044 40420F00 		.word	1000000
 1508 0048 E7030000 		.word	999
 1509              		.cfi_endproc
 1510              	.LFE35:
 1511              		.size	CyDelayFreq, .-CyDelayFreq
 1512              		.section	.text.CySysTickStop,"ax",%progbits
 1513              		.align	2
 1514              		.global	CySysTickStop
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CySysTickStop, %function
 1518              	CySysTickStop:
 1519              	.LFB39:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 75


2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 76


2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1520              		.loc 1 2706 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1525              		.loc 1 2707 0
 1526 0000 024A     		ldr	r2, .L113
 1527 0002 1368     		ldr	r3, [r2]
 1528 0004 0121     		movs	r1, #1
 1529 0006 8B43     		bics	r3, r1
 1530 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 2708 0
 1532              		@ sp needed
 1533 000a 7047     		bx	lr
 1534              	.L114:
 1535              		.align	2
 1536              	.L113:
 1537 000c 10E000E0 		.word	-536813552
 1538              		.cfi_endproc
 1539              	.LFE39:
 1540              		.size	CySysTickStop, .-CySysTickStop
 1541              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1542              		.align	2
 1543              		.global	CySysTickEnableInterrupt
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CySysTickEnableInterrupt, %function
 1547              	CySysTickEnableInterrupt:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 77


 1548              	.LFB40:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 2722 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1554              		.loc 1 2723 0
 1555 0000 024A     		ldr	r2, .L116
 1556 0002 1168     		ldr	r1, [r2]
 1557 0004 0223     		movs	r3, #2
 1558 0006 0B43     		orrs	r3, r1
 1559 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 2724 0
 1561              		@ sp needed
 1562 000a 7047     		bx	lr
 1563              	.L117:
 1564              		.align	2
 1565              	.L116:
 1566 000c 10E000E0 		.word	-536813552
 1567              		.cfi_endproc
 1568              	.LFE40:
 1569              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1570              		.section	.text.CySysTickEnable,"ax",%progbits
 1571              		.align	2
 1572              		.global	CySysTickEnable
 1573              		.code	16
 1574              		.thumb_func
 1575              		.type	CySysTickEnable, %function
 1576              	CySysTickEnable:
 1577              	.LFB38:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1578              		.loc 1 2689 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582 0000 10B5     		push	{r4, lr}
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 4, -8
 1585              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1586              		.loc 1 2690 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 78


 1587 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1588              	.LVL110:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1589              		.loc 1 2691 0
 1590 0006 034A     		ldr	r2, .L119
 1591 0008 1168     		ldr	r1, [r2]
 1592 000a 0123     		movs	r3, #1
 1593 000c 0B43     		orrs	r3, r1
 1594 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1595              		.loc 1 2692 0
 1596              		@ sp needed
 1597 0010 10BD     		pop	{r4, pc}
 1598              	.L120:
 1599 0012 C046     		.align	2
 1600              	.L119:
 1601 0014 10E000E0 		.word	-536813552
 1602              		.cfi_endproc
 1603              	.LFE38:
 1604              		.size	CySysTickEnable, .-CySysTickEnable
 1605              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1606              		.align	2
 1607              		.global	CySysTickDisableInterrupt
 1608              		.code	16
 1609              		.thumb_func
 1610              		.type	CySysTickDisableInterrupt, %function
 1611              	CySysTickDisableInterrupt:
 1612              	.LFB41:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 1613              		.loc 1 2738 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1618              		.loc 1 2739 0
 1619 0000 024A     		ldr	r2, .L122
 1620 0002 1368     		ldr	r3, [r2]
 1621 0004 0221     		movs	r1, #2
 1622 0006 8B43     		bics	r3, r1
 1623 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1624              		.loc 1 2740 0
 1625              		@ sp needed
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 79


 1626 000a 7047     		bx	lr
 1627              	.L123:
 1628              		.align	2
 1629              	.L122:
 1630 000c 10E000E0 		.word	-536813552
 1631              		.cfi_endproc
 1632              	.LFE41:
 1633              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1634              		.section	.text.CySysTickSetReload,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySysTickSetReload
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySysTickSetReload, %function
 1640              	CySysTickSetReload:
 1641              	.LFB42:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1642              		.loc 1 2755 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647              	.LVL111:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1648              		.loc 1 2756 0
 1649 0000 0002     		lsls	r0, r0, #8
 1650              	.LVL112:
 1651 0002 000A     		lsrs	r0, r0, #8
 1652 0004 014B     		ldr	r3, .L125
 1653 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1654              		.loc 1 2757 0
 1655              		@ sp needed
 1656 0008 7047     		bx	lr
 1657              	.L126:
 1658 000a C046     		.align	2
 1659              	.L125:
 1660 000c 14E000E0 		.word	-536813548
 1661              		.cfi_endproc
 1662              	.LFE42:
 1663              		.size	CySysTickSetReload, .-CySysTickSetReload
 1664              		.section	.text.CySysTickGetReload,"ax",%progbits
 1665              		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 80


 1666              		.global	CySysTickGetReload
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CySysTickGetReload, %function
 1670              	CySysTickGetReload:
 1671              	.LFB43:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 2771 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1677              		.loc 1 2772 0
 1678 0000 024B     		ldr	r3, .L128
 1679 0002 1868     		ldr	r0, [r3]
 1680 0004 0002     		lsls	r0, r0, #8
 1681 0006 000A     		lsrs	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1682              		.loc 1 2773 0
 1683              		@ sp needed
 1684 0008 7047     		bx	lr
 1685              	.L129:
 1686 000a C046     		.align	2
 1687              	.L128:
 1688 000c 14E000E0 		.word	-536813548
 1689              		.cfi_endproc
 1690              	.LFE43:
 1691              		.size	CySysTickGetReload, .-CySysTickGetReload
 1692              		.section	.text.CySysTickGetValue,"ax",%progbits
 1693              		.align	2
 1694              		.global	CySysTickGetValue
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	CySysTickGetValue, %function
 1698              	CySysTickGetValue:
 1699              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 81


2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1700              		.loc 1 2787 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1705              		.loc 1 2788 0
 1706 0000 024B     		ldr	r3, .L131
 1707 0002 1868     		ldr	r0, [r3]
 1708 0004 0002     		lsls	r0, r0, #8
 1709 0006 000A     		lsrs	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2789 0
 1711              		@ sp needed
 1712 0008 7047     		bx	lr
 1713              	.L132:
 1714 000a C046     		.align	2
 1715              	.L131:
 1716 000c 18E000E0 		.word	-536813544
 1717              		.cfi_endproc
 1718              	.LFE44:
 1719              		.size	CySysTickGetValue, .-CySysTickGetValue
 1720              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1721              		.align	2
 1722              		.global	CySysTickSetClockSource
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickSetClockSource, %function
 1726              	CySysTickSetClockSource:
 1727              	.LFB45:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 82


2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 1728              		.loc 1 2819 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733              	.LVL113:
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1734              		.loc 1 2820 0
 1735 0000 0128     		cmp	r0, #1
 1736 0002 05D1     		bne	.L134
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1737              		.loc 1 2822 0
 1738 0004 054A     		ldr	r2, .L136
 1739 0006 1168     		ldr	r1, [r2]
 1740 0008 0423     		movs	r3, #4
 1741 000a 0B43     		orrs	r3, r1
 1742 000c 1360     		str	r3, [r2]
 1743 000e 04E0     		b	.L133
 1744              	.L134:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1745              		.loc 1 2826 0
 1746 0010 024A     		ldr	r2, .L136
 1747 0012 1368     		ldr	r3, [r2]
 1748 0014 0421     		movs	r1, #4
 1749 0016 8B43     		bics	r3, r1
 1750 0018 1360     		str	r3, [r2]
 1751              	.L133:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 1752              		.loc 1 2828 0
 1753              		@ sp needed
 1754 001a 7047     		bx	lr
 1755              	.L137:
 1756              		.align	2
 1757              	.L136:
 1758 001c 10E000E0 		.word	-536813552
 1759              		.cfi_endproc
 1760              	.LFE45:
 1761              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1762              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickGetClockSource
 1765              		.code	16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 83


 1766              		.thumb_func
 1767              		.type	CySysTickGetClockSource, %function
 1768              	CySysTickGetClockSource:
 1769              	.LFB46:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 2844 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1775              		.loc 1 2845 0
 1776 0000 024B     		ldr	r3, .L139
 1777 0002 1868     		ldr	r0, [r3]
 1778 0004 8008     		lsrs	r0, r0, #2
 1779 0006 0123     		movs	r3, #1
 1780 0008 1840     		ands	r0, r3
2846:Generated_Source\PSoC4/CyLib.c ****     }
 1781              		.loc 1 2846 0
 1782              		@ sp needed
 1783 000a 7047     		bx	lr
 1784              	.L140:
 1785              		.align	2
 1786              	.L139:
 1787 000c 10E000E0 		.word	-536813552
 1788              		.cfi_endproc
 1789              	.LFE46:
 1790              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1791              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1792              		.align	2
 1793              		.global	CySysTickGetCountFlag
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CySysTickGetCountFlag, %function
 1797              	CySysTickGetCountFlag:
 1798              	.LFB47:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 84


2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 2867 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1804              		.loc 1 2868 0
 1805 0000 024B     		ldr	r3, .L142
 1806 0002 1868     		ldr	r0, [r3]
 1807 0004 000C     		lsrs	r0, r0, #16
 1808 0006 0123     		movs	r3, #1
 1809 0008 1840     		ands	r0, r3
2869:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 2869 0
 1811              		@ sp needed
 1812 000a 7047     		bx	lr
 1813              	.L143:
 1814              		.align	2
 1815              	.L142:
 1816 000c 10E000E0 		.word	-536813552
 1817              		.cfi_endproc
 1818              	.LFE47:
 1819              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1820              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1821              		.align	2
 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	CySysTickServiceCallbacks, %function
 1825              	CySysTickServiceCallbacks:
 1826              	.LFB51:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 85


2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 86


2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1827              		.loc 1 2952 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831 0000 10B5     		push	{r4, lr}
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1835              		.loc 1 2956 0
 1836 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1837              	.LVL114:
 1838 0006 0128     		cmp	r0, #1
 1839 0008 0BD1     		bne	.L144
 1840 000a 07E0     		b	.L149
 1841              	.LVL115:
 1842              	.L148:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1843              		.loc 1 2960 0
 1844 000c A300     		lsls	r3, r4, #2
 1845 000e 054A     		ldr	r2, .L150
 1846 0010 9B58     		ldr	r3, [r3, r2]
 1847 0012 002B     		cmp	r3, #0
 1848 0014 00D0     		beq	.L147
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1849              		.loc 1 2962 0
 1850 0016 9847     		blx	r3
 1851              	.LVL116:
 1852              	.L147:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1853              		.loc 1 2958 0 discriminator 2
 1854 0018 0134     		adds	r4, r4, #1
 1855              	.LVL117:
 1856 001a 00E0     		b	.L145
 1857              	.LVL118:
 1858              	.L149:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 87


 1859 001c 0024     		movs	r4, #0
 1860              	.L145:
 1861              	.LVL119:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1862              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1863 001e 042C     		cmp	r4, #4
 1864 0020 F4D9     		bls	.L148
 1865              	.LVL120:
 1866              	.L144:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 2966 0 is_stmt 1
 1868              		@ sp needed
 1869 0022 10BD     		pop	{r4, pc}
 1870              	.L151:
 1871              		.align	2
 1872              	.L150:
 1873 0024 00000000 		.word	.LANCHOR2
 1874              		.cfi_endproc
 1875              	.LFE51:
 1876              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1877              		.section	.text.CySysTickClear,"ax",%progbits
 1878              		.align	2
 1879              		.global	CySysTickClear
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CySysTickClear, %function
 1883              	CySysTickClear:
 1884              	.LFB48:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1885              		.loc 1 2880 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
2881:Generated_Source\PSoC4/CyLib.c **** }
 1890              		.loc 1 2881 0
 1891 0000 0022     		movs	r2, #0
 1892 0002 014B     		ldr	r3, .L153
 1893 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1894              		.loc 1 2882 0
 1895              		@ sp needed
 1896 0006 7047     		bx	lr
 1897              	.L154:
 1898              		.align	2
 1899              	.L153:
 1900 0008 18E000E0 		.word	-536813544
 1901              		.cfi_endproc
 1902              	.LFE48:
 1903              		.size	CySysTickClear, .-CySysTickClear
 1904              		.section	.text.CySysTickInit,"ax",%progbits
 1905              		.align	2
 1906              		.global	CySysTickInit
 1907              		.code	16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 88


 1908              		.thumb_func
 1909              		.type	CySysTickInit, %function
 1910              	CySysTickInit:
 1911              	.LFB37:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1912              		.loc 1 2658 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916 0000 10B5     		push	{r4, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 4, -8
 1919              		.cfi_offset 14, -4
 1920              	.LVL121:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1921              		.loc 1 2661 0
 1922 0002 0023     		movs	r3, #0
 1923 0004 04E0     		b	.L156
 1924              	.LVL122:
 1925              	.L157:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1926              		.loc 1 2663 0 discriminator 3
 1927 0006 9900     		lsls	r1, r3, #2
 1928 0008 0020     		movs	r0, #0
 1929 000a 0D4A     		ldr	r2, .L158
 1930 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1931              		.loc 1 2661 0 discriminator 3
 1932 000e 0133     		adds	r3, r3, #1
 1933              	.LVL123:
 1934              	.L156:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1935              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1936 0010 042B     		cmp	r3, #4
 1937 0012 F8D9     		bls	.L157
2666:Generated_Source\PSoC4/CyLib.c **** 
 1938              		.loc 1 2666 0 is_stmt 1
 1939 0014 0B49     		ldr	r1, .L158+4
 1940 0016 0F20     		movs	r0, #15
 1941 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1942              	.LVL124:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1943              		.loc 1 2669 0
 1944 001c 0120     		movs	r0, #1
 1945 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1946              	.LVL125:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1947              		.loc 1 2672 0
 1948 0022 094B     		ldr	r3, .L158+8
 1949 0024 1869     		ldr	r0, [r3, #16]
 1950 0026 FA21     		movs	r1, #250
 1951 0028 8900     		lsls	r1, r1, #2
 1952 002a FFF7FEFF 		bl	__aeabi_uidiv
 1953              	.LVL126:
 1954 002e FFF7FEFF 		bl	CySysTickSetReload
 1955              	.LVL127:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 89


 1956              		.loc 1 2673 0
 1957 0032 FFF7FEFF 		bl	CySysTickClear
 1958              	.LVL128:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1959              		.loc 1 2674 0
 1960 0036 0F20     		movs	r0, #15
 1961 0038 FFF7FEFF 		bl	CyIntEnable
 1962              	.LVL129:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1963              		.loc 1 2675 0
 1964              		@ sp needed
 1965 003c 10BD     		pop	{r4, pc}
 1966              	.L159:
 1967 003e C046     		.align	2
 1968              	.L158:
 1969 0040 00000000 		.word	.LANCHOR2
 1970 0044 00000000 		.word	CySysTickServiceCallbacks
 1971 0048 00000000 		.word	.LANCHOR0
 1972              		.cfi_endproc
 1973              	.LFE37:
 1974              		.size	CySysTickInit, .-CySysTickInit
 1975              		.section	.text.CySysTickStart,"ax",%progbits
 1976              		.align	2
 1977              		.global	CySysTickStart
 1978              		.code	16
 1979              		.thumb_func
 1980              		.type	CySysTickStart, %function
 1981              	CySysTickStart:
 1982              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1983              		.loc 1 2629 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
 1987 0000 10B5     		push	{r4, lr}
 1988              		.cfi_def_cfa_offset 8
 1989              		.cfi_offset 4, -8
 1990              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1991              		.loc 1 2630 0
 1992 0002 064B     		ldr	r3, .L162
 1993 0004 5B69     		ldr	r3, [r3, #20]
 1994 0006 002B     		cmp	r3, #0
 1995 0008 04D1     		bne	.L161
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1996              		.loc 1 2632 0
 1997 000a FFF7FEFF 		bl	CySysTickInit
 1998              	.LVL130:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1999              		.loc 1 2633 0
 2000 000e 0122     		movs	r2, #1
 2001 0010 024B     		ldr	r3, .L162
 2002 0012 5A61     		str	r2, [r3, #20]
 2003              	.L161:
2636:Generated_Source\PSoC4/CyLib.c **** }
 2004              		.loc 1 2636 0
 2005 0014 FFF7FEFF 		bl	CySysTickEnable
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 90


 2006              	.LVL131:
2637:Generated_Source\PSoC4/CyLib.c **** 
 2007              		.loc 1 2637 0
 2008              		@ sp needed
 2009 0018 10BD     		pop	{r4, pc}
 2010              	.L163:
 2011 001a C046     		.align	2
 2012              	.L162:
 2013 001c 00000000 		.word	.LANCHOR2
 2014              		.cfi_endproc
 2015              	.LFE36:
 2016              		.size	CySysTickStart, .-CySysTickStart
 2017              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2018              		.align	2
 2019              		.global	CySysTickSetCallback
 2020              		.code	16
 2021              		.thumb_func
 2022              		.type	CySysTickSetCallback, %function
 2023              	CySysTickSetCallback:
 2024              	.LFB49:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2025              		.loc 1 2915 0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              		@ link register save eliminated.
 2030              	.LVL132:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2031              		.loc 1 2918 0
 2032 0000 024A     		ldr	r2, .L165
 2033 0002 8300     		lsls	r3, r0, #2
 2034 0004 9858     		ldr	r0, [r3, r2]
 2035              	.LVL133:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2036              		.loc 1 2919 0
 2037 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 2038              		.loc 1 2921 0
 2039              		@ sp needed
 2040 0008 7047     		bx	lr
 2041              	.L166:
 2042 000a C046     		.align	2
 2043              	.L165:
 2044 000c 00000000 		.word	.LANCHOR2
 2045              		.cfi_endproc
 2046              	.LFE49:
 2047              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2048              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2049              		.align	2
 2050              		.global	CySysTickGetCallback
 2051              		.code	16
 2052              		.thumb_func
 2053              		.type	CySysTickGetCallback, %function
 2054              	CySysTickGetCallback:
 2055              	.LFB50:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2056              		.loc 1 2939 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 91


 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              		@ link register save eliminated.
 2061              	.LVL134:
2940:Generated_Source\PSoC4/CyLib.c **** }
 2062              		.loc 1 2940 0
 2063 0000 8000     		lsls	r0, r0, #2
 2064              	.LVL135:
 2065 0002 014B     		ldr	r3, .L168
 2066 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 2067              		.loc 1 2941 0
 2068              		@ sp needed
 2069 0006 7047     		bx	lr
 2070              	.L169:
 2071              		.align	2
 2072              	.L168:
 2073 0008 00000000 		.word	.LANCHOR2
 2074              		.cfi_endproc
 2075              	.LFE50:
 2076              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2077              		.section	.text.CyGetUniqueId,"ax",%progbits
 2078              		.align	2
 2079              		.global	CyGetUniqueId
 2080              		.code	16
 2081              		.thumb_func
 2082              		.type	CyGetUniqueId, %function
 2083              	CyGetUniqueId:
 2084              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2085              		.loc 1 2984 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089              		@ link register save eliminated.
 2090              	.LVL136:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2091              		.loc 1 2986 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 92


 2092 0000 134B     		ldr	r3, .L171
 2093 0002 1B78     		ldrb	r3, [r3]
 2094 0004 DAB2     		uxtb	r2, r3
 2095 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2096              		.loc 1 2987 0
 2097 0008 124B     		ldr	r3, .L171+4
 2098 000a 1B78     		ldrb	r3, [r3]
 2099 000c 1B02     		lsls	r3, r3, #8
 2100 000e 1343     		orrs	r3, r2
 2101 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2102              		.loc 1 2988 0
 2103 0012 114A     		ldr	r2, .L171+8
 2104 0014 1278     		ldrb	r2, [r2]
 2105 0016 1204     		lsls	r2, r2, #16
 2106 0018 1343     		orrs	r3, r2
 2107 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2108              		.loc 1 2989 0
 2109 001c 0F4A     		ldr	r2, .L171+12
 2110 001e 1278     		ldrb	r2, [r2]
 2111 0020 1206     		lsls	r2, r2, #24
 2112 0022 1343     		orrs	r3, r2
 2113 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2114              		.loc 1 2991 0
 2115 0026 0E4B     		ldr	r3, .L171+16
 2116 0028 1B78     		ldrb	r3, [r3]
 2117 002a DAB2     		uxtb	r2, r3
 2118 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2119              		.loc 1 2992 0
 2120 002e 0D4B     		ldr	r3, .L171+20
 2121 0030 1B78     		ldrb	r3, [r3]
 2122 0032 1B02     		lsls	r3, r3, #8
 2123 0034 1343     		orrs	r3, r2
 2124 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2125              		.loc 1 2993 0
 2126 0038 0B4A     		ldr	r2, .L171+24
 2127 003a 1278     		ldrb	r2, [r2]
 2128 003c 1204     		lsls	r2, r2, #16
 2129 003e 1343     		orrs	r3, r2
 2130 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2131              		.loc 1 2994 0
 2132 0042 0A4A     		ldr	r2, .L171+28
 2133 0044 1278     		ldrb	r2, [r2]
 2134 0046 1206     		lsls	r2, r2, #24
 2135 0048 1343     		orrs	r3, r2
 2136 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 93


2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2137              		.loc 1 3006 0
 2138              		@ sp needed
 2139 004c 7047     		bx	lr
 2140              	.L172:
 2141 004e C046     		.align	2
 2142              	.L171:
 2143 0050 78F1FF0F 		.word	268431736
 2144 0054 79F1FF0F 		.word	268431737
 2145 0058 7AF1FF0F 		.word	268431738
 2146 005c 7BF1FF0F 		.word	268431739
 2147 0060 7CF1FF0F 		.word	268431740
 2148 0064 7DF1FF0F 		.word	268431741
 2149 0068 7EF1FF0F 		.word	268431742
 2150 006c 7FF1FF0F 		.word	268431743
 2151              		.cfi_endproc
 2152              	.LFE52:
 2153              		.size	CyGetUniqueId, .-CyGetUniqueId
 2154              		.global	CySysClkPumpConfig
 2155              		.global	cyImoFreqMhz2Reg
 2156              		.global	CySysTickInitVar
 2157              		.global	cydelay32kMs
 2158              		.global	cydelayFreqMhz
 2159              		.global	cydelayFreqKhz
 2160              		.global	cydelayFreqHz
 2161              		.section	.rodata
 2162              		.align	2
 2163              		.set	.LANCHOR1,. + 0
 2164              		.type	cyImoFreqMhz2Reg, %object
 2165              		.size	cyImoFreqMhz2Reg, 46
 2166              	cyImoFreqMhz2Reg:
 2167 0000 03       		.byte	3
 2168 0001 04       		.byte	4
 2169 0002 05       		.byte	5
 2170 0003 06       		.byte	6
 2171 0004 07       		.byte	7
 2172 0005 08       		.byte	8
 2173 0006 09       		.byte	9
 2174 0007 0A       		.byte	10
 2175 0008 0B       		.byte	11
 2176 0009 0C       		.byte	12
 2177 000a 0E       		.byte	14
 2178 000b 0F       		.byte	15
 2179 000c 10       		.byte	16
 2180 000d 11       		.byte	17
 2181 000e 12       		.byte	18
 2182 000f 13       		.byte	19
 2183 0010 14       		.byte	20
 2184 0011 15       		.byte	21
 2185 0012 16       		.byte	22
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 94


 2186 0013 17       		.byte	23
 2187 0014 18       		.byte	24
 2188 0015 19       		.byte	25
 2189 0016 1B       		.byte	27
 2190 0017 1C       		.byte	28
 2191 0018 1D       		.byte	29
 2192 0019 1E       		.byte	30
 2193 001a 1F       		.byte	31
 2194 001b 20       		.byte	32
 2195 001c 21       		.byte	33
 2196 001d 22       		.byte	34
 2197 001e 23       		.byte	35
 2198 001f 25       		.byte	37
 2199 0020 26       		.byte	38
 2200 0021 27       		.byte	39
 2201 0022 28       		.byte	40
 2202 0023 29       		.byte	41
 2203 0024 2A       		.byte	42
 2204 0025 2B       		.byte	43
 2205 0026 2E       		.byte	46
 2206 0027 2F       		.byte	47
 2207 0028 30       		.byte	48
 2208 0029 31       		.byte	49
 2209 002a 32       		.byte	50
 2210 002b 33       		.byte	51
 2211 002c 34       		.byte	52
 2212 002d 35       		.byte	53
 2213              		.data
 2214              		.align	2
 2215              		.set	.LANCHOR0,. + 0
 2216              		.type	CySysClkPumpConfig, %object
 2217              		.size	CySysClkPumpConfig, 4
 2218              	CySysClkPumpConfig:
 2219 0000 01000000 		.word	1
 2220              		.type	cydelay32kMs, %object
 2221              		.size	cydelay32kMs, 4
 2222              	cydelay32kMs:
 2223 0004 0000E02E 		.word	786432000
 2224              		.type	cydelayFreqKhz, %object
 2225              		.size	cydelayFreqKhz, 4
 2226              	cydelayFreqKhz:
 2227 0008 C05D0000 		.word	24000
 2228              		.type	cydelayFreqMhz, %object
 2229              		.size	cydelayFreqMhz, 1
 2230              	cydelayFreqMhz:
 2231 000c 18       		.byte	24
 2232 000d 000000   		.space	3
 2233              		.type	cydelayFreqHz, %object
 2234              		.size	cydelayFreqHz, 4
 2235              	cydelayFreqHz:
 2236 0010 00366E01 		.word	24000000
 2237              		.bss
 2238              		.align	2
 2239              		.set	.LANCHOR2,. + 0
 2240              		.type	CySysTickCallbacks, %object
 2241              		.size	CySysTickCallbacks, 20
 2242              	CySysTickCallbacks:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 95


 2243 0000 00000000 		.space	20
 2243      00000000 
 2243      00000000 
 2243      00000000 
 2243      00000000 
 2244              		.type	CySysTickInitVar, %object
 2245              		.size	CySysTickInitVar, 4
 2246              	CySysTickInitVar:
 2247 0014 00000000 		.space	4
 2248              		.text
 2249              	.Letext0:
 2250              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2251              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2252              		.section	.debug_info,"",%progbits
 2253              	.Ldebug_info0:
 2254 0000 DB0B0000 		.4byte	0xbdb
 2255 0004 0400     		.2byte	0x4
 2256 0006 00000000 		.4byte	.Ldebug_abbrev0
 2257 000a 04       		.byte	0x4
 2258 000b 01       		.uleb128 0x1
 2259 000c 67000000 		.4byte	.LASF112
 2260 0010 0C       		.byte	0xc
 2261 0011 E5060000 		.4byte	.LASF113
 2262 0015 A8010000 		.4byte	.LASF114
 2263 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2264 001d 00000000 		.4byte	0
 2265 0021 00000000 		.4byte	.Ldebug_line0
 2266 0025 02       		.uleb128 0x2
 2267 0026 01       		.byte	0x1
 2268 0027 06       		.byte	0x6
 2269 0028 69010000 		.4byte	.LASF0
 2270 002c 02       		.uleb128 0x2
 2271 002d 01       		.byte	0x1
 2272 002e 08       		.byte	0x8
 2273 002f 62050000 		.4byte	.LASF1
 2274 0033 02       		.uleb128 0x2
 2275 0034 02       		.byte	0x2
 2276 0035 05       		.byte	0x5
 2277 0036 70050000 		.4byte	.LASF2
 2278 003a 02       		.uleb128 0x2
 2279 003b 02       		.byte	0x2
 2280 003c 07       		.byte	0x7
 2281 003d A5030000 		.4byte	.LASF3
 2282 0041 02       		.uleb128 0x2
 2283 0042 04       		.byte	0x4
 2284 0043 05       		.byte	0x5
 2285 0044 00020000 		.4byte	.LASF4
 2286 0048 02       		.uleb128 0x2
 2287 0049 04       		.byte	0x4
 2288 004a 07       		.byte	0x7
 2289 004b 18030000 		.4byte	.LASF5
 2290 004f 02       		.uleb128 0x2
 2291 0050 08       		.byte	0x8
 2292 0051 05       		.byte	0x5
 2293 0052 5B010000 		.4byte	.LASF6
 2294 0056 02       		.uleb128 0x2
 2295 0057 08       		.byte	0x8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 96


 2296 0058 07       		.byte	0x7
 2297 0059 F5000000 		.4byte	.LASF7
 2298 005d 03       		.uleb128 0x3
 2299 005e 04       		.byte	0x4
 2300 005f 05       		.byte	0x5
 2301 0060 696E7400 		.ascii	"int\000"
 2302 0064 02       		.uleb128 0x2
 2303 0065 04       		.byte	0x4
 2304 0066 07       		.byte	0x7
 2305 0067 FC020000 		.4byte	.LASF8
 2306 006b 04       		.uleb128 0x4
 2307 006c 20020000 		.4byte	.LASF9
 2308 0070 02       		.byte	0x2
 2309 0071 B901     		.2byte	0x1b9
 2310 0073 2C000000 		.4byte	0x2c
 2311 0077 04       		.uleb128 0x4
 2312 0078 0F000000 		.4byte	.LASF10
 2313 007c 02       		.byte	0x2
 2314 007d BA01     		.2byte	0x1ba
 2315 007f 3A000000 		.4byte	0x3a
 2316 0083 04       		.uleb128 0x4
 2317 0084 60020000 		.4byte	.LASF11
 2318 0088 02       		.byte	0x2
 2319 0089 BB01     		.2byte	0x1bb
 2320 008b 48000000 		.4byte	0x48
 2321 008f 02       		.uleb128 0x2
 2322 0090 04       		.byte	0x4
 2323 0091 04       		.byte	0x4
 2324 0092 E5040000 		.4byte	.LASF12
 2325 0096 02       		.uleb128 0x2
 2326 0097 08       		.byte	0x8
 2327 0098 04       		.byte	0x4
 2328 0099 3C020000 		.4byte	.LASF13
 2329 009d 02       		.uleb128 0x2
 2330 009e 01       		.byte	0x1
 2331 009f 08       		.byte	0x8
 2332 00a0 C4050000 		.4byte	.LASF14
 2333 00a4 04       		.uleb128 0x4
 2334 00a5 CB060000 		.4byte	.LASF15
 2335 00a9 02       		.byte	0x2
 2336 00aa 5B02     		.2byte	0x25b
 2337 00ac 48000000 		.4byte	0x48
 2338 00b0 04       		.uleb128 0x4
 2339 00b1 4C050000 		.4byte	.LASF16
 2340 00b5 02       		.byte	0x2
 2341 00b6 6302     		.2byte	0x263
 2342 00b8 BC000000 		.4byte	0xbc
 2343 00bc 05       		.uleb128 0x5
 2344 00bd 6B000000 		.4byte	0x6b
 2345 00c1 04       		.uleb128 0x4
 2346 00c2 2B040000 		.4byte	.LASF17
 2347 00c6 02       		.byte	0x2
 2348 00c7 6502     		.2byte	0x265
 2349 00c9 CD000000 		.4byte	0xcd
 2350 00cd 05       		.uleb128 0x5
 2351 00ce 83000000 		.4byte	0x83
 2352 00d2 04       		.uleb128 0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 97


 2353 00d3 C9050000 		.4byte	.LASF18
 2354 00d7 02       		.byte	0x2
 2355 00d8 7502     		.2byte	0x275
 2356 00da DE000000 		.4byte	0xde
 2357 00de 06       		.uleb128 0x6
 2358 00df 04       		.byte	0x4
 2359 00e0 E4000000 		.4byte	0xe4
 2360 00e4 07       		.uleb128 0x7
 2361 00e5 02       		.uleb128 0x2
 2362 00e6 08       		.byte	0x8
 2363 00e7 04       		.byte	0x4
 2364 00e8 79040000 		.4byte	.LASF19
 2365 00ec 02       		.uleb128 0x2
 2366 00ed 04       		.byte	0x4
 2367 00ee 07       		.byte	0x7
 2368 00ef 4D040000 		.4byte	.LASF20
 2369 00f3 08       		.uleb128 0x8
 2370 00f4 10050000 		.4byte	.LASF21
 2371 00f8 03       		.byte	0x3
 2372 00f9 F5       		.byte	0xf5
 2373 00fa DE000000 		.4byte	0xde
 2374 00fe 09       		.uleb128 0x9
 2375 00ff D4060000 		.4byte	.LASF22
 2376 0103 01       		.byte	0x1
 2377 0104 6B       		.byte	0x6b
 2378 0105 00000000 		.4byte	.LFB2
 2379 0109 14000000 		.4byte	.LFE2-.LFB2
 2380 010d 01       		.uleb128 0x1
 2381 010e 9C       		.byte	0x9c
 2382 010f 09       		.uleb128 0x9
 2383 0110 45030000 		.4byte	.LASF23
 2384 0114 01       		.byte	0x1
 2385 0115 8B       		.byte	0x8b
 2386 0116 00000000 		.4byte	.LFB3
 2387 011a 10000000 		.4byte	.LFE3-.LFB3
 2388 011e 01       		.uleb128 0x1
 2389 011f 9C       		.byte	0x9c
 2390 0120 0A       		.uleb128 0xa
 2391 0121 1F000000 		.4byte	.LASF26
 2392 0125 01       		.byte	0x1
 2393 0126 AD01     		.2byte	0x1ad
 2394 0128 00000000 		.4byte	.LFB4
 2395 012c 20000000 		.4byte	.LFE4-.LFB4
 2396 0130 01       		.uleb128 0x1
 2397 0131 9C       		.byte	0x9c
 2398 0132 79010000 		.4byte	0x179
 2399 0136 0B       		.uleb128 0xb
 2400 0137 98050000 		.4byte	.LASF28
 2401 013b 01       		.byte	0x1
 2402 013c AD01     		.2byte	0x1ad
 2403 013e 83000000 		.4byte	0x83
 2404 0142 00000000 		.4byte	.LLST0
 2405 0146 0C       		.uleb128 0xc
 2406 0147 86010000 		.4byte	.LASF24
 2407 014b 01       		.byte	0x1
 2408 014c AF01     		.2byte	0x1af
 2409 014e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 98


 2410 0152 2C000000 		.4byte	.LLST1
 2411 0156 0C       		.uleb128 0xc
 2412 0157 11070000 		.4byte	.LASF25
 2413 015b 01       		.byte	0x1
 2414 015c B001     		.2byte	0x1b0
 2415 015e 83000000 		.4byte	0x83
 2416 0162 3F000000 		.4byte	.LLST2
 2417 0166 0D       		.uleb128 0xd
 2418 0167 08000000 		.4byte	.LVL1
 2419 016b BD0B0000 		.4byte	0xbbd
 2420 016f 0D       		.uleb128 0xd
 2421 0170 1A000000 		.4byte	.LVL5
 2422 0174 C80B0000 		.4byte	0xbc8
 2423 0178 00       		.byte	0
 2424 0179 0A       		.uleb128 0xa
 2425 017a 16040000 		.4byte	.LASF27
 2426 017e 01       		.byte	0x1
 2427 017f D901     		.2byte	0x1d9
 2428 0181 00000000 		.4byte	.LFB5
 2429 0185 38000000 		.4byte	.LFE5-.LFB5
 2430 0189 01       		.uleb128 0x1
 2431 018a 9C       		.byte	0x9c
 2432 018b 9E010000 		.4byte	0x19e
 2433 018f 0E       		.uleb128 0xe
 2434 0190 35020000 		.4byte	.LASF29
 2435 0194 01       		.byte	0x1
 2436 0195 D901     		.2byte	0x1d9
 2437 0197 83000000 		.4byte	0x83
 2438 019b 01       		.uleb128 0x1
 2439 019c 50       		.byte	0x50
 2440 019d 00       		.byte	0
 2441 019e 0F       		.uleb128 0xf
 2442 019f 82020000 		.4byte	.LASF38
 2443 01a3 01       		.byte	0x1
 2444 01a4 FE01     		.2byte	0x1fe
 2445 01a6 83000000 		.4byte	0x83
 2446 01aa 00000000 		.4byte	.LFB6
 2447 01ae 1C000000 		.4byte	.LFE6-.LFB6
 2448 01b2 01       		.uleb128 0x1
 2449 01b3 9C       		.byte	0x9c
 2450 01b4 EB010000 		.4byte	0x1eb
 2451 01b8 0C       		.uleb128 0xc
 2452 01b9 86010000 		.4byte	.LASF24
 2453 01bd 01       		.byte	0x1
 2454 01be 0002     		.2byte	0x200
 2455 01c0 6B000000 		.4byte	0x6b
 2456 01c4 5D000000 		.4byte	.LLST3
 2457 01c8 0C       		.uleb128 0xc
 2458 01c9 8D040000 		.4byte	.LASF30
 2459 01cd 01       		.byte	0x1
 2460 01ce 0102     		.2byte	0x201
 2461 01d0 83000000 		.4byte	0x83
 2462 01d4 70000000 		.4byte	.LLST4
 2463 01d8 0D       		.uleb128 0xd
 2464 01d9 06000000 		.4byte	.LVL8
 2465 01dd BD0B0000 		.4byte	0xbbd
 2466 01e1 0D       		.uleb128 0xd
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 99


 2467 01e2 12000000 		.4byte	.LVL10
 2468 01e6 C80B0000 		.4byte	0xbc8
 2469 01ea 00       		.byte	0
 2470 01eb 0A       		.uleb128 0xa
 2471 01ec E6050000 		.4byte	.LASF31
 2472 01f0 01       		.byte	0x1
 2473 01f1 3502     		.2byte	0x235
 2474 01f3 00000000 		.4byte	.LFB7
 2475 01f7 30000000 		.4byte	.LFE7-.LFB7
 2476 01fb 01       		.uleb128 0x1
 2477 01fc 9C       		.byte	0x9c
 2478 01fd 34020000 		.4byte	0x234
 2479 0201 0B       		.uleb128 0xb
 2480 0202 AF060000 		.4byte	.LASF32
 2481 0206 01       		.byte	0x1
 2482 0207 3502     		.2byte	0x235
 2483 0209 83000000 		.4byte	0x83
 2484 020d 8E000000 		.4byte	.LLST5
 2485 0211 0C       		.uleb128 0xc
 2486 0212 86010000 		.4byte	.LASF24
 2487 0216 01       		.byte	0x1
 2488 0217 3702     		.2byte	0x237
 2489 0219 6B000000 		.4byte	0x6b
 2490 021d BA000000 		.4byte	.LLST6
 2491 0221 0D       		.uleb128 0xd
 2492 0222 08000000 		.4byte	.LVL13
 2493 0226 BD0B0000 		.4byte	0xbbd
 2494 022a 0D       		.uleb128 0xd
 2495 022b 24000000 		.4byte	.LVL15
 2496 022f C80B0000 		.4byte	0xbc8
 2497 0233 00       		.byte	0
 2498 0234 0A       		.uleb128 0xa
 2499 0235 EF030000 		.4byte	.LASF33
 2500 0239 01       		.byte	0x1
 2501 023a 6F02     		.2byte	0x26f
 2502 023c 00000000 		.4byte	.LFB8
 2503 0240 64000000 		.4byte	.LFE8-.LFB8
 2504 0244 01       		.uleb128 0x1
 2505 0245 9C       		.byte	0x9c
 2506 0246 9B020000 		.4byte	0x29b
 2507 024a 0B       		.uleb128 0xb
 2508 024b 75010000 		.4byte	.LASF34
 2509 024f 01       		.byte	0x1
 2510 0250 6F02     		.2byte	0x26f
 2511 0252 83000000 		.4byte	0x83
 2512 0256 CD000000 		.4byte	.LLST7
 2513 025a 10       		.uleb128 0x10
 2514 025b 0C010000 		.4byte	.LASF35
 2515 025f 01       		.byte	0x1
 2516 0260 7202     		.2byte	0x272
 2517 0262 AB020000 		.4byte	0x2ab
 2518 0266 02       		.uleb128 0x2
 2519 0267 91       		.byte	0x91
 2520 0268 70       		.sleb128 -16
 2521 0269 10       		.uleb128 0x10
 2522 026a 16020000 		.4byte	.LASF36
 2523 026e 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 100


 2524 026f 7302     		.2byte	0x273
 2525 0271 C0020000 		.4byte	0x2c0
 2526 0275 02       		.uleb128 0x2
 2527 0276 91       		.byte	0x91
 2528 0277 60       		.sleb128 -32
 2529 0278 0C       		.uleb128 0xc
 2530 0279 86010000 		.4byte	.LASF24
 2531 027d 01       		.byte	0x1
 2532 027e 8402     		.2byte	0x284
 2533 0280 6B000000 		.4byte	0x6b
 2534 0284 06010000 		.4byte	.LLST8
 2535 0288 0D       		.uleb128 0xd
 2536 0289 0A000000 		.4byte	.LVL17
 2537 028d BD0B0000 		.4byte	0xbbd
 2538 0291 0D       		.uleb128 0xd
 2539 0292 3E000000 		.4byte	.LVL19
 2540 0296 C80B0000 		.4byte	0xbc8
 2541 029a 00       		.byte	0
 2542 029b 11       		.uleb128 0x11
 2543 029c CD000000 		.4byte	0xcd
 2544 02a0 AB020000 		.4byte	0x2ab
 2545 02a4 12       		.uleb128 0x12
 2546 02a5 EC000000 		.4byte	0xec
 2547 02a9 01       		.byte	0x1
 2548 02aa 00       		.byte	0
 2549 02ab 05       		.uleb128 0x5
 2550 02ac 9B020000 		.4byte	0x29b
 2551 02b0 11       		.uleb128 0x11
 2552 02b1 CD000000 		.4byte	0xcd
 2553 02b5 C0020000 		.4byte	0x2c0
 2554 02b9 12       		.uleb128 0x12
 2555 02ba EC000000 		.4byte	0xec
 2556 02be 03       		.byte	0x3
 2557 02bf 00       		.byte	0
 2558 02c0 05       		.uleb128 0x5
 2559 02c1 B0020000 		.4byte	0x2b0
 2560 02c5 13       		.uleb128 0x13
 2561 02c6 87060000 		.4byte	.LASF37
 2562 02ca 01       		.byte	0x1
 2563 02cb 9104     		.2byte	0x491
 2564 02cd 00000000 		.4byte	.LFB10
 2565 02d1 24000000 		.4byte	.LFE10-.LFB10
 2566 02d5 01       		.uleb128 0x1
 2567 02d6 9C       		.byte	0x9c
 2568 02d7 0F       		.uleb128 0xf
 2569 02d8 67020000 		.4byte	.LASF39
 2570 02dc 01       		.byte	0x1
 2571 02dd B304     		.2byte	0x4b3
 2572 02df 83000000 		.4byte	0x83
 2573 02e3 00000000 		.4byte	.LFB11
 2574 02e7 10000000 		.4byte	.LFE11-.LFB11
 2575 02eb 01       		.uleb128 0x1
 2576 02ec 9C       		.byte	0x9c
 2577 02ed 00030000 		.4byte	0x300
 2578 02f1 10       		.uleb128 0x10
 2579 02f2 45070000 		.4byte	.LASF40
 2580 02f6 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 101


 2581 02f7 B504     		.2byte	0x4b5
 2582 02f9 83000000 		.4byte	0x83
 2583 02fd 01       		.uleb128 0x1
 2584 02fe 50       		.byte	0x50
 2585 02ff 00       		.byte	0
 2586 0300 13       		.uleb128 0x13
 2587 0301 68060000 		.4byte	.LASF41
 2588 0305 01       		.byte	0x1
 2589 0306 6408     		.2byte	0x864
 2590 0308 00000000 		.4byte	.LFB14
 2591 030c 20000000 		.4byte	.LFE14-.LFB14
 2592 0310 01       		.uleb128 0x1
 2593 0311 9C       		.byte	0x9c
 2594 0312 14       		.uleb128 0x14
 2595 0313 2A030000 		.4byte	.LASF85
 2596 0317 01       		.byte	0x1
 2597 0318 7608     		.2byte	0x876
 2598 031a 83000000 		.4byte	0x83
 2599 031e 00000000 		.4byte	.LFB15
 2600 0322 10000000 		.4byte	.LFE15-.LFB15
 2601 0326 01       		.uleb128 0x1
 2602 0327 9C       		.byte	0x9c
 2603 0328 13       		.uleb128 0x13
 2604 0329 49020000 		.4byte	.LASF42
 2605 032d 01       		.byte	0x1
 2606 032e 8608     		.2byte	0x886
 2607 0330 00000000 		.4byte	.LFB16
 2608 0334 0C000000 		.4byte	.LFE16-.LFB16
 2609 0338 01       		.uleb128 0x1
 2610 0339 9C       		.byte	0x9c
 2611 033a 0F       		.uleb128 0xf
 2612 033b 91030000 		.4byte	.LASF43
 2613 033f 01       		.byte	0x1
 2614 0340 A008     		.2byte	0x8a0
 2615 0342 83000000 		.4byte	0x83
 2616 0346 00000000 		.4byte	.LFB17
 2617 034a 14000000 		.4byte	.LFE17-.LFB17
 2618 034e 01       		.uleb128 0x1
 2619 034f 9C       		.byte	0x9c
 2620 0350 73030000 		.4byte	0x373
 2621 0354 0B       		.uleb128 0xb
 2622 0355 BD050000 		.4byte	.LASF44
 2623 0359 01       		.byte	0x1
 2624 035a A008     		.2byte	0x8a0
 2625 035c 83000000 		.4byte	0x83
 2626 0360 19010000 		.4byte	.LLST9
 2627 0364 10       		.uleb128 0x10
 2628 0365 40040000 		.4byte	.LASF45
 2629 0369 01       		.byte	0x1
 2630 036a A208     		.2byte	0x8a2
 2631 036c 83000000 		.4byte	0x83
 2632 0370 01       		.uleb128 0x1
 2633 0371 50       		.byte	0x50
 2634 0372 00       		.byte	0
 2635 0373 0F       		.uleb128 0xf
 2636 0374 59000000 		.4byte	.LASF46
 2637 0378 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 102


 2638 0379 B708     		.2byte	0x8b7
 2639 037b 83000000 		.4byte	0x83
 2640 037f 00000000 		.4byte	.LFB18
 2641 0383 10000000 		.4byte	.LFE18-.LFB18
 2642 0387 01       		.uleb128 0x1
 2643 0388 9C       		.byte	0x9c
 2644 0389 9C030000 		.4byte	0x39c
 2645 038d 10       		.uleb128 0x10
 2646 038e 16000000 		.4byte	.LASF47
 2647 0392 01       		.byte	0x1
 2648 0393 B908     		.2byte	0x8b9
 2649 0395 83000000 		.4byte	0x83
 2650 0399 01       		.uleb128 0x1
 2651 039a 50       		.byte	0x50
 2652 039b 00       		.byte	0
 2653 039c 0A       		.uleb128 0xa
 2654 039d 17010000 		.4byte	.LASF48
 2655 03a1 01       		.byte	0x1
 2656 03a2 CE08     		.2byte	0x8ce
 2657 03a4 00000000 		.4byte	.LFB19
 2658 03a8 0C000000 		.4byte	.LFE19-.LFB19
 2659 03ac 01       		.uleb128 0x1
 2660 03ad 9C       		.byte	0x9c
 2661 03ae C1030000 		.4byte	0x3c1
 2662 03b2 0E       		.uleb128 0xe
 2663 03b3 7D020000 		.4byte	.LASF49
 2664 03b7 01       		.byte	0x1
 2665 03b8 CE08     		.2byte	0x8ce
 2666 03ba 83000000 		.4byte	0x83
 2667 03be 01       		.uleb128 0x1
 2668 03bf 50       		.byte	0x50
 2669 03c0 00       		.byte	0
 2670 03c1 0A       		.uleb128 0xa
 2671 03c2 7A050000 		.4byte	.LASF50
 2672 03c6 01       		.byte	0x1
 2673 03c7 8509     		.2byte	0x985
 2674 03c9 00000000 		.4byte	.LFB26
 2675 03cd 14000000 		.4byte	.LFE26-.LFB26
 2676 03d1 01       		.uleb128 0x1
 2677 03d2 9C       		.byte	0x9c
 2678 03d3 E8030000 		.4byte	0x3e8
 2679 03d7 0B       		.uleb128 0xb
 2680 03d8 DF030000 		.4byte	.LASF51
 2681 03dc 01       		.byte	0x1
 2682 03dd 8509     		.2byte	0x985
 2683 03df 6B000000 		.4byte	0x6b
 2684 03e3 37010000 		.4byte	.LLST10
 2685 03e7 00       		.byte	0
 2686 03e8 0F       		.uleb128 0xf
 2687 03e9 4D010000 		.4byte	.LASF52
 2688 03ed 01       		.byte	0x1
 2689 03ee 9709     		.2byte	0x997
 2690 03f0 6B000000 		.4byte	0x6b
 2691 03f4 00000000 		.4byte	.LFB27
 2692 03f8 18000000 		.4byte	.LFE27-.LFB27
 2693 03fc 01       		.uleb128 0x1
 2694 03fd 9C       		.byte	0x9c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 103


 2695 03fe 13040000 		.4byte	0x413
 2696 0402 0B       		.uleb128 0xb
 2697 0403 DF030000 		.4byte	.LASF51
 2698 0407 01       		.byte	0x1
 2699 0408 9709     		.2byte	0x997
 2700 040a 6B000000 		.4byte	0x6b
 2701 040e 58010000 		.4byte	.LLST11
 2702 0412 00       		.byte	0
 2703 0413 0A       		.uleb128 0xa
 2704 0414 09020000 		.4byte	.LASF53
 2705 0418 01       		.byte	0x1
 2706 0419 A709     		.2byte	0x9a7
 2707 041b 00000000 		.4byte	.LFB28
 2708 041f 14000000 		.4byte	.LFE28-.LFB28
 2709 0423 01       		.uleb128 0x1
 2710 0424 9C       		.byte	0x9c
 2711 0425 3A040000 		.4byte	0x43a
 2712 0429 0B       		.uleb128 0xb
 2713 042a DF030000 		.4byte	.LASF51
 2714 042e 01       		.byte	0x1
 2715 042f A709     		.2byte	0x9a7
 2716 0431 6B000000 		.4byte	0x6b
 2717 0435 79010000 		.4byte	.LLST12
 2718 0439 00       		.byte	0
 2719 043a 0A       		.uleb128 0xa
 2720 043b 6C030000 		.4byte	.LASF54
 2721 043f 01       		.byte	0x1
 2722 0440 B509     		.2byte	0x9b5
 2723 0442 00000000 		.4byte	.LFB29
 2724 0446 14000000 		.4byte	.LFE29-.LFB29
 2725 044a 01       		.uleb128 0x1
 2726 044b 9C       		.byte	0x9c
 2727 044c 61040000 		.4byte	0x461
 2728 0450 0B       		.uleb128 0xb
 2729 0451 DF030000 		.4byte	.LASF51
 2730 0455 01       		.byte	0x1
 2731 0456 B509     		.2byte	0x9b5
 2732 0458 6B000000 		.4byte	0x6b
 2733 045c 9A010000 		.4byte	.LLST13
 2734 0460 00       		.byte	0
 2735 0461 0A       		.uleb128 0xa
 2736 0462 67040000 		.4byte	.LASF55
 2737 0466 01       		.byte	0x1
 2738 0467 C409     		.2byte	0x9c4
 2739 0469 00000000 		.4byte	.LFB30
 2740 046d 14000000 		.4byte	.LFE30-.LFB30
 2741 0471 01       		.uleb128 0x1
 2742 0472 9C       		.byte	0x9c
 2743 0473 88040000 		.4byte	0x488
 2744 0477 0B       		.uleb128 0xb
 2745 0478 DF030000 		.4byte	.LASF51
 2746 047c 01       		.byte	0x1
 2747 047d C409     		.2byte	0x9c4
 2748 047f 6B000000 		.4byte	0x6b
 2749 0483 BB010000 		.4byte	.LLST14
 2750 0487 00       		.byte	0
 2751 0488 0A       		.uleb128 0xa
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 104


 2752 0489 5B050000 		.4byte	.LASF56
 2753 048d 01       		.byte	0x1
 2754 048e D309     		.2byte	0x9d3
 2755 0490 00000000 		.4byte	.LFB31
 2756 0494 04000000 		.4byte	.LFE31-.LFB31
 2757 0498 01       		.uleb128 0x1
 2758 0499 9C       		.byte	0x9c
 2759 049a AD040000 		.4byte	0x4ad
 2760 049e 0E       		.uleb128 0xe
 2761 049f BD050000 		.4byte	.LASF44
 2762 04a3 01       		.byte	0x1
 2763 04a4 D309     		.2byte	0x9d3
 2764 04a6 6B000000 		.4byte	0x6b
 2765 04aa 01       		.uleb128 0x1
 2766 04ab 50       		.byte	0x50
 2767 04ac 00       		.byte	0
 2768 04ad 0A       		.uleb128 0xa
 2769 04ae B7060000 		.4byte	.LASF57
 2770 04b2 01       		.byte	0x1
 2771 04b3 E204     		.2byte	0x4e2
 2772 04b5 00000000 		.4byte	.LFB12
 2773 04b9 38000000 		.4byte	.LFE12-.LFB12
 2774 04bd 01       		.uleb128 0x1
 2775 04be 9C       		.byte	0x9c
 2776 04bf 05050000 		.4byte	0x505
 2777 04c3 0B       		.uleb128 0xb
 2778 04c4 AF060000 		.4byte	.LASF32
 2779 04c8 01       		.byte	0x1
 2780 04c9 E204     		.2byte	0x4e2
 2781 04cb 83000000 		.4byte	0x83
 2782 04cf DC010000 		.4byte	.LLST15
 2783 04d3 0C       		.uleb128 0xc
 2784 04d4 86010000 		.4byte	.LASF24
 2785 04d8 01       		.byte	0x1
 2786 04d9 E404     		.2byte	0x4e4
 2787 04db 6B000000 		.4byte	0x6b
 2788 04df 2C020000 		.4byte	.LLST16
 2789 04e3 0D       		.uleb128 0xd
 2790 04e4 14000000 		.4byte	.LVL40
 2791 04e8 BD0B0000 		.4byte	0xbbd
 2792 04ec 0D       		.uleb128 0xd
 2793 04ed 26000000 		.4byte	.LVL42
 2794 04f1 C80B0000 		.4byte	0xbc8
 2795 04f5 15       		.uleb128 0x15
 2796 04f6 2E000000 		.4byte	.LVL45
 2797 04fa 88040000 		.4byte	0x488
 2798 04fe 16       		.uleb128 0x16
 2799 04ff 01       		.uleb128 0x1
 2800 0500 50       		.byte	0x50
 2801 0501 01       		.uleb128 0x1
 2802 0502 30       		.byte	0x30
 2803 0503 00       		.byte	0
 2804 0504 00       		.byte	0
 2805 0505 0F       		.uleb128 0xf
 2806 0506 04040000 		.4byte	.LASF58
 2807 050a 01       		.byte	0x1
 2808 050b E708     		.2byte	0x8e7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 105


 2809 050d D2000000 		.4byte	0xd2
 2810 0511 00000000 		.4byte	.LFB20
 2811 0515 20000000 		.4byte	.LFE20-.LFB20
 2812 0519 01       		.uleb128 0x1
 2813 051a 9C       		.byte	0x9c
 2814 051b 6D050000 		.4byte	0x56d
 2815 051f 0B       		.uleb128 0xb
 2816 0520 DF030000 		.4byte	.LASF51
 2817 0524 01       		.byte	0x1
 2818 0525 E708     		.2byte	0x8e7
 2819 0527 6B000000 		.4byte	0x6b
 2820 052b 3F020000 		.4byte	.LLST17
 2821 052f 0B       		.uleb128 0xb
 2822 0530 85040000 		.4byte	.LASF59
 2823 0534 01       		.byte	0x1
 2824 0535 E708     		.2byte	0x8e7
 2825 0537 D2000000 		.4byte	0xd2
 2826 053b 60020000 		.4byte	.LLST18
 2827 053f 10       		.uleb128 0x10
 2828 0540 4B000000 		.4byte	.LASF60
 2829 0544 01       		.byte	0x1
 2830 0545 E908     		.2byte	0x8e9
 2831 0547 D2000000 		.4byte	0xd2
 2832 054b 01       		.uleb128 0x1
 2833 054c 50       		.byte	0x50
 2834 054d 17       		.uleb128 0x17
 2835 054e 00000000 		.4byte	.LASF61
 2836 0552 01       		.byte	0x1
 2837 0553 EA08     		.2byte	0x8ea
 2838 0555 6D050000 		.4byte	0x56d
 2839 0559 00000020 		.4byte	0x20000000
 2840 055d 15       		.uleb128 0x15
 2841 055e 10000000 		.4byte	.LVL49
 2842 0562 88040000 		.4byte	0x488
 2843 0566 16       		.uleb128 0x16
 2844 0567 01       		.uleb128 0x1
 2845 0568 50       		.byte	0x50
 2846 0569 01       		.uleb128 0x1
 2847 056a 30       		.byte	0x30
 2848 056b 00       		.byte	0
 2849 056c 00       		.byte	0
 2850 056d 06       		.uleb128 0x6
 2851 056e 04       		.byte	0x4
 2852 056f D2000000 		.4byte	0xd2
 2853 0573 0F       		.uleb128 0xf
 2854 0574 86050000 		.4byte	.LASF62
 2855 0578 01       		.byte	0x1
 2856 0579 0909     		.2byte	0x909
 2857 057b D2000000 		.4byte	0xd2
 2858 057f 00000000 		.4byte	.LFB21
 2859 0583 1C000000 		.4byte	.LFE21-.LFB21
 2860 0587 01       		.uleb128 0x1
 2861 0588 9C       		.byte	0x9c
 2862 0589 BD050000 		.4byte	0x5bd
 2863 058d 0B       		.uleb128 0xb
 2864 058e DF030000 		.4byte	.LASF51
 2865 0592 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 106


 2866 0593 0909     		.2byte	0x909
 2867 0595 6B000000 		.4byte	0x6b
 2868 0599 8C020000 		.4byte	.LLST19
 2869 059d 17       		.uleb128 0x17
 2870 059e 00000000 		.4byte	.LASF61
 2871 05a2 01       		.byte	0x1
 2872 05a3 0B09     		.2byte	0x90b
 2873 05a5 6D050000 		.4byte	0x56d
 2874 05a9 00000020 		.4byte	0x20000000
 2875 05ad 15       		.uleb128 0x15
 2876 05ae 0E000000 		.4byte	.LVL55
 2877 05b2 88040000 		.4byte	0x488
 2878 05b6 16       		.uleb128 0x16
 2879 05b7 01       		.uleb128 0x1
 2880 05b8 50       		.byte	0x50
 2881 05b9 01       		.uleb128 0x1
 2882 05ba 30       		.byte	0x30
 2883 05bb 00       		.byte	0
 2884 05bc 00       		.byte	0
 2885 05bd 0F       		.uleb128 0xf
 2886 05be D0030000 		.4byte	.LASF63
 2887 05c2 01       		.byte	0x1
 2888 05c3 1F09     		.2byte	0x91f
 2889 05c5 D2000000 		.4byte	0xd2
 2890 05c9 00000000 		.4byte	.LFB22
 2891 05cd 22000000 		.4byte	.LFE22-.LFB22
 2892 05d1 01       		.uleb128 0x1
 2893 05d2 9C       		.byte	0x9c
 2894 05d3 25060000 		.4byte	0x625
 2895 05d7 0B       		.uleb128 0xb
 2896 05d8 DF030000 		.4byte	.LASF51
 2897 05dc 01       		.byte	0x1
 2898 05dd 1F09     		.2byte	0x91f
 2899 05df 6B000000 		.4byte	0x6b
 2900 05e3 AD020000 		.4byte	.LLST20
 2901 05e7 0B       		.uleb128 0xb
 2902 05e8 85040000 		.4byte	.LASF59
 2903 05ec 01       		.byte	0x1
 2904 05ed 1F09     		.2byte	0x91f
 2905 05ef D2000000 		.4byte	0xd2
 2906 05f3 CE020000 		.4byte	.LLST21
 2907 05f7 10       		.uleb128 0x10
 2908 05f8 4B000000 		.4byte	.LASF60
 2909 05fc 01       		.byte	0x1
 2910 05fd 2109     		.2byte	0x921
 2911 05ff D2000000 		.4byte	0xd2
 2912 0603 01       		.uleb128 0x1
 2913 0604 50       		.byte	0x50
 2914 0605 17       		.uleb128 0x17
 2915 0606 00000000 		.4byte	.LASF61
 2916 060a 01       		.byte	0x1
 2917 060b 2209     		.2byte	0x922
 2918 060d 6D050000 		.4byte	0x56d
 2919 0611 00000020 		.4byte	0x20000000
 2920 0615 15       		.uleb128 0x15
 2921 0616 10000000 		.4byte	.LVL59
 2922 061a 88040000 		.4byte	0x488
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 107


 2923 061e 16       		.uleb128 0x16
 2924 061f 01       		.uleb128 0x1
 2925 0620 50       		.byte	0x50
 2926 0621 01       		.uleb128 0x1
 2927 0622 30       		.byte	0x30
 2928 0623 00       		.byte	0
 2929 0624 00       		.byte	0
 2930 0625 0F       		.uleb128 0xf
 2931 0626 22050000 		.4byte	.LASF64
 2932 062a 01       		.byte	0x1
 2933 062b 3B09     		.2byte	0x93b
 2934 062d D2000000 		.4byte	0xd2
 2935 0631 00000000 		.4byte	.LFB23
 2936 0635 1E000000 		.4byte	.LFE23-.LFB23
 2937 0639 01       		.uleb128 0x1
 2938 063a 9C       		.byte	0x9c
 2939 063b 6F060000 		.4byte	0x66f
 2940 063f 0B       		.uleb128 0xb
 2941 0640 DF030000 		.4byte	.LASF51
 2942 0644 01       		.byte	0x1
 2943 0645 3B09     		.2byte	0x93b
 2944 0647 6B000000 		.4byte	0x6b
 2945 064b FA020000 		.4byte	.LLST22
 2946 064f 17       		.uleb128 0x17
 2947 0650 00000000 		.4byte	.LASF61
 2948 0654 01       		.byte	0x1
 2949 0655 3D09     		.2byte	0x93d
 2950 0657 6D050000 		.4byte	0x56d
 2951 065b 00000020 		.4byte	0x20000000
 2952 065f 15       		.uleb128 0x15
 2953 0660 0E000000 		.4byte	.LVL65
 2954 0664 88040000 		.4byte	0x488
 2955 0668 16       		.uleb128 0x16
 2956 0669 01       		.uleb128 0x1
 2957 066a 50       		.byte	0x50
 2958 066b 01       		.uleb128 0x1
 2959 066c 30       		.byte	0x30
 2960 066d 00       		.byte	0
 2961 066e 00       		.byte	0
 2962 066f 0A       		.uleb128 0xa
 2963 0670 D4040000 		.4byte	.LASF65
 2964 0674 01       		.byte	0x1
 2965 0675 4E09     		.2byte	0x94e
 2966 0677 00000000 		.4byte	.LFB24
 2967 067b 4C000000 		.4byte	.LFE24-.LFB24
 2968 067f 01       		.uleb128 0x1
 2969 0680 9C       		.byte	0x9c
 2970 0681 0E070000 		.4byte	0x70e
 2971 0685 0B       		.uleb128 0xb
 2972 0686 DF030000 		.4byte	.LASF51
 2973 068a 01       		.byte	0x1
 2974 068b 4E09     		.2byte	0x94e
 2975 068d 6B000000 		.4byte	0x6b
 2976 0691 1B030000 		.4byte	.LLST23
 2977 0695 0B       		.uleb128 0xb
 2978 0696 E6030000 		.4byte	.LASF66
 2979 069a 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 108


 2980 069b 4E09     		.2byte	0x94e
 2981 069d 6B000000 		.4byte	0x6b
 2982 06a1 3C030000 		.4byte	.LLST24
 2983 06a5 0C       		.uleb128 0xc
 2984 06a6 86010000 		.4byte	.LASF24
 2985 06aa 01       		.byte	0x1
 2986 06ab 5009     		.2byte	0x950
 2987 06ad 6B000000 		.4byte	0x6b
 2988 06b1 5D030000 		.4byte	.LLST25
 2989 06b5 0C       		.uleb128 0xc
 2990 06b6 43020000 		.4byte	.LASF67
 2991 06ba 01       		.byte	0x1
 2992 06bb 5109     		.2byte	0x951
 2993 06bd 83000000 		.4byte	0x83
 2994 06c1 70030000 		.4byte	.LLST26
 2995 06c5 0C       		.uleb128 0xc
 2996 06c6 C6020000 		.4byte	.LASF68
 2997 06ca 01       		.byte	0x1
 2998 06cb 5209     		.2byte	0x952
 2999 06cd 83000000 		.4byte	0x83
 3000 06d1 83030000 		.4byte	.LLST27
 3001 06d5 18       		.uleb128 0x18
 3002 06d6 10000000 		.4byte	.LVL68
 3003 06da 88040000 		.4byte	0x488
 3004 06de E8060000 		.4byte	0x6e8
 3005 06e2 16       		.uleb128 0x16
 3006 06e3 01       		.uleb128 0x1
 3007 06e4 50       		.byte	0x50
 3008 06e5 01       		.uleb128 0x1
 3009 06e6 30       		.byte	0x30
 3010 06e7 00       		.byte	0
 3011 06e8 18       		.uleb128 0x18
 3012 06e9 1A000000 		.4byte	.LVL69
 3013 06ed 88040000 		.4byte	0x488
 3014 06f1 FB060000 		.4byte	0x6fb
 3015 06f5 16       		.uleb128 0x16
 3016 06f6 01       		.uleb128 0x1
 3017 06f7 50       		.byte	0x50
 3018 06f8 01       		.uleb128 0x1
 3019 06f9 30       		.byte	0x30
 3020 06fa 00       		.byte	0
 3021 06fb 0D       		.uleb128 0xd
 3022 06fc 26000000 		.4byte	.LVL71
 3023 0700 BD0B0000 		.4byte	0xbbd
 3024 0704 0D       		.uleb128 0xd
 3025 0705 46000000 		.4byte	.LVL77
 3026 0709 C80B0000 		.4byte	0xbc8
 3027 070d 00       		.byte	0
 3028 070e 0F       		.uleb128 0xf
 3029 070f 9A020000 		.4byte	.LASF69
 3030 0713 01       		.byte	0x1
 3031 0714 7009     		.2byte	0x970
 3032 0716 6B000000 		.4byte	0x6b
 3033 071a 00000000 		.4byte	.LFB25
 3034 071e 2C000000 		.4byte	.LFE25-.LFB25
 3035 0722 01       		.uleb128 0x1
 3036 0723 9C       		.byte	0x9c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 109


 3037 0724 58070000 		.4byte	0x758
 3038 0728 0B       		.uleb128 0xb
 3039 0729 DF030000 		.4byte	.LASF51
 3040 072d 01       		.byte	0x1
 3041 072e 7009     		.2byte	0x970
 3042 0730 6B000000 		.4byte	0x6b
 3043 0734 B7030000 		.4byte	.LLST28
 3044 0738 0C       		.uleb128 0xc
 3045 0739 E6030000 		.4byte	.LASF66
 3046 073d 01       		.byte	0x1
 3047 073e 7209     		.2byte	0x972
 3048 0740 6B000000 		.4byte	0x6b
 3049 0744 D8030000 		.4byte	.LLST29
 3050 0748 15       		.uleb128 0x15
 3051 0749 0E000000 		.4byte	.LVL81
 3052 074d 88040000 		.4byte	0x488
 3053 0751 16       		.uleb128 0x16
 3054 0752 01       		.uleb128 0x1
 3055 0753 50       		.byte	0x50
 3056 0754 01       		.uleb128 0x1
 3057 0755 30       		.byte	0x30
 3058 0756 00       		.byte	0
 3059 0757 00       		.byte	0
 3060 0758 13       		.uleb128 0x13
 3061 0759 24010000 		.4byte	.LASF70
 3062 075d 01       		.byte	0x1
 3063 075e EB09     		.2byte	0x9eb
 3064 0760 00000000 		.4byte	.LFB32
 3065 0764 18000000 		.4byte	.LFE32-.LFB32
 3066 0768 01       		.uleb128 0x1
 3067 0769 9C       		.byte	0x9c
 3068 076a 0A       		.uleb128 0xa
 3069 076b 2E060000 		.4byte	.LASF71
 3070 076f 01       		.byte	0x1
 3071 0770 FF09     		.2byte	0x9ff
 3072 0772 00000000 		.4byte	.LFB33
 3073 0776 30000000 		.4byte	.LFE33-.LFB33
 3074 077a 01       		.uleb128 0x1
 3075 077b 9C       		.byte	0x9c
 3076 077c A3070000 		.4byte	0x7a3
 3077 0780 0B       		.uleb128 0xb
 3078 0781 31050000 		.4byte	.LASF72
 3079 0785 01       		.byte	0x1
 3080 0786 FF09     		.2byte	0x9ff
 3081 0788 83000000 		.4byte	0x83
 3082 078c EB030000 		.4byte	.LLST30
 3083 0790 0D       		.uleb128 0xd
 3084 0791 0E000000 		.4byte	.LVL86
 3085 0795 D30B0000 		.4byte	0xbd3
 3086 0799 0D       		.uleb128 0xd
 3087 079a 26000000 		.4byte	.LVL88
 3088 079e D30B0000 		.4byte	0xbd3
 3089 07a2 00       		.byte	0
 3090 07a3 0A       		.uleb128 0xa
 3091 07a4 B3050000 		.4byte	.LASF73
 3092 07a8 01       		.byte	0x1
 3093 07a9 160A     		.2byte	0xa16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 110


 3094 07ab 00000000 		.4byte	.LFB34
 3095 07af 14000000 		.4byte	.LFE34-.LFB34
 3096 07b3 01       		.uleb128 0x1
 3097 07b4 9C       		.byte	0x9c
 3098 07b5 D3070000 		.4byte	0x7d3
 3099 07b9 0B       		.uleb128 0xb
 3100 07ba 04070000 		.4byte	.LASF74
 3101 07be 01       		.byte	0x1
 3102 07bf 160A     		.2byte	0xa16
 3103 07c1 77000000 		.4byte	0x77
 3104 07c5 09040000 		.4byte	.LLST31
 3105 07c9 0D       		.uleb128 0xd
 3106 07ca 0C000000 		.4byte	.LVL92
 3107 07ce D30B0000 		.4byte	0xbd3
 3108 07d2 00       		.byte	0
 3109 07d3 0F       		.uleb128 0xf
 3110 07d4 A2050000 		.4byte	.LASF75
 3111 07d8 01       		.byte	0x1
 3112 07d9 0304     		.2byte	0x403
 3113 07db A4000000 		.4byte	0xa4
 3114 07df 00000000 		.4byte	.LFB9
 3115 07e3 54000000 		.4byte	.LFE9-.LFB9
 3116 07e7 01       		.uleb128 0x1
 3117 07e8 9C       		.byte	0x9c
 3118 07e9 2A080000 		.4byte	0x82a
 3119 07ed 0B       		.uleb128 0xb
 3120 07ee A5060000 		.4byte	.LASF76
 3121 07f2 01       		.byte	0x1
 3122 07f3 0304     		.2byte	0x403
 3123 07f5 83000000 		.4byte	0x83
 3124 07f9 2A040000 		.4byte	.LLST32
 3125 07fd 0C       		.uleb128 0xc
 3126 07fe 40040000 		.4byte	.LASF45
 3127 0802 01       		.byte	0x1
 3128 0803 0504     		.2byte	0x405
 3129 0805 A4000000 		.4byte	0xa4
 3130 0809 48040000 		.4byte	.LLST33
 3131 080d 18       		.uleb128 0x18
 3132 080e 2E000000 		.4byte	.LVL96
 3133 0812 A3070000 		.4byte	0x7a3
 3134 0816 20080000 		.4byte	0x820
 3135 081a 16       		.uleb128 0x16
 3136 081b 01       		.uleb128 0x1
 3137 081c 50       		.byte	0x50
 3138 081d 01       		.uleb128 0x1
 3139 081e 31       		.byte	0x31
 3140 081f 00       		.byte	0
 3141 0820 0D       		.uleb128 0xd
 3142 0821 32000000 		.4byte	.LVL97
 3143 0825 D7020000 		.4byte	0x2d7
 3144 0829 00       		.byte	0
 3145 082a 0A       		.uleb128 0xa
 3146 082b 01050000 		.4byte	.LASF77
 3147 082f 01       		.byte	0x1
 3148 0830 4608     		.2byte	0x846
 3149 0832 00000000 		.4byte	.LFB13
 3150 0836 44000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 111


 3151 083a 01       		.uleb128 0x1
 3152 083b 9C       		.byte	0x9c
 3153 083c 6F080000 		.4byte	0x86f
 3154 0840 0B       		.uleb128 0xb
 3155 0841 51050000 		.4byte	.LASF78
 3156 0845 01       		.byte	0x1
 3157 0846 4608     		.2byte	0x846
 3158 0848 83000000 		.4byte	0x83
 3159 084c 67040000 		.4byte	.LLST34
 3160 0850 18       		.uleb128 0x18
 3161 0851 2E000000 		.4byte	.LVL104
 3162 0855 A3070000 		.4byte	0x7a3
 3163 0859 65080000 		.4byte	0x865
 3164 085d 16       		.uleb128 0x16
 3165 085e 01       		.uleb128 0x1
 3166 085f 50       		.byte	0x50
 3167 0860 03       		.uleb128 0x3
 3168 0861 0A       		.byte	0xa
 3169 0862 E803     		.2byte	0x3e8
 3170 0864 00       		.byte	0
 3171 0865 0D       		.uleb128 0xd
 3172 0866 32000000 		.4byte	.LVL105
 3173 086a 28030000 		.4byte	0x328
 3174 086e 00       		.byte	0
 3175 086f 19       		.uleb128 0x19
 3176 0870 7A010000 		.4byte	.LASF79
 3177 0874 01       		.byte	0x1
 3178 0875 240A     		.2byte	0xa24
 3179 0877 00000000 		.4byte	.LFB35
 3180 087b 4C000000 		.4byte	.LFE35-.LFB35
 3181 087f 01       		.uleb128 0x1
 3182 0880 9C       		.byte	0x9c
 3183 0881 96080000 		.4byte	0x896
 3184 0885 0B       		.uleb128 0xb
 3185 0886 75010000 		.4byte	.LASF34
 3186 088a 01       		.byte	0x1
 3187 088b 240A     		.2byte	0xa24
 3188 088d 83000000 		.4byte	0x83
 3189 0891 93040000 		.4byte	.LLST35
 3190 0895 00       		.byte	0
 3191 0896 13       		.uleb128 0x13
 3192 0897 97060000 		.4byte	.LASF80
 3193 089b 01       		.byte	0x1
 3194 089c 910A     		.2byte	0xa91
 3195 089e 00000000 		.4byte	.LFB39
 3196 08a2 10000000 		.4byte	.LFE39-.LFB39
 3197 08a6 01       		.uleb128 0x1
 3198 08a7 9C       		.byte	0x9c
 3199 08a8 13       		.uleb128 0x13
 3200 08a9 34010000 		.4byte	.LASF81
 3201 08ad 01       		.byte	0x1
 3202 08ae A10A     		.2byte	0xaa1
 3203 08b0 00000000 		.4byte	.LFB40
 3204 08b4 10000000 		.4byte	.LFE40-.LFB40
 3205 08b8 01       		.uleb128 0x1
 3206 08b9 9C       		.byte	0x9c
 3207 08ba 0A       		.uleb128 0xa
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 112


 3208 08bb D6050000 		.4byte	.LASF82
 3209 08bf 01       		.byte	0x1
 3210 08c0 800A     		.2byte	0xa80
 3211 08c2 00000000 		.4byte	.LFB38
 3212 08c6 18000000 		.4byte	.LFE38-.LFB38
 3213 08ca 01       		.uleb128 0x1
 3214 08cb 9C       		.byte	0x9c
 3215 08cc DA080000 		.4byte	0x8da
 3216 08d0 0D       		.uleb128 0xd
 3217 08d1 06000000 		.4byte	.LVL110
 3218 08d5 A8080000 		.4byte	0x8a8
 3219 08d9 00       		.byte	0
 3220 08da 13       		.uleb128 0x13
 3221 08db 4E060000 		.4byte	.LASF83
 3222 08df 01       		.byte	0x1
 3223 08e0 B10A     		.2byte	0xab1
 3224 08e2 00000000 		.4byte	.LFB41
 3225 08e6 10000000 		.4byte	.LFE41-.LFB41
 3226 08ea 01       		.uleb128 0x1
 3227 08eb 9C       		.byte	0x9c
 3228 08ec 0A       		.uleb128 0xa
 3229 08ed 18070000 		.4byte	.LASF84
 3230 08f1 01       		.byte	0x1
 3231 08f2 C20A     		.2byte	0xac2
 3232 08f4 00000000 		.4byte	.LFB42
 3233 08f8 10000000 		.4byte	.LFE42-.LFB42
 3234 08fc 01       		.uleb128 0x1
 3235 08fd 9C       		.byte	0x9c
 3236 08fe 13090000 		.4byte	0x913
 3237 0902 0B       		.uleb128 0xb
 3238 0903 C6020000 		.4byte	.LASF68
 3239 0907 01       		.byte	0x1
 3240 0908 C20A     		.2byte	0xac2
 3241 090a 83000000 		.4byte	0x83
 3242 090e B4040000 		.4byte	.LLST36
 3243 0912 00       		.byte	0
 3244 0913 14       		.uleb128 0x14
 3245 0914 95010000 		.4byte	.LASF86
 3246 0918 01       		.byte	0x1
 3247 0919 D20A     		.2byte	0xad2
 3248 091b 83000000 		.4byte	0x83
 3249 091f 00000000 		.4byte	.LFB43
 3250 0923 10000000 		.4byte	.LFE43-.LFB43
 3251 0927 01       		.uleb128 0x1
 3252 0928 9C       		.byte	0x9c
 3253 0929 14       		.uleb128 0x14
 3254 092a B4040000 		.4byte	.LASF87
 3255 092e 01       		.byte	0x1
 3256 092f E20A     		.2byte	0xae2
 3257 0931 83000000 		.4byte	0x83
 3258 0935 00000000 		.4byte	.LFB44
 3259 0939 10000000 		.4byte	.LFE44-.LFB44
 3260 093d 01       		.uleb128 0x1
 3261 093e 9C       		.byte	0x9c
 3262 093f 0A       		.uleb128 0xa
 3263 0940 B8030000 		.4byte	.LASF88
 3264 0944 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 113


 3265 0945 020B     		.2byte	0xb02
 3266 0947 00000000 		.4byte	.LFB45
 3267 094b 20000000 		.4byte	.LFE45-.LFB45
 3268 094f 01       		.uleb128 0x1
 3269 0950 9C       		.byte	0x9c
 3270 0951 64090000 		.4byte	0x964
 3271 0955 0E       		.uleb128 0xe
 3272 0956 CC020000 		.4byte	.LASF89
 3273 095a 01       		.byte	0x1
 3274 095b 020B     		.2byte	0xb02
 3275 095d 83000000 		.4byte	0x83
 3276 0961 01       		.uleb128 0x1
 3277 0962 50       		.byte	0x50
 3278 0963 00       		.byte	0
 3279 0964 14       		.uleb128 0x14
 3280 0965 36060000 		.4byte	.LASF90
 3281 0969 01       		.byte	0x1
 3282 096a 1B0B     		.2byte	0xb1b
 3283 096c 83000000 		.4byte	0x83
 3284 0970 00000000 		.4byte	.LFB46
 3285 0974 10000000 		.4byte	.LFE46-.LFB46
 3286 0978 01       		.uleb128 0x1
 3287 0979 9C       		.byte	0x9c
 3288 097a 14       		.uleb128 0x14
 3289 097b E6020000 		.4byte	.LASF91
 3290 097f 01       		.byte	0x1
 3291 0980 320B     		.2byte	0xb32
 3292 0982 83000000 		.4byte	0x83
 3293 0986 00000000 		.4byte	.LFB47
 3294 098a 10000000 		.4byte	.LFE47-.LFB47
 3295 098e 01       		.uleb128 0x1
 3296 098f 9C       		.byte	0x9c
 3297 0990 1A       		.uleb128 0x1a
 3298 0991 2B070000 		.4byte	.LASF115
 3299 0995 01       		.byte	0x1
 3300 0996 870B     		.2byte	0xb87
 3301 0998 00000000 		.4byte	.LFB51
 3302 099c 28000000 		.4byte	.LFE51-.LFB51
 3303 09a0 01       		.uleb128 0x1
 3304 09a1 9C       		.byte	0x9c
 3305 09a2 BE090000 		.4byte	0x9be
 3306 09a6 1B       		.uleb128 0x1b
 3307 09a7 6900     		.ascii	"i\000"
 3308 09a9 01       		.byte	0x1
 3309 09aa 890B     		.2byte	0xb89
 3310 09ac 83000000 		.4byte	0x83
 3311 09b0 D5040000 		.4byte	.LLST37
 3312 09b4 0D       		.uleb128 0xd
 3313 09b5 06000000 		.4byte	.LVL114
 3314 09b9 7A090000 		.4byte	0x97a
 3315 09bd 00       		.byte	0
 3316 09be 13       		.uleb128 0x13
 3317 09bf 09030000 		.4byte	.LASF92
 3318 09c3 01       		.byte	0x1
 3319 09c4 3F0B     		.2byte	0xb3f
 3320 09c6 00000000 		.4byte	.LFB48
 3321 09ca 0C000000 		.4byte	.LFE48-.LFB48
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 114


 3322 09ce 01       		.uleb128 0x1
 3323 09cf 9C       		.byte	0x9c
 3324 09d0 19       		.uleb128 0x19
 3325 09d1 B8020000 		.4byte	.LASF93
 3326 09d5 01       		.byte	0x1
 3327 09d6 610A     		.2byte	0xa61
 3328 09d8 00000000 		.4byte	.LFB37
 3329 09dc 4C000000 		.4byte	.LFE37-.LFB37
 3330 09e0 01       		.uleb128 0x1
 3331 09e1 9C       		.byte	0x9c
 3332 09e2 450A0000 		.4byte	0xa45
 3333 09e6 1B       		.uleb128 0x1b
 3334 09e7 6900     		.ascii	"i\000"
 3335 09e9 01       		.byte	0x1
 3336 09ea 630A     		.2byte	0xa63
 3337 09ec 83000000 		.4byte	0x83
 3338 09f0 F3040000 		.4byte	.LLST38
 3339 09f4 18       		.uleb128 0x18
 3340 09f5 1C000000 		.4byte	.LVL124
 3341 09f9 05050000 		.4byte	0x505
 3342 09fd 100A0000 		.4byte	0xa10
 3343 0a01 16       		.uleb128 0x16
 3344 0a02 01       		.uleb128 0x1
 3345 0a03 50       		.byte	0x50
 3346 0a04 01       		.uleb128 0x1
 3347 0a05 3F       		.byte	0x3f
 3348 0a06 16       		.uleb128 0x16
 3349 0a07 01       		.uleb128 0x1
 3350 0a08 51       		.byte	0x51
 3351 0a09 05       		.uleb128 0x5
 3352 0a0a 03       		.byte	0x3
 3353 0a0b 00000000 		.4byte	CySysTickServiceCallbacks
 3354 0a0f 00       		.byte	0
 3355 0a10 18       		.uleb128 0x18
 3356 0a11 22000000 		.4byte	.LVL125
 3357 0a15 3F090000 		.4byte	0x93f
 3358 0a19 230A0000 		.4byte	0xa23
 3359 0a1d 16       		.uleb128 0x16
 3360 0a1e 01       		.uleb128 0x1
 3361 0a1f 50       		.byte	0x50
 3362 0a20 01       		.uleb128 0x1
 3363 0a21 31       		.byte	0x31
 3364 0a22 00       		.byte	0
 3365 0a23 0D       		.uleb128 0xd
 3366 0a24 32000000 		.4byte	.LVL127
 3367 0a28 EC080000 		.4byte	0x8ec
 3368 0a2c 0D       		.uleb128 0xd
 3369 0a2d 36000000 		.4byte	.LVL128
 3370 0a31 BE090000 		.4byte	0x9be
 3371 0a35 15       		.uleb128 0x15
 3372 0a36 3C000000 		.4byte	.LVL129
 3373 0a3a C1030000 		.4byte	0x3c1
 3374 0a3e 16       		.uleb128 0x16
 3375 0a3f 01       		.uleb128 0x1
 3376 0a40 50       		.byte	0x50
 3377 0a41 01       		.uleb128 0x1
 3378 0a42 3F       		.byte	0x3f
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 115


 3379 0a43 00       		.byte	0
 3380 0a44 00       		.byte	0
 3381 0a45 0A       		.uleb128 0xa
 3382 0a46 31040000 		.4byte	.LASF94
 3383 0a4a 01       		.byte	0x1
 3384 0a4b 440A     		.2byte	0xa44
 3385 0a4d 00000000 		.4byte	.LFB36
 3386 0a51 20000000 		.4byte	.LFE36-.LFB36
 3387 0a55 01       		.uleb128 0x1
 3388 0a56 9C       		.byte	0x9c
 3389 0a57 6E0A0000 		.4byte	0xa6e
 3390 0a5b 0D       		.uleb128 0xd
 3391 0a5c 0E000000 		.4byte	.LVL130
 3392 0a60 D0090000 		.4byte	0x9d0
 3393 0a64 0D       		.uleb128 0xd
 3394 0a65 18000000 		.4byte	.LVL131
 3395 0a69 BA080000 		.4byte	0x8ba
 3396 0a6d 00       		.byte	0
 3397 0a6e 0F       		.uleb128 0xf
 3398 0a6f FD050000 		.4byte	.LASF95
 3399 0a73 01       		.byte	0x1
 3400 0a74 620B     		.2byte	0xb62
 3401 0a76 F3000000 		.4byte	0xf3
 3402 0a7a 00000000 		.4byte	.LFB49
 3403 0a7e 10000000 		.4byte	.LFE49-.LFB49
 3404 0a82 01       		.uleb128 0x1
 3405 0a83 9C       		.byte	0x9c
 3406 0a84 B50A0000 		.4byte	0xab5
 3407 0a88 0B       		.uleb128 0xb
 3408 0a89 DF030000 		.4byte	.LASF51
 3409 0a8d 01       		.byte	0x1
 3410 0a8e 620B     		.2byte	0xb62
 3411 0a90 83000000 		.4byte	0x83
 3412 0a94 12050000 		.4byte	.LLST39
 3413 0a98 0E       		.uleb128 0xe
 3414 0a99 9A040000 		.4byte	.LASF96
 3415 0a9d 01       		.byte	0x1
 3416 0a9e 620B     		.2byte	0xb62
 3417 0aa0 F3000000 		.4byte	0xf3
 3418 0aa4 01       		.uleb128 0x1
 3419 0aa5 51       		.byte	0x51
 3420 0aa6 10       		.uleb128 0x10
 3421 0aa7 52000000 		.4byte	.LASF97
 3422 0aab 01       		.byte	0x1
 3423 0aac 640B     		.2byte	0xb64
 3424 0aae F3000000 		.4byte	0xf3
 3425 0ab2 01       		.uleb128 0x1
 3426 0ab3 50       		.byte	0x50
 3427 0ab4 00       		.byte	0
 3428 0ab5 0F       		.uleb128 0xf
 3429 0ab6 7C030000 		.4byte	.LASF98
 3430 0aba 01       		.byte	0x1
 3431 0abb 7A0B     		.2byte	0xb7a
 3432 0abd F3000000 		.4byte	0xf3
 3433 0ac1 00000000 		.4byte	.LFB50
 3434 0ac5 0C000000 		.4byte	.LFE50-.LFB50
 3435 0ac9 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 116


 3436 0aca 9C       		.byte	0x9c
 3437 0acb E00A0000 		.4byte	0xae0
 3438 0acf 0B       		.uleb128 0xb
 3439 0ad0 DF030000 		.4byte	.LASF51
 3440 0ad4 01       		.byte	0x1
 3441 0ad5 7A0B     		.2byte	0xb7a
 3442 0ad7 83000000 		.4byte	0x83
 3443 0adb 33050000 		.4byte	.LLST40
 3444 0adf 00       		.byte	0
 3445 0ae0 0A       		.uleb128 0xa
 3446 0ae1 D8020000 		.4byte	.LASF99
 3447 0ae5 01       		.byte	0x1
 3448 0ae6 A70B     		.2byte	0xba7
 3449 0ae8 00000000 		.4byte	.LFB52
 3450 0aec 70000000 		.4byte	.LFE52-.LFB52
 3451 0af0 01       		.uleb128 0x1
 3452 0af1 9C       		.byte	0x9c
 3453 0af2 050B0000 		.4byte	0xb05
 3454 0af6 0E       		.uleb128 0xe
 3455 0af7 25060000 		.4byte	.LASF100
 3456 0afb 01       		.byte	0x1
 3457 0afc A70B     		.2byte	0xba7
 3458 0afe 050B0000 		.4byte	0xb05
 3459 0b02 01       		.uleb128 0x1
 3460 0b03 50       		.byte	0x50
 3461 0b04 00       		.byte	0
 3462 0b05 06       		.uleb128 0x6
 3463 0b06 04       		.byte	0x4
 3464 0b07 83000000 		.4byte	0x83
 3465 0b0b 11       		.uleb128 0x11
 3466 0b0c F3000000 		.4byte	0xf3
 3467 0b10 1B0B0000 		.4byte	0xb1b
 3468 0b14 12       		.uleb128 0x12
 3469 0b15 EC000000 		.4byte	0xec
 3470 0b19 04       		.byte	0x4
 3471 0b1a 00       		.byte	0
 3472 0b1b 1C       		.uleb128 0x1c
 3473 0b1c 12060000 		.4byte	.LASF101
 3474 0b20 01       		.byte	0x1
 3475 0b21 22       		.byte	0x22
 3476 0b22 0B0B0000 		.4byte	0xb0b
 3477 0b26 05       		.uleb128 0x5
 3478 0b27 03       		.byte	0x3
 3479 0b28 00000000 		.4byte	CySysTickCallbacks
 3480 0b2c 1D       		.uleb128 0x1d
 3481 0b2d C6040000 		.4byte	.LASF102
 3482 0b31 01       		.byte	0x1
 3483 0b32 1B       		.byte	0x1b
 3484 0b33 83000000 		.4byte	0x83
 3485 0b37 05       		.uleb128 0x5
 3486 0b38 03       		.byte	0x3
 3487 0b39 00000000 		.4byte	cydelayFreqHz
 3488 0b3d 1D       		.uleb128 0x1d
 3489 0b3e 26020000 		.4byte	.LASF103
 3490 0b42 01       		.byte	0x1
 3491 0b43 1C       		.byte	0x1c
 3492 0b44 83000000 		.4byte	0x83
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 117


 3493 0b48 05       		.uleb128 0x5
 3494 0b49 03       		.byte	0x3
 3495 0b4a 00000000 		.4byte	cydelayFreqKhz
 3496 0b4e 1D       		.uleb128 0x1d
 3497 0b4f 78060000 		.4byte	.LASF104
 3498 0b53 01       		.byte	0x1
 3499 0b54 1D       		.byte	0x1d
 3500 0b55 6B000000 		.4byte	0x6b
 3501 0b59 05       		.uleb128 0x5
 3502 0b5a 03       		.byte	0x3
 3503 0b5b 00000000 		.4byte	cydelayFreqMhz
 3504 0b5f 1D       		.uleb128 0x1d
 3505 0b60 AB020000 		.4byte	.LASF105
 3506 0b64 01       		.byte	0x1
 3507 0b65 1E       		.byte	0x1e
 3508 0b66 83000000 		.4byte	0x83
 3509 0b6a 05       		.uleb128 0x5
 3510 0b6b 03       		.byte	0x3
 3511 0b6c 00000000 		.4byte	cydelay32kMs
 3512 0b70 1D       		.uleb128 0x1d
 3513 0b71 56040000 		.4byte	.LASF106
 3514 0b75 01       		.byte	0x1
 3515 0b76 36       		.byte	0x36
 3516 0b77 83000000 		.4byte	0x83
 3517 0b7b 05       		.uleb128 0x5
 3518 0b7c 03       		.byte	0x3
 3519 0b7d 00000000 		.4byte	CySysTickInitVar
 3520 0b81 11       		.uleb128 0x11
 3521 0b82 910B0000 		.4byte	0xb91
 3522 0b86 910B0000 		.4byte	0xb91
 3523 0b8a 12       		.uleb128 0x12
 3524 0b8b EC000000 		.4byte	0xec
 3525 0b8f 2D       		.byte	0x2d
 3526 0b90 00       		.byte	0
 3527 0b91 1E       		.uleb128 0x1e
 3528 0b92 6B000000 		.4byte	0x6b
 3529 0b96 1D       		.uleb128 0x1d
 3530 0b97 A3040000 		.4byte	.LASF107
 3531 0b9b 01       		.byte	0x1
 3532 0b9c 3B       		.byte	0x3b
 3533 0b9d A70B0000 		.4byte	0xba7
 3534 0ba1 05       		.uleb128 0x5
 3535 0ba2 03       		.byte	0x3
 3536 0ba3 00000000 		.4byte	cyImoFreqMhz2Reg
 3537 0ba7 1E       		.uleb128 0x1e
 3538 0ba8 810B0000 		.4byte	0xb81
 3539 0bac 1D       		.uleb128 0x1d
 3540 0bad 38000000 		.4byte	.LASF108
 3541 0bb1 01       		.byte	0x1
 3542 0bb2 5B       		.byte	0x5b
 3543 0bb3 83000000 		.4byte	0x83
 3544 0bb7 05       		.uleb128 0x5
 3545 0bb8 03       		.byte	0x3
 3546 0bb9 00000000 		.4byte	CySysClkPumpConfig
 3547 0bbd 1F       		.uleb128 0x1f
 3548 0bbe 55030000 		.4byte	.LASF109
 3549 0bc2 55030000 		.4byte	.LASF109
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 118


 3550 0bc6 03       		.byte	0x3
 3551 0bc7 E5       		.byte	0xe5
 3552 0bc8 1F       		.uleb128 0x1f
 3553 0bc9 EB040000 		.4byte	.LASF110
 3554 0bcd EB040000 		.4byte	.LASF110
 3555 0bd1 03       		.byte	0x3
 3556 0bd2 E6       		.byte	0xe6
 3557 0bd3 1F       		.uleb128 0x1f
 3558 0bd4 3E050000 		.4byte	.LASF111
 3559 0bd8 3E050000 		.4byte	.LASF111
 3560 0bdc 03       		.byte	0x3
 3561 0bdd DC       		.byte	0xdc
 3562 0bde 00       		.byte	0
 3563              		.section	.debug_abbrev,"",%progbits
 3564              	.Ldebug_abbrev0:
 3565 0000 01       		.uleb128 0x1
 3566 0001 11       		.uleb128 0x11
 3567 0002 01       		.byte	0x1
 3568 0003 25       		.uleb128 0x25
 3569 0004 0E       		.uleb128 0xe
 3570 0005 13       		.uleb128 0x13
 3571 0006 0B       		.uleb128 0xb
 3572 0007 03       		.uleb128 0x3
 3573 0008 0E       		.uleb128 0xe
 3574 0009 1B       		.uleb128 0x1b
 3575 000a 0E       		.uleb128 0xe
 3576 000b 55       		.uleb128 0x55
 3577 000c 17       		.uleb128 0x17
 3578 000d 11       		.uleb128 0x11
 3579 000e 01       		.uleb128 0x1
 3580 000f 10       		.uleb128 0x10
 3581 0010 17       		.uleb128 0x17
 3582 0011 00       		.byte	0
 3583 0012 00       		.byte	0
 3584 0013 02       		.uleb128 0x2
 3585 0014 24       		.uleb128 0x24
 3586 0015 00       		.byte	0
 3587 0016 0B       		.uleb128 0xb
 3588 0017 0B       		.uleb128 0xb
 3589 0018 3E       		.uleb128 0x3e
 3590 0019 0B       		.uleb128 0xb
 3591 001a 03       		.uleb128 0x3
 3592 001b 0E       		.uleb128 0xe
 3593 001c 00       		.byte	0
 3594 001d 00       		.byte	0
 3595 001e 03       		.uleb128 0x3
 3596 001f 24       		.uleb128 0x24
 3597 0020 00       		.byte	0
 3598 0021 0B       		.uleb128 0xb
 3599 0022 0B       		.uleb128 0xb
 3600 0023 3E       		.uleb128 0x3e
 3601 0024 0B       		.uleb128 0xb
 3602 0025 03       		.uleb128 0x3
 3603 0026 08       		.uleb128 0x8
 3604 0027 00       		.byte	0
 3605 0028 00       		.byte	0
 3606 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 119


 3607 002a 16       		.uleb128 0x16
 3608 002b 00       		.byte	0
 3609 002c 03       		.uleb128 0x3
 3610 002d 0E       		.uleb128 0xe
 3611 002e 3A       		.uleb128 0x3a
 3612 002f 0B       		.uleb128 0xb
 3613 0030 3B       		.uleb128 0x3b
 3614 0031 05       		.uleb128 0x5
 3615 0032 49       		.uleb128 0x49
 3616 0033 13       		.uleb128 0x13
 3617 0034 00       		.byte	0
 3618 0035 00       		.byte	0
 3619 0036 05       		.uleb128 0x5
 3620 0037 35       		.uleb128 0x35
 3621 0038 00       		.byte	0
 3622 0039 49       		.uleb128 0x49
 3623 003a 13       		.uleb128 0x13
 3624 003b 00       		.byte	0
 3625 003c 00       		.byte	0
 3626 003d 06       		.uleb128 0x6
 3627 003e 0F       		.uleb128 0xf
 3628 003f 00       		.byte	0
 3629 0040 0B       		.uleb128 0xb
 3630 0041 0B       		.uleb128 0xb
 3631 0042 49       		.uleb128 0x49
 3632 0043 13       		.uleb128 0x13
 3633 0044 00       		.byte	0
 3634 0045 00       		.byte	0
 3635 0046 07       		.uleb128 0x7
 3636 0047 15       		.uleb128 0x15
 3637 0048 00       		.byte	0
 3638 0049 27       		.uleb128 0x27
 3639 004a 19       		.uleb128 0x19
 3640 004b 00       		.byte	0
 3641 004c 00       		.byte	0
 3642 004d 08       		.uleb128 0x8
 3643 004e 16       		.uleb128 0x16
 3644 004f 00       		.byte	0
 3645 0050 03       		.uleb128 0x3
 3646 0051 0E       		.uleb128 0xe
 3647 0052 3A       		.uleb128 0x3a
 3648 0053 0B       		.uleb128 0xb
 3649 0054 3B       		.uleb128 0x3b
 3650 0055 0B       		.uleb128 0xb
 3651 0056 49       		.uleb128 0x49
 3652 0057 13       		.uleb128 0x13
 3653 0058 00       		.byte	0
 3654 0059 00       		.byte	0
 3655 005a 09       		.uleb128 0x9
 3656 005b 2E       		.uleb128 0x2e
 3657 005c 00       		.byte	0
 3658 005d 3F       		.uleb128 0x3f
 3659 005e 19       		.uleb128 0x19
 3660 005f 03       		.uleb128 0x3
 3661 0060 0E       		.uleb128 0xe
 3662 0061 3A       		.uleb128 0x3a
 3663 0062 0B       		.uleb128 0xb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 120


 3664 0063 3B       		.uleb128 0x3b
 3665 0064 0B       		.uleb128 0xb
 3666 0065 27       		.uleb128 0x27
 3667 0066 19       		.uleb128 0x19
 3668 0067 11       		.uleb128 0x11
 3669 0068 01       		.uleb128 0x1
 3670 0069 12       		.uleb128 0x12
 3671 006a 06       		.uleb128 0x6
 3672 006b 40       		.uleb128 0x40
 3673 006c 18       		.uleb128 0x18
 3674 006d 9742     		.uleb128 0x2117
 3675 006f 19       		.uleb128 0x19
 3676 0070 00       		.byte	0
 3677 0071 00       		.byte	0
 3678 0072 0A       		.uleb128 0xa
 3679 0073 2E       		.uleb128 0x2e
 3680 0074 01       		.byte	0x1
 3681 0075 3F       		.uleb128 0x3f
 3682 0076 19       		.uleb128 0x19
 3683 0077 03       		.uleb128 0x3
 3684 0078 0E       		.uleb128 0xe
 3685 0079 3A       		.uleb128 0x3a
 3686 007a 0B       		.uleb128 0xb
 3687 007b 3B       		.uleb128 0x3b
 3688 007c 05       		.uleb128 0x5
 3689 007d 27       		.uleb128 0x27
 3690 007e 19       		.uleb128 0x19
 3691 007f 11       		.uleb128 0x11
 3692 0080 01       		.uleb128 0x1
 3693 0081 12       		.uleb128 0x12
 3694 0082 06       		.uleb128 0x6
 3695 0083 40       		.uleb128 0x40
 3696 0084 18       		.uleb128 0x18
 3697 0085 9742     		.uleb128 0x2117
 3698 0087 19       		.uleb128 0x19
 3699 0088 01       		.uleb128 0x1
 3700 0089 13       		.uleb128 0x13
 3701 008a 00       		.byte	0
 3702 008b 00       		.byte	0
 3703 008c 0B       		.uleb128 0xb
 3704 008d 05       		.uleb128 0x5
 3705 008e 00       		.byte	0
 3706 008f 03       		.uleb128 0x3
 3707 0090 0E       		.uleb128 0xe
 3708 0091 3A       		.uleb128 0x3a
 3709 0092 0B       		.uleb128 0xb
 3710 0093 3B       		.uleb128 0x3b
 3711 0094 05       		.uleb128 0x5
 3712 0095 49       		.uleb128 0x49
 3713 0096 13       		.uleb128 0x13
 3714 0097 02       		.uleb128 0x2
 3715 0098 17       		.uleb128 0x17
 3716 0099 00       		.byte	0
 3717 009a 00       		.byte	0
 3718 009b 0C       		.uleb128 0xc
 3719 009c 34       		.uleb128 0x34
 3720 009d 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 121


 3721 009e 03       		.uleb128 0x3
 3722 009f 0E       		.uleb128 0xe
 3723 00a0 3A       		.uleb128 0x3a
 3724 00a1 0B       		.uleb128 0xb
 3725 00a2 3B       		.uleb128 0x3b
 3726 00a3 05       		.uleb128 0x5
 3727 00a4 49       		.uleb128 0x49
 3728 00a5 13       		.uleb128 0x13
 3729 00a6 02       		.uleb128 0x2
 3730 00a7 17       		.uleb128 0x17
 3731 00a8 00       		.byte	0
 3732 00a9 00       		.byte	0
 3733 00aa 0D       		.uleb128 0xd
 3734 00ab 898201   		.uleb128 0x4109
 3735 00ae 00       		.byte	0
 3736 00af 11       		.uleb128 0x11
 3737 00b0 01       		.uleb128 0x1
 3738 00b1 31       		.uleb128 0x31
 3739 00b2 13       		.uleb128 0x13
 3740 00b3 00       		.byte	0
 3741 00b4 00       		.byte	0
 3742 00b5 0E       		.uleb128 0xe
 3743 00b6 05       		.uleb128 0x5
 3744 00b7 00       		.byte	0
 3745 00b8 03       		.uleb128 0x3
 3746 00b9 0E       		.uleb128 0xe
 3747 00ba 3A       		.uleb128 0x3a
 3748 00bb 0B       		.uleb128 0xb
 3749 00bc 3B       		.uleb128 0x3b
 3750 00bd 05       		.uleb128 0x5
 3751 00be 49       		.uleb128 0x49
 3752 00bf 13       		.uleb128 0x13
 3753 00c0 02       		.uleb128 0x2
 3754 00c1 18       		.uleb128 0x18
 3755 00c2 00       		.byte	0
 3756 00c3 00       		.byte	0
 3757 00c4 0F       		.uleb128 0xf
 3758 00c5 2E       		.uleb128 0x2e
 3759 00c6 01       		.byte	0x1
 3760 00c7 3F       		.uleb128 0x3f
 3761 00c8 19       		.uleb128 0x19
 3762 00c9 03       		.uleb128 0x3
 3763 00ca 0E       		.uleb128 0xe
 3764 00cb 3A       		.uleb128 0x3a
 3765 00cc 0B       		.uleb128 0xb
 3766 00cd 3B       		.uleb128 0x3b
 3767 00ce 05       		.uleb128 0x5
 3768 00cf 27       		.uleb128 0x27
 3769 00d0 19       		.uleb128 0x19
 3770 00d1 49       		.uleb128 0x49
 3771 00d2 13       		.uleb128 0x13
 3772 00d3 11       		.uleb128 0x11
 3773 00d4 01       		.uleb128 0x1
 3774 00d5 12       		.uleb128 0x12
 3775 00d6 06       		.uleb128 0x6
 3776 00d7 40       		.uleb128 0x40
 3777 00d8 18       		.uleb128 0x18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 122


 3778 00d9 9742     		.uleb128 0x2117
 3779 00db 19       		.uleb128 0x19
 3780 00dc 01       		.uleb128 0x1
 3781 00dd 13       		.uleb128 0x13
 3782 00de 00       		.byte	0
 3783 00df 00       		.byte	0
 3784 00e0 10       		.uleb128 0x10
 3785 00e1 34       		.uleb128 0x34
 3786 00e2 00       		.byte	0
 3787 00e3 03       		.uleb128 0x3
 3788 00e4 0E       		.uleb128 0xe
 3789 00e5 3A       		.uleb128 0x3a
 3790 00e6 0B       		.uleb128 0xb
 3791 00e7 3B       		.uleb128 0x3b
 3792 00e8 05       		.uleb128 0x5
 3793 00e9 49       		.uleb128 0x49
 3794 00ea 13       		.uleb128 0x13
 3795 00eb 02       		.uleb128 0x2
 3796 00ec 18       		.uleb128 0x18
 3797 00ed 00       		.byte	0
 3798 00ee 00       		.byte	0
 3799 00ef 11       		.uleb128 0x11
 3800 00f0 01       		.uleb128 0x1
 3801 00f1 01       		.byte	0x1
 3802 00f2 49       		.uleb128 0x49
 3803 00f3 13       		.uleb128 0x13
 3804 00f4 01       		.uleb128 0x1
 3805 00f5 13       		.uleb128 0x13
 3806 00f6 00       		.byte	0
 3807 00f7 00       		.byte	0
 3808 00f8 12       		.uleb128 0x12
 3809 00f9 21       		.uleb128 0x21
 3810 00fa 00       		.byte	0
 3811 00fb 49       		.uleb128 0x49
 3812 00fc 13       		.uleb128 0x13
 3813 00fd 2F       		.uleb128 0x2f
 3814 00fe 0B       		.uleb128 0xb
 3815 00ff 00       		.byte	0
 3816 0100 00       		.byte	0
 3817 0101 13       		.uleb128 0x13
 3818 0102 2E       		.uleb128 0x2e
 3819 0103 00       		.byte	0
 3820 0104 3F       		.uleb128 0x3f
 3821 0105 19       		.uleb128 0x19
 3822 0106 03       		.uleb128 0x3
 3823 0107 0E       		.uleb128 0xe
 3824 0108 3A       		.uleb128 0x3a
 3825 0109 0B       		.uleb128 0xb
 3826 010a 3B       		.uleb128 0x3b
 3827 010b 05       		.uleb128 0x5
 3828 010c 27       		.uleb128 0x27
 3829 010d 19       		.uleb128 0x19
 3830 010e 11       		.uleb128 0x11
 3831 010f 01       		.uleb128 0x1
 3832 0110 12       		.uleb128 0x12
 3833 0111 06       		.uleb128 0x6
 3834 0112 40       		.uleb128 0x40
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 123


 3835 0113 18       		.uleb128 0x18
 3836 0114 9742     		.uleb128 0x2117
 3837 0116 19       		.uleb128 0x19
 3838 0117 00       		.byte	0
 3839 0118 00       		.byte	0
 3840 0119 14       		.uleb128 0x14
 3841 011a 2E       		.uleb128 0x2e
 3842 011b 00       		.byte	0
 3843 011c 3F       		.uleb128 0x3f
 3844 011d 19       		.uleb128 0x19
 3845 011e 03       		.uleb128 0x3
 3846 011f 0E       		.uleb128 0xe
 3847 0120 3A       		.uleb128 0x3a
 3848 0121 0B       		.uleb128 0xb
 3849 0122 3B       		.uleb128 0x3b
 3850 0123 05       		.uleb128 0x5
 3851 0124 27       		.uleb128 0x27
 3852 0125 19       		.uleb128 0x19
 3853 0126 49       		.uleb128 0x49
 3854 0127 13       		.uleb128 0x13
 3855 0128 11       		.uleb128 0x11
 3856 0129 01       		.uleb128 0x1
 3857 012a 12       		.uleb128 0x12
 3858 012b 06       		.uleb128 0x6
 3859 012c 40       		.uleb128 0x40
 3860 012d 18       		.uleb128 0x18
 3861 012e 9742     		.uleb128 0x2117
 3862 0130 19       		.uleb128 0x19
 3863 0131 00       		.byte	0
 3864 0132 00       		.byte	0
 3865 0133 15       		.uleb128 0x15
 3866 0134 898201   		.uleb128 0x4109
 3867 0137 01       		.byte	0x1
 3868 0138 11       		.uleb128 0x11
 3869 0139 01       		.uleb128 0x1
 3870 013a 31       		.uleb128 0x31
 3871 013b 13       		.uleb128 0x13
 3872 013c 00       		.byte	0
 3873 013d 00       		.byte	0
 3874 013e 16       		.uleb128 0x16
 3875 013f 8A8201   		.uleb128 0x410a
 3876 0142 00       		.byte	0
 3877 0143 02       		.uleb128 0x2
 3878 0144 18       		.uleb128 0x18
 3879 0145 9142     		.uleb128 0x2111
 3880 0147 18       		.uleb128 0x18
 3881 0148 00       		.byte	0
 3882 0149 00       		.byte	0
 3883 014a 17       		.uleb128 0x17
 3884 014b 34       		.uleb128 0x34
 3885 014c 00       		.byte	0
 3886 014d 03       		.uleb128 0x3
 3887 014e 0E       		.uleb128 0xe
 3888 014f 3A       		.uleb128 0x3a
 3889 0150 0B       		.uleb128 0xb
 3890 0151 3B       		.uleb128 0x3b
 3891 0152 05       		.uleb128 0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 124


 3892 0153 49       		.uleb128 0x49
 3893 0154 13       		.uleb128 0x13
 3894 0155 1C       		.uleb128 0x1c
 3895 0156 06       		.uleb128 0x6
 3896 0157 00       		.byte	0
 3897 0158 00       		.byte	0
 3898 0159 18       		.uleb128 0x18
 3899 015a 898201   		.uleb128 0x4109
 3900 015d 01       		.byte	0x1
 3901 015e 11       		.uleb128 0x11
 3902 015f 01       		.uleb128 0x1
 3903 0160 31       		.uleb128 0x31
 3904 0161 13       		.uleb128 0x13
 3905 0162 01       		.uleb128 0x1
 3906 0163 13       		.uleb128 0x13
 3907 0164 00       		.byte	0
 3908 0165 00       		.byte	0
 3909 0166 19       		.uleb128 0x19
 3910 0167 2E       		.uleb128 0x2e
 3911 0168 01       		.byte	0x1
 3912 0169 3F       		.uleb128 0x3f
 3913 016a 19       		.uleb128 0x19
 3914 016b 03       		.uleb128 0x3
 3915 016c 0E       		.uleb128 0xe
 3916 016d 3A       		.uleb128 0x3a
 3917 016e 0B       		.uleb128 0xb
 3918 016f 3B       		.uleb128 0x3b
 3919 0170 05       		.uleb128 0x5
 3920 0171 27       		.uleb128 0x27
 3921 0172 19       		.uleb128 0x19
 3922 0173 11       		.uleb128 0x11
 3923 0174 01       		.uleb128 0x1
 3924 0175 12       		.uleb128 0x12
 3925 0176 06       		.uleb128 0x6
 3926 0177 40       		.uleb128 0x40
 3927 0178 18       		.uleb128 0x18
 3928 0179 9642     		.uleb128 0x2116
 3929 017b 19       		.uleb128 0x19
 3930 017c 01       		.uleb128 0x1
 3931 017d 13       		.uleb128 0x13
 3932 017e 00       		.byte	0
 3933 017f 00       		.byte	0
 3934 0180 1A       		.uleb128 0x1a
 3935 0181 2E       		.uleb128 0x2e
 3936 0182 01       		.byte	0x1
 3937 0183 03       		.uleb128 0x3
 3938 0184 0E       		.uleb128 0xe
 3939 0185 3A       		.uleb128 0x3a
 3940 0186 0B       		.uleb128 0xb
 3941 0187 3B       		.uleb128 0x3b
 3942 0188 05       		.uleb128 0x5
 3943 0189 27       		.uleb128 0x27
 3944 018a 19       		.uleb128 0x19
 3945 018b 11       		.uleb128 0x11
 3946 018c 01       		.uleb128 0x1
 3947 018d 12       		.uleb128 0x12
 3948 018e 06       		.uleb128 0x6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 125


 3949 018f 40       		.uleb128 0x40
 3950 0190 18       		.uleb128 0x18
 3951 0191 9642     		.uleb128 0x2116
 3952 0193 19       		.uleb128 0x19
 3953 0194 01       		.uleb128 0x1
 3954 0195 13       		.uleb128 0x13
 3955 0196 00       		.byte	0
 3956 0197 00       		.byte	0
 3957 0198 1B       		.uleb128 0x1b
 3958 0199 34       		.uleb128 0x34
 3959 019a 00       		.byte	0
 3960 019b 03       		.uleb128 0x3
 3961 019c 08       		.uleb128 0x8
 3962 019d 3A       		.uleb128 0x3a
 3963 019e 0B       		.uleb128 0xb
 3964 019f 3B       		.uleb128 0x3b
 3965 01a0 05       		.uleb128 0x5
 3966 01a1 49       		.uleb128 0x49
 3967 01a2 13       		.uleb128 0x13
 3968 01a3 02       		.uleb128 0x2
 3969 01a4 17       		.uleb128 0x17
 3970 01a5 00       		.byte	0
 3971 01a6 00       		.byte	0
 3972 01a7 1C       		.uleb128 0x1c
 3973 01a8 34       		.uleb128 0x34
 3974 01a9 00       		.byte	0
 3975 01aa 03       		.uleb128 0x3
 3976 01ab 0E       		.uleb128 0xe
 3977 01ac 3A       		.uleb128 0x3a
 3978 01ad 0B       		.uleb128 0xb
 3979 01ae 3B       		.uleb128 0x3b
 3980 01af 0B       		.uleb128 0xb
 3981 01b0 49       		.uleb128 0x49
 3982 01b1 13       		.uleb128 0x13
 3983 01b2 02       		.uleb128 0x2
 3984 01b3 18       		.uleb128 0x18
 3985 01b4 00       		.byte	0
 3986 01b5 00       		.byte	0
 3987 01b6 1D       		.uleb128 0x1d
 3988 01b7 34       		.uleb128 0x34
 3989 01b8 00       		.byte	0
 3990 01b9 03       		.uleb128 0x3
 3991 01ba 0E       		.uleb128 0xe
 3992 01bb 3A       		.uleb128 0x3a
 3993 01bc 0B       		.uleb128 0xb
 3994 01bd 3B       		.uleb128 0x3b
 3995 01be 0B       		.uleb128 0xb
 3996 01bf 49       		.uleb128 0x49
 3997 01c0 13       		.uleb128 0x13
 3998 01c1 3F       		.uleb128 0x3f
 3999 01c2 19       		.uleb128 0x19
 4000 01c3 02       		.uleb128 0x2
 4001 01c4 18       		.uleb128 0x18
 4002 01c5 00       		.byte	0
 4003 01c6 00       		.byte	0
 4004 01c7 1E       		.uleb128 0x1e
 4005 01c8 26       		.uleb128 0x26
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 126


 4006 01c9 00       		.byte	0
 4007 01ca 49       		.uleb128 0x49
 4008 01cb 13       		.uleb128 0x13
 4009 01cc 00       		.byte	0
 4010 01cd 00       		.byte	0
 4011 01ce 1F       		.uleb128 0x1f
 4012 01cf 2E       		.uleb128 0x2e
 4013 01d0 00       		.byte	0
 4014 01d1 3F       		.uleb128 0x3f
 4015 01d2 19       		.uleb128 0x19
 4016 01d3 3C       		.uleb128 0x3c
 4017 01d4 19       		.uleb128 0x19
 4018 01d5 6E       		.uleb128 0x6e
 4019 01d6 0E       		.uleb128 0xe
 4020 01d7 03       		.uleb128 0x3
 4021 01d8 0E       		.uleb128 0xe
 4022 01d9 3A       		.uleb128 0x3a
 4023 01da 0B       		.uleb128 0xb
 4024 01db 3B       		.uleb128 0x3b
 4025 01dc 0B       		.uleb128 0xb
 4026 01dd 00       		.byte	0
 4027 01de 00       		.byte	0
 4028 01df 00       		.byte	0
 4029              		.section	.debug_loc,"",%progbits
 4030              	.Ldebug_loc0:
 4031              	.LLST0:
 4032 0000 00000000 		.4byte	.LVL0
 4033 0004 07000000 		.4byte	.LVL1-1
 4034 0008 0100     		.2byte	0x1
 4035 000a 50       		.byte	0x50
 4036 000b 07000000 		.4byte	.LVL1-1
 4037 000f 12000000 		.4byte	.LVL3
 4038 0013 0100     		.2byte	0x1
 4039 0015 54       		.byte	0x54
 4040 0016 12000000 		.4byte	.LVL3
 4041 001a 20000000 		.4byte	.LFE4
 4042 001e 0400     		.2byte	0x4
 4043 0020 F3       		.byte	0xf3
 4044 0021 01       		.uleb128 0x1
 4045 0022 50       		.byte	0x50
 4046 0023 9F       		.byte	0x9f
 4047 0024 00000000 		.4byte	0
 4048 0028 00000000 		.4byte	0
 4049              	.LLST1:
 4050 002c 08000000 		.4byte	.LVL1
 4051 0030 19000000 		.4byte	.LVL5-1
 4052 0034 0100     		.2byte	0x1
 4053 0036 50       		.byte	0x50
 4054 0037 00000000 		.4byte	0
 4055 003b 00000000 		.4byte	0
 4056              	.LLST2:
 4057 003f 10000000 		.4byte	.LVL2
 4058 0043 14000000 		.4byte	.LVL4
 4059 0047 0100     		.2byte	0x1
 4060 0049 53       		.byte	0x53
 4061 004a 14000000 		.4byte	.LVL4
 4062 004e 1A000000 		.4byte	.LVL6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 127


 4063 0052 0100     		.2byte	0x1
 4064 0054 54       		.byte	0x54
 4065 0055 00000000 		.4byte	0
 4066 0059 00000000 		.4byte	0
 4067              	.LLST3:
 4068 005d 06000000 		.4byte	.LVL8
 4069 0061 11000000 		.4byte	.LVL10-1
 4070 0065 0100     		.2byte	0x1
 4071 0067 50       		.byte	0x50
 4072 0068 00000000 		.4byte	0
 4073 006c 00000000 		.4byte	0
 4074              	.LLST4:
 4075 0070 0E000000 		.4byte	.LVL9
 4076 0074 14000000 		.4byte	.LVL11
 4077 0078 0100     		.2byte	0x1
 4078 007a 54       		.byte	0x54
 4079 007b 14000000 		.4byte	.LVL11
 4080 007f 1C000000 		.4byte	.LFE6
 4081 0083 0100     		.2byte	0x1
 4082 0085 50       		.byte	0x50
 4083 0086 00000000 		.4byte	0
 4084 008a 00000000 		.4byte	0
 4085              	.LLST5:
 4086 008e 00000000 		.4byte	.LVL12
 4087 0092 07000000 		.4byte	.LVL13-1
 4088 0096 0100     		.2byte	0x1
 4089 0098 50       		.byte	0x50
 4090 0099 07000000 		.4byte	.LVL13-1
 4091 009d 14000000 		.4byte	.LVL14
 4092 00a1 0100     		.2byte	0x1
 4093 00a3 54       		.byte	0x54
 4094 00a4 14000000 		.4byte	.LVL14
 4095 00a8 30000000 		.4byte	.LFE7
 4096 00ac 0400     		.2byte	0x4
 4097 00ae F3       		.byte	0xf3
 4098 00af 01       		.uleb128 0x1
 4099 00b0 50       		.byte	0x50
 4100 00b1 9F       		.byte	0x9f
 4101 00b2 00000000 		.4byte	0
 4102 00b6 00000000 		.4byte	0
 4103              	.LLST6:
 4104 00ba 08000000 		.4byte	.LVL13
 4105 00be 23000000 		.4byte	.LVL15-1
 4106 00c2 0100     		.2byte	0x1
 4107 00c4 50       		.byte	0x50
 4108 00c5 00000000 		.4byte	0
 4109 00c9 00000000 		.4byte	0
 4110              	.LLST7:
 4111 00cd 00000000 		.4byte	.LVL16
 4112 00d1 09000000 		.4byte	.LVL17-1
 4113 00d5 0100     		.2byte	0x1
 4114 00d7 50       		.byte	0x50
 4115 00d8 09000000 		.4byte	.LVL17-1
 4116 00dc 18000000 		.4byte	.LVL18
 4117 00e0 0100     		.2byte	0x1
 4118 00e2 54       		.byte	0x54
 4119 00e3 18000000 		.4byte	.LVL18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 128


 4120 00e7 40000000 		.4byte	.LVL20
 4121 00eb 0300     		.2byte	0x3
 4122 00ed 74       		.byte	0x74
 4123 00ee 03       		.sleb128 3
 4124 00ef 9F       		.byte	0x9f
 4125 00f0 40000000 		.4byte	.LVL20
 4126 00f4 64000000 		.4byte	.LFE8
 4127 00f8 0400     		.2byte	0x4
 4128 00fa F3       		.byte	0xf3
 4129 00fb 01       		.uleb128 0x1
 4130 00fc 50       		.byte	0x50
 4131 00fd 9F       		.byte	0x9f
 4132 00fe 00000000 		.4byte	0
 4133 0102 00000000 		.4byte	0
 4134              	.LLST8:
 4135 0106 0A000000 		.4byte	.LVL17
 4136 010a 3D000000 		.4byte	.LVL19-1
 4137 010e 0100     		.2byte	0x1
 4138 0110 50       		.byte	0x50
 4139 0111 00000000 		.4byte	0
 4140 0115 00000000 		.4byte	0
 4141              	.LLST9:
 4142 0119 00000000 		.4byte	.LVL22
 4143 011d 04000000 		.4byte	.LVL23
 4144 0121 0100     		.2byte	0x1
 4145 0123 50       		.byte	0x50
 4146 0124 04000000 		.4byte	.LVL23
 4147 0128 14000000 		.4byte	.LFE17
 4148 012c 0100     		.2byte	0x1
 4149 012e 52       		.byte	0x52
 4150 012f 00000000 		.4byte	0
 4151 0133 00000000 		.4byte	0
 4152              	.LLST10:
 4153 0137 00000000 		.4byte	.LVL28
 4154 013b 04000000 		.4byte	.LVL29
 4155 013f 0100     		.2byte	0x1
 4156 0141 50       		.byte	0x50
 4157 0142 04000000 		.4byte	.LVL29
 4158 0146 14000000 		.4byte	.LFE26
 4159 014a 0400     		.2byte	0x4
 4160 014c F3       		.byte	0xf3
 4161 014d 01       		.uleb128 0x1
 4162 014e 50       		.byte	0x50
 4163 014f 9F       		.byte	0x9f
 4164 0150 00000000 		.4byte	0
 4165 0154 00000000 		.4byte	0
 4166              	.LLST11:
 4167 0158 00000000 		.4byte	.LVL30
 4168 015c 08000000 		.4byte	.LVL31
 4169 0160 0100     		.2byte	0x1
 4170 0162 50       		.byte	0x50
 4171 0163 08000000 		.4byte	.LVL31
 4172 0167 18000000 		.4byte	.LFE27
 4173 016b 0400     		.2byte	0x4
 4174 016d F3       		.byte	0xf3
 4175 016e 01       		.uleb128 0x1
 4176 016f 50       		.byte	0x50
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 129


 4177 0170 9F       		.byte	0x9f
 4178 0171 00000000 		.4byte	0
 4179 0175 00000000 		.4byte	0
 4180              	.LLST12:
 4181 0179 00000000 		.4byte	.LVL32
 4182 017d 04000000 		.4byte	.LVL33
 4183 0181 0100     		.2byte	0x1
 4184 0183 50       		.byte	0x50
 4185 0184 04000000 		.4byte	.LVL33
 4186 0188 14000000 		.4byte	.LFE28
 4187 018c 0400     		.2byte	0x4
 4188 018e F3       		.byte	0xf3
 4189 018f 01       		.uleb128 0x1
 4190 0190 50       		.byte	0x50
 4191 0191 9F       		.byte	0x9f
 4192 0192 00000000 		.4byte	0
 4193 0196 00000000 		.4byte	0
 4194              	.LLST13:
 4195 019a 00000000 		.4byte	.LVL34
 4196 019e 04000000 		.4byte	.LVL35
 4197 01a2 0100     		.2byte	0x1
 4198 01a4 50       		.byte	0x50
 4199 01a5 04000000 		.4byte	.LVL35
 4200 01a9 14000000 		.4byte	.LFE29
 4201 01ad 0400     		.2byte	0x4
 4202 01af F3       		.byte	0xf3
 4203 01b0 01       		.uleb128 0x1
 4204 01b1 50       		.byte	0x50
 4205 01b2 9F       		.byte	0x9f
 4206 01b3 00000000 		.4byte	0
 4207 01b7 00000000 		.4byte	0
 4208              	.LLST14:
 4209 01bb 00000000 		.4byte	.LVL36
 4210 01bf 04000000 		.4byte	.LVL37
 4211 01c3 0100     		.2byte	0x1
 4212 01c5 50       		.byte	0x50
 4213 01c6 04000000 		.4byte	.LVL37
 4214 01ca 14000000 		.4byte	.LFE30
 4215 01ce 0400     		.2byte	0x4
 4216 01d0 F3       		.byte	0xf3
 4217 01d1 01       		.uleb128 0x1
 4218 01d2 50       		.byte	0x50
 4219 01d3 9F       		.byte	0x9f
 4220 01d4 00000000 		.4byte	0
 4221 01d8 00000000 		.4byte	0
 4222              	.LLST15:
 4223 01dc 00000000 		.4byte	.LVL39
 4224 01e0 13000000 		.4byte	.LVL40-1
 4225 01e4 0100     		.2byte	0x1
 4226 01e6 50       		.byte	0x50
 4227 01e7 13000000 		.4byte	.LVL40-1
 4228 01eb 18000000 		.4byte	.LVL41
 4229 01ef 0100     		.2byte	0x1
 4230 01f1 54       		.byte	0x54
 4231 01f2 18000000 		.4byte	.LVL41
 4232 01f6 28000000 		.4byte	.LVL43
 4233 01fa 0400     		.2byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 130


 4234 01fc F3       		.byte	0xf3
 4235 01fd 01       		.uleb128 0x1
 4236 01fe 50       		.byte	0x50
 4237 01ff 9F       		.byte	0x9f
 4238 0200 28000000 		.4byte	.LVL43
 4239 0204 2A000000 		.4byte	.LVL44
 4240 0208 0100     		.2byte	0x1
 4241 020a 50       		.byte	0x50
 4242 020b 2A000000 		.4byte	.LVL44
 4243 020f 2E000000 		.4byte	.LVL45
 4244 0213 0100     		.2byte	0x1
 4245 0215 54       		.byte	0x54
 4246 0216 2E000000 		.4byte	.LVL45
 4247 021a 38000000 		.4byte	.LFE12
 4248 021e 0400     		.2byte	0x4
 4249 0220 F3       		.byte	0xf3
 4250 0221 01       		.uleb128 0x1
 4251 0222 50       		.byte	0x50
 4252 0223 9F       		.byte	0x9f
 4253 0224 00000000 		.4byte	0
 4254 0228 00000000 		.4byte	0
 4255              	.LLST16:
 4256 022c 14000000 		.4byte	.LVL40
 4257 0230 25000000 		.4byte	.LVL42-1
 4258 0234 0100     		.2byte	0x1
 4259 0236 50       		.byte	0x50
 4260 0237 00000000 		.4byte	0
 4261 023b 00000000 		.4byte	0
 4262              	.LLST17:
 4263 023f 00000000 		.4byte	.LVL46
 4264 0243 0C000000 		.4byte	.LVL48
 4265 0247 0100     		.2byte	0x1
 4266 0249 50       		.byte	0x50
 4267 024a 0C000000 		.4byte	.LVL48
 4268 024e 20000000 		.4byte	.LFE20
 4269 0252 0400     		.2byte	0x4
 4270 0254 F3       		.byte	0xf3
 4271 0255 01       		.uleb128 0x1
 4272 0256 50       		.byte	0x50
 4273 0257 9F       		.byte	0x9f
 4274 0258 00000000 		.4byte	0
 4275 025c 00000000 		.4byte	0
 4276              	.LLST18:
 4277 0260 00000000 		.4byte	.LVL46
 4278 0264 0F000000 		.4byte	.LVL49-1
 4279 0268 0100     		.2byte	0x1
 4280 026a 51       		.byte	0x51
 4281 026b 0F000000 		.4byte	.LVL49-1
 4282 026f 1E000000 		.4byte	.LVL51
 4283 0273 0100     		.2byte	0x1
 4284 0275 55       		.byte	0x55
 4285 0276 1E000000 		.4byte	.LVL51
 4286 027a 20000000 		.4byte	.LFE20
 4287 027e 0400     		.2byte	0x4
 4288 0280 F3       		.byte	0xf3
 4289 0281 01       		.uleb128 0x1
 4290 0282 51       		.byte	0x51
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 131


 4291 0283 9F       		.byte	0x9f
 4292 0284 00000000 		.4byte	0
 4293 0288 00000000 		.4byte	0
 4294              	.LLST19:
 4295 028c 00000000 		.4byte	.LVL52
 4296 0290 0A000000 		.4byte	.LVL54
 4297 0294 0100     		.2byte	0x1
 4298 0296 50       		.byte	0x50
 4299 0297 0A000000 		.4byte	.LVL54
 4300 029b 1C000000 		.4byte	.LFE21
 4301 029f 0400     		.2byte	0x4
 4302 02a1 F3       		.byte	0xf3
 4303 02a2 01       		.uleb128 0x1
 4304 02a3 50       		.byte	0x50
 4305 02a4 9F       		.byte	0x9f
 4306 02a5 00000000 		.4byte	0
 4307 02a9 00000000 		.4byte	0
 4308              	.LLST20:
 4309 02ad 00000000 		.4byte	.LVL56
 4310 02b1 0C000000 		.4byte	.LVL58
 4311 02b5 0100     		.2byte	0x1
 4312 02b7 50       		.byte	0x50
 4313 02b8 0C000000 		.4byte	.LVL58
 4314 02bc 22000000 		.4byte	.LFE22
 4315 02c0 0400     		.2byte	0x4
 4316 02c2 F3       		.byte	0xf3
 4317 02c3 01       		.uleb128 0x1
 4318 02c4 50       		.byte	0x50
 4319 02c5 9F       		.byte	0x9f
 4320 02c6 00000000 		.4byte	0
 4321 02ca 00000000 		.4byte	0
 4322              	.LLST21:
 4323 02ce 00000000 		.4byte	.LVL56
 4324 02d2 0F000000 		.4byte	.LVL59-1
 4325 02d6 0100     		.2byte	0x1
 4326 02d8 51       		.byte	0x51
 4327 02d9 0F000000 		.4byte	.LVL59-1
 4328 02dd 20000000 		.4byte	.LVL61
 4329 02e1 0100     		.2byte	0x1
 4330 02e3 55       		.byte	0x55
 4331 02e4 20000000 		.4byte	.LVL61
 4332 02e8 22000000 		.4byte	.LFE22
 4333 02ec 0400     		.2byte	0x4
 4334 02ee F3       		.byte	0xf3
 4335 02ef 01       		.uleb128 0x1
 4336 02f0 51       		.byte	0x51
 4337 02f1 9F       		.byte	0x9f
 4338 02f2 00000000 		.4byte	0
 4339 02f6 00000000 		.4byte	0
 4340              	.LLST22:
 4341 02fa 00000000 		.4byte	.LVL62
 4342 02fe 0A000000 		.4byte	.LVL64
 4343 0302 0100     		.2byte	0x1
 4344 0304 50       		.byte	0x50
 4345 0305 0A000000 		.4byte	.LVL64
 4346 0309 1E000000 		.4byte	.LFE23
 4347 030d 0400     		.2byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 132


 4348 030f F3       		.byte	0xf3
 4349 0310 01       		.uleb128 0x1
 4350 0311 50       		.byte	0x50
 4351 0312 9F       		.byte	0x9f
 4352 0313 00000000 		.4byte	0
 4353 0317 00000000 		.4byte	0
 4354              	.LLST23:
 4355 031b 00000000 		.4byte	.LVL66
 4356 031f 0C000000 		.4byte	.LVL67
 4357 0323 0100     		.2byte	0x1
 4358 0325 50       		.byte	0x50
 4359 0326 0C000000 		.4byte	.LVL67
 4360 032a 4C000000 		.4byte	.LFE24
 4361 032e 0400     		.2byte	0x4
 4362 0330 F3       		.byte	0xf3
 4363 0331 01       		.uleb128 0x1
 4364 0332 50       		.byte	0x50
 4365 0333 9F       		.byte	0x9f
 4366 0334 00000000 		.4byte	0
 4367 0338 00000000 		.4byte	0
 4368              	.LLST24:
 4369 033c 00000000 		.4byte	.LVL66
 4370 0340 0F000000 		.4byte	.LVL68-1
 4371 0344 0100     		.2byte	0x1
 4372 0346 51       		.byte	0x51
 4373 0347 0F000000 		.4byte	.LVL68-1
 4374 034b 4C000000 		.4byte	.LFE24
 4375 034f 0400     		.2byte	0x4
 4376 0351 F3       		.byte	0xf3
 4377 0352 01       		.uleb128 0x1
 4378 0353 51       		.byte	0x51
 4379 0354 9F       		.byte	0x9f
 4380 0355 00000000 		.4byte	0
 4381 0359 00000000 		.4byte	0
 4382              	.LLST25:
 4383 035d 26000000 		.4byte	.LVL71
 4384 0361 45000000 		.4byte	.LVL77-1
 4385 0365 0100     		.2byte	0x1
 4386 0367 50       		.byte	0x50
 4387 0368 00000000 		.4byte	0
 4388 036c 00000000 		.4byte	0
 4389              	.LLST26:
 4390 0370 22000000 		.4byte	.LVL70
 4391 0374 46000000 		.4byte	.LVL78
 4392 0378 0100     		.2byte	0x1
 4393 037a 55       		.byte	0x55
 4394 037b 00000000 		.4byte	0
 4395 037f 00000000 		.4byte	0
 4396              	.LLST27:
 4397 0383 32000000 		.4byte	.LVL72
 4398 0387 38000000 		.4byte	.LVL73
 4399 038b 0100     		.2byte	0x1
 4400 038d 51       		.byte	0x51
 4401 038e 3A000000 		.4byte	.LVL74
 4402 0392 3C000000 		.4byte	.LVL75
 4403 0396 0100     		.2byte	0x1
 4404 0398 51       		.byte	0x51
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 133


 4405 0399 3C000000 		.4byte	.LVL75
 4406 039d 40000000 		.4byte	.LVL76
 4407 03a1 0100     		.2byte	0x1
 4408 03a3 53       		.byte	0x53
 4409 03a4 40000000 		.4byte	.LVL76
 4410 03a8 45000000 		.4byte	.LVL77-1
 4411 03ac 0100     		.2byte	0x1
 4412 03ae 51       		.byte	0x51
 4413 03af 00000000 		.4byte	0
 4414 03b3 00000000 		.4byte	0
 4415              	.LLST28:
 4416 03b7 00000000 		.4byte	.LVL79
 4417 03bb 0A000000 		.4byte	.LVL80
 4418 03bf 0100     		.2byte	0x1
 4419 03c1 50       		.byte	0x50
 4420 03c2 0A000000 		.4byte	.LVL80
 4421 03c6 2C000000 		.4byte	.LFE25
 4422 03ca 0400     		.2byte	0x4
 4423 03cc F3       		.byte	0xf3
 4424 03cd 01       		.uleb128 0x1
 4425 03ce 50       		.byte	0x50
 4426 03cf 9F       		.byte	0x9f
 4427 03d0 00000000 		.4byte	0
 4428 03d4 00000000 		.4byte	0
 4429              	.LLST29:
 4430 03d8 24000000 		.4byte	.LVL82
 4431 03dc 26000000 		.4byte	.LVL83
 4432 03e0 0100     		.2byte	0x1
 4433 03e2 50       		.byte	0x50
 4434 03e3 00000000 		.4byte	0
 4435 03e7 00000000 		.4byte	0
 4436              	.LLST30:
 4437 03eb 00000000 		.4byte	.LVL84
 4438 03ef 06000000 		.4byte	.LVL85
 4439 03f3 0100     		.2byte	0x1
 4440 03f5 50       		.byte	0x50
 4441 03f6 06000000 		.4byte	.LVL85
 4442 03fa 26000000 		.4byte	.LVL89
 4443 03fe 0100     		.2byte	0x1
 4444 0400 54       		.byte	0x54
 4445 0401 00000000 		.4byte	0
 4446 0405 00000000 		.4byte	0
 4447              	.LLST31:
 4448 0409 00000000 		.4byte	.LVL90
 4449 040d 08000000 		.4byte	.LVL91
 4450 0411 0100     		.2byte	0x1
 4451 0413 50       		.byte	0x50
 4452 0414 08000000 		.4byte	.LVL91
 4453 0418 14000000 		.4byte	.LFE34
 4454 041c 0400     		.2byte	0x4
 4455 041e F3       		.byte	0xf3
 4456 041f 01       		.uleb128 0x1
 4457 0420 50       		.byte	0x50
 4458 0421 9F       		.byte	0x9f
 4459 0422 00000000 		.4byte	0
 4460 0426 00000000 		.4byte	0
 4461              	.LLST32:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 134


 4462 042a 00000000 		.4byte	.LVL93
 4463 042e 26000000 		.4byte	.LVL95
 4464 0432 0100     		.2byte	0x1
 4465 0434 50       		.byte	0x50
 4466 0435 26000000 		.4byte	.LVL95
 4467 0439 42000000 		.4byte	.LVL100
 4468 043d 0100     		.2byte	0x1
 4469 043f 54       		.byte	0x54
 4470 0440 00000000 		.4byte	0
 4471 0444 00000000 		.4byte	0
 4472              	.LLST33:
 4473 0448 04000000 		.4byte	.LVL94
 4474 044c 42000000 		.4byte	.LVL99
 4475 0450 0200     		.2byte	0x2
 4476 0452 30       		.byte	0x30
 4477 0453 9F       		.byte	0x9f
 4478 0454 42000000 		.4byte	.LVL99
 4479 0458 54000000 		.4byte	.LFE9
 4480 045c 0100     		.2byte	0x1
 4481 045e 50       		.byte	0x50
 4482 045f 00000000 		.4byte	0
 4483 0463 00000000 		.4byte	0
 4484              	.LLST34:
 4485 0467 00000000 		.4byte	.LVL101
 4486 046b 14000000 		.4byte	.LVL102
 4487 046f 0100     		.2byte	0x1
 4488 0471 50       		.byte	0x50
 4489 0472 14000000 		.4byte	.LVL102
 4490 0476 18000000 		.4byte	.LVL103
 4491 047a 0100     		.2byte	0x1
 4492 047c 53       		.byte	0x53
 4493 047d 18000000 		.4byte	.LVL103
 4494 0481 44000000 		.4byte	.LFE13
 4495 0485 0400     		.2byte	0x4
 4496 0487 F3       		.byte	0xf3
 4497 0488 01       		.uleb128 0x1
 4498 0489 50       		.byte	0x50
 4499 048a 9F       		.byte	0x9f
 4500 048b 00000000 		.4byte	0
 4501 048f 00000000 		.4byte	0
 4502              	.LLST35:
 4503 0493 00000000 		.4byte	.LVL106
 4504 0497 1A000000 		.4byte	.LVL107
 4505 049b 0100     		.2byte	0x1
 4506 049d 50       		.byte	0x50
 4507 049e 1A000000 		.4byte	.LVL107
 4508 04a2 4C000000 		.4byte	.LFE35
 4509 04a6 0400     		.2byte	0x4
 4510 04a8 F3       		.byte	0xf3
 4511 04a9 01       		.uleb128 0x1
 4512 04aa 50       		.byte	0x50
 4513 04ab 9F       		.byte	0x9f
 4514 04ac 00000000 		.4byte	0
 4515 04b0 00000000 		.4byte	0
 4516              	.LLST36:
 4517 04b4 00000000 		.4byte	.LVL111
 4518 04b8 02000000 		.4byte	.LVL112
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 135


 4519 04bc 0100     		.2byte	0x1
 4520 04be 50       		.byte	0x50
 4521 04bf 02000000 		.4byte	.LVL112
 4522 04c3 10000000 		.4byte	.LFE42
 4523 04c7 0400     		.2byte	0x4
 4524 04c9 F3       		.byte	0xf3
 4525 04ca 01       		.uleb128 0x1
 4526 04cb 50       		.byte	0x50
 4527 04cc 9F       		.byte	0x9f
 4528 04cd 00000000 		.4byte	0
 4529 04d1 00000000 		.4byte	0
 4530              	.LLST37:
 4531 04d5 0C000000 		.4byte	.LVL115
 4532 04d9 1C000000 		.4byte	.LVL118
 4533 04dd 0100     		.2byte	0x1
 4534 04df 54       		.byte	0x54
 4535 04e0 1E000000 		.4byte	.LVL119
 4536 04e4 22000000 		.4byte	.LVL120
 4537 04e8 0100     		.2byte	0x1
 4538 04ea 54       		.byte	0x54
 4539 04eb 00000000 		.4byte	0
 4540 04ef 00000000 		.4byte	0
 4541              	.LLST38:
 4542 04f3 02000000 		.4byte	.LVL121
 4543 04f7 06000000 		.4byte	.LVL122
 4544 04fb 0200     		.2byte	0x2
 4545 04fd 30       		.byte	0x30
 4546 04fe 9F       		.byte	0x9f
 4547 04ff 06000000 		.4byte	.LVL122
 4548 0503 1B000000 		.4byte	.LVL124-1
 4549 0507 0100     		.2byte	0x1
 4550 0509 53       		.byte	0x53
 4551 050a 00000000 		.4byte	0
 4552 050e 00000000 		.4byte	0
 4553              	.LLST39:
 4554 0512 00000000 		.4byte	.LVL132
 4555 0516 06000000 		.4byte	.LVL133
 4556 051a 0100     		.2byte	0x1
 4557 051c 50       		.byte	0x50
 4558 051d 06000000 		.4byte	.LVL133
 4559 0521 10000000 		.4byte	.LFE49
 4560 0525 0400     		.2byte	0x4
 4561 0527 F3       		.byte	0xf3
 4562 0528 01       		.uleb128 0x1
 4563 0529 50       		.byte	0x50
 4564 052a 9F       		.byte	0x9f
 4565 052b 00000000 		.4byte	0
 4566 052f 00000000 		.4byte	0
 4567              	.LLST40:
 4568 0533 00000000 		.4byte	.LVL134
 4569 0537 02000000 		.4byte	.LVL135
 4570 053b 0100     		.2byte	0x1
 4571 053d 50       		.byte	0x50
 4572 053e 02000000 		.4byte	.LVL135
 4573 0542 0C000000 		.4byte	.LFE50
 4574 0546 0400     		.2byte	0x4
 4575 0548 F3       		.byte	0xf3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 136


 4576 0549 01       		.uleb128 0x1
 4577 054a 50       		.byte	0x50
 4578 054b 9F       		.byte	0x9f
 4579 054c 00000000 		.4byte	0
 4580 0550 00000000 		.4byte	0
 4581              		.section	.debug_aranges,"",%progbits
 4582 0000 AC010000 		.4byte	0x1ac
 4583 0004 0200     		.2byte	0x2
 4584 0006 00000000 		.4byte	.Ldebug_info0
 4585 000a 04       		.byte	0x4
 4586 000b 00       		.byte	0
 4587 000c 0000     		.2byte	0
 4588 000e 0000     		.2byte	0
 4589 0010 00000000 		.4byte	.LFB2
 4590 0014 14000000 		.4byte	.LFE2-.LFB2
 4591 0018 00000000 		.4byte	.LFB3
 4592 001c 10000000 		.4byte	.LFE3-.LFB3
 4593 0020 00000000 		.4byte	.LFB4
 4594 0024 20000000 		.4byte	.LFE4-.LFB4
 4595 0028 00000000 		.4byte	.LFB5
 4596 002c 38000000 		.4byte	.LFE5-.LFB5
 4597 0030 00000000 		.4byte	.LFB6
 4598 0034 1C000000 		.4byte	.LFE6-.LFB6
 4599 0038 00000000 		.4byte	.LFB7
 4600 003c 30000000 		.4byte	.LFE7-.LFB7
 4601 0040 00000000 		.4byte	.LFB8
 4602 0044 64000000 		.4byte	.LFE8-.LFB8
 4603 0048 00000000 		.4byte	.LFB10
 4604 004c 24000000 		.4byte	.LFE10-.LFB10
 4605 0050 00000000 		.4byte	.LFB11
 4606 0054 10000000 		.4byte	.LFE11-.LFB11
 4607 0058 00000000 		.4byte	.LFB14
 4608 005c 20000000 		.4byte	.LFE14-.LFB14
 4609 0060 00000000 		.4byte	.LFB15
 4610 0064 10000000 		.4byte	.LFE15-.LFB15
 4611 0068 00000000 		.4byte	.LFB16
 4612 006c 0C000000 		.4byte	.LFE16-.LFB16
 4613 0070 00000000 		.4byte	.LFB17
 4614 0074 14000000 		.4byte	.LFE17-.LFB17
 4615 0078 00000000 		.4byte	.LFB18
 4616 007c 10000000 		.4byte	.LFE18-.LFB18
 4617 0080 00000000 		.4byte	.LFB19
 4618 0084 0C000000 		.4byte	.LFE19-.LFB19
 4619 0088 00000000 		.4byte	.LFB26
 4620 008c 14000000 		.4byte	.LFE26-.LFB26
 4621 0090 00000000 		.4byte	.LFB27
 4622 0094 18000000 		.4byte	.LFE27-.LFB27
 4623 0098 00000000 		.4byte	.LFB28
 4624 009c 14000000 		.4byte	.LFE28-.LFB28
 4625 00a0 00000000 		.4byte	.LFB29
 4626 00a4 14000000 		.4byte	.LFE29-.LFB29
 4627 00a8 00000000 		.4byte	.LFB30
 4628 00ac 14000000 		.4byte	.LFE30-.LFB30
 4629 00b0 00000000 		.4byte	.LFB31
 4630 00b4 04000000 		.4byte	.LFE31-.LFB31
 4631 00b8 00000000 		.4byte	.LFB12
 4632 00bc 38000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 137


 4633 00c0 00000000 		.4byte	.LFB20
 4634 00c4 20000000 		.4byte	.LFE20-.LFB20
 4635 00c8 00000000 		.4byte	.LFB21
 4636 00cc 1C000000 		.4byte	.LFE21-.LFB21
 4637 00d0 00000000 		.4byte	.LFB22
 4638 00d4 22000000 		.4byte	.LFE22-.LFB22
 4639 00d8 00000000 		.4byte	.LFB23
 4640 00dc 1E000000 		.4byte	.LFE23-.LFB23
 4641 00e0 00000000 		.4byte	.LFB24
 4642 00e4 4C000000 		.4byte	.LFE24-.LFB24
 4643 00e8 00000000 		.4byte	.LFB25
 4644 00ec 2C000000 		.4byte	.LFE25-.LFB25
 4645 00f0 00000000 		.4byte	.LFB32
 4646 00f4 18000000 		.4byte	.LFE32-.LFB32
 4647 00f8 00000000 		.4byte	.LFB33
 4648 00fc 30000000 		.4byte	.LFE33-.LFB33
 4649 0100 00000000 		.4byte	.LFB34
 4650 0104 14000000 		.4byte	.LFE34-.LFB34
 4651 0108 00000000 		.4byte	.LFB9
 4652 010c 54000000 		.4byte	.LFE9-.LFB9
 4653 0110 00000000 		.4byte	.LFB13
 4654 0114 44000000 		.4byte	.LFE13-.LFB13
 4655 0118 00000000 		.4byte	.LFB35
 4656 011c 4C000000 		.4byte	.LFE35-.LFB35
 4657 0120 00000000 		.4byte	.LFB39
 4658 0124 10000000 		.4byte	.LFE39-.LFB39
 4659 0128 00000000 		.4byte	.LFB40
 4660 012c 10000000 		.4byte	.LFE40-.LFB40
 4661 0130 00000000 		.4byte	.LFB38
 4662 0134 18000000 		.4byte	.LFE38-.LFB38
 4663 0138 00000000 		.4byte	.LFB41
 4664 013c 10000000 		.4byte	.LFE41-.LFB41
 4665 0140 00000000 		.4byte	.LFB42
 4666 0144 10000000 		.4byte	.LFE42-.LFB42
 4667 0148 00000000 		.4byte	.LFB43
 4668 014c 10000000 		.4byte	.LFE43-.LFB43
 4669 0150 00000000 		.4byte	.LFB44
 4670 0154 10000000 		.4byte	.LFE44-.LFB44
 4671 0158 00000000 		.4byte	.LFB45
 4672 015c 20000000 		.4byte	.LFE45-.LFB45
 4673 0160 00000000 		.4byte	.LFB46
 4674 0164 10000000 		.4byte	.LFE46-.LFB46
 4675 0168 00000000 		.4byte	.LFB47
 4676 016c 10000000 		.4byte	.LFE47-.LFB47
 4677 0170 00000000 		.4byte	.LFB51
 4678 0174 28000000 		.4byte	.LFE51-.LFB51
 4679 0178 00000000 		.4byte	.LFB48
 4680 017c 0C000000 		.4byte	.LFE48-.LFB48
 4681 0180 00000000 		.4byte	.LFB37
 4682 0184 4C000000 		.4byte	.LFE37-.LFB37
 4683 0188 00000000 		.4byte	.LFB36
 4684 018c 20000000 		.4byte	.LFE36-.LFB36
 4685 0190 00000000 		.4byte	.LFB49
 4686 0194 10000000 		.4byte	.LFE49-.LFB49
 4687 0198 00000000 		.4byte	.LFB50
 4688 019c 0C000000 		.4byte	.LFE50-.LFB50
 4689 01a0 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 138


 4690 01a4 70000000 		.4byte	.LFE52-.LFB52
 4691 01a8 00000000 		.4byte	0
 4692 01ac 00000000 		.4byte	0
 4693              		.section	.debug_ranges,"",%progbits
 4694              	.Ldebug_ranges0:
 4695 0000 00000000 		.4byte	.LFB2
 4696 0004 14000000 		.4byte	.LFE2
 4697 0008 00000000 		.4byte	.LFB3
 4698 000c 10000000 		.4byte	.LFE3
 4699 0010 00000000 		.4byte	.LFB4
 4700 0014 20000000 		.4byte	.LFE4
 4701 0018 00000000 		.4byte	.LFB5
 4702 001c 38000000 		.4byte	.LFE5
 4703 0020 00000000 		.4byte	.LFB6
 4704 0024 1C000000 		.4byte	.LFE6
 4705 0028 00000000 		.4byte	.LFB7
 4706 002c 30000000 		.4byte	.LFE7
 4707 0030 00000000 		.4byte	.LFB8
 4708 0034 64000000 		.4byte	.LFE8
 4709 0038 00000000 		.4byte	.LFB10
 4710 003c 24000000 		.4byte	.LFE10
 4711 0040 00000000 		.4byte	.LFB11
 4712 0044 10000000 		.4byte	.LFE11
 4713 0048 00000000 		.4byte	.LFB14
 4714 004c 20000000 		.4byte	.LFE14
 4715 0050 00000000 		.4byte	.LFB15
 4716 0054 10000000 		.4byte	.LFE15
 4717 0058 00000000 		.4byte	.LFB16
 4718 005c 0C000000 		.4byte	.LFE16
 4719 0060 00000000 		.4byte	.LFB17
 4720 0064 14000000 		.4byte	.LFE17
 4721 0068 00000000 		.4byte	.LFB18
 4722 006c 10000000 		.4byte	.LFE18
 4723 0070 00000000 		.4byte	.LFB19
 4724 0074 0C000000 		.4byte	.LFE19
 4725 0078 00000000 		.4byte	.LFB26
 4726 007c 14000000 		.4byte	.LFE26
 4727 0080 00000000 		.4byte	.LFB27
 4728 0084 18000000 		.4byte	.LFE27
 4729 0088 00000000 		.4byte	.LFB28
 4730 008c 14000000 		.4byte	.LFE28
 4731 0090 00000000 		.4byte	.LFB29
 4732 0094 14000000 		.4byte	.LFE29
 4733 0098 00000000 		.4byte	.LFB30
 4734 009c 14000000 		.4byte	.LFE30
 4735 00a0 00000000 		.4byte	.LFB31
 4736 00a4 04000000 		.4byte	.LFE31
 4737 00a8 00000000 		.4byte	.LFB12
 4738 00ac 38000000 		.4byte	.LFE12
 4739 00b0 00000000 		.4byte	.LFB20
 4740 00b4 20000000 		.4byte	.LFE20
 4741 00b8 00000000 		.4byte	.LFB21
 4742 00bc 1C000000 		.4byte	.LFE21
 4743 00c0 00000000 		.4byte	.LFB22
 4744 00c4 22000000 		.4byte	.LFE22
 4745 00c8 00000000 		.4byte	.LFB23
 4746 00cc 1E000000 		.4byte	.LFE23
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 139


 4747 00d0 00000000 		.4byte	.LFB24
 4748 00d4 4C000000 		.4byte	.LFE24
 4749 00d8 00000000 		.4byte	.LFB25
 4750 00dc 2C000000 		.4byte	.LFE25
 4751 00e0 00000000 		.4byte	.LFB32
 4752 00e4 18000000 		.4byte	.LFE32
 4753 00e8 00000000 		.4byte	.LFB33
 4754 00ec 30000000 		.4byte	.LFE33
 4755 00f0 00000000 		.4byte	.LFB34
 4756 00f4 14000000 		.4byte	.LFE34
 4757 00f8 00000000 		.4byte	.LFB9
 4758 00fc 54000000 		.4byte	.LFE9
 4759 0100 00000000 		.4byte	.LFB13
 4760 0104 44000000 		.4byte	.LFE13
 4761 0108 00000000 		.4byte	.LFB35
 4762 010c 4C000000 		.4byte	.LFE35
 4763 0110 00000000 		.4byte	.LFB39
 4764 0114 10000000 		.4byte	.LFE39
 4765 0118 00000000 		.4byte	.LFB40
 4766 011c 10000000 		.4byte	.LFE40
 4767 0120 00000000 		.4byte	.LFB38
 4768 0124 18000000 		.4byte	.LFE38
 4769 0128 00000000 		.4byte	.LFB41
 4770 012c 10000000 		.4byte	.LFE41
 4771 0130 00000000 		.4byte	.LFB42
 4772 0134 10000000 		.4byte	.LFE42
 4773 0138 00000000 		.4byte	.LFB43
 4774 013c 10000000 		.4byte	.LFE43
 4775 0140 00000000 		.4byte	.LFB44
 4776 0144 10000000 		.4byte	.LFE44
 4777 0148 00000000 		.4byte	.LFB45
 4778 014c 20000000 		.4byte	.LFE45
 4779 0150 00000000 		.4byte	.LFB46
 4780 0154 10000000 		.4byte	.LFE46
 4781 0158 00000000 		.4byte	.LFB47
 4782 015c 10000000 		.4byte	.LFE47
 4783 0160 00000000 		.4byte	.LFB51
 4784 0164 28000000 		.4byte	.LFE51
 4785 0168 00000000 		.4byte	.LFB48
 4786 016c 0C000000 		.4byte	.LFE48
 4787 0170 00000000 		.4byte	.LFB37
 4788 0174 4C000000 		.4byte	.LFE37
 4789 0178 00000000 		.4byte	.LFB36
 4790 017c 20000000 		.4byte	.LFE36
 4791 0180 00000000 		.4byte	.LFB49
 4792 0184 10000000 		.4byte	.LFE49
 4793 0188 00000000 		.4byte	.LFB50
 4794 018c 0C000000 		.4byte	.LFE50
 4795 0190 00000000 		.4byte	.LFB52
 4796 0194 70000000 		.4byte	.LFE52
 4797 0198 00000000 		.4byte	0
 4798 019c 00000000 		.4byte	0
 4799              		.section	.debug_line,"",%progbits
 4800              	.Ldebug_line0:
 4801 0000 C9040000 		.section	.debug_str,"MS",%progbits,1
 4801      02004D00 
 4801      00000201 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 140


 4801      FB0E0D00 
 4801      01010101 
 4802              	.LASF61:
 4803 0000 72616D56 		.ascii	"ramVectorTable\000"
 4803      6563746F 
 4803      72546162 
 4803      6C6500
 4804              	.LASF10:
 4805 000f 75696E74 		.ascii	"uint16\000"
 4805      313600
 4806              	.LASF47:
 4807 0016 696E7453 		.ascii	"intState\000"
 4807      74617465 
 4807      00
 4808              	.LASF26:
 4809 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4809      73436C6B 
 4809      57726974 
 4809      65486663 
 4809      6C6B4469 
 4810              	.LASF108:
 4811 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4811      73436C6B 
 4811      50756D70 
 4811      436F6E66 
 4811      696700
 4812              	.LASF60:
 4813 004b 6F6C6449 		.ascii	"oldIsr\000"
 4813      737200
 4814              	.LASF97:
 4815 0052 72657456 		.ascii	"retVal\000"
 4815      616C00
 4816              	.LASF46:
 4817 0059 43794469 		.ascii	"CyDisableInts\000"
 4817      7361626C 
 4817      65496E74 
 4817      7300
 4818              	.LASF112:
 4819 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4819      43313120 
 4819      352E342E 
 4819      31203230 
 4819      31363036 
 4820 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4820      20726576 
 4820      6973696F 
 4820      6E203233 
 4820      37373135 
 4821 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4821      66756E63 
 4821      74696F6E 
 4821      2D736563 
 4821      74696F6E 
 4822              	.LASF7:
 4823 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4823      206C6F6E 
 4823      6720756E 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 141


 4823      7369676E 
 4823      65642069 
 4824              	.LASF35:
 4825 010c 70617261 		.ascii	"parameters\000"
 4825      6D657465 
 4825      727300
 4826              	.LASF48:
 4827 0117 4379456E 		.ascii	"CyEnableInts\000"
 4827      61626C65 
 4827      496E7473 
 4827      00
 4828              	.LASF70:
 4829 0124 4379536F 		.ascii	"CySoftwareReset\000"
 4829      66747761 
 4829      72655265 
 4829      73657400 
 4830              	.LASF81:
 4831 0134 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4831      73546963 
 4831      6B456E61 
 4831      626C6549 
 4831      6E746572 
 4832              	.LASF52:
 4833 014d 4379496E 		.ascii	"CyIntGetState\000"
 4833      74476574 
 4833      53746174 
 4833      6500
 4834              	.LASF6:
 4835 015b 6C6F6E67 		.ascii	"long long int\000"
 4835      206C6F6E 
 4835      6720696E 
 4835      7400
 4836              	.LASF0:
 4837 0169 7369676E 		.ascii	"signed char\000"
 4837      65642063 
 4837      68617200 
 4838              	.LASF34:
 4839 0175 66726571 		.ascii	"freq\000"
 4839      00
 4840              	.LASF79:
 4841 017a 43794465 		.ascii	"CyDelayFreq\000"
 4841      6C617946 
 4841      72657100 
 4842              	.LASF24:
 4843 0186 696E7465 		.ascii	"interruptState\000"
 4843      72727570 
 4843      74537461 
 4843      746500
 4844              	.LASF86:
 4845 0195 43795379 		.ascii	"CySysTickGetReload\000"
 4845      73546963 
 4845      6B476574 
 4845      52656C6F 
 4845      616400
 4846              	.LASF114:
 4847 01a8 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\PSoC Creator\\Lega"
 4847      73657273 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 142


 4847      5C627279 
 4847      616E2E6C 
 4847      65655C44 
 4848 01d6 63795F50 		.ascii	"cy_Program_Test\\Legacy_Program_Test.cydsn\000"
 4848      726F6772 
 4848      616D5F54 
 4848      6573745C 
 4848      4C656761 
 4849              	.LASF4:
 4850 0200 6C6F6E67 		.ascii	"long int\000"
 4850      20696E74 
 4850      00
 4851              	.LASF53:
 4852 0209 4379496E 		.ascii	"CyIntDisable\000"
 4852      74446973 
 4852      61626C65 
 4852      00
 4853              	.LASF36:
 4854 0216 72656756 		.ascii	"regValues\000"
 4854      616C7565 
 4854      7300
 4855              	.LASF9:
 4856 0220 75696E74 		.ascii	"uint8\000"
 4856      3800
 4857              	.LASF103:
 4858 0226 63796465 		.ascii	"cydelayFreqKhz\000"
 4858      6C617946 
 4858      7265714B 
 4858      687A00
 4859              	.LASF29:
 4860 0235 656E6162 		.ascii	"enable\000"
 4860      6C6500
 4861              	.LASF13:
 4862 023c 646F7562 		.ascii	"double\000"
 4862      6C6500
 4863              	.LASF67:
 4864 0243 73686966 		.ascii	"shift\000"
 4864      7400
 4865              	.LASF42:
 4866 0249 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4866      734C7664 
 4866      436C6561 
 4866      72496E74 
 4866      65727275 
 4867              	.LASF11:
 4868 0260 75696E74 		.ascii	"uint32\000"
 4868      333200
 4869              	.LASF39:
 4870 0267 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4870      73436C6B 
 4870      45636F52 
 4870      65616453 
 4870      74617475 
 4871              	.LASF49:
 4872 027d 6D61736B 		.ascii	"mask\000"
 4872      00
 4873              	.LASF38:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 143


 4874 0282 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4874      73436C6B 
 4874      47657453 
 4874      7973636C 
 4874      6B536F75 
 4875              	.LASF69:
 4876 029a 4379496E 		.ascii	"CyIntGetPriority\000"
 4876      74476574 
 4876      5072696F 
 4876      72697479 
 4876      00
 4877              	.LASF105:
 4878 02ab 63796465 		.ascii	"cydelay32kMs\000"
 4878      6C617933 
 4878      326B4D73 
 4878      00
 4879              	.LASF93:
 4880 02b8 43795379 		.ascii	"CySysTickInit\000"
 4880      73546963 
 4880      6B496E69 
 4880      7400
 4881              	.LASF68:
 4882 02c6 76616C75 		.ascii	"value\000"
 4882      6500
 4883              	.LASF89:
 4884 02cc 636C6F63 		.ascii	"clockSource\000"
 4884      6B536F75 
 4884      72636500 
 4885              	.LASF99:
 4886 02d8 43794765 		.ascii	"CyGetUniqueId\000"
 4886      74556E69 
 4886      71756549 
 4886      6400
 4887              	.LASF91:
 4888 02e6 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4888      73546963 
 4888      6B476574 
 4888      436F756E 
 4888      74466C61 
 4889              	.LASF8:
 4890 02fc 756E7369 		.ascii	"unsigned int\000"
 4890      676E6564 
 4890      20696E74 
 4890      00
 4891              	.LASF92:
 4892 0309 43795379 		.ascii	"CySysTickClear\000"
 4892      73546963 
 4892      6B436C65 
 4892      617200
 4893              	.LASF5:
 4894 0318 6C6F6E67 		.ascii	"long unsigned int\000"
 4894      20756E73 
 4894      69676E65 
 4894      6420696E 
 4894      7400
 4895              	.LASF85:
 4896 032a 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 144


 4896      734C7664 
 4896      47657449 
 4896      6E746572 
 4896      72757074 
 4897              	.LASF23:
 4898 0345 43795379 		.ascii	"CySysClkImoStop\000"
 4898      73436C6B 
 4898      496D6F53 
 4898      746F7000 
 4899              	.LASF109:
 4900 0355 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4900      74657243 
 4900      72697469 
 4900      63616C53 
 4900      65637469 
 4901              	.LASF54:
 4902 036c 4379496E 		.ascii	"CyIntSetPending\000"
 4902      74536574 
 4902      50656E64 
 4902      696E6700 
 4903              	.LASF98:
 4904 037c 43795379 		.ascii	"CySysTickGetCallback\000"
 4904      73546963 
 4904      6B476574 
 4904      43616C6C 
 4904      6261636B 
 4905              	.LASF43:
 4906 0391 43795379 		.ascii	"CySysGetResetReason\000"
 4906      73476574 
 4906      52657365 
 4906      74526561 
 4906      736F6E00 
 4907              	.LASF3:
 4908 03a5 73686F72 		.ascii	"short unsigned int\000"
 4908      7420756E 
 4908      7369676E 
 4908      65642069 
 4908      6E7400
 4909              	.LASF88:
 4910 03b8 43795379 		.ascii	"CySysTickSetClockSource\000"
 4910      73546963 
 4910      6B536574 
 4910      436C6F63 
 4910      6B536F75 
 4911              	.LASF63:
 4912 03d0 4379496E 		.ascii	"CyIntSetVector\000"
 4912      74536574 
 4912      56656374 
 4912      6F7200
 4913              	.LASF51:
 4914 03df 6E756D62 		.ascii	"number\000"
 4914      657200
 4915              	.LASF66:
 4916 03e6 7072696F 		.ascii	"priority\000"
 4916      72697479 
 4916      00
 4917              	.LASF33:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 145


 4918 03ef 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4918      73436C6B 
 4918      57726974 
 4918      65496D6F 
 4918      46726571 
 4919              	.LASF58:
 4920 0404 4379496E 		.ascii	"CyIntSetSysVector\000"
 4920      74536574 
 4920      53797356 
 4920      6563746F 
 4920      7200
 4921              	.LASF27:
 4922 0416 43795379 		.ascii	"CySysEnablePumpClock\000"
 4922      73456E61 
 4922      626C6550 
 4922      756D7043 
 4922      6C6F636B 
 4923              	.LASF17:
 4924 042b 72656733 		.ascii	"reg32\000"
 4924      3200
 4925              	.LASF94:
 4926 0431 43795379 		.ascii	"CySysTickStart\000"
 4926      73546963 
 4926      6B537461 
 4926      727400
 4927              	.LASF45:
 4928 0440 72657475 		.ascii	"returnStatus\000"
 4928      726E5374 
 4928      61747573 
 4928      00
 4929              	.LASF20:
 4930 044d 73697A65 		.ascii	"sizetype\000"
 4930      74797065 
 4930      00
 4931              	.LASF106:
 4932 0456 43795379 		.ascii	"CySysTickInitVar\000"
 4932      73546963 
 4932      6B496E69 
 4932      74566172 
 4932      00
 4933              	.LASF55:
 4934 0467 4379496E 		.ascii	"CyIntClearPending\000"
 4934      74436C65 
 4934      61725065 
 4934      6E64696E 
 4934      6700
 4935              	.LASF19:
 4936 0479 6C6F6E67 		.ascii	"long double\000"
 4936      20646F75 
 4936      626C6500 
 4937              	.LASF59:
 4938 0485 61646472 		.ascii	"address\000"
 4938      65737300 
 4939              	.LASF30:
 4940 048d 73797363 		.ascii	"sysclkSource\000"
 4940      6C6B536F 
 4940      75726365 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 146


 4940      00
 4941              	.LASF96:
 4942 049a 66756E63 		.ascii	"function\000"
 4942      74696F6E 
 4942      00
 4943              	.LASF107:
 4944 04a3 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4944      6F467265 
 4944      714D687A 
 4944      32526567 
 4944      00
 4945              	.LASF87:
 4946 04b4 43795379 		.ascii	"CySysTickGetValue\000"
 4946      73546963 
 4946      6B476574 
 4946      56616C75 
 4946      6500
 4947              	.LASF102:
 4948 04c6 63796465 		.ascii	"cydelayFreqHz\000"
 4948      6C617946 
 4948      72657148 
 4948      7A00
 4949              	.LASF65:
 4950 04d4 4379496E 		.ascii	"CyIntSetPriority\000"
 4950      74536574 
 4950      5072696F 
 4950      72697479 
 4950      00
 4951              	.LASF12:
 4952 04e5 666C6F61 		.ascii	"float\000"
 4952      7400
 4953              	.LASF110:
 4954 04eb 43794578 		.ascii	"CyExitCriticalSection\000"
 4954      69744372 
 4954      69746963 
 4954      616C5365 
 4954      6374696F 
 4955              	.LASF77:
 4956 0501 43795379 		.ascii	"CySysLvdEnable\000"
 4956      734C7664 
 4956      456E6162 
 4956      6C6500
 4957              	.LASF21:
 4958 0510 63795379 		.ascii	"cySysTickCallback\000"
 4958      73546963 
 4958      6B43616C 
 4958      6C626163 
 4958      6B00
 4959              	.LASF64:
 4960 0522 4379496E 		.ascii	"CyIntGetVector\000"
 4960      74476574 
 4960      56656374 
 4960      6F7200
 4961              	.LASF72:
 4962 0531 6D696C6C 		.ascii	"milliseconds\000"
 4962      69736563 
 4962      6F6E6473 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 147


 4962      00
 4963              	.LASF111:
 4964 053e 43794465 		.ascii	"CyDelayCycles\000"
 4964      6C617943 
 4964      79636C65 
 4964      7300
 4965              	.LASF16:
 4966 054c 72656738 		.ascii	"reg8\000"
 4966      00
 4967              	.LASF78:
 4968 0551 74687265 		.ascii	"threshold\000"
 4968      73686F6C 
 4968      6400
 4969              	.LASF56:
 4970 055b 43794861 		.ascii	"CyHalt\000"
 4970      6C7400
 4971              	.LASF1:
 4972 0562 756E7369 		.ascii	"unsigned char\000"
 4972      676E6564 
 4972      20636861 
 4972      7200
 4973              	.LASF2:
 4974 0570 73686F72 		.ascii	"short int\000"
 4974      7420696E 
 4974      7400
 4975              	.LASF50:
 4976 057a 4379496E 		.ascii	"CyIntEnable\000"
 4976      74456E61 
 4976      626C6500 
 4977              	.LASF62:
 4978 0586 4379496E 		.ascii	"CyIntGetSysVector\000"
 4978      74476574 
 4978      53797356 
 4978      6563746F 
 4978      7200
 4979              	.LASF28:
 4980 0598 636C6B53 		.ascii	"clkSelect\000"
 4980      656C6563 
 4980      7400
 4981              	.LASF75:
 4982 05a2 43795379 		.ascii	"CySysClkEcoStart\000"
 4982      73436C6B 
 4982      45636F53 
 4982      74617274 
 4982      00
 4983              	.LASF73:
 4984 05b3 43794465 		.ascii	"CyDelayUs\000"
 4984      6C617955 
 4984      7300
 4985              	.LASF44:
 4986 05bd 72656173 		.ascii	"reason\000"
 4986      6F6E00
 4987              	.LASF14:
 4988 05c4 63686172 		.ascii	"char\000"
 4988      00
 4989              	.LASF18:
 4990 05c9 63796973 		.ascii	"cyisraddress\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 148


 4990      72616464 
 4990      72657373 
 4990      00
 4991              	.LASF82:
 4992 05d6 43795379 		.ascii	"CySysTickEnable\000"
 4992      73546963 
 4992      6B456E61 
 4992      626C6500 
 4993              	.LASF31:
 4994 05e6 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4994      73436C6B 
 4994      57726974 
 4994      65537973 
 4994      636C6B44 
 4995              	.LASF95:
 4996 05fd 43795379 		.ascii	"CySysTickSetCallback\000"
 4996      73546963 
 4996      6B536574 
 4996      43616C6C 
 4996      6261636B 
 4997              	.LASF101:
 4998 0612 43795379 		.ascii	"CySysTickCallbacks\000"
 4998      73546963 
 4998      6B43616C 
 4998      6C626163 
 4998      6B7300
 4999              	.LASF100:
 5000 0625 756E6971 		.ascii	"uniqueId\000"
 5000      75654964 
 5000      00
 5001              	.LASF71:
 5002 062e 43794465 		.ascii	"CyDelay\000"
 5002      6C617900 
 5003              	.LASF90:
 5004 0636 43795379 		.ascii	"CySysTickGetClockSource\000"
 5004      73546963 
 5004      6B476574 
 5004      436C6F63 
 5004      6B536F75 
 5005              	.LASF83:
 5006 064e 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5006      73546963 
 5006      6B446973 
 5006      61626C65 
 5006      496E7465 
 5007              	.LASF41:
 5008 0668 43795379 		.ascii	"CySysLvdDisable\000"
 5008      734C7664 
 5008      44697361 
 5008      626C6500 
 5009              	.LASF104:
 5010 0678 63796465 		.ascii	"cydelayFreqMhz\000"
 5010      6C617946 
 5010      7265714D 
 5010      687A00
 5011              	.LASF37:
 5012 0687 43795379 		.ascii	"CySysClkEcoStop\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 149


 5012      73436C6B 
 5012      45636F53 
 5012      746F7000 
 5013              	.LASF80:
 5014 0697 43795379 		.ascii	"CySysTickStop\000"
 5014      73546963 
 5014      6B53746F 
 5014      7000
 5015              	.LASF76:
 5016 06a5 74696D65 		.ascii	"timeoutUs\000"
 5016      6F757455 
 5016      7300
 5017              	.LASF32:
 5018 06af 64697669 		.ascii	"divider\000"
 5018      64657200 
 5019              	.LASF57:
 5020 06b7 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5020      73436C6B 
 5020      57726974 
 5020      6545636F 
 5020      44697600 
 5021              	.LASF15:
 5022 06cb 63797374 		.ascii	"cystatus\000"
 5022      61747573 
 5022      00
 5023              	.LASF22:
 5024 06d4 43795379 		.ascii	"CySysClkImoStart\000"
 5024      73436C6B 
 5024      496D6F53 
 5024      74617274 
 5024      00
 5025              	.LASF113:
 5026 06e5 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5026      72617465 
 5026      645F536F 
 5026      75726365 
 5026      5C50536F 
 5027              	.LASF74:
 5028 0704 6D696372 		.ascii	"microseconds\000"
 5028      6F736563 
 5028      6F6E6473 
 5028      00
 5029              	.LASF25:
 5030 0711 746D7052 		.ascii	"tmpReg\000"
 5030      656700
 5031              	.LASF84:
 5032 0718 43795379 		.ascii	"CySysTickSetReload\000"
 5032      73546963 
 5032      6B536574 
 5032      52656C6F 
 5032      616400
 5033              	.LASF115:
 5034 072b 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5034      73546963 
 5034      6B536572 
 5034      76696365 
 5034      43616C6C 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc8DfDfe.s 			page 150


 5035              	.LASF40:
 5036 0745 72657475 		.ascii	"returnValue\000"
 5036      726E5661 
 5036      6C756500 
 5037              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
