ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDConfigIDACs,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDConfigIDACs, %function
  24              	CapSense_1_SsCSDConfigIDACs:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \file CapSense_1_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \see CapSense_1 v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Structure.h"
  42:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  46:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  47:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
  49:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * API Constants
  50:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
  51:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  53:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  54:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN)
  55:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (CapSense_1_CSD_AZ_EN_MASK)
  56:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  57:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (0uL)
  58:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN) */
  59:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  60:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
  61:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  62:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_HSCMP_INVERT_MASK)
  63:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  64:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  65:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  67:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_HSCMP_INIT_MASK                        (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  68:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  69:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  70:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_1_SW_DSI_SEL_CMODPAD | CapSense
  71:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  72:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  73:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  75:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  78:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  79:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  80:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDAC ranges */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN)
  82:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (CapSense_1_IDAC_MOD_RANGE_MASK)
  83:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (CapSense_1_IDAC_COMP_RANGE_MASK)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  85:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (0u)
  86:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (0u)
  87:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN) */
  88:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  90:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
  91:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  92:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_IDAC_COMP_MODE_FIXED |\
  93:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE 
  94:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_COMP_RANGE
  95:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  96:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  97:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE)
  98:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
  99:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
 103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Variables
 104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
 105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG;
 108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG | CapSense_1_DEFAULT_MODULATION_MOD
 110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static uint32 CapSense_1_counterResolution = CapSense_1_CNT_RESOLUTION_12_BITS;
 111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static uint8 CapSense_1_eleCsdDisconnectFlag = 0u;
 115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_E
 116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_ME
 119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a widget */
 122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_calibratedIdac = 1u;
 123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint16 CapSense_1_calibratedRawcount = 1u;
 124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 CapSense_1_calibratedIdacRow = 1u;
 126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 CapSense_1_calibratedRawcountRow = 1u;
 127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Static Function Prototypes
 133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /**
 136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \addtogroup group_c_internal
 138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \{
 139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** */
 140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay);
 143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void);
 145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void);
 148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
 153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
 154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
 159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *ptrIdac,
 160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *iDAC8Max);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))  */
 163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void);
 167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /** \}
 174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \endcond */
 175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsSetShieldDelay
 180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param delay
 190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 10ns delay
 198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 50ns delay
 199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 5ns delay
 202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 10ns delay
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 20ns delay
 204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay)
 207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= (uint32)(~CapSense_1_CONFIG_SHIELD_DELAY_MASK);
 210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= (delay << CapSense_1_SHIELD_DELAY_SHIFT);
 211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldTank
 216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This function configures Csh pin
 220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void)
 228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
 234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= (CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HSIOM_SHIFT);
 235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
 239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_PC_PTR);
 241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_CSH_PC_MASK << CapSense_1_CSH_PC_SHIFT));
 242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_CSH_PC_STRONG_MODE << CapSense_1_CSH_PC_SHIFT);
 243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_PC_PTR, newRegValue);
 244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_DR_PTR);
 247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_DR_MASK << CapSense_1_CSH_SHIFT));
 248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (uint32)CapSense_1_CSH_DR_CONFIG;
 249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_DR_PTR, newRegValue);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldElectrodes
 258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   the CapSense_1_shieldIoList structure.
 267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void)
 270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set drive mode to Analog */
 277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, CY_GET_REG32(CapSense_1_sh
 278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            ~(CapSense_1_GPIO_PC_MASK <<(CapSense_1_shieldIoList[shieldIndex].shift)
 279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD or AMUXBUS B connection */
 281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr);
 282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_HSIOM_SEL_MASK << (CapSense_1_shieldIoList[shieldIndex]
 283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD */
 285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << (CapSense_1_shieldIoList[shieldI
 286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, newRegValue);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDDisableShieldElectrodes
 294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   stored in  the CapSense_1_shieldIoList structure.
 303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         void CapSense_1_SsCSDDisableShieldElectrodes(void)
 306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset HSIOM register (to GPIO state) */
 313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, CY_GET_REG32(CapSense_1
 314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (uint32)~(uint32)(CapSense_1_HSIOM_SEL_MASK << CapSense_1_shieldIoList
 315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Update port configuration register (drive mode to ground)  */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr);
 318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_GPIO_PC_MASK << CapSense_1_shieldIoList[shieldIndex].sh
 319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_SNS_GROUND_CONNECT << CapSense_1_shieldIoList[shieldInde
 320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, newRegValue);
 321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set logic 0 to port data register */
 323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].drPtr, CY_GET_REG32(CapSense_1_sh
 324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            (uint32)~(uint32)((uint32)1u << CapSense_1_shieldIoList[shieldIndex].drS
 325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetModeSnsClockDivider
 333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_1_SENSE_PERIOD register with
 340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_1_configCsd variable with
 342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
 355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set configuration */
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~(CapSense_1_CONFIG_PRS_SELECT_MASK | CapSense_1_CSD_PRS_12_BIT);
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set sense clock divider */
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetSnsClockDivider(snsClkDivider);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDSetFilterDelay
 369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   variable CapSense_1_configCsd
 377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void)
 383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~CapSense_1_CONFIG_FILTER_DELAY_MASK;
 389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigIDACs
 413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   enabled or disabled.
 421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void)
 424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
  27              		.loc 1 424 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 9


 426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
 427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDACB_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
 430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  32              		.loc 1 434 0
  33 0000 014A     		ldr	r2, .L2
  34 0002 024B     		ldr	r3, .L2+4
  35 0004 1A60     		str	r2, [r3]
 435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
 437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                 ~(CapSense_1_IDAC_MOD_MODE_MASK |
 438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                   CapSense_1_IDAC_MOD_MASK));
 439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) |
 440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_CSD_IDAC_CONFIG
 441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
  36              		.loc 1 443 0
  37              		@ sp needed
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00020001 		.word	16777728
  43 000c 08002840 		.word	1076363272
  44              		.cfi_endproc
  45              	.LFE3:
  46              		.size	CapSense_1_SsCSDConfigIDACs, .-CapSense_1_SsCSDConfigIDACs
  47              		.section	.text.CapSense_1_SsCSDSetSingleIdacMode,"ax",%progbits
  48              		.align	2
  49              		.code	16
  50              		.thumb_func
  51              		.type	CapSense_1_SsCSDSetSingleIdacMode, %function
  52              	CapSense_1_SsCSDSetSingleIdacMode:
  53              	.LFB18:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDInitialize
 448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This API initializes the CSD module.
 452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 10


 461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   9) Configures ModClk;
 464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Enables the clocks;
 475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Sets the shield delay;
 476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDInitialize(void)
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsClearCSDSensors();
 485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
 488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     
 490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldElectrodes();
 494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Configure Csh */
 498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
 499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_SENSE_DUTY_SEL);
 506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET);
 513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL);
 514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL);
 515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL);
 516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_AMBUF_PWR_MODE_OFF);
 517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_SW_SHIELD_SEL);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 11


 518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_P_SEL);
 519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_N_SEL);
 520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_HSCMP_CFG);
 521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_SW_BYP_SEL_SW_BYA_MASK;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, newRegValue);
 532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE)
 536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #elif (CapSense_1_CSD__CSHIELD_PAD == CapSense_1_CMOD_CONNECTION)
 537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE)
 538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE)
 540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION) */
 541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure shield driving path */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, CapSense_1_SW_BYP_SEL_SW_BYA_MASK | CapSense_1_
 546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-B to HSCMP positive input */
 548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, 0x00000000uL);
 549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSense_1_
 553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_1_SW_REFGEN_SEL_SW_IAIB_
 556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK;
 561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSe
 563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV)
 565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFLOW (from AMBUF and RefGen is in bypass mode) to CSDCOMP when Vdda < 2 V */
 567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_LV);
 571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 12


 575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
 577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_NORM);
 583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_OFF);
 585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_HV);
 596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_HI);
 600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING != CapSense_1_CSD_IDAC_CONFIG)
 602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
 607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV) */
 614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure IDACs mode */
 616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDConfigIDACs();
 617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure ModClk */
 619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set other CSD configurations */
 622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure HW block filter delay */
 627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetFilterDelay();
 628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
 631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 13


 632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_SENSE_EN_MASK |
 633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_ENABLE_MASK);
 634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR, CapSense_1_CSD_AUTO_ZERO_TIME);
 638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, 0x00000000);
 641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR, CapSense_1_CSD_FINE_INIT_TIME);
 644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure IDACs mode */
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigIDACs();
 650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
 666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE))
 671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
 673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDElectrodeCheck
 680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****  * CapSense_1_CSDSetupWidgetExt() API and if yes disconnects them.
 685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function checks if CapSense_1_eleCsdDisconnectFlag is set.
 688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 14


 689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_1_curSnsIOPtr and
 690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_curFlashSnsPtr contains the previous data for Ganged
 691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sensors.
 692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDElectrodeCheck(void)
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     if (CapSense_1_ENABLE == CapSense_1_eleCsdDisconnectFlag)
 701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal = CapSense_1_curFlashSnsPtr->numPins;
 709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get IO pointer  */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
 712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 do
 715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curSnsIOPtr++;
 718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     tempVal--;
 719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 } while (0u != tempVal);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
 732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetUpIdacs
 738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 15


 746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDSetUpIdacs(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 interruptState;
 759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 idacARegValue;
 762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 idacBRegValue;
 765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get IDACA Value */
 771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR);
 772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA Value mask */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue &= ~(CapSense_1_IDAC_MOD_VAL_MASK);
 775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA value */
 777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_1_scanFreqIndex];
 781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update IDACA register with new value */
 791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, idacARegValue);
 792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get IDACB Value */
 798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR);
 799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB Value mask */
 801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue &= ~(CapSense_1_IDAC_COMP_VAL_MASK);
 802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 16


 803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB value */
 804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue |= (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
 805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, idacBRegValue);
 808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Idac Value */
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac Value mask */
 830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK | CapSense_1_IDAC_COMP_MASK);
 832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK);
 834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac value */
 837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (ptrIdacMod[CapSense_1_scanFreqIndex] |
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= ptrIdacMod[CapSense_1_scanFreqIndex];
 843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDGetNumberOfConversions
 855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 17


 860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param
 865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  resolution The widget resolution.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 s
 873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != CapSen
 876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != 
 878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         conversionsNum = (uint32)((1uL << resolution) - 1uL);
 881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN)
 883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_RES16BIT == resolution)
 885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_3_CYCLES;
 898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
 900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_4_CYCLES;
 902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
 904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN) */
 908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 18


 917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
 918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS8:
 920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS12:
 921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             default:
 926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigClock
 939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
 946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConfigClock(void)
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkSrc;
 952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
 958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
 959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_1_dsRam.snsCsdClk;
 960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
 963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
 964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
 966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
 970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 19


 974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_1_SsCSDInitialize() before */
 977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
 979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIndex)
 980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
 982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
 993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
 995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_CLK_SOURCE_PRS8 == snsClkSrc) ||
 996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_CLK_SOURCE_PRS12 == snsClkSrc))
 997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
 999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
1008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS8:
1010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS12:
1011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Divide by 2 for PRS8/PRS12 mode */
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider >>= 1;
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
1014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = 1u;
1016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         default:
1020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCalculateScanDuration
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 20


1031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClk divider.
1040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_counterResolution global variable and used in
1043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_SsCSDStartSample() function to trigger the scan process.
1044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param wdgtIndex
1046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDCalculateScanDuration(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
1053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 snsClkDivider;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Number Of Conversions */
1056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
1057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = CapSense_1_dsRam.snsCsdClk;
1058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
1062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
1066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
1073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resolut
1075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM_CNT_CONV_CN
1078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapS
1081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidget
1087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 21


1088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDScan() function to start scanning.
1093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_1_CSDScan()
1101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
1107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  widgetId
1114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidget(uint32 widgetId)
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
1128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
1130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDElectrodeCheck();
1138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
1142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update status register in Data structure */
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status &= ~CapSense_1_STATUS_WDGT0_MASK;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 22


1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
1146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set up scanning resolution (Number ofconversion for CSDv2) */
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
1149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE))
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
1153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)) */
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidgetExt
1160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  requires using the CapSense_1_CSDScanExt() function to initiate a scan.
1166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does the same as CapSense_1_CSDSetupWidget() and also
1169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  does the following tasks:
1170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  next sensors in a widget.
1174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function is called to scan the sensor.
1177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  specific widget.
1196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1 Configuration header file defined as
1198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID
1199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 23


1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
1208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDSetupWidget(widgetId);
1215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /* Setup Idac Value */
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
1222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt(widgetId, sensorId);
1226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr += CapSense_1_sensorIndex;
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save sns pointer */
1234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr
1236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_sensorIndex;
1237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_eleCsdDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
1240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDStartSample
1247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Starts the CSD conversion.
1251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the CapSense_1_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   block using CapSense_1_CSDConnectSns.
1256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2. Precharges Cmod;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 24


1259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDStartSample(void)
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 interruptState;
1267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif
1268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntDisable(CapSense_1_ISR_NUMBER);
1278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_INIT_MASK);
1281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
1283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
1284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_SENSE_EN_MASK |
1285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_ENABLE_MASK);
1286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
1290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
1304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_PRECHARGE_CO
1305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
1307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
1309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDClockRestart();
1312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 25


1316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
1317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayCycles(CapSense_1_GLITCH_ELIMINATION_CYCLES);
1319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
1320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScanExt
1331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() function to set up the a
1336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by the CapSense_1_CSDSetupWidgetExt() function. It does the following
1341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  tasks:
1342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_1_dsRam structure.
1343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts single scanning.
1346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() API prior to calling this function.
1355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by using the CapSense_1_CSDScanExt() function. In this case, calling
1357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() is not required every time before the
1358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function. If a previous scan was triggered in
1359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets() or
1360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
1361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() API prior to calling the
1363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function.
1364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt(), the CapSense_1_CSDDisconnectSns()
1367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  function can be used.
1368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScanExt(void)
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 26


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= (CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
1374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_ENABLE == CapSense_1_CSDV2)
1382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****               (CapSense_1_ENABLE == CapSense_1_CSDV2)*/
1387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDStartSample();
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScan
1394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidget() function.
1399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDSetupWidget() function. It does the following tasks:
1403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       the next sensors in a widget.
1407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
1410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
1418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  preconfigured by the CapSense_1_CSDSetupWidget() function if any other
1419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScan(void)
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
1426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /*
1428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * Update CapSense_1_sensorIndex with the first sensor in
1429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 27


1430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       */
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = 0u;
1432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup Idac Value */
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****    CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].sta
1449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScanGanged);
1453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
1461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Start scanning */
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDScanExt();
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConnectSensorExt
1481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 28


1487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   PC registers.
1490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK ==
1512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
1532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect sensor */
1537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect sensor */
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 29


1544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDDisconnectSnsExt
1548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   is set to Shield.
1560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK) == CapSense_1_GANGED_SNS_MASK)
1583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 30


1601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDConnectSns
1617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDConnectSns() function.
1635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDConnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8  interruptState;
1645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get offsets for sensor */
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 31


1658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_1_
1661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDDisconnectSns
1671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function works identically to CapSense_1_CSDConnectSns() except
1679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDDisconnectSns() function.
1687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDDisconnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) || \
1700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8  interruptState;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))) */
1704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) ||  \
1709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update HSIOM register to disconnect sensor */
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_
1712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 32


1715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode) for sensor */
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->pcPtr);
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
1720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set logic 0 to port data register */
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32
1725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode to HiZ Analog) for sensor */
1727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSens
1728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect to Shield */
1730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK << pinH
1731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDSetSingleIdacMode
1742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function set single IDAC mode.
1746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block: The function enables Modulator IDAC only in variable mod
1749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Fourth-generation HW block: The function enables IDACA LEG1 in CSD mode, IDACA LEG2
1750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void)
1753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  54              		.loc 1 1753 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
1755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable IDACA LEG1 in CSD mode, IDACA LEG2 in GP mode */
1758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR) &
1759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               CapSense_1_IDAC_MOD_VAL_MASK;
1760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_CALIBRATION_CFG;
1761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, newRegValue);
1762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR) & CapSense_1_IDAC_COMP_VAL
1765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue |= CapSense_1_IDAC_COMP_CALIBRATION_CFG;
1766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, newRegValue);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 33


1767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable Modulator IDAC only in variable mode */
1771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR) &
  59              		.loc 1 1771 0
  60 0000 044A     		ldr	r2, .L5
  61 0002 1168     		ldr	r1, [r2]
  62 0004 044B     		ldr	r3, .L5+4
  63 0006 0B40     		ands	r3, r1
  64              	.LVL0:
1772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               ~(CapSense_1_IDAC_MOD_MODE_MASK | CapSense_1_IDAC_COMP_MODE_MASK);
1773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_MODE_VARIABLE;
  65              		.loc 1 1773 0
  66 0008 8021     		movs	r1, #128
  67 000a 8900     		lsls	r1, r1, #2
  68 000c 0B43     		orrs	r3, r1
  69              	.LVL1:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
  70              		.loc 1 1774 0
  71 000e 1360     		str	r3, [r2]
1775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  72              		.loc 1 1776 0
  73              		@ sp needed
  74 0010 7047     		bx	lr
  75              	.L6:
  76 0012 C046     		.align	2
  77              	.L5:
  78 0014 08002840 		.word	1076363272
  79 0018 FFFCFFFC 		.word	-50332417
  80              		.cfi_endproc
  81              	.LFE18:
  82              		.size	CapSense_1_SsCSDSetSingleIdacMode, .-CapSense_1_SsCSDSetSingleIdacMode
  83              		.section	.text.CapSense_1_SsCSDRestoreIdacMode,"ax",%progbits
  84              		.align	2
  85              		.code	16
  86              		.thumb_func
  87              		.type	CapSense_1_SsCSDRestoreIdacMode, %function
  88              	CapSense_1_SsCSDRestoreIdacMode:
  89              	.LFB19:
1777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
1780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDRestoreIdacMode
1786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function restores IDAC configuration.
1790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function restores Compensation IDAC if it is enabled.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 34


1793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void)
1796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  90              		.loc 1 1796 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
1797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration */
1798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint32 newRegValue;
1800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
1802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
1803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
1804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
1805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
1808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  95              		.loc 1 1812 0
  96 0000 014A     		ldr	r2, .L8
  97 0002 024B     		ldr	r3, .L8+4
  98 0004 1A60     		str	r2, [r3]
1813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
1814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
1815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                         ~(CapSense_1_IDAC_MOD_MODE_
1816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) | CapSense_
1817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  99              		.loc 1 1819 0
 100              		@ sp needed
 101 0006 7047     		bx	lr
 102              	.L9:
 103              		.align	2
 104              	.L8:
 105 0008 00020001 		.word	16777728
 106 000c 08002840 		.word	1076363272
 107              		.cfi_endproc
 108              	.LFE19:
 109              		.size	CapSense_1_SsCSDRestoreIdacMode, .-CapSense_1_SsCSDRestoreIdacMode
 110              		.global	__aeabi_uidiv
 111              		.section	.text.CapSense_1_SsCSDCalibrateCheck,"ax",%progbits
 112              		.align	2
 113              		.code	16
 114              		.thumb_func
 115              		.type	CapSense_1_SsCSDCalibrateCheck, %function
 116              	CapSense_1_SsCSDCalibrateCheck:
 117              	.LFB20:
1820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 35


1822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateCheck
1824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function verifies calibration error based on maximum raw count level.
1831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawLevel The raw data level which should be reached during the
1833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   calibration procedure.
1834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawData  Calibrated raw counts.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
1842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 118              		.loc 1 1842 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL2:
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129 0002 0E00     		movs	r6, r1
 130 0004 1500     		movs	r5, r2
 131              	.LVL3:
1843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawCountsError;
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 minRawLevel = 0u;
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 132              		.loc 1 1846 0
 133 0006 0388     		ldrh	r3, [r0]
 134 0008 0124     		movs	r4, #1
 135 000a 9C40     		lsls	r4, r4, r3
 136 000c 013C     		subs	r4, r4, #1
 137              	.LVL4:
1847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate the error in rawcounts for given resolution (round to floor) */
1849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawCountsError = ((maxRawLevel * CapSense_1_IDAC_MOD_MAX_CALIB_ERROR) /
 138              		.loc 1 1849 0
 139 000e A300     		lsls	r3, r4, #2
 140 0010 1B19     		adds	r3, r3, r4
 141 0012 5800     		lsls	r0, r3, #1
 142              	.LVL5:
 143 0014 6421     		movs	r1, #100
 144              	.LVL6:
 145 0016 FFF7FEFF 		bl	__aeabi_uidiv
 146              	.LVL7:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 36


 147 001a 0130     		adds	r0, r0, #1
 148              	.LVL8:
1850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_PERCENTAGE_100) + 1u;
1851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get minimum and maximum range values */
1853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawLevel + rawCountsError) <= maxRawLevel)
 149              		.loc 1 1853 0
 150 001c 8319     		adds	r3, r0, r6
 151 001e 9C42     		cmp	r4, r3
 152 0020 00D2     		bcs	.L11
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 153              		.loc 1 1846 0
 154 0022 2300     		movs	r3, r4
 155              	.L11:
 156              	.LVL9:
1854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             maxRawLevel = rawLevel + rawCountsError;
1856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (rawLevel >= rawCountsError)
 157              		.loc 1 1857 0
 158 0024 B042     		cmp	r0, r6
 159 0026 01D8     		bhi	.L14
1858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             minRawLevel = rawLevel - rawCountsError;
 160              		.loc 1 1859 0
 161 0028 301A     		subs	r0, r6, r0
 162              	.LVL10:
 163 002a 00E0     		b	.L12
 164              	.LVL11:
 165              	.L14:
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 166              		.loc 1 1845 0
 167 002c 0020     		movs	r0, #0
 168              	.LVL12:
 169              	.L12:
1860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if calibration is in valid range */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawData < minRawLevel) || (rawData > maxRawLevel))
 170              		.loc 1 1863 0
 171 002e A842     		cmp	r0, r5
 172 0030 03D8     		bhi	.L15
 173              		.loc 1 1863 0 is_stmt 0 discriminator 1
 174 0032 AB42     		cmp	r3, r5
 175 0034 03D2     		bcs	.L16
1864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_BAD_DATA;
 176              		.loc 1 1865 0 is_stmt 1
 177 0036 0620     		movs	r0, #6
 178              	.LVL13:
 179 0038 02E0     		b	.L13
 180              	.LVL14:
 181              	.L15:
 182 003a 0620     		movs	r0, #6
 183              	.LVL15:
 184 003c 00E0     		b	.L13
 185              	.LVL16:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 37


 186              	.L16:
1866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_SUCCESS;
 187              		.loc 1 1869 0
 188 003e 0020     		movs	r0, #0
 189              	.LVL17:
 190              	.L13:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
1873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 191              		.loc 1 1873 0
 192              		@ sp needed
 193              	.LVL18:
 194              	.LVL19:
 195 0040 70BD     		pop	{r4, r5, r6, pc}
 196              		.cfi_endproc
 197              	.LFE20:
 198              		.size	CapSense_1_SsCSDCalibrateCheck, .-CapSense_1_SsCSDCalibrateCheck
 199 0042 C046     		.section	.text.CapSense_1_SsCSDSetModeSnsClockDivider,"ax",%progbits
 200              		.align	2
 201              		.code	16
 202              		.thumb_func
 203              		.type	CapSense_1_SsCSDSetModeSnsClockDivider, %function
 204              	CapSense_1_SsCSDSetModeSnsClockDivider:
 205              	.LFB2:
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 206              		.loc 1 351 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL20:
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 215              		.loc 1 357 0
 216 0002 054A     		ldr	r2, .L18
 217 0004 C023     		movs	r3, #192
 218 0006 1468     		ldr	r4, [r2]
 219 0008 9C43     		bics	r4, r3
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 220              		.loc 1 358 0
 221 000a 2043     		orrs	r0, r4
 222              	.LVL21:
 223 000c 1060     		str	r0, [r2]
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 224              		.loc 1 361 0
 225 000e 0800     		movs	r0, r1
 226 0010 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 227              	.LVL22:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 228              		.loc 1 363 0
 229              		@ sp needed
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 38


 230 0014 10BD     		pop	{r4, pc}
 231              	.L19:
 232 0016 C046     		.align	2
 233              	.L18:
 234 0018 00000000 		.word	.LANCHOR0
 235              		.cfi_endproc
 236              	.LFE2:
 237              		.size	CapSense_1_SsCSDSetModeSnsClockDivider, .-CapSense_1_SsCSDSetModeSnsClockDivider
 238              		.section	.text.CapSense_1_SsCSDInitialize,"ax",%progbits
 239              		.align	2
 240              		.global	CapSense_1_SsCSDInitialize
 241              		.code	16
 242              		.thumb_func
 243              		.type	CapSense_1_SsCSDInitialize, %function
 244              	CapSense_1_SsCSDInitialize:
 245              	.LFB4:
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 246              		.loc 1 480 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 254              		.loc 1 484 0
 255 0002 FFF7FEFF 		bl	CapSense_1_SsClearCSDSensors
 256              	.LVL23:
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 257              		.loc 1 649 0
 258 0006 FFF7FEFF 		bl	CapSense_1_SsCSDConfigIDACs
 259              	.LVL24:
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 260              		.loc 1 652 0
 261 000a 0749     		ldr	r1, .L21
 262 000c 0B68     		ldr	r3, [r1]
 263              	.LVL25:
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 264              		.loc 1 653 0
 265 000e 0F22     		movs	r2, #15
 266 0010 9343     		bics	r3, r2
 267              	.LVL26:
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 268              		.loc 1 654 0
 269 0012 093A     		subs	r2, r2, #9
 270 0014 1343     		orrs	r3, r2
 271              	.LVL27:
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 272              		.loc 1 655 0
 273 0016 0B60     		str	r3, [r1]
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 274              		.loc 1 665 0
 275 0018 044B     		ldr	r3, .L21+4
 276              	.LVL28:
 277 001a 1B68     		ldr	r3, [r3]
 278 001c 044A     		ldr	r2, .L21+8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 39


 279 001e 1343     		orrs	r3, r2
 280 0020 044A     		ldr	r2, .L21+12
 281 0022 1360     		str	r3, [r2]
 282              	.LVL29:
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 283              		.loc 1 675 0
 284              		@ sp needed
 285 0024 10BD     		pop	{r4, pc}
 286              	.L22:
 287 0026 C046     		.align	2
 288              	.L21:
 289 0028 00050240 		.word	1073874176
 290 002c 00000000 		.word	.LANCHOR0
 291 0030 2008E881 		.word	-2115500000
 292 0034 04002840 		.word	1076363268
 293              		.cfi_endproc
 294              	.LFE4:
 295              		.size	CapSense_1_SsCSDInitialize, .-CapSense_1_SsCSDInitialize
 296              		.section	.text.CapSense_1_SsCSDSetUpIdacs,"ax",%progbits
 297              		.align	2
 298              		.global	CapSense_1_SsCSDSetUpIdacs
 299              		.code	16
 300              		.thumb_func
 301              		.type	CapSense_1_SsCSDSetUpIdacs, %function
 302              	CapSense_1_SsCSDSetUpIdacs:
 303              	.LFB6:
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 304              		.loc 1 756 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              	.LVL30:
 309 0000 70B5     		push	{r4, r5, r6, lr}
 310              		.cfi_def_cfa_offset 16
 311              		.cfi_offset 4, -16
 312              		.cfi_offset 5, -12
 313              		.cfi_offset 6, -8
 314              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 315              		.loc 1 815 0
 316 0002 0930     		adds	r0, r0, #9
 317              	.LVL31:
 318 0004 0400     		movs	r4, r0
 319              	.LVL32:
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 320              		.loc 1 824 0
 321 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 322              	.LVL33:
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 323              		.loc 1 827 0
 324 000a 094D     		ldr	r5, .L24
 325 000c 2968     		ldr	r1, [r5]
 326              	.LVL34:
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 327              		.loc 1 831 0
 328 000e 094B     		ldr	r3, .L24+4
 329 0010 1940     		ands	r1, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 40


 330              	.LVL35:
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 331              		.loc 1 838 0
 332 0012 094B     		ldr	r3, .L24+8
 333 0014 1A78     		ldrb	r2, [r3]
 334 0016 A35C     		ldrb	r3, [r4, r2]
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 335              		.loc 1 839 0
 336 0018 084C     		ldr	r4, .L24+12
 337              	.LVL36:
 338 001a 2468     		ldr	r4, [r4]
 339 001c A218     		adds	r2, r4, r2
 340 001e 527A     		ldrb	r2, [r2, #9]
 341 0020 1204     		lsls	r2, r2, #16
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 342              		.loc 1 838 0
 343 0022 1343     		orrs	r3, r2
 344 0024 0B43     		orrs	r3, r1
 345              	.LVL37:
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 346              		.loc 1 844 0
 347 0026 2B60     		str	r3, [r5]
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 348              		.loc 1 846 0
 349 0028 FFF7FEFF 		bl	CyExitCriticalSection
 350              	.LVL38:
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 351              		.loc 1 849 0
 352              		@ sp needed
 353 002c 70BD     		pop	{r4, r5, r6, pc}
 354              	.L25:
 355 002e C046     		.align	2
 356              	.L24:
 357 0030 08002840 		.word	1076363272
 358 0034 00FF80FF 		.word	-8323328
 359 0038 00000000 		.word	CapSense_1_scanFreqIndex
 360 003c 00000000 		.word	CapSense_1_curRamSnsPtr
 361              		.cfi_endproc
 362              	.LFE6:
 363              		.size	CapSense_1_SsCSDSetUpIdacs, .-CapSense_1_SsCSDSetUpIdacs
 364              		.section	.text.CapSense_1_SsCSDConfigClock,"ax",%progbits
 365              		.align	2
 366              		.global	CapSense_1_SsCSDConfigClock
 367              		.code	16
 368              		.thumb_func
 369              		.type	CapSense_1_SsCSDConfigClock, %function
 370              	CapSense_1_SsCSDConfigClock:
 371              	.LFB7:
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 372              		.loc 1 949 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 10B5     		push	{r4, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 4, -8
 379              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 41


 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 380              		.loc 1 955 0
 381 0002 094B     		ldr	r3, .L30
 382 0004 1B78     		ldrb	r3, [r3]
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 383              		.loc 1 954 0
 384 0006 5B01     		lsls	r3, r3, #5
 385 0008 084A     		ldr	r2, .L30+4
 386 000a D318     		adds	r3, r2, r3
 387 000c 5B68     		ldr	r3, [r3, #4]
 388              	.LVL39:
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 389              		.loc 1 972 0
 390 000e 5989     		ldrh	r1, [r3, #10]
 391              	.LVL40:
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 392              		.loc 1 988 0
 393 0010 187B     		ldrb	r0, [r3, #12]
 394              	.LVL41:
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 395              		.loc 1 1007 0
 396 0012 431F     		subs	r3, r0, #5
 397              	.LVL42:
 398 0014 DBB2     		uxtb	r3, r3
 399 0016 012B     		cmp	r3, #1
 400 0018 02D8     		bhi	.L27
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
 401              		.loc 1 1012 0
 402 001a 4908     		lsrs	r1, r1, #1
 403              	.LVL43:
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 404              		.loc 1 1013 0
 405 001c 00D1     		bne	.L27
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 406              		.loc 1 1015 0
 407 001e 0131     		adds	r1, r1, #1
 408              	.LVL44:
 409              	.L27:
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 410              		.loc 1 1025 0
 411 0020 FFF7FEFF 		bl	CapSense_1_SsCSDSetModeSnsClockDivider
 412              	.LVL45:
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 413              		.loc 1 1026 0
 414              		@ sp needed
 415 0024 10BD     		pop	{r4, pc}
 416              	.L31:
 417 0026 C046     		.align	2
 418              	.L30:
 419 0028 00000000 		.word	CapSense_1_widgetIndex
 420 002c 00000000 		.word	CapSense_1_dsFlash
 421              		.cfi_endproc
 422              	.LFE7:
 423              		.size	CapSense_1_SsCSDConfigClock, .-CapSense_1_SsCSDConfigClock
 424              		.section	.text.CapSense_1_SsCSDCalculateScanDuration,"ax",%progbits
 425              		.align	2
 426              		.global	CapSense_1_SsCSDCalculateScanDuration
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 42


 427              		.code	16
 428              		.thumb_func
 429              		.type	CapSense_1_SsCSDCalculateScanDuration, %function
 430              	CapSense_1_SsCSDCalculateScanDuration:
 431              	.LFB8:
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 432              		.loc 1 1050 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              	.LVL46:
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 438              		.loc 1 1080 0
 439 0000 0288     		ldrh	r2, [r0]
 440 0002 0123     		movs	r3, #1
 441 0004 9340     		lsls	r3, r3, r2
 442 0006 013B     		subs	r3, r3, #1
 443 0008 1B04     		lsls	r3, r3, #16
 444 000a 014A     		ldr	r2, .L33
 445 000c 5360     		str	r3, [r2, #4]
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 446              		.loc 1 1082 0
 447              		@ sp needed
 448 000e 7047     		bx	lr
 449              	.L34:
 450              		.align	2
 451              	.L33:
 452 0010 00000000 		.word	.LANCHOR0
 453              		.cfi_endproc
 454              	.LFE8:
 455              		.size	CapSense_1_SsCSDCalculateScanDuration, .-CapSense_1_SsCSDCalculateScanDuration
 456              		.section	.text.CapSense_1_SsCSDStartSample,"ax",%progbits
 457              		.align	2
 458              		.global	CapSense_1_SsCSDStartSample
 459              		.code	16
 460              		.thumb_func
 461              		.type	CapSense_1_SsCSDStartSample, %function
 462              	CapSense_1_SsCSDStartSample:
 463              	.LFB11:
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
 464              		.loc 1 1264 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 70B5     		push	{r4, r5, r6, lr}
 469              		.cfi_def_cfa_offset 16
 470              		.cfi_offset 4, -16
 471              		.cfi_offset 5, -12
 472              		.cfi_offset 6, -8
 473              		.cfi_offset 14, -4
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 474              		.loc 1 1299 0
 475 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 476              	.LVL47:
 477 0006 0400     		movs	r4, r0
 478              	.LVL48:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 43


1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 479              		.loc 1 1306 0
 480 0008 1E4B     		ldr	r3, .L40
 481 000a 1B68     		ldr	r3, [r3]
 482 000c 1E4A     		ldr	r2, .L40+4
 483 000e 1343     		orrs	r3, r2
 484 0010 1E4A     		ldr	r2, .L40+8
 485 0012 1360     		str	r3, [r2]
 486              	.LBB12:
 487              	.LBB13:
1874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateOneSensor
1877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Computes the Modulator IDAC value for one sensor that provides raw signal at
1881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the specified level.
1882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function performs the following tasks:
1885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   1. initializes The Compensation IDAC to zero
1886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   2. Enables the calibrated sensor
1887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   3. Performs eight iteration steps to get the target = rawLevel
1888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      setting and resetting the IDAC value bits beginning from the
1889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      MSB bit to an MSB bit.
1890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   4. Disables the calibrated sensor
1891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   5. Checks if the IDAC is in the correct range
1892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   6. Updates the maximum IDAC value in the widget
1893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   7. Stores the temporary ModIDAC8 value (in the single-IDAC mode).
1894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The CSD block should be initialized with the CapSense_1_SsCSDInitialize()
1896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  API before using this function.
1897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  rawLevel
1899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The raw data level which should be reached during the calibration procedure.
1900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  ptrIdac  The pointer to IDAC.
1901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  iDAC8Max The pointer to the maximum IDAC value in the widget.
1902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Zero     - All the sensors in the widget are calibrated successfully.
1905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Non-Zero - Calibration failed for any sensor in the widget.
1906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
1909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *ptrIdac,
1910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *iDAC8Max)
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
1912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 calMask = ((uint32)CapSense_1_CAL_MIDDLE_BIT << 1uL);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
1915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 rawData0 = 0u;
1917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData1 = 0u;
1919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData2 = 0u;
1920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 44


1921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
1925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac[0u] = 0u;
1927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_1] = 0u;
1929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_2] = 0u;
1930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup the calibrated sensor of the widget (Set IDAC = calMask and connect the sensor) */
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDSetupWidgetExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorIndex
1934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set single IDAC mode */
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetSingleIdacMode();
1938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
1941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Perform the iteration steps to get target = rawLevel.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * The number of iteration steps is defined by calMask and depend on IDAC resolution.
1943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
1944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         do
1945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Decrease IDAC until rawData reaches rawLevel */
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (rawData0 < rawLevel)
1948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset bit for null channel (decrease IDAC -> will increase rawData) */
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[0u] &= (uint8)(~calMask);
1951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData1 < rawLevel)
1954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~calMask);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData2 < rawLevel)
1958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~calMask);
1960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
1964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Shift calMask to set or reset next bit.
1965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Perform scan even if callibration mask is equal to zero.
1966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * It gives raw counts for the last changed IDAC.
1967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             */
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calMask >>= 1u;
1969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit for null channel */
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] |= (uint8)calMask;
1972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] |= (uint8)calMask;
1974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] |= (uint8)calMask;
1975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update IDAC */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 45


1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan sensor */
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDScanExt();
1982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Initialize Watchdog Counter with time interval which is enough to charge 100 nF capa
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter = CapSense_1_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
1986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scan complete and decrement Watchdog Counter to prevent unending loop
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 watchdogCounter--;
1990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Read rawData */
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             rawData0 = CapSense_1_curRamSnsPtr->raw[0u];
1994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData1 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1];
1996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData2 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2];
1997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while (calMask > 0u);
2000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
2003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* initialize pointer to sensor IO structure */
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
2008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
2011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set flag about disconnecting the electrode */
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
2015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration to default state */
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDRestoreIdacMode();
2019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if IDAC is in correct range */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         calibrateStatus = CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData0);
2023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData1);
2025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData2);
2026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
2029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Update maximum IDAC value in widget. iDAC8Max variable will contain
2030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * maximum IDAC value after all the sensors in a widget have been scanned.
2031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (*iDAC8Max < ptrIdac[0u])
2033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             *iDAC8Max = ptrIdac[0u];
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 46


2035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a 
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedIdac = *iDAC8Max;
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
2039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] < ptrIdac[CapSense_1_FREQ_CHANNEL_1])
2043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_FREQ_CHANNEL_1];
2045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] < ptrIdac[CapSense_1_FREQ_CHANNEL_2])
2047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_FREQ_CHANNEL_2];
2049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Store temporary ModIDAC8 value (in single-IDAC mode) in idacComp variable.
2055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * We need this value to calculate idacMod value the in the dual-IDAC mode.
2056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[0u] = ptrIdac[0u];
2058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_F
2060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_F
2061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_CSDCalibrateWidget
2070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the input.
2075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration is always performed in the single IDAC mode and if the dual
2082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC mode (Enable compensation IDAC is enabled) is configured, the IDAC
2083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  values are re-calculated to match the raw count target. If a widget
2084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  consists of two or more elements (buttons, slider segments, etc.), then
2085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  calibration is performed by the element with the highest sensor
2086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  capacitance.
2087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the +/-10%
2089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  range of the target.
2090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 47


2092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param widgetId
2095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1 Configuration header file defined as
2098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
2099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param target
2101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return
2104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate as expected.
2108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     cystatus CapSense_1_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint8 maxIdac = 1u;
2118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint16 maxRaw = 1u;
2119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (1u == CapSense_1_NUM_SCAN_FREQS)
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u};
2128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u, 1u, 1u};
2130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (1u == CapSense_1_NUM_SCAN_FREQS) */
2131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 *ptrIdac;
2133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calibrate maximum level for given resolution */
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
2136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate percentage of maximum value */
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (rawLevel * target) / CapSense_1_PERCENTAGE_100;
2139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CapSense_1_widgetIndex */
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_widgetIndex = (uint8)widgetId;
2142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup ISR handler to single-sensor scan function */
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
2145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init pointer to Modulator IDAC */
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac = &ptrWdgt->idacMod[0u];
2148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 48


2149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedIdac = 1u;
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
2152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Go through all the sensors (or columns of touchpad) of widget to calibrate them */
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         for (CapSense_1_sensorIndex = 0u;
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
2158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calibrate current sensor in widget */
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max);
2161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Normalize idacMod and idacComp values */
2164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] + 1u) >>
2169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] + 1u) >> 
2170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Go through all columns of touchpad (or all the sensors in button) to normalize them 
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (CapSense_1_sensorIndex = 0u;
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
2176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
2179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (CapSense_1_DISABLE == CapSense_1_CSDV2))
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[0u] =
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
2187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
2188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 else
2192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] = 0u;
2194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for first frequency channel */
2197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptrIdac[Cap
2198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptrIdac[Cap
2200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 49


2206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = 0u;
2211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for second frequency channel */
2213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptrIdac[Cap
2214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptrIdac[Cap
2216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = 0u;
2227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Normalize widget for single-IDAC mode*/
2232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = iDAC8Max[0u];
2233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Init pointer to Modulator IDAC for columns */
2244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac = &ptrWdgt->rowIdacMod[0u];
2245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset the maximum value for columns */
2247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[0u] = 1u;
2248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = 1u;
2250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = 1u;
2251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxIdac = CapSense_1_calibratedIdac;
2255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxRaw = CapSense_1_calibratedRawcount;
2256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = 1u;
2257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = 1u;
2258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Go through all columns of touchpad to calibrate them */
2261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].totalNu
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 50


2263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex++)
2264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calibrate current sensor in widget */
2266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8M
2267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdacRow = CapSense_1_calibratedIdac;
2271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcountRow = CapSense_1_calibratedRawcount;
2272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = maxIdac;
2273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = maxRaw;
2274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Normalize idacMod and idacComp values */
2277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] 
2282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] +
2283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Go through all columns of touchpad to normalize them */
2286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].tot
2288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex++)
2289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sen
2292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * 
2294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         {
2296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
2299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[0u] =
2300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) +
2301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
2303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         }
2305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for first frequency channel */
2307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptr
2308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptr
2310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for second frequency channel */
2319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptr
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 51


2320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptr
2322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
2333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Normalize widget for single-IDAC mode*/
2334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = iDAC8Max[0u];
2335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_sensorIndex = 0u;
2344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return calibrateStatus;
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
2348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
2349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
2352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDClockRestart
2354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function restarts the clocks.
2358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The function performs following:
2361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void)
2367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 488              		.loc 1 2369 0
 489 0014 1E4B     		ldr	r3, .L40+12
 490 0016 187F     		ldrb	r0, [r3, #28]
 491 0018 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 492              	.LVL49:
2370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 52


2372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 493              		.loc 1 2373 0
 494 001c 1D4A     		ldr	r2, .L40+16
 495 001e 1E4B     		ldr	r3, .L40+20
 496 0020 1A60     		str	r2, [r3]
 497              	.L36:
2374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SnsClk__DIV_ID <<
2375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
2376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
2377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MAS
 498              		.loc 1 2379 0
 499 0022 1D4B     		ldr	r3, .L40+20
 500 0024 1B68     		ldr	r3, [r3]
 501 0026 002B     		cmp	r3, #0
 502 0028 FBDB     		blt	.L36
2380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 503              		.loc 1 2385 0
 504 002a 1C4A     		ldr	r2, .L40+24
 505 002c 1A4B     		ldr	r3, .L40+20
 506 002e 1A60     		str	r2, [r3]
 507              	.LBE13:
 508              	.LBE12:
 509              	.LBB14:
 510              	.LBB15:
2386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_S
2387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHI
2388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_SNSCLK_CMD_ENABLE_MASK));
2389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
2393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
2394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
2398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_SnsClk__ENABLE_MASK);
2399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
2400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)
2402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntDisable(CapSense_1_ISR_NUMBER);
2404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_ONE_CYCLE);
2405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_COUNTER_PTR) & CapSense_1_RESOLUTION_16_BITS))
2407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scanning is complete */
2409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 53


2411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntClearPending(CapSense_1_ISR_NUMBER);
2412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE) */
2413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
2415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCmodPrecharge
2419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  prevent the project hanging.
2430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void)
2440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&\
2447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
2448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 tmpRegValue;
2449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif
2450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_INIT);
2452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,  CapSense_1_CSD_SW_FW_MOD_SEL_INIT);
2453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_CSD_SW_FW_TANK_SEL_INIT);
2454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_INIT);
2455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
2456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(0u != CapSense_1_CSD_SHIELD_TANK_EN)
2463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
2465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
2466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CSH_HSIOM_SHIFT);
2467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, tmpRegValue);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 54


2468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (0u != CapSense_1_CSD_SHIELD_TANK_EN) */
2469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
2473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_INIT);
2475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_CLEAR_MASK);
2480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_SEQ_MODE_MASK |
2483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                          CapSense_1_SEQ_START_START_MASK);
2484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_INTR_PTR) & CapSense_1_INTR_INIT_MASK)) && (0u != wat
2490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u == watchdogCounter)
2495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_ABORT_MASK);
2498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tmpRegValue;
2503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 newRegValue;
2504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 511              		.loc 1 2507 0
 512 0030 1B4E     		ldr	r6, .L40+28
 513 0032 3568     		ldr	r5, [r6]
 514              	.LVL50:
2508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyDelayCycles(CapSense_1_CMOD_DISCHARGE_CYCLES);
 515              		.loc 1 2510 0
 516 0034 5720     		movs	r0, #87
 517 0036 FFF7FEFF 		bl	CyDelayCycles
 518              	.LVL51:
2511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CapSense_1_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_1_IDAC_MOD_CF
 519              		.loc 1 2512 0
 520 003a 1A4B     		ldr	r3, .L40+32
 521 003c 2B40     		ands	r3, r5
 522 003e 1A4A     		ldr	r2, .L40+36
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 55


 523 0040 1343     		orrs	r3, r2
 524              	.LVL52:
2513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 525              		.loc 1 2515 0
 526 0042 3360     		str	r3, [r6]
 527              	.LVL53:
2516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) & ~CapSense_1_C
2519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 528              		.loc 1 2522 0
 529 0044 E123     		movs	r3, #225
 530              	.LVL54:
 531 0046 1B02     		lsls	r3, r3, #8
 532 0048 00E0     		b	.L37
 533              	.LVL55:
 534              	.L39:
2523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_STATUS_PTR) & CapSense_1_STATUS_SAMPLE)) && (0u != wa
2526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
 535              		.loc 1 2527 0
 536 004a 013B     		subs	r3, r3, #1
 537              	.LVL56:
 538              	.L37:
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 539              		.loc 1 2525 0
 540 004c 174A     		ldr	r2, .L40+40
 541 004e 1268     		ldr	r2, [r2]
 542 0050 1207     		lsls	r2, r2, #28
 543 0052 01D4     		bmi	.L38
 544 0054 002B     		cmp	r3, #0
 545 0056 F8D1     		bne	.L39
 546              	.L38:
2528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) | CapSense_1_CO
2532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegValue);
 547              		.loc 1 2535 0
 548 0058 114B     		ldr	r3, .L40+28
 549              	.LVL57:
 550 005a 1D60     		str	r5, [r3]
 551              	.LVL58:
2536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 552              		.loc 1 2538 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 56


 553 005c 094D     		ldr	r5, .L40
 554              	.LVL59:
 555 005e 144B     		ldr	r3, .L40+44
 556 0060 2A68     		ldr	r2, [r5]
 557 0062 1343     		orrs	r3, r2
 558 0064 094A     		ldr	r2, .L40+8
 559 0066 1360     		str	r3, [r2]
 560              	.LVL60:
2539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
 561              		.loc 1 2540 0
 562 0068 1020     		movs	r0, #16
 563 006a FFF7FEFF 		bl	CyIntEnable
 564              	.LVL61:
 565              	.LBE15:
 566              	.LBE14:
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
 567              		.loc 1 1318 0
 568 006e E720     		movs	r0, #231
 569 0070 FFF7FEFF 		bl	CyDelayCycles
 570              	.LVL62:
 571              	.LBB16:
 572              	.LBB17:
2541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
2544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDTriggerScan
2548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function triggers the scanning.
2552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void)
2568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 57


2575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear previous interrupts */
2576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntClearPending(CapSense_1_ISR_NUMBER);
2580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
2583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_CSD_SW_HS_P_SEL_SCAN);
2586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_CSD_SW_FW_MOD_SEL_SCAN);
2589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,CapSense_1_CSD_SW_FW_TANK_SEL_SCAN);
2590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_SCAN);
2592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSense_1_CSD
2594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
2596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSens
2597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_SCAN);
2599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_SCAN);
2600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN)
2602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, 0u);
2604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_SCAN_MASK);
2606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) */
2607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
2609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR) |
2611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            CapSense_1_SENSE_PERIOD_LFSR_CLEAR_MASK)
2612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE) */
2613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_INTR_MASK_SAMPLE_MASK);
2616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u != (CapSense_1_STAT_SEQ_REG & CapSense_1_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watc
2622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
2628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_AZ1_SKIP_MASK |
2629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_START_MASK);
2630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 58


2632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
2634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set resolution to Counter register to start scanning */
2636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_counterResolution);
 573              		.loc 1 2636 0
 574 0074 6A68     		ldr	r2, [r5, #4]
 575 0076 0F4B     		ldr	r3, .L40+48
 576 0078 1A60     		str	r2, [r3]
 577              	.LBE17:
 578              	.LBE16:
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 579              		.loc 1 1324 0
 580 007a 2000     		movs	r0, r4
 581 007c FFF7FEFF 		bl	CyExitCriticalSection
 582              	.LVL63:
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 583              		.loc 1 1326 0
 584              		@ sp needed
 585              	.LVL64:
 586 0080 70BD     		pop	{r4, r5, r6, pc}
 587              	.L41:
 588 0082 C046     		.align	2
 589              	.L40:
 590 0084 00000000 		.word	.LANCHOR0
 591 0088 2008E881 		.word	-2115500000
 592 008c 04002840 		.word	1076363268
 593 0090 00000000 		.word	CapSense_1_dsRam
 594 0094 41000040 		.word	1073741889
 595 0098 00000140 		.word	1073807360
 596 009c 41FF0080 		.word	-2147418303
 597 00a0 08002840 		.word	1076363272
 598 00a4 00E8FFBF 		.word	-1073747968
 599 00a8 F0060040 		.word	1073743600
 600 00ac 10002840 		.word	1076363280
 601 00b0 2018E881 		.word	-2115495904
 602 00b4 0C002840 		.word	1076363276
 603              		.cfi_endproc
 604              	.LFE11:
 605              		.size	CapSense_1_SsCSDStartSample, .-CapSense_1_SsCSDStartSample
 606              		.section	.text.CapSense_1_CSDScanExt,"ax",%progbits
 607              		.align	2
 608              		.global	CapSense_1_CSDScanExt
 609              		.code	16
 610              		.thumb_func
 611              		.type	CapSense_1_CSDScanExt, %function
 612              	CapSense_1_CSDScanExt:
 613              	.LFB12:
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
 614              		.loc 1 1371 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 10B5     		push	{r4, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 59


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 622              		.loc 1 1373 0
 623 0002 044A     		ldr	r2, .L43
 624 0004 D368     		ldr	r3, [r2, #12]
 625 0006 0449     		ldr	r1, .L43+4
 626 0008 0B43     		orrs	r3, r1
 627 000a D360     		str	r3, [r2, #12]
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 628              		.loc 1 1388 0
 629 000c FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 630              	.LVL65:
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 631              		.loc 1 1389 0
 632              		@ sp needed
 633 0010 10BD     		pop	{r4, pc}
 634              	.L44:
 635 0012 C046     		.align	2
 636              	.L43:
 637 0014 00000000 		.word	CapSense_1_dsRam
 638 0018 80000100 		.word	65664
 639              		.cfi_endproc
 640              	.LFE12:
 641              		.size	CapSense_1_CSDScanExt, .-CapSense_1_CSDScanExt
 642              		.section	.text.CapSense_1_CSDConnectSns,"ax",%progbits
 643              		.align	2
 644              		.global	CapSense_1_CSDConnectSns
 645              		.code	16
 646              		.thumb_func
 647              		.type	CapSense_1_CSDConnectSns, %function
 648              	CapSense_1_CSDConnectSns:
 649              	.LFB16:
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
 650              		.loc 1 1642 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              	.LVL66:
 655 0000 70B5     		push	{r4, r5, r6, lr}
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661 0002 0400     		movs	r4, r0
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 662              		.loc 1 1649 0
 663 0004 857E     		ldrb	r5, [r0, #26]
 664              	.LVL67:
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 665              		.loc 1 1650 0
 666 0006 067E     		ldrb	r6, [r0, #24]
 667              	.LVL68:
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 668              		.loc 1 1652 0
 669 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 670              	.LVL69:
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 60


 671              		.loc 1 1655 0
 672 000c 2368     		ldr	r3, [r4]
 673 000e 1B68     		ldr	r3, [r3]
 674              	.LVL70:
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 675              		.loc 1 1656 0
 676 0010 0F22     		movs	r2, #15
 677 0012 B240     		lsls	r2, r2, r6
 678 0014 9343     		bics	r3, r2
 679              	.LVL71:
 680 0016 1A00     		movs	r2, r3
 681              	.LVL72:
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 682              		.loc 1 1657 0
 683 0018 0423     		movs	r3, #4
 684 001a B340     		lsls	r3, r3, r6
 685 001c 1343     		orrs	r3, r2
 686              	.LVL73:
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 687              		.loc 1 1660 0
 688 001e 6668     		ldr	r6, [r4, #4]
 689              	.LVL74:
 690 0020 3268     		ldr	r2, [r6]
 691 0022 0721     		movs	r1, #7
 692 0024 A940     		lsls	r1, r1, r5
 693 0026 8A43     		bics	r2, r1
 694 0028 3260     		str	r2, [r6]
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 695              		.loc 1 1663 0
 696 002a 2268     		ldr	r2, [r4]
 697 002c 1360     		str	r3, [r2]
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 698              		.loc 1 1665 0
 699 002e FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL75:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 701              		.loc 1 1666 0
 702              		@ sp needed
 703              	.LVL76:
 704              	.LVL77:
 705 0032 70BD     		pop	{r4, r5, r6, pc}
 706              		.cfi_endproc
 707              	.LFE16:
 708              		.size	CapSense_1_CSDConnectSns, .-CapSense_1_CSDConnectSns
 709              		.section	.text.CapSense_1_CSDScan,"ax",%progbits
 710              		.align	2
 711              		.global	CapSense_1_CSDScan
 712              		.code	16
 713              		.thumb_func
 714              		.type	CapSense_1_CSDScan, %function
 715              	CapSense_1_CSDScan:
 716              	.LFB13:
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 717              		.loc 1 1423 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 61


 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 727              		.loc 1 1425 0
 728 0002 154E     		ldr	r6, .L47
 729 0004 3378     		ldrb	r3, [r6]
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
 730              		.loc 1 1424 0
 731 0006 154D     		ldr	r5, .L47+4
 732 0008 5B01     		lsls	r3, r3, #5
 733 000a EB18     		adds	r3, r5, r3
 734 000c 5868     		ldr	r0, [r3, #4]
 735              	.LVL78:
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736              		.loc 1 1431 0
 737 000e 144C     		ldr	r4, .L47+8
 738 0010 0023     		movs	r3, #0
 739 0012 2370     		strb	r3, [r4]
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 740              		.loc 1 1434 0
 741 0014 3378     		ldrb	r3, [r6]
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 742              		.loc 1 1435 0
 743 0016 5B01     		lsls	r3, r3, #5
 744 0018 EB18     		adds	r3, r5, r3
 745 001a 9968     		ldr	r1, [r3, #8]
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 746              		.loc 1 1436 0
 747 001c 2378     		ldrb	r3, [r4]
 748 001e DBB2     		uxtb	r3, r3
 749 0020 9A00     		lsls	r2, r3, #2
 750 0022 D318     		adds	r3, r2, r3
 751 0024 5A00     		lsls	r2, r3, #1
 752 0026 8A18     		adds	r2, r1, r2
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 753              		.loc 1 1434 0
 754 0028 0E4B     		ldr	r3, .L47+12
 755 002a 1A60     		str	r2, [r3]
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 756              		.loc 1 1444 0
 757 002c FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 758              	.LVL79:
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 759              		.loc 1 1463 0
 760 0030 3378     		ldrb	r3, [r6]
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
 761              		.loc 1 1464 0
 762 0032 5B01     		lsls	r3, r3, #5
 763 0034 5859     		ldr	r0, [r3, r5]
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 764              		.loc 1 1465 0
 765 0036 2278     		ldrb	r2, [r4]
 766 0038 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 62


 767 003a D300     		lsls	r3, r2, #3
 768 003c 9A1A     		subs	r2, r3, r2
 769 003e 9300     		lsls	r3, r2, #2
 770 0040 C018     		adds	r0, r0, r3
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 771              		.loc 1 1463 0
 772 0042 094B     		ldr	r3, .L47+16
 773 0044 1860     		str	r0, [r3]
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 774              		.loc 1 1468 0
 775 0046 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 776              	.LVL80:
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 777              		.loc 1 1471 0
 778 004a 0848     		ldr	r0, .L47+20
 779 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 780              	.LVL81:
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 781              		.loc 1 1475 0
 782 0050 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 783              	.LVL82:
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 784              		.loc 1 1476 0
 785              		@ sp needed
 786 0054 70BD     		pop	{r4, r5, r6, pc}
 787              	.L48:
 788 0056 C046     		.align	2
 789              	.L47:
 790 0058 00000000 		.word	CapSense_1_widgetIndex
 791 005c 00000000 		.word	CapSense_1_dsFlash
 792 0060 00000000 		.word	CapSense_1_sensorIndex
 793 0064 00000000 		.word	CapSense_1_curRamSnsPtr
 794 0068 00000000 		.word	CapSense_1_curSnsIOPtr
 795 006c 00000000 		.word	CapSense_1_CSDPostMultiScan
 796              		.cfi_endproc
 797              	.LFE13:
 798              		.size	CapSense_1_CSDScan, .-CapSense_1_CSDScan
 799              		.section	.text.CapSense_1_SsCSDConnectSensorExt,"ax",%progbits
 800              		.align	2
 801              		.global	CapSense_1_SsCSDConnectSensorExt
 802              		.code	16
 803              		.thumb_func
 804              		.type	CapSense_1_SsCSDConnectSensorExt, %function
 805              	CapSense_1_SsCSDConnectSensorExt:
 806              	.LFB14:
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 807              		.loc 1 1499 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL83:
 812 0000 10B5     		push	{r4, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 4, -8
 815              		.cfi_offset 14, -4
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 816              		.loc 1 1506 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 63


 817 0002 4001     		lsls	r0, r0, #5
 818              	.LVL84:
 819 0004 054B     		ldr	r3, .L50
 820 0006 C058     		ldr	r0, [r0, r3]
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 821              		.loc 1 1507 0
 822 0008 CB00     		lsls	r3, r1, #3
 823 000a 591A     		subs	r1, r3, r1
 824              	.LVL85:
 825 000c 8B00     		lsls	r3, r1, #2
 826 000e C018     		adds	r0, r0, r3
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 827              		.loc 1 1505 0
 828 0010 034B     		ldr	r3, .L50+4
 829 0012 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 830              		.loc 1 1541 0
 831 0014 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 832              	.LVL86:
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 833              		.loc 1 1543 0
 834              		@ sp needed
 835 0018 10BD     		pop	{r4, pc}
 836              	.L51:
 837 001a C046     		.align	2
 838              	.L50:
 839 001c 00000000 		.word	CapSense_1_dsFlash
 840 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 841              		.cfi_endproc
 842              	.LFE14:
 843              		.size	CapSense_1_SsCSDConnectSensorExt, .-CapSense_1_SsCSDConnectSensorExt
 844              		.section	.text.CapSense_1_CSDDisconnectSns,"ax",%progbits
 845              		.align	2
 846              		.global	CapSense_1_CSDDisconnectSns
 847              		.code	16
 848              		.thumb_func
 849              		.type	CapSense_1_CSDDisconnectSns, %function
 850              	CapSense_1_CSDDisconnectSns:
 851              	.LFB17:
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
 852              		.loc 1 1694 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL87:
 857 0000 70B5     		push	{r4, r5, r6, lr}
 858              		.cfi_def_cfa_offset 16
 859              		.cfi_offset 4, -16
 860              		.cfi_offset 5, -12
 861              		.cfi_offset 6, -8
 862              		.cfi_offset 14, -4
 863 0002 0400     		movs	r4, r0
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 864              		.loc 1 1705 0
 865 0004 007E     		ldrb	r0, [r0, #24]
 866              	.LVL88:
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 64


 867              		.loc 1 1706 0
 868 0006 A57E     		ldrb	r5, [r4, #26]
 869              	.LVL89:
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 870              		.loc 1 1711 0
 871 0008 2168     		ldr	r1, [r4]
 872 000a 0B68     		ldr	r3, [r1]
 873 000c 0F22     		movs	r2, #15
 874 000e 8240     		lsls	r2, r2, r0
 875 0010 9343     		bics	r3, r2
 876 0012 0B60     		str	r3, [r1]
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 877              		.loc 1 1713 0
 878 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 879              	.LVL90:
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
 880              		.loc 1 1716 0
 881 0018 6168     		ldr	r1, [r4, #4]
 882 001a 0B68     		ldr	r3, [r1]
 883              	.LVL91:
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
 884              		.loc 1 1717 0
 885 001c 0722     		movs	r2, #7
 886 001e AA40     		lsls	r2, r2, r5
 887 0020 9343     		bics	r3, r2
 888              	.LVL92:
 889 0022 1A00     		movs	r2, r3
 890              	.LVL93:
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
 891              		.loc 1 1718 0
 892 0024 0623     		movs	r3, #6
 893 0026 AB40     		lsls	r3, r3, r5
 894 0028 1343     		orrs	r3, r2
 895              	.LVL94:
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 896              		.loc 1 1719 0
 897 002a 0B60     		str	r3, [r1]
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 898              		.loc 1 1721 0
 899 002c FFF7FEFF 		bl	CyExitCriticalSection
 900              	.LVL95:
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 901              		.loc 1 1724 0
 902 0030 A168     		ldr	r1, [r4, #8]
 903 0032 0B68     		ldr	r3, [r1]
 904 0034 607E     		ldrb	r0, [r4, #25]
 905 0036 0122     		movs	r2, #1
 906 0038 8240     		lsls	r2, r2, r0
 907 003a 9343     		bics	r3, r2
 908 003c 0B60     		str	r3, [r1]
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909              		.loc 1 1735 0
 910              		@ sp needed
 911              	.LVL96:
 912              	.LVL97:
 913 003e 70BD     		pop	{r4, r5, r6, pc}
 914              		.cfi_endproc
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 65


 915              	.LFE17:
 916              		.size	CapSense_1_CSDDisconnectSns, .-CapSense_1_CSDDisconnectSns
 917              		.section	.text.CapSense_1_SsCSDElectrodeCheck,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_1_SsCSDElectrodeCheck
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_1_SsCSDElectrodeCheck, %function
 923              	CapSense_1_SsCSDElectrodeCheck:
 924              	.LFB5:
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 925              		.loc 1 695 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 933              		.loc 1 700 0
 934 0002 064B     		ldr	r3, .L55
 935 0004 1B78     		ldrb	r3, [r3]
 936 0006 012B     		cmp	r3, #1
 937 0008 06D1     		bne	.L53
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 938              		.loc 1 728 0
 939 000a 054B     		ldr	r3, .L55+4
 940 000c 1868     		ldr	r0, [r3]
 941 000e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 942              	.LVL98:
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 943              		.loc 1 731 0
 944 0012 0022     		movs	r2, #0
 945 0014 014B     		ldr	r3, .L55
 946 0016 1A70     		strb	r2, [r3]
 947              	.L53:
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 948              		.loc 1 733 0
 949              		@ sp needed
 950 0018 10BD     		pop	{r4, pc}
 951              	.L56:
 952 001a C046     		.align	2
 953              	.L55:
 954 001c 00000000 		.word	.LANCHOR1
 955 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 956              		.cfi_endproc
 957              	.LFE5:
 958              		.size	CapSense_1_SsCSDElectrodeCheck, .-CapSense_1_SsCSDElectrodeCheck
 959              		.section	.text.CapSense_1_CSDSetupWidget,"ax",%progbits
 960              		.align	2
 961              		.global	CapSense_1_CSDSetupWidget
 962              		.code	16
 963              		.thumb_func
 964              		.type	CapSense_1_CSDSetupWidget, %function
 965              	CapSense_1_CSDSetupWidget:
 966              	.LFB9:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 66


1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 967              		.loc 1 1121 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL99:
 972 0000 70B5     		push	{r4, r5, r6, lr}
 973              		.cfi_def_cfa_offset 16
 974              		.cfi_offset 4, -16
 975              		.cfi_offset 5, -12
 976              		.cfi_offset 6, -8
 977              		.cfi_offset 14, -4
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 978              		.loc 1 1123 0
 979 0002 104E     		ldr	r6, .L58
 980 0004 4301     		lsls	r3, r0, #5
 981 0006 F318     		adds	r3, r6, r3
 982 0008 5D68     		ldr	r5, [r3, #4]
 983              	.LVL100:
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 984              		.loc 1 1127 0
 985 000a C0B2     		uxtb	r0, r0
 986              	.LVL101:
 987 000c 0E4C     		ldr	r4, .L58+4
 988 000e 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 989              		.loc 1 1129 0
 990 0010 0120     		movs	r0, #1
 991 0012 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 992              	.LVL102:
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 993              		.loc 1 1137 0
 994 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 995              	.LVL103:
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 996              		.loc 1 1141 0
 997 001a 2378     		ldrb	r3, [r4]
 998 001c 5B01     		lsls	r3, r3, #5
 999 001e 9A59     		ldr	r2, [r3, r6]
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
 1000              		.loc 1 1140 0
 1001 0020 0A4B     		ldr	r3, .L58+8
 1002 0022 1A60     		str	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
 1003              		.loc 1 1144 0
 1004 0024 0A4B     		ldr	r3, .L58+12
 1005 0026 DA68     		ldr	r2, [r3, #12]
 1006 0028 7F21     		movs	r1, #127
 1007 002a 8A43     		bics	r2, r1
 1008 002c DA60     		str	r2, [r3, #12]
1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1009              		.loc 1 1145 0
 1010 002e 2178     		ldrb	r1, [r4]
 1011 0030 DA68     		ldr	r2, [r3, #12]
 1012 0032 0A43     		orrs	r2, r1
 1013 0034 DA60     		str	r2, [r3, #12]
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 67


 1014              		.loc 1 1148 0
 1015 0036 2800     		movs	r0, r5
 1016 0038 FFF7FEFF 		bl	CapSense_1_SsCSDCalculateScanDuration
 1017              	.LVL104:
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
 1018              		.loc 1 1152 0
 1019 003c FFF7FEFF 		bl	CapSense_1_SsCSDConfigClock
 1020              	.LVL105:
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1021              		.loc 1 1155 0
 1022              		@ sp needed
 1023              	.LVL106:
 1024              	.LVL107:
 1025 0040 70BD     		pop	{r4, r5, r6, pc}
 1026              	.L59:
 1027 0042 C046     		.align	2
 1028              	.L58:
 1029 0044 00000000 		.word	CapSense_1_dsFlash
 1030 0048 00000000 		.word	CapSense_1_widgetIndex
 1031 004c 00000000 		.word	CapSense_1_curSnsIOPtr
 1032 0050 00000000 		.word	CapSense_1_dsRam
 1033              		.cfi_endproc
 1034              	.LFE9:
 1035              		.size	CapSense_1_CSDSetupWidget, .-CapSense_1_CSDSetupWidget
 1036              		.section	.text.CapSense_1_CSDSetupWidgetExt,"ax",%progbits
 1037              		.align	2
 1038              		.global	CapSense_1_CSDSetupWidgetExt
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	CapSense_1_CSDSetupWidgetExt, %function
 1042              	CapSense_1_CSDSetupWidgetExt:
 1043              	.LFB10:
1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1044              		.loc 1 1202 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL108:
 1049 0000 70B5     		push	{r4, r5, r6, lr}
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 4, -16
 1052              		.cfi_offset 5, -12
 1053              		.cfi_offset 6, -8
 1054              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 1055              		.loc 1 1203 0
 1056 0002 4301     		lsls	r3, r0, #5
 1057 0004 134A     		ldr	r2, .L61
 1058 0006 D318     		adds	r3, r2, r3
 1059 0008 5D68     		ldr	r5, [r3, #4]
 1060              	.LVL109:
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1061              		.loc 1 1207 0
 1062 000a C9B2     		uxtb	r1, r1
 1063              	.LVL110:
 1064 000c 124C     		ldr	r4, .L61+4
 1065 000e 2170     		strb	r1, [r4]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 68


1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 1066              		.loc 1 1211 0
 1067 0010 9968     		ldr	r1, [r3, #8]
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1068              		.loc 1 1212 0
 1069 0012 2378     		ldrb	r3, [r4]
 1070 0014 DBB2     		uxtb	r3, r3
 1071 0016 9A00     		lsls	r2, r3, #2
 1072 0018 D318     		adds	r3, r2, r3
 1073 001a 5A00     		lsls	r2, r3, #1
 1074 001c 8A18     		adds	r2, r1, r2
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1075              		.loc 1 1210 0
 1076 001e 0F4B     		ldr	r3, .L61+8
 1077 0020 1A60     		str	r2, [r3]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1078              		.loc 1 1214 0
 1079 0022 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 1080              	.LVL111:
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1081              		.loc 1 1217 0
 1082 0026 2800     		movs	r0, r5
 1083 0028 FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1084              	.LVL112:
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
 1085              		.loc 1 1228 0
 1086 002c 2378     		ldrb	r3, [r4]
 1087 002e DBB2     		uxtb	r3, r3
 1088 0030 0B49     		ldr	r1, .L61+12
 1089 0032 DA00     		lsls	r2, r3, #3
 1090 0034 D31A     		subs	r3, r2, r3
 1091 0036 9800     		lsls	r0, r3, #2
 1092 0038 0B68     		ldr	r3, [r1]
 1093 003a 9C46     		mov	ip, r3
 1094 003c 6044     		add	r0, r0, ip
 1095 003e 0860     		str	r0, [r1]
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1096              		.loc 1 1229 0
 1097 0040 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1098              	.LVL113:
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1099              		.loc 1 1239 0
 1100 0044 0122     		movs	r2, #1
 1101 0046 074B     		ldr	r3, .L61+16
 1102 0048 1A70     		strb	r2, [r3]
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1103              		.loc 1 1242 0
 1104 004a 0748     		ldr	r0, .L61+20
 1105 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1106              	.LVL114:
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1107              		.loc 1 1243 0
 1108              		@ sp needed
 1109              	.LVL115:
 1110 0050 70BD     		pop	{r4, r5, r6, pc}
 1111              	.L62:
 1112 0052 C046     		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 69


 1113              	.L61:
 1114 0054 00000000 		.word	CapSense_1_dsFlash
 1115 0058 00000000 		.word	CapSense_1_sensorIndex
 1116 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1117 0060 00000000 		.word	CapSense_1_curSnsIOPtr
 1118 0064 00000000 		.word	.LANCHOR1
 1119 0068 00000000 		.word	CapSense_1_CSDPostSingleScan
 1120              		.cfi_endproc
 1121              	.LFE10:
 1122              		.size	CapSense_1_CSDSetupWidgetExt, .-CapSense_1_CSDSetupWidgetExt
 1123              		.section	.text.CapSense_1_SsCSDDisconnectSnsExt,"ax",%progbits
 1124              		.align	2
 1125              		.global	CapSense_1_SsCSDDisconnectSnsExt
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CapSense_1_SsCSDDisconnectSnsExt, %function
 1129              	CapSense_1_SsCSDDisconnectSnsExt:
 1130              	.LFB15:
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1131              		.loc 1 1569 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              	.LVL116:
 1136 0000 10B5     		push	{r4, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 4, -8
 1139              		.cfi_offset 14, -4
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 1140              		.loc 1 1576 0
 1141 0002 4001     		lsls	r0, r0, #5
 1142              	.LVL117:
 1143 0004 054B     		ldr	r3, .L64
 1144 0006 C058     		ldr	r0, [r0, r3]
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1145              		.loc 1 1577 0
 1146 0008 CB00     		lsls	r3, r1, #3
 1147 000a 591A     		subs	r1, r3, r1
 1148              	.LVL118:
 1149 000c 8B00     		lsls	r3, r1, #2
 1150 000e C018     		adds	r0, r0, r3
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 1151              		.loc 1 1575 0
 1152 0010 034B     		ldr	r3, .L64+4
 1153 0012 1860     		str	r0, [r3]
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1154              		.loc 1 1610 0
 1155 0014 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1156              	.LVL119:
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1157              		.loc 1 1612 0
 1158              		@ sp needed
 1159 0018 10BD     		pop	{r4, pc}
 1160              	.L65:
 1161 001a C046     		.align	2
 1162              	.L64:
 1163 001c 00000000 		.word	CapSense_1_dsFlash
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 70


 1164 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1165              		.cfi_endproc
 1166              	.LFE15:
 1167              		.size	CapSense_1_SsCSDDisconnectSnsExt, .-CapSense_1_SsCSDDisconnectSnsExt
 1168              		.section	.text.CapSense_1_SsCSDCalibrateOneSensor,"ax",%progbits
 1169              		.align	2
 1170              		.code	16
 1171              		.thumb_func
 1172              		.type	CapSense_1_SsCSDCalibrateOneSensor, %function
 1173              	CapSense_1_SsCSDCalibrateOneSensor:
 1174              	.LFB21:
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
 1175              		.loc 1 1911 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              	.LVL120:
 1180 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1181              		.cfi_def_cfa_offset 20
 1182              		.cfi_offset 4, -20
 1183              		.cfi_offset 5, -16
 1184              		.cfi_offset 6, -12
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 4746     		mov	r7, r8
 1188 0004 80B4     		push	{r7}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 8, -24
 1191 0006 82B0     		sub	sp, sp, #8
 1192              		.cfi_def_cfa_offset 32
 1193 0008 0700     		movs	r7, r0
 1194 000a 0E00     		movs	r6, r1
 1195 000c 9046     		mov	r8, r2
 1196              	.LVL121:
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1197              		.loc 1 1924 0
 1198 000e 2F4A     		ldr	r2, .L73
 1199              	.LVL122:
 1200 0010 1378     		ldrb	r3, [r2]
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 1201              		.loc 1 1923 0
 1202 0012 5B01     		lsls	r3, r3, #5
 1203 0014 2E49     		ldr	r1, .L73+4
 1204              	.LVL123:
 1205 0016 CB18     		adds	r3, r1, r3
 1206 0018 5B68     		ldr	r3, [r3, #4]
 1207 001a 0193     		str	r3, [sp, #4]
 1208              	.LVL124:
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1209              		.loc 1 1926 0
 1210 001c 0023     		movs	r3, #0
 1211              	.LVL125:
 1212 001e 3370     		strb	r3, [r6]
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1213              		.loc 1 1933 0
 1214 0020 1078     		ldrb	r0, [r2]
 1215              	.LVL126:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 71


 1216 0022 C0B2     		uxtb	r0, r0
 1217 0024 2B4B     		ldr	r3, .L73+8
 1218 0026 1978     		ldrb	r1, [r3]
 1219 0028 C9B2     		uxtb	r1, r1
 1220 002a FFF7FEFF 		bl	CapSense_1_CSDSetupWidgetExt
 1221              	.LVL127:
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1222              		.loc 1 1937 0
 1223 002e FFF7FEFF 		bl	CapSense_1_SsCSDSetSingleIdacMode
 1224              	.LVL128:
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1225              		.loc 1 1916 0
 1226 0032 0024     		movs	r4, #0
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
 1227              		.loc 1 1913 0
 1228 0034 8025     		movs	r5, #128
 1229 0036 6D00     		lsls	r5, r5, #1
 1230              	.LVL129:
 1231              	.L71:
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1232              		.loc 1 1947 0
 1233 0038 BC42     		cmp	r4, r7
 1234 003a 02D2     		bcs	.L67
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1235              		.loc 1 1950 0
 1236 003c 3378     		ldrb	r3, [r6]
 1237 003e AB43     		bics	r3, r5
 1238 0040 3370     		strb	r3, [r6]
 1239              	.L67:
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1240              		.loc 1 1968 0
 1241 0042 6D08     		lsrs	r5, r5, #1
 1242              	.LVL130:
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1243              		.loc 1 1971 0
 1244 0044 3378     		ldrb	r3, [r6]
 1245 0046 2B43     		orrs	r3, r5
 1246 0048 3370     		strb	r3, [r6]
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1247              		.loc 1 1978 0
 1248 004a 0198     		ldr	r0, [sp, #4]
 1249 004c FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1250              	.LVL131:
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1251              		.loc 1 1981 0
 1252 0050 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 1253              	.LVL132:
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
 1254              		.loc 1 1984 0
 1255 0054 E123     		movs	r3, #225
 1256 0056 1B02     		lsls	r3, r3, #8
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1257              		.loc 1 1985 0
 1258 0058 00E0     		b	.L68
 1259              	.LVL133:
 1260              	.L70:
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 72


 1261              		.loc 1 1989 0
 1262 005a 013B     		subs	r3, r3, #1
 1263              	.LVL134:
 1264              	.L68:
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1265              		.loc 1 1985 0
 1266 005c 1E4A     		ldr	r2, .L73+12
 1267 005e D268     		ldr	r2, [r2, #12]
 1268 0060 1206     		lsls	r2, r2, #24
 1269 0062 01D5     		bpl	.L69
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1270              		.loc 1 1985 0 is_stmt 0 discriminator 1
 1271 0064 002B     		cmp	r3, #0
 1272 0066 F8D1     		bne	.L70
 1273              	.L69:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1274              		.loc 1 1993 0 is_stmt 1
 1275 0068 1C4B     		ldr	r3, .L73+16
 1276              	.LVL135:
 1277 006a 1B68     		ldr	r3, [r3]
 1278 006c 1C88     		ldrh	r4, [r3]
 1279              	.LVL136:
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1280              		.loc 1 1999 0
 1281 006e 002D     		cmp	r5, #0
 1282 0070 E2D1     		bne	.L71
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1283              		.loc 1 2005 0
 1284 0072 164B     		ldr	r3, .L73
 1285 0074 1B78     		ldrb	r3, [r3]
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
 1286              		.loc 1 2006 0
 1287 0076 5B01     		lsls	r3, r3, #5
 1288 0078 154A     		ldr	r2, .L73+4
 1289 007a 9858     		ldr	r0, [r3, r2]
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1290              		.loc 1 2007 0
 1291 007c 154B     		ldr	r3, .L73+8
 1292 007e 1A78     		ldrb	r2, [r3]
 1293 0080 D2B2     		uxtb	r2, r2
 1294 0082 D300     		lsls	r3, r2, #3
 1295 0084 9A1A     		subs	r2, r3, r2
 1296 0086 9300     		lsls	r3, r2, #2
 1297 0088 C018     		adds	r0, r0, r3
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1298              		.loc 1 2005 0
 1299 008a 154B     		ldr	r3, .L73+20
 1300 008c 1860     		str	r0, [r3]
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1301              		.loc 1 2010 0
 1302 008e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1303              	.LVL137:
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1304              		.loc 1 2014 0
 1305 0092 0022     		movs	r2, #0
 1306 0094 134B     		ldr	r3, .L73+24
 1307 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 73


2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1308              		.loc 1 2018 0
 1309 0098 FFF7FEFF 		bl	CapSense_1_SsCSDRestoreIdacMode
 1310              	.LVL138:
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1311              		.loc 1 2022 0
 1312 009c 2200     		movs	r2, r4
 1313 009e 3900     		movs	r1, r7
 1314 00a0 0198     		ldr	r0, [sp, #4]
 1315 00a2 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateCheck
 1316              	.LVL139:
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1317              		.loc 1 2032 0
 1318 00a6 4346     		mov	r3, r8
 1319 00a8 1A78     		ldrb	r2, [r3]
 1320 00aa 3378     		ldrb	r3, [r6]
 1321 00ac 9A42     		cmp	r2, r3
 1322 00ae 04D2     		bcs	.L72
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 1323              		.loc 1 2034 0
 1324 00b0 4246     		mov	r2, r8
 1325 00b2 1370     		strb	r3, [r2]
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
 1326              		.loc 1 2037 0
 1327 00b4 0C4A     		ldr	r2, .L73+28
 1328 00b6 1372     		strb	r3, [r2, #8]
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1329              		.loc 1 2038 0
 1330 00b8 5481     		strh	r4, [r2, #10]
 1331              	.L72:
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1332              		.loc 1 2057 0
 1333 00ba 084B     		ldr	r3, .L73+16
 1334 00bc 1B68     		ldr	r3, [r3]
 1335 00be 3278     		ldrb	r2, [r6]
 1336 00c0 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1337              		.loc 1 2065 0
 1338 00c2 02B0     		add	sp, sp, #8
 1339              		@ sp needed
 1340              	.LVL140:
 1341              	.LVL141:
 1342              	.LVL142:
 1343              	.LVL143:
 1344              	.LVL144:
 1345 00c4 04BC     		pop	{r2}
 1346 00c6 9046     		mov	r8, r2
 1347 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1348              	.L74:
 1349 00ca C046     		.align	2
 1350              	.L73:
 1351 00cc 00000000 		.word	CapSense_1_widgetIndex
 1352 00d0 00000000 		.word	CapSense_1_dsFlash
 1353 00d4 00000000 		.word	CapSense_1_sensorIndex
 1354 00d8 00000000 		.word	CapSense_1_dsRam
 1355 00dc 00000000 		.word	CapSense_1_curRamSnsPtr
 1356 00e0 00000000 		.word	CapSense_1_curSnsIOPtr
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 74


 1357 00e4 00000000 		.word	.LANCHOR1
 1358 00e8 00000000 		.word	.LANCHOR0
 1359              		.cfi_endproc
 1360              	.LFE21:
 1361              		.size	CapSense_1_SsCSDCalibrateOneSensor, .-CapSense_1_SsCSDCalibrateOneSensor
 1362              		.section	.text.CapSense_1_CSDCalibrateWidget,"ax",%progbits
 1363              		.align	2
 1364              		.global	CapSense_1_CSDCalibrateWidget
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CapSense_1_CSDCalibrateWidget, %function
 1368              	CapSense_1_CSDCalibrateWidget:
 1369              	.LFB22:
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
 1370              		.loc 1 2111 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 16
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL145:
 1375 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1376              		.cfi_def_cfa_offset 20
 1377              		.cfi_offset 4, -20
 1378              		.cfi_offset 5, -16
 1379              		.cfi_offset 6, -12
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 4F46     		mov	r7, r9
 1383 0004 80B4     		push	{r7}
 1384              		.cfi_def_cfa_offset 24
 1385              		.cfi_offset 9, -24
 1386 0006 84B0     		sub	sp, sp, #16
 1387              		.cfi_def_cfa_offset 40
 1388 0008 0400     		movs	r4, r0
 1389 000a 8946     		mov	r9, r1
 1390              	.LVL146:
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1391              		.loc 1 2123 0
 1392 000c 4301     		lsls	r3, r0, #5
 1393 000e 384A     		ldr	r2, .L82
 1394 0010 D318     		adds	r3, r2, r3
 1395 0012 5F68     		ldr	r7, [r3, #4]
 1396              	.LVL147:
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 1397              		.loc 1 2127 0
 1398 0014 0125     		movs	r5, #1
 1399 0016 03AB     		add	r3, sp, #12
 1400 0018 1D70     		strb	r5, [r3]
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1401              		.loc 1 2135 0
 1402 001a 3B88     		ldrh	r3, [r7]
 1403 001c 2800     		movs	r0, r5
 1404              	.LVL148:
 1405 001e 9840     		lsls	r0, r0, r3
 1406 0020 0138     		subs	r0, r0, #1
 1407              	.LVL149:
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1408              		.loc 1 2138 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 75


 1409 0022 4843     		muls	r0, r1
 1410              	.LVL150:
 1411 0024 6421     		movs	r1, #100
 1412              	.LVL151:
 1413 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1414              	.LVL152:
 1415 002a 0190     		str	r0, [sp, #4]
 1416              	.LVL153:
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1417              		.loc 1 2141 0
 1418 002c E2B2     		uxtb	r2, r4
 1419 002e 314B     		ldr	r3, .L82+4
 1420 0030 1A70     		strb	r2, [r3]
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1421              		.loc 1 2144 0
 1422 0032 3148     		ldr	r0, .L82+8
 1423              	.LVL154:
 1424 0034 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1425              	.LVL155:
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1426              		.loc 1 2147 0
 1427 0038 3E00     		movs	r6, r7
 1428 003a 0936     		adds	r6, r6, #9
 1429              	.LVL156:
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
 1430              		.loc 1 2150 0
 1431 003c 2F4B     		ldr	r3, .L82+12
 1432 003e 1D72     		strb	r5, [r3, #8]
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1433              		.loc 1 2151 0
 1434 0040 5D81     		strh	r5, [r3, #10]
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1435              		.loc 1 2155 0
 1436 0042 0022     		movs	r2, #0
 1437 0044 2E4B     		ldr	r3, .L82+16
 1438 0046 1A70     		strb	r2, [r3]
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1439              		.loc 1 2113 0
 1440 0048 0025     		movs	r5, #0
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1441              		.loc 1 2155 0
 1442 004a 0AE0     		b	.L76
 1443              	.LVL157:
 1444              	.L77:
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 1445              		.loc 1 2160 0
 1446 004c 03AA     		add	r2, sp, #12
 1447 004e 3100     		movs	r1, r6
 1448 0050 0198     		ldr	r0, [sp, #4]
 1449 0052 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateOneSensor
 1450              	.LVL158:
 1451 0056 0543     		orrs	r5, r0
 1452              	.LVL159:
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1453              		.loc 1 2157 0
 1454 0058 294A     		ldr	r2, .L82+16
 1455 005a 1378     		ldrb	r3, [r2]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 76


 1456 005c 0133     		adds	r3, r3, #1
 1457 005e DBB2     		uxtb	r3, r3
 1458 0060 1370     		strb	r3, [r2]
 1459              	.LVL160:
 1460              	.L76:
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
 1461              		.loc 1 2156 0 discriminator 1
 1462 0062 6301     		lsls	r3, r4, #5
 1463 0064 224A     		ldr	r2, .L82
 1464 0066 D318     		adds	r3, r2, r3
 1465 0068 DA7E     		ldrb	r2, [r3, #27]
 1466 006a 254B     		ldr	r3, .L82+16
 1467 006c 1B78     		ldrb	r3, [r3]
 1468 006e DBB2     		uxtb	r3, r3
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1469              		.loc 1 2155 0 discriminator 1
 1470 0070 9A42     		cmp	r2, r3
 1471 0072 EBD8     		bhi	.L77
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1472              		.loc 1 2166 0
 1473 0074 03AB     		add	r3, sp, #12
 1474 0076 1B78     		ldrb	r3, [r3]
 1475 0078 0133     		adds	r3, r3, #1
 1476 007a 5B08     		lsrs	r3, r3, #1
 1477 007c 7B72     		strb	r3, [r7, #9]
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1478              		.loc 1 2173 0
 1479 007e 0022     		movs	r2, #0
 1480 0080 1F4B     		ldr	r3, .L82+16
 1481 0082 1A70     		strb	r2, [r3]
 1482 0084 22E0     		b	.L78
 1483              	.LVL161:
 1484              	.L81:
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
 1485              		.loc 1 2178 0
 1486 0086 6301     		lsls	r3, r4, #5
 1487 0088 194A     		ldr	r2, .L82
 1488 008a D318     		adds	r3, r2, r3
 1489 008c 9E68     		ldr	r6, [r3, #8]
 1490 008e 1C4B     		ldr	r3, .L82+16
 1491 0090 1B78     		ldrb	r3, [r3]
 1492 0092 DBB2     		uxtb	r3, r3
 1493 0094 9A00     		lsls	r2, r3, #2
 1494 0096 D318     		adds	r3, r2, r3
 1495 0098 5A00     		lsls	r2, r3, #1
 1496 009a B618     		adds	r6, r6, r2
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
 1497              		.loc 1 2177 0
 1498 009c 194B     		ldr	r3, .L82+20
 1499 009e 1E60     		str	r6, [r3]
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 1500              		.loc 1 2180 0
 1501 00a0 737A     		ldrb	r3, [r6, #9]
 1502 00a2 787A     		ldrb	r0, [r7, #9]
 1503 00a4 8342     		cmp	r3, r0
 1504 00a6 0AD3     		bcc	.L79
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 77


 1505              		.loc 1 2182 0
 1506 00a8 1B1A     		subs	r3, r3, r0
 1507 00aa D8B2     		uxtb	r0, r3
 1508 00ac 7072     		strb	r0, [r6, #9]
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
 1509              		.loc 1 2186 0
 1510 00ae 4B46     		mov	r3, r9
 1511 00b0 5843     		muls	r0, r3
 1512 00b2 6330     		adds	r0, r0, #99
 1513 00b4 6421     		movs	r1, #100
 1514 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 1515              	.LVL162:
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
 1516              		.loc 1 2185 0
 1517 00ba 7072     		strb	r0, [r6, #9]
 1518 00bc 01E0     		b	.L80
 1519              	.L79:
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
 1520              		.loc 1 2193 0
 1521 00be 0023     		movs	r3, #0
 1522 00c0 7372     		strb	r3, [r6, #9]
 1523              	.L80:
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1524              		.loc 1 2175 0
 1525 00c2 0F4A     		ldr	r2, .L82+16
 1526 00c4 1378     		ldrb	r3, [r2]
 1527 00c6 0133     		adds	r3, r3, #1
 1528 00c8 DBB2     		uxtb	r3, r3
 1529 00ca 1370     		strb	r3, [r2]
 1530              	.L78:
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
 1531              		.loc 1 2174 0 discriminator 1
 1532 00cc 6301     		lsls	r3, r4, #5
 1533 00ce 084A     		ldr	r2, .L82
 1534 00d0 D318     		adds	r3, r2, r3
 1535 00d2 DA7E     		ldrb	r2, [r3, #27]
 1536 00d4 0A4B     		ldr	r3, .L82+16
 1537 00d6 1B78     		ldrb	r3, [r3]
 1538 00d8 DBB2     		uxtb	r3, r3
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1539              		.loc 1 2173 0 discriminator 1
 1540 00da 9A42     		cmp	r2, r3
 1541 00dc D3D8     		bhi	.L81
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1542              		.loc 1 2343 0
 1543 00de 0022     		movs	r2, #0
 1544 00e0 074B     		ldr	r3, .L82+16
 1545 00e2 1A70     		strb	r2, [r3]
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
 1546              		.loc 1 2346 0
 1547 00e4 2800     		movs	r0, r5
 1548 00e6 04B0     		add	sp, sp, #16
 1549              		@ sp needed
 1550              	.LVL163:
 1551              	.LVL164:
 1552              	.LVL165:
 1553              	.LVL166:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 78


 1554 00e8 04BC     		pop	{r2}
 1555 00ea 9146     		mov	r9, r2
 1556 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 1557              	.L83:
 1558 00ee C046     		.align	2
 1559              	.L82:
 1560 00f0 00000000 		.word	CapSense_1_dsFlash
 1561 00f4 00000000 		.word	CapSense_1_widgetIndex
 1562 00f8 00000000 		.word	CapSense_1_CSDPostSingleScan
 1563 00fc 00000000 		.word	.LANCHOR0
 1564 0100 00000000 		.word	CapSense_1_sensorIndex
 1565 0104 00000000 		.word	CapSense_1_curRamSnsPtr
 1566              		.cfi_endproc
 1567              	.LFE22:
 1568              		.size	CapSense_1_CSDCalibrateWidget, .-CapSense_1_CSDCalibrateWidget
 1569              		.global	CapSense_1_calibratedRawcount
 1570              		.global	CapSense_1_calibratedIdac
 1571              		.global	CapSense_1_configCsd
 1572              		.data
 1573              		.align	2
 1574              		.set	.LANCHOR0,. + 0
 1575              		.type	CapSense_1_configCsd, %object
 1576              		.size	CapSense_1_configCsd, 4
 1577              	CapSense_1_configCsd:
 1578 0000 0008C001 		.word	29362176
 1579              		.type	CapSense_1_counterResolution, %object
 1580              		.size	CapSense_1_counterResolution, 4
 1581              	CapSense_1_counterResolution:
 1582 0004 0000FF0F 		.word	268369920
 1583              		.type	CapSense_1_calibratedIdac, %object
 1584              		.size	CapSense_1_calibratedIdac, 1
 1585              	CapSense_1_calibratedIdac:
 1586 0008 01       		.byte	1
 1587 0009 00       		.space	1
 1588              		.type	CapSense_1_calibratedRawcount, %object
 1589              		.size	CapSense_1_calibratedRawcount, 2
 1590              	CapSense_1_calibratedRawcount:
 1591 000a 0100     		.short	1
 1592              		.bss
 1593              		.set	.LANCHOR1,. + 0
 1594              		.type	CapSense_1_eleCsdDisconnectFlag, %object
 1595              		.size	CapSense_1_eleCsdDisconnectFlag, 1
 1596              	CapSense_1_eleCsdDisconnectFlag:
 1597 0000 00       		.space	1
 1598              		.text
 1599              	.Letext0:
 1600              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1601              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1602              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1603              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1604              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1605              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1606              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1607              		.section	.debug_info,"",%progbits
 1608              	.Ldebug_info0:
 1609 0000 5C0F0000 		.4byte	0xf5c
 1610 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 79


 1611 0006 00000000 		.4byte	.Ldebug_abbrev0
 1612 000a 04       		.byte	0x4
 1613 000b 01       		.uleb128 0x1
 1614 000c E1020000 		.4byte	.LASF166
 1615 0010 0C       		.byte	0xc
 1616 0011 CC030000 		.4byte	.LASF167
 1617 0015 36060000 		.4byte	.LASF168
 1618 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1619 001d 00000000 		.4byte	0
 1620 0021 00000000 		.4byte	.Ldebug_line0
 1621 0025 02       		.uleb128 0x2
 1622 0026 01       		.byte	0x1
 1623 0027 06       		.byte	0x6
 1624 0028 9D0A0000 		.4byte	.LASF0
 1625 002c 02       		.uleb128 0x2
 1626 002d 01       		.byte	0x1
 1627 002e 08       		.byte	0x8
 1628 002f E9090000 		.4byte	.LASF1
 1629 0033 02       		.uleb128 0x2
 1630 0034 02       		.byte	0x2
 1631 0035 05       		.byte	0x5
 1632 0036 21080000 		.4byte	.LASF2
 1633 003a 02       		.uleb128 0x2
 1634 003b 02       		.byte	0x2
 1635 003c 07       		.byte	0x7
 1636 003d AE0A0000 		.4byte	.LASF3
 1637 0041 02       		.uleb128 0x2
 1638 0042 04       		.byte	0x4
 1639 0043 05       		.byte	0x5
 1640 0044 2B080000 		.4byte	.LASF4
 1641 0048 02       		.uleb128 0x2
 1642 0049 04       		.byte	0x4
 1643 004a 07       		.byte	0x7
 1644 004b 99090000 		.4byte	.LASF5
 1645 004f 02       		.uleb128 0x2
 1646 0050 08       		.byte	0x8
 1647 0051 05       		.byte	0x5
 1648 0052 94050000 		.4byte	.LASF6
 1649 0056 02       		.uleb128 0x2
 1650 0057 08       		.byte	0x8
 1651 0058 07       		.byte	0x7
 1652 0059 57020000 		.4byte	.LASF7
 1653 005d 03       		.uleb128 0x3
 1654 005e 04       		.byte	0x4
 1655 005f 05       		.byte	0x5
 1656 0060 696E7400 		.ascii	"int\000"
 1657 0064 02       		.uleb128 0x2
 1658 0065 04       		.byte	0x4
 1659 0066 07       		.byte	0x7
 1660 0067 8E000000 		.4byte	.LASF8
 1661 006b 04       		.uleb128 0x4
 1662 006c 050B0000 		.4byte	.LASF9
 1663 0070 02       		.byte	0x2
 1664 0071 E401     		.2byte	0x1e4
 1665 0073 2C000000 		.4byte	0x2c
 1666 0077 04       		.uleb128 0x4
 1667 0078 21050000 		.4byte	.LASF10
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 80


 1668 007c 02       		.byte	0x2
 1669 007d E501     		.2byte	0x1e5
 1670 007f 3A000000 		.4byte	0x3a
 1671 0083 04       		.uleb128 0x4
 1672 0084 EA060000 		.4byte	.LASF11
 1673 0088 02       		.byte	0x2
 1674 0089 E601     		.2byte	0x1e6
 1675 008b 48000000 		.4byte	0x48
 1676 008f 02       		.uleb128 0x2
 1677 0090 04       		.byte	0x4
 1678 0091 04       		.byte	0x4
 1679 0092 29020000 		.4byte	.LASF12
 1680 0096 02       		.uleb128 0x2
 1681 0097 08       		.byte	0x8
 1682 0098 04       		.byte	0x4
 1683 0099 0B0B0000 		.4byte	.LASF13
 1684 009d 02       		.uleb128 0x2
 1685 009e 01       		.byte	0x1
 1686 009f 08       		.byte	0x8
 1687 00a0 ED040000 		.4byte	.LASF14
 1688 00a4 04       		.uleb128 0x4
 1689 00a5 E0090000 		.4byte	.LASF15
 1690 00a9 02       		.byte	0x2
 1691 00aa 8602     		.2byte	0x286
 1692 00ac 48000000 		.4byte	0x48
 1693 00b0 05       		.uleb128 0x5
 1694 00b1 6B000000 		.4byte	0x6b
 1695 00b5 04       		.uleb128 0x4
 1696 00b6 82070000 		.4byte	.LASF16
 1697 00ba 02       		.byte	0x2
 1698 00bb 9002     		.2byte	0x290
 1699 00bd C1000000 		.4byte	0xc1
 1700 00c1 05       		.uleb128 0x5
 1701 00c2 83000000 		.4byte	0x83
 1702 00c6 06       		.uleb128 0x6
 1703 00c7 A2050000 		.4byte	.LASF17
 1704 00cb 03       		.byte	0x3
 1705 00cc FD       		.byte	0xfd
 1706 00cd 77000000 		.4byte	0x77
 1707 00d1 04       		.uleb128 0x4
 1708 00d2 9E020000 		.4byte	.LASF18
 1709 00d6 03       		.byte	0x3
 1710 00d7 0101     		.2byte	0x101
 1711 00d9 6B000000 		.4byte	0x6b
 1712 00dd 07       		.uleb128 0x7
 1713 00de 0C       		.byte	0xc
 1714 00df 04       		.byte	0x4
 1715 00e0 6E       		.byte	0x6e
 1716 00e1 3A010000 		.4byte	0x13a
 1717 00e5 08       		.uleb128 0x8
 1718 00e6 3A0B0000 		.4byte	.LASF19
 1719 00ea 04       		.byte	0x4
 1720 00eb 73       		.byte	0x73
 1721 00ec 77000000 		.4byte	0x77
 1722 00f0 00       		.byte	0
 1723 00f1 08       		.uleb128 0x8
 1724 00f2 410B0000 		.4byte	.LASF20
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 81


 1725 00f6 04       		.byte	0x4
 1726 00f7 77       		.byte	0x77
 1727 00f8 77000000 		.4byte	0x77
 1728 00fc 02       		.byte	0x2
 1729 00fd 08       		.uleb128 0x8
 1730 00fe 480B0000 		.4byte	.LASF21
 1731 0102 04       		.byte	0x4
 1732 0103 7B       		.byte	0x7b
 1733 0104 77000000 		.4byte	0x77
 1734 0108 04       		.byte	0x4
 1735 0109 08       		.uleb128 0x8
 1736 010a 4F0B0000 		.4byte	.LASF22
 1737 010e 04       		.byte	0x4
 1738 010f 7F       		.byte	0x7f
 1739 0110 77000000 		.4byte	0x77
 1740 0114 06       		.byte	0x6
 1741 0115 08       		.uleb128 0x8
 1742 0116 560B0000 		.4byte	.LASF23
 1743 011a 04       		.byte	0x4
 1744 011b 83       		.byte	0x83
 1745 011c 77000000 		.4byte	0x77
 1746 0120 08       		.byte	0x8
 1747 0121 08       		.uleb128 0x8
 1748 0122 5D0B0000 		.4byte	.LASF24
 1749 0126 04       		.byte	0x4
 1750 0127 87       		.byte	0x87
 1751 0128 6B000000 		.4byte	0x6b
 1752 012c 0A       		.byte	0xa
 1753 012d 08       		.uleb128 0x8
 1754 012e 640B0000 		.4byte	.LASF25
 1755 0132 04       		.byte	0x4
 1756 0133 8B       		.byte	0x8b
 1757 0134 6B000000 		.4byte	0x6b
 1758 0138 0B       		.byte	0xb
 1759 0139 00       		.byte	0
 1760 013a 06       		.uleb128 0x6
 1761 013b A2040000 		.4byte	.LASF26
 1762 013f 04       		.byte	0x4
 1763 0140 8C       		.byte	0x8c
 1764 0141 DD000000 		.4byte	0xdd
 1765 0145 09       		.uleb128 0x9
 1766 0146 01       		.byte	0x1
 1767 0147 2C000000 		.4byte	0x2c
 1768 014b 05       		.byte	0x5
 1769 014c 6F       		.byte	0x6f
 1770 014d 70010000 		.4byte	0x170
 1771 0151 0A       		.uleb128 0xa
 1772 0152 0C070000 		.4byte	.LASF27
 1773 0156 00       		.byte	0
 1774 0157 0A       		.uleb128 0xa
 1775 0158 73090000 		.4byte	.LASF28
 1776 015c 01       		.byte	0x1
 1777 015d 0A       		.uleb128 0xa
 1778 015e 8A080000 		.4byte	.LASF29
 1779 0162 02       		.byte	0x2
 1780 0163 0A       		.uleb128 0xa
 1781 0164 FE030000 		.4byte	.LASF30
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 82


 1782 0168 03       		.byte	0x3
 1783 0169 0A       		.uleb128 0xa
 1784 016a 64070000 		.4byte	.LASF31
 1785 016e 04       		.byte	0x4
 1786 016f 00       		.byte	0
 1787 0170 07       		.uleb128 0x7
 1788 0171 12       		.byte	0x12
 1789 0172 05       		.byte	0x5
 1790 0173 8D       		.byte	0x8d
 1791 0174 09020000 		.4byte	0x209
 1792 0178 08       		.uleb128 0x8
 1793 0179 28050000 		.4byte	.LASF32
 1794 017d 05       		.byte	0x5
 1795 017e 92       		.byte	0x92
 1796 017f 77000000 		.4byte	0x77
 1797 0183 00       		.byte	0
 1798 0184 08       		.uleb128 0x8
 1799 0185 CF090000 		.4byte	.LASF33
 1800 0189 05       		.byte	0x5
 1801 018a 97       		.byte	0x97
 1802 018b C6000000 		.4byte	0xc6
 1803 018f 02       		.byte	0x2
 1804 0190 08       		.uleb128 0x8
 1805 0191 E5040000 		.4byte	.LASF34
 1806 0195 05       		.byte	0x5
 1807 0196 9C       		.byte	0x9c
 1808 0197 6B000000 		.4byte	0x6b
 1809 019b 04       		.byte	0x4
 1810 019c 08       		.uleb128 0x8
 1811 019d A3060000 		.4byte	.LASF35
 1812 01a1 05       		.byte	0x5
 1813 01a2 A1       		.byte	0xa1
 1814 01a3 6B000000 		.4byte	0x6b
 1815 01a7 05       		.byte	0x5
 1816 01a8 08       		.uleb128 0x8
 1817 01a9 F1060000 		.4byte	.LASF36
 1818 01ad 05       		.byte	0x5
 1819 01ae A7       		.byte	0xa7
 1820 01af 6B000000 		.4byte	0x6b
 1821 01b3 06       		.byte	0x6
 1822 01b4 08       		.uleb128 0x8
 1823 01b5 D9050000 		.4byte	.LASF37
 1824 01b9 05       		.byte	0x5
 1825 01ba AD       		.byte	0xad
 1826 01bb 6B000000 		.4byte	0x6b
 1827 01bf 07       		.byte	0x7
 1828 01c0 08       		.uleb128 0x8
 1829 01c1 26040000 		.4byte	.LASF38
 1830 01c5 05       		.byte	0x5
 1831 01c6 B4       		.byte	0xb4
 1832 01c7 D1000000 		.4byte	0xd1
 1833 01cb 08       		.byte	0x8
 1834 01cc 08       		.uleb128 0x8
 1835 01cd B7090000 		.4byte	.LASF39
 1836 01d1 05       		.byte	0x5
 1837 01d2 BB       		.byte	0xbb
 1838 01d3 09020000 		.4byte	0x209
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 83


 1839 01d7 09       		.byte	0x9
 1840 01d8 08       		.uleb128 0x8
 1841 01d9 670A0000 		.4byte	.LASF40
 1842 01dd 05       		.byte	0x5
 1843 01de C3       		.byte	0xc3
 1844 01df 77000000 		.4byte	0x77
 1845 01e3 0A       		.byte	0xa
 1846 01e4 08       		.uleb128 0x8
 1847 01e5 E7070000 		.4byte	.LASF41
 1848 01e9 05       		.byte	0x5
 1849 01ea C8       		.byte	0xc8
 1850 01eb 6B000000 		.4byte	0x6b
 1851 01ef 0C       		.byte	0xc
 1852 01f0 08       		.uleb128 0x8
 1853 01f1 2D090000 		.4byte	.LASF42
 1854 01f5 05       		.byte	0x5
 1855 01f6 CE       		.byte	0xce
 1856 01f7 77000000 		.4byte	0x77
 1857 01fb 0E       		.byte	0xe
 1858 01fc 08       		.uleb128 0x8
 1859 01fd C5030000 		.4byte	.LASF43
 1860 0201 05       		.byte	0x5
 1861 0202 D3       		.byte	0xd3
 1862 0203 77000000 		.4byte	0x77
 1863 0207 10       		.byte	0x10
 1864 0208 00       		.byte	0
 1865 0209 0B       		.uleb128 0xb
 1866 020a 6B000000 		.4byte	0x6b
 1867 020e 19020000 		.4byte	0x219
 1868 0212 0C       		.uleb128 0xc
 1869 0213 19020000 		.4byte	0x219
 1870 0217 00       		.byte	0
 1871 0218 00       		.byte	0
 1872 0219 02       		.uleb128 0x2
 1873 021a 04       		.byte	0x4
 1874 021b 07       		.byte	0x7
 1875 021c FC070000 		.4byte	.LASF44
 1876 0220 06       		.uleb128 0x6
 1877 0221 C3060000 		.4byte	.LASF45
 1878 0225 05       		.byte	0x5
 1879 0226 D4       		.byte	0xd4
 1880 0227 70010000 		.4byte	0x170
 1881 022b 07       		.uleb128 0x7
 1882 022c 12       		.byte	0x12
 1883 022d 05       		.byte	0x5
 1884 022e D9       		.byte	0xd9
 1885 022f CA020000 		.4byte	0x2ca
 1886 0233 08       		.uleb128 0x8
 1887 0234 28050000 		.4byte	.LASF32
 1888 0238 05       		.byte	0x5
 1889 0239 DE       		.byte	0xde
 1890 023a 77000000 		.4byte	0x77
 1891 023e 00       		.byte	0
 1892 023f 08       		.uleb128 0x8
 1893 0240 CF090000 		.4byte	.LASF33
 1894 0244 05       		.byte	0x5
 1895 0245 E3       		.byte	0xe3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 84


 1896 0246 C6000000 		.4byte	0xc6
 1897 024a 02       		.byte	0x2
 1898 024b 08       		.uleb128 0x8
 1899 024c E5040000 		.4byte	.LASF34
 1900 0250 05       		.byte	0x5
 1901 0251 E8       		.byte	0xe8
 1902 0252 6B000000 		.4byte	0x6b
 1903 0256 04       		.byte	0x4
 1904 0257 08       		.uleb128 0x8
 1905 0258 A3060000 		.4byte	.LASF35
 1906 025c 05       		.byte	0x5
 1907 025d ED       		.byte	0xed
 1908 025e 6B000000 		.4byte	0x6b
 1909 0262 05       		.byte	0x5
 1910 0263 08       		.uleb128 0x8
 1911 0264 F1060000 		.4byte	.LASF36
 1912 0268 05       		.byte	0x5
 1913 0269 F3       		.byte	0xf3
 1914 026a 6B000000 		.4byte	0x6b
 1915 026e 06       		.byte	0x6
 1916 026f 08       		.uleb128 0x8
 1917 0270 D9050000 		.4byte	.LASF37
 1918 0274 05       		.byte	0x5
 1919 0275 F9       		.byte	0xf9
 1920 0276 6B000000 		.4byte	0x6b
 1921 027a 07       		.byte	0x7
 1922 027b 0D       		.uleb128 0xd
 1923 027c 26040000 		.4byte	.LASF38
 1924 0280 05       		.byte	0x5
 1925 0281 0001     		.2byte	0x100
 1926 0283 D1000000 		.4byte	0xd1
 1927 0287 08       		.byte	0x8
 1928 0288 0D       		.uleb128 0xd
 1929 0289 B7090000 		.4byte	.LASF39
 1930 028d 05       		.byte	0x5
 1931 028e 0701     		.2byte	0x107
 1932 0290 09020000 		.4byte	0x209
 1933 0294 09       		.byte	0x9
 1934 0295 0D       		.uleb128 0xd
 1935 0296 670A0000 		.4byte	.LASF40
 1936 029a 05       		.byte	0x5
 1937 029b 0F01     		.2byte	0x10f
 1938 029d 77000000 		.4byte	0x77
 1939 02a1 0A       		.byte	0xa
 1940 02a2 0D       		.uleb128 0xd
 1941 02a3 E7070000 		.4byte	.LASF41
 1942 02a7 05       		.byte	0x5
 1943 02a8 1401     		.2byte	0x114
 1944 02aa 6B000000 		.4byte	0x6b
 1945 02ae 0C       		.byte	0xc
 1946 02af 0D       		.uleb128 0xd
 1947 02b0 2D090000 		.4byte	.LASF42
 1948 02b4 05       		.byte	0x5
 1949 02b5 1A01     		.2byte	0x11a
 1950 02b7 77000000 		.4byte	0x77
 1951 02bb 0E       		.byte	0xe
 1952 02bc 0D       		.uleb128 0xd
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 85


 1953 02bd C5030000 		.4byte	.LASF43
 1954 02c1 05       		.byte	0x5
 1955 02c2 1F01     		.2byte	0x11f
 1956 02c4 77000000 		.4byte	0x77
 1957 02c8 10       		.byte	0x10
 1958 02c9 00       		.byte	0
 1959 02ca 04       		.uleb128 0x4
 1960 02cb 8D0B0000 		.4byte	.LASF46
 1961 02cf 05       		.byte	0x5
 1962 02d0 2001     		.2byte	0x120
 1963 02d2 2B020000 		.4byte	0x22b
 1964 02d6 0E       		.uleb128 0xe
 1965 02d7 12       		.byte	0x12
 1966 02d8 05       		.byte	0x5
 1967 02d9 2601     		.2byte	0x126
 1968 02db ED020000 		.4byte	0x2ed
 1969 02df 0D       		.uleb128 0xd
 1970 02e0 D5020000 		.4byte	.LASF47
 1971 02e4 05       		.byte	0x5
 1972 02e5 2B01     		.2byte	0x12b
 1973 02e7 CA020000 		.4byte	0x2ca
 1974 02eb 00       		.byte	0
 1975 02ec 00       		.byte	0
 1976 02ed 04       		.uleb128 0x4
 1977 02ee C1010000 		.4byte	.LASF48
 1978 02f2 05       		.byte	0x5
 1979 02f3 2C01     		.2byte	0x12c
 1980 02f5 D6020000 		.4byte	0x2d6
 1981 02f9 0E       		.uleb128 0xe
 1982 02fa 0A       		.byte	0xa
 1983 02fb 05       		.byte	0x5
 1984 02fc 3201     		.2byte	0x132
 1985 02fe 51030000 		.4byte	0x351
 1986 0302 0F       		.uleb128 0xf
 1987 0303 72617700 		.ascii	"raw\000"
 1988 0307 05       		.byte	0x5
 1989 0308 3701     		.2byte	0x137
 1990 030a 51030000 		.4byte	0x351
 1991 030e 00       		.byte	0
 1992 030f 0D       		.uleb128 0xd
 1993 0310 A90A0000 		.4byte	.LASF49
 1994 0314 05       		.byte	0x5
 1995 0315 3C01     		.2byte	0x13c
 1996 0317 51030000 		.4byte	0x351
 1997 031b 02       		.byte	0x2
 1998 031c 0D       		.uleb128 0xd
 1999 031d D8090000 		.4byte	.LASF50
 2000 0321 05       		.byte	0x5
 2001 0322 4201     		.2byte	0x142
 2002 0324 09020000 		.4byte	0x209
 2003 0328 04       		.byte	0x4
 2004 0329 0D       		.uleb128 0xd
 2005 032a 6E080000 		.4byte	.LASF51
 2006 032e 05       		.byte	0x5
 2007 032f 4701     		.2byte	0x147
 2008 0331 C6000000 		.4byte	0xc6
 2009 0335 06       		.byte	0x6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 86


 2010 0336 0D       		.uleb128 0xd
 2011 0337 120B0000 		.4byte	.LASF52
 2012 033b 05       		.byte	0x5
 2013 033c 4C01     		.2byte	0x14c
 2014 033e 61030000 		.4byte	0x361
 2015 0342 08       		.byte	0x8
 2016 0343 0D       		.uleb128 0xd
 2017 0344 65050000 		.4byte	.LASF53
 2018 0348 05       		.byte	0x5
 2019 0349 5101     		.2byte	0x151
 2020 034b 09020000 		.4byte	0x209
 2021 034f 09       		.byte	0x9
 2022 0350 00       		.byte	0
 2023 0351 0B       		.uleb128 0xb
 2024 0352 77000000 		.4byte	0x77
 2025 0356 61030000 		.4byte	0x361
 2026 035a 0C       		.uleb128 0xc
 2027 035b 19020000 		.4byte	0x219
 2028 035f 00       		.byte	0
 2029 0360 00       		.byte	0
 2030 0361 0B       		.uleb128 0xb
 2031 0362 D1000000 		.4byte	0xd1
 2032 0366 71030000 		.4byte	0x371
 2033 036a 0C       		.uleb128 0xc
 2034 036b 19020000 		.4byte	0x219
 2035 036f 00       		.byte	0
 2036 0370 00       		.byte	0
 2037 0371 04       		.uleb128 0x4
 2038 0372 200B0000 		.4byte	.LASF54
 2039 0376 05       		.byte	0x5
 2040 0377 5201     		.2byte	0x152
 2041 0379 F9020000 		.4byte	0x2f9
 2042 037d 0E       		.uleb128 0xe
 2043 037e 0A       		.byte	0xa
 2044 037f 05       		.byte	0x5
 2045 0380 5801     		.2byte	0x158
 2046 0382 94030000 		.4byte	0x394
 2047 0386 0D       		.uleb128 0xd
 2048 0387 D5020000 		.4byte	.LASF47
 2049 038b 05       		.byte	0x5
 2050 038c 5D01     		.2byte	0x15d
 2051 038e 94030000 		.4byte	0x394
 2052 0392 00       		.byte	0
 2053 0393 00       		.byte	0
 2054 0394 0B       		.uleb128 0xb
 2055 0395 71030000 		.4byte	0x371
 2056 0399 A4030000 		.4byte	0x3a4
 2057 039d 0C       		.uleb128 0xc
 2058 039e 19020000 		.4byte	0x219
 2059 03a2 00       		.byte	0
 2060 03a3 00       		.byte	0
 2061 03a4 04       		.uleb128 0x4
 2062 03a5 23070000 		.4byte	.LASF55
 2063 03a9 05       		.byte	0x5
 2064 03aa 5E01     		.2byte	0x15e
 2065 03ac 7D030000 		.4byte	0x37d
 2066 03b0 0E       		.uleb128 0xe
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 87


 2067 03b1 40       		.byte	0x40
 2068 03b2 05       		.byte	0x5
 2069 03b3 6401     		.2byte	0x164
 2070 03b5 97040000 		.4byte	0x497
 2071 03b9 0D       		.uleb128 0xd
 2072 03ba 9B070000 		.4byte	.LASF56
 2073 03be 05       		.byte	0x5
 2074 03bf 6B01     		.2byte	0x16b
 2075 03c1 77000000 		.4byte	0x77
 2076 03c5 00       		.byte	0
 2077 03c6 0D       		.uleb128 0xd
 2078 03c7 840B0000 		.4byte	.LASF57
 2079 03cb 05       		.byte	0x5
 2080 03cc 7001     		.2byte	0x170
 2081 03ce 77000000 		.4byte	0x77
 2082 03d2 02       		.byte	0x2
 2083 03d3 0D       		.uleb128 0xd
 2084 03d4 CE000000 		.4byte	.LASF58
 2085 03d8 05       		.byte	0x5
 2086 03d9 7501     		.2byte	0x175
 2087 03db 77000000 		.4byte	0x77
 2088 03df 04       		.byte	0x4
 2089 03e0 0D       		.uleb128 0xd
 2090 03e1 73080000 		.4byte	.LASF59
 2091 03e5 05       		.byte	0x5
 2092 03e6 7B01     		.2byte	0x17b
 2093 03e8 77000000 		.4byte	0x77
 2094 03ec 06       		.byte	0x6
 2095 03ed 0D       		.uleb128 0xd
 2096 03ee 9B000000 		.4byte	.LASF60
 2097 03f2 05       		.byte	0x5
 2098 03f3 8001     		.2byte	0x180
 2099 03f5 77000000 		.4byte	0x77
 2100 03f9 08       		.byte	0x8
 2101 03fa 0D       		.uleb128 0xd
 2102 03fb 49050000 		.4byte	.LASF61
 2103 03ff 05       		.byte	0x5
 2104 0400 8501     		.2byte	0x185
 2105 0402 C1000000 		.4byte	0xc1
 2106 0406 0C       		.byte	0xc
 2107 0407 0D       		.uleb128 0xd
 2108 0408 50080000 		.4byte	.LASF62
 2109 040c 05       		.byte	0x5
 2110 040d 8B01     		.2byte	0x18b
 2111 040f 97040000 		.4byte	0x497
 2112 0413 10       		.byte	0x10
 2113 0414 0D       		.uleb128 0xd
 2114 0415 37090000 		.4byte	.LASF63
 2115 0419 05       		.byte	0x5
 2116 041a 9201     		.2byte	0x192
 2117 041c 97040000 		.4byte	0x497
 2118 0420 14       		.byte	0x14
 2119 0421 0D       		.uleb128 0xd
 2120 0422 DD070000 		.4byte	.LASF64
 2121 0426 05       		.byte	0x5
 2122 0427 A201     		.2byte	0x1a2
 2123 0429 09020000 		.4byte	0x209
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 88


 2124 042d 18       		.byte	0x18
 2125 042e 0D       		.uleb128 0xd
 2126 042f AC060000 		.4byte	.LASF65
 2127 0433 05       		.byte	0x5
 2128 0434 A801     		.2byte	0x1a8
 2129 0436 77000000 		.4byte	0x77
 2130 043a 1A       		.byte	0x1a
 2131 043b 0D       		.uleb128 0xd
 2132 043c 80030000 		.4byte	.LASF66
 2133 0440 05       		.byte	0x5
 2134 0441 AD01     		.2byte	0x1ad
 2135 0443 6B000000 		.4byte	0x6b
 2136 0447 1C       		.byte	0x1c
 2137 0448 0D       		.uleb128 0xd
 2138 0449 10060000 		.4byte	.LASF67
 2139 044d 05       		.byte	0x5
 2140 044e B201     		.2byte	0x1b2
 2141 0450 ED020000 		.4byte	0x2ed
 2142 0454 1E       		.byte	0x1e
 2143 0455 0D       		.uleb128 0xd
 2144 0456 4F020000 		.4byte	.LASF68
 2145 045a 05       		.byte	0x5
 2146 045b B701     		.2byte	0x1b7
 2147 045d A4030000 		.4byte	0x3a4
 2148 0461 30       		.byte	0x30
 2149 0462 0D       		.uleb128 0xd
 2150 0463 63000000 		.4byte	.LASF69
 2151 0467 05       		.byte	0x5
 2152 0468 BC01     		.2byte	0x1bc
 2153 046a 6B000000 		.4byte	0x6b
 2154 046e 3A       		.byte	0x3a
 2155 046f 0D       		.uleb128 0xd
 2156 0470 6E020000 		.4byte	.LASF70
 2157 0474 05       		.byte	0x5
 2158 0475 C101     		.2byte	0x1c1
 2159 0477 6B000000 		.4byte	0x6b
 2160 047b 3B       		.byte	0x3b
 2161 047c 0D       		.uleb128 0xd
 2162 047d 88070000 		.4byte	.LASF71
 2163 0481 05       		.byte	0x5
 2164 0482 C601     		.2byte	0x1c6
 2165 0484 77000000 		.4byte	0x77
 2166 0488 3C       		.byte	0x3c
 2167 0489 0D       		.uleb128 0xd
 2168 048a 26060000 		.4byte	.LASF72
 2169 048e 05       		.byte	0x5
 2170 048f CB01     		.2byte	0x1cb
 2171 0491 51030000 		.4byte	0x351
 2172 0495 3E       		.byte	0x3e
 2173 0496 00       		.byte	0
 2174 0497 0B       		.uleb128 0xb
 2175 0498 83000000 		.4byte	0x83
 2176 049c A7040000 		.4byte	0x4a7
 2177 04a0 0C       		.uleb128 0xc
 2178 04a1 19020000 		.4byte	0x219
 2179 04a5 00       		.byte	0
 2180 04a6 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 89


 2181 04a7 04       		.uleb128 0x4
 2182 04a8 33050000 		.4byte	.LASF73
 2183 04ac 05       		.byte	0x5
 2184 04ad CC01     		.2byte	0x1cc
 2185 04af B0030000 		.4byte	0x3b0
 2186 04b3 0E       		.uleb128 0xe
 2187 04b4 1C       		.byte	0x1c
 2188 04b5 05       		.byte	0x5
 2189 04b6 D201     		.2byte	0x1d2
 2190 04b8 32050000 		.4byte	0x532
 2191 04bc 0D       		.uleb128 0xd
 2192 04bd E1060000 		.4byte	.LASF74
 2193 04c1 05       		.byte	0x5
 2194 04c2 D701     		.2byte	0x1d7
 2195 04c4 32050000 		.4byte	0x532
 2196 04c8 00       		.byte	0
 2197 04c9 0D       		.uleb128 0xd
 2198 04ca 8E050000 		.4byte	.LASF75
 2199 04ce 05       		.byte	0x5
 2200 04cf DC01     		.2byte	0x1dc
 2201 04d1 32050000 		.4byte	0x532
 2202 04d5 04       		.byte	0x4
 2203 04d6 0D       		.uleb128 0xd
 2204 04d7 BF030000 		.4byte	.LASF76
 2205 04db 05       		.byte	0x5
 2206 04dc E101     		.2byte	0x1e1
 2207 04de 32050000 		.4byte	0x532
 2208 04e2 08       		.byte	0x8
 2209 04e3 0D       		.uleb128 0xd
 2210 04e4 84080000 		.4byte	.LASF77
 2211 04e8 05       		.byte	0x5
 2212 04e9 E601     		.2byte	0x1e6
 2213 04eb 32050000 		.4byte	0x532
 2214 04ef 0C       		.byte	0xc
 2215 04f0 0D       		.uleb128 0xd
 2216 04f1 420A0000 		.4byte	.LASF78
 2217 04f5 05       		.byte	0x5
 2218 04f6 EB01     		.2byte	0x1eb
 2219 04f8 83000000 		.4byte	0x83
 2220 04fc 10       		.byte	0x10
 2221 04fd 0D       		.uleb128 0xd
 2222 04fe 42070000 		.4byte	.LASF79
 2223 0502 05       		.byte	0x5
 2224 0503 F001     		.2byte	0x1f0
 2225 0505 83000000 		.4byte	0x83
 2226 0509 14       		.byte	0x14
 2227 050a 0D       		.uleb128 0xd
 2228 050b 16050000 		.4byte	.LASF80
 2229 050f 05       		.byte	0x5
 2230 0510 F501     		.2byte	0x1f5
 2231 0512 6B000000 		.4byte	0x6b
 2232 0516 18       		.byte	0x18
 2233 0517 0D       		.uleb128 0xd
 2234 0518 91090000 		.4byte	.LASF81
 2235 051c 05       		.byte	0x5
 2236 051d FA01     		.2byte	0x1fa
 2237 051f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 90


 2238 0523 19       		.byte	0x19
 2239 0524 0D       		.uleb128 0xd
 2240 0525 2F020000 		.4byte	.LASF82
 2241 0529 05       		.byte	0x5
 2242 052a FF01     		.2byte	0x1ff
 2243 052c 6B000000 		.4byte	0x6b
 2244 0530 1A       		.byte	0x1a
 2245 0531 00       		.byte	0
 2246 0532 10       		.uleb128 0x10
 2247 0533 04       		.byte	0x4
 2248 0534 B5000000 		.4byte	0xb5
 2249 0538 04       		.uleb128 0x4
 2250 0539 C10A0000 		.4byte	.LASF83
 2251 053d 05       		.byte	0x5
 2252 053e 0002     		.2byte	0x200
 2253 0540 B3040000 		.4byte	0x4b3
 2254 0544 0E       		.uleb128 0xe
 2255 0545 20       		.byte	0x20
 2256 0546 05       		.byte	0x5
 2257 0547 3302     		.2byte	0x233
 2258 0549 D0050000 		.4byte	0x5d0
 2259 054d 0D       		.uleb128 0xd
 2260 054e 19060000 		.4byte	.LASF84
 2261 0552 05       		.byte	0x5
 2262 0553 3C02     		.2byte	0x23c
 2263 0555 D0050000 		.4byte	0x5d0
 2264 0559 00       		.byte	0
 2265 055a 0D       		.uleb128 0xd
 2266 055b 360A0000 		.4byte	.LASF85
 2267 055f 05       		.byte	0x5
 2268 0560 4302     		.2byte	0x243
 2269 0562 D7050000 		.4byte	0x5d7
 2270 0566 04       		.byte	0x4
 2271 0567 0D       		.uleb128 0xd
 2272 0568 A4070000 		.4byte	.LASF86
 2273 056c 05       		.byte	0x5
 2274 056d 4902     		.2byte	0x249
 2275 056f D9050000 		.4byte	0x5d9
 2276 0573 08       		.byte	0x8
 2277 0574 0D       		.uleb128 0xd
 2278 0575 FC060000 		.4byte	.LASF87
 2279 0579 05       		.byte	0x5
 2280 057a 4F02     		.2byte	0x24f
 2281 057c D7050000 		.4byte	0x5d7
 2282 0580 0C       		.byte	0xc
 2283 0581 0D       		.uleb128 0xd
 2284 0582 BF090000 		.4byte	.LASF88
 2285 0586 05       		.byte	0x5
 2286 0587 5602     		.2byte	0x256
 2287 0589 DF050000 		.4byte	0x5df
 2288 058d 10       		.byte	0x10
 2289 058e 0D       		.uleb128 0xd
 2290 058f F7090000 		.4byte	.LASF89
 2291 0593 05       		.byte	0x5
 2292 0594 5B02     		.2byte	0x25b
 2293 0596 83000000 		.4byte	0x83
 2294 059a 14       		.byte	0x14
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 91


 2295 059b 0D       		.uleb128 0xd
 2296 059c 8A040000 		.4byte	.LASF90
 2297 05a0 05       		.byte	0x5
 2298 05a1 6202     		.2byte	0x262
 2299 05a3 77000000 		.4byte	0x77
 2300 05a7 18       		.byte	0x18
 2301 05a8 0D       		.uleb128 0xd
 2302 05a9 95020000 		.4byte	.LASF91
 2303 05ad 05       		.byte	0x5
 2304 05ae 6902     		.2byte	0x269
 2305 05b0 6B000000 		.4byte	0x6b
 2306 05b4 1A       		.byte	0x1a
 2307 05b5 0D       		.uleb128 0xd
 2308 05b6 C6080000 		.4byte	.LASF92
 2309 05ba 05       		.byte	0x5
 2310 05bb 7302     		.2byte	0x273
 2311 05bd 6B000000 		.4byte	0x6b
 2312 05c1 1B       		.byte	0x1b
 2313 05c2 0D       		.uleb128 0xd
 2314 05c3 7E020000 		.4byte	.LASF93
 2315 05c7 05       		.byte	0x5
 2316 05c8 7B02     		.2byte	0x27b
 2317 05ca E5050000 		.4byte	0x5e5
 2318 05ce 1C       		.byte	0x1c
 2319 05cf 00       		.byte	0
 2320 05d0 10       		.uleb128 0x10
 2321 05d1 04       		.byte	0x4
 2322 05d2 D6050000 		.4byte	0x5d6
 2323 05d6 11       		.uleb128 0x11
 2324 05d7 12       		.uleb128 0x12
 2325 05d8 04       		.byte	0x4
 2326 05d9 10       		.uleb128 0x10
 2327 05da 04       		.byte	0x4
 2328 05db 71030000 		.4byte	0x371
 2329 05df 10       		.uleb128 0x10
 2330 05e0 04       		.byte	0x4
 2331 05e1 6B000000 		.4byte	0x6b
 2332 05e5 10       		.uleb128 0x10
 2333 05e6 04       		.byte	0x4
 2334 05e7 3A010000 		.4byte	0x13a
 2335 05eb 04       		.uleb128 0x4
 2336 05ec 30000000 		.4byte	.LASF94
 2337 05f0 05       		.byte	0x5
 2338 05f1 7C02     		.2byte	0x27c
 2339 05f3 44050000 		.4byte	0x544
 2340 05f7 0E       		.uleb128 0xe
 2341 05f8 20       		.byte	0x20
 2342 05f9 05       		.byte	0x5
 2343 05fa 8202     		.2byte	0x282
 2344 05fc 0E060000 		.4byte	0x60e
 2345 0600 0D       		.uleb128 0xd
 2346 0601 FB0B0000 		.4byte	.LASF95
 2347 0605 05       		.byte	0x5
 2348 0606 8702     		.2byte	0x287
 2349 0608 0E060000 		.4byte	0x60e
 2350 060c 00       		.byte	0
 2351 060d 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 92


 2352 060e 0B       		.uleb128 0xb
 2353 060f EB050000 		.4byte	0x5eb
 2354 0613 1E060000 		.4byte	0x61e
 2355 0617 0C       		.uleb128 0xc
 2356 0618 19020000 		.4byte	0x219
 2357 061c 00       		.byte	0
 2358 061d 00       		.byte	0
 2359 061e 04       		.uleb128 0x4
 2360 061f C5070000 		.4byte	.LASF96
 2361 0623 05       		.byte	0x5
 2362 0624 8802     		.2byte	0x288
 2363 0626 F7050000 		.4byte	0x5f7
 2364 062a 02       		.uleb128 0x2
 2365 062b 08       		.byte	0x8
 2366 062c 04       		.byte	0x4
 2367 062d B7060000 		.4byte	.LASF97
 2368 0631 13       		.uleb128 0x13
 2369 0632 0D020000 		.4byte	.LASF98
 2370 0636 01       		.byte	0x1
 2371 0637 070A     		.2byte	0xa07
 2372 0639 03       		.byte	0x3
 2373 063a 13       		.uleb128 0x13
 2374 063b BC050000 		.4byte	.LASF99
 2375 063f 01       		.byte	0x1
 2376 0640 3E09     		.2byte	0x93e
 2377 0642 03       		.byte	0x3
 2378 0643 14       		.uleb128 0x14
 2379 0644 00000000 		.4byte	.LASF100
 2380 0648 01       		.byte	0x1
 2381 0649 A701     		.2byte	0x1a7
 2382 064b 00000000 		.4byte	.LFB3
 2383 064f 10000000 		.4byte	.LFE3-.LFB3
 2384 0653 01       		.uleb128 0x1
 2385 0654 9C       		.byte	0x9c
 2386 0655 15       		.uleb128 0x15
 2387 0656 D90B0000 		.4byte	.LASF110
 2388 065a 01       		.byte	0x1
 2389 065b D806     		.2byte	0x6d8
 2390 065d 00000000 		.4byte	.LFB18
 2391 0661 1C000000 		.4byte	.LFE18-.LFB18
 2392 0665 01       		.uleb128 0x1
 2393 0666 9C       		.byte	0x9c
 2394 0667 7A060000 		.4byte	0x67a
 2395 066b 16       		.uleb128 0x16
 2396 066c DC0A0000 		.4byte	.LASF105
 2397 0670 01       		.byte	0x1
 2398 0671 DA06     		.2byte	0x6da
 2399 0673 83000000 		.4byte	0x83
 2400 0677 01       		.uleb128 0x1
 2401 0678 53       		.byte	0x53
 2402 0679 00       		.byte	0
 2403 067a 14       		.uleb128 0x14
 2404 067b 83060000 		.4byte	.LASF101
 2405 067f 01       		.byte	0x1
 2406 0680 0307     		.2byte	0x703
 2407 0682 00000000 		.4byte	.LFB19
 2408 0686 10000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 93


 2409 068a 01       		.uleb128 0x1
 2410 068b 9C       		.byte	0x9c
 2411 068c 17       		.uleb128 0x17
 2412 068d 040A0000 		.4byte	.LASF138
 2413 0691 01       		.byte	0x1
 2414 0692 3107     		.2byte	0x731
 2415 0694 A4000000 		.4byte	0xa4
 2416 0698 00000000 		.4byte	.LFB20
 2417 069c 42000000 		.4byte	.LFE20-.LFB20
 2418 06a0 01       		.uleb128 0x1
 2419 06a1 9C       		.byte	0x9c
 2420 06a2 15070000 		.4byte	0x715
 2421 06a6 18       		.uleb128 0x18
 2422 06a7 05020000 		.4byte	.LASF102
 2423 06ab 01       		.byte	0x1
 2424 06ac 3107     		.2byte	0x731
 2425 06ae 15070000 		.4byte	0x715
 2426 06b2 00000000 		.4byte	.LLST0
 2427 06b6 18       		.uleb128 0x18
 2428 06b7 1D040000 		.4byte	.LASF103
 2429 06bb 01       		.byte	0x1
 2430 06bc 3107     		.2byte	0x731
 2431 06be 83000000 		.4byte	0x83
 2432 06c2 21000000 		.4byte	.LLST1
 2433 06c6 18       		.uleb128 0x18
 2434 06c7 F4070000 		.4byte	.LASF104
 2435 06cb 01       		.byte	0x1
 2436 06cc 3107     		.2byte	0x731
 2437 06ce 83000000 		.4byte	0x83
 2438 06d2 4D000000 		.4byte	.LLST2
 2439 06d6 16       		.uleb128 0x16
 2440 06d7 00060000 		.4byte	.LASF106
 2441 06db 01       		.byte	0x1
 2442 06dc 3307     		.2byte	0x733
 2443 06de A4000000 		.4byte	0xa4
 2444 06e2 01       		.uleb128 0x1
 2445 06e3 50       		.byte	0x50
 2446 06e4 19       		.uleb128 0x19
 2447 06e5 580A0000 		.4byte	.LASF107
 2448 06e9 01       		.byte	0x1
 2449 06ea 3407     		.2byte	0x734
 2450 06ec 83000000 		.4byte	0x83
 2451 06f0 79000000 		.4byte	.LLST3
 2452 06f4 19       		.uleb128 0x19
 2453 06f5 96040000 		.4byte	.LASF108
 2454 06f9 01       		.byte	0x1
 2455 06fa 3507     		.2byte	0x735
 2456 06fc 83000000 		.4byte	0x83
 2457 0700 97000000 		.4byte	.LLST4
 2458 0704 19       		.uleb128 0x19
 2459 0705 47070000 		.4byte	.LASF109
 2460 0709 01       		.byte	0x1
 2461 070a 3607     		.2byte	0x736
 2462 070c 83000000 		.4byte	0x83
 2463 0710 E3000000 		.4byte	.LLST5
 2464 0714 00       		.byte	0
 2465 0715 10       		.uleb128 0x10
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 94


 2466 0716 04       		.byte	0x4
 2467 0717 1B070000 		.4byte	0x71b
 2468 071b 1A       		.uleb128 0x1a
 2469 071c 20020000 		.4byte	0x220
 2470 0720 15       		.uleb128 0x15
 2471 0721 A7000000 		.4byte	.LASF111
 2472 0725 01       		.byte	0x1
 2473 0726 5E01     		.2byte	0x15e
 2474 0728 00000000 		.4byte	.LFB2
 2475 072c 1C000000 		.4byte	.LFE2-.LFB2
 2476 0730 01       		.uleb128 0x1
 2477 0731 9C       		.byte	0x9c
 2478 0732 68070000 		.4byte	0x768
 2479 0736 18       		.uleb128 0x18
 2480 0737 E7070000 		.4byte	.LASF41
 2481 073b 01       		.byte	0x1
 2482 073c 5E01     		.2byte	0x15e
 2483 073e 83000000 		.4byte	0x83
 2484 0742 01010000 		.4byte	.LLST6
 2485 0746 18       		.uleb128 0x18
 2486 0747 760B0000 		.4byte	.LASF112
 2487 074b 01       		.byte	0x1
 2488 074c 5E01     		.2byte	0x15e
 2489 074e 83000000 		.4byte	0x83
 2490 0752 22010000 		.4byte	.LLST7
 2491 0756 1B       		.uleb128 0x1b
 2492 0757 14000000 		.4byte	.LVL22
 2493 075b FC0E0000 		.4byte	0xefc
 2494 075f 1C       		.uleb128 0x1c
 2495 0760 01       		.uleb128 0x1
 2496 0761 50       		.byte	0x50
 2497 0762 03       		.uleb128 0x3
 2498 0763 F3       		.byte	0xf3
 2499 0764 01       		.uleb128 0x1
 2500 0765 51       		.byte	0x51
 2501 0766 00       		.byte	0
 2502 0767 00       		.byte	0
 2503 0768 1D       		.uleb128 0x1d
 2504 0769 A6010000 		.4byte	.LASF113
 2505 076d 01       		.byte	0x1
 2506 076e DF01     		.2byte	0x1df
 2507 0770 00000000 		.4byte	.LFB4
 2508 0774 38000000 		.4byte	.LFE4-.LFB4
 2509 0778 01       		.uleb128 0x1
 2510 0779 9C       		.byte	0x9c
 2511 077a A1070000 		.4byte	0x7a1
 2512 077e 19       		.uleb128 0x19
 2513 077f DC0A0000 		.4byte	.LASF105
 2514 0783 01       		.byte	0x1
 2515 0784 E101     		.2byte	0x1e1
 2516 0786 83000000 		.4byte	0x83
 2517 078a 43010000 		.4byte	.LLST8
 2518 078e 1E       		.uleb128 0x1e
 2519 078f 06000000 		.4byte	.LVL23
 2520 0793 070F0000 		.4byte	0xf07
 2521 0797 1E       		.uleb128 0x1e
 2522 0798 0A000000 		.4byte	.LVL24
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 95


 2523 079c 43060000 		.4byte	0x643
 2524 07a0 00       		.byte	0
 2525 07a1 1D       		.uleb128 0x1d
 2526 07a2 73000000 		.4byte	.LASF114
 2527 07a6 01       		.byte	0x1
 2528 07a7 F302     		.2byte	0x2f3
 2529 07a9 00000000 		.4byte	.LFB6
 2530 07ad 40000000 		.4byte	.LFE6-.LFB6
 2531 07b1 01       		.uleb128 0x1
 2532 07b2 9C       		.byte	0x9c
 2533 07b3 0A080000 		.4byte	0x80a
 2534 07b7 18       		.uleb128 0x18
 2535 07b8 05020000 		.4byte	.LASF102
 2536 07bc 01       		.byte	0x1
 2537 07bd F302     		.2byte	0x2f3
 2538 07bf 15070000 		.4byte	0x715
 2539 07c3 62010000 		.4byte	.LLST9
 2540 07c7 19       		.uleb128 0x19
 2541 07c8 ED000000 		.4byte	.LASF115
 2542 07cc 01       		.byte	0x1
 2543 07cd F602     		.2byte	0x2f6
 2544 07cf 6B000000 		.4byte	0x6b
 2545 07d3 9D010000 		.4byte	.LLST10
 2546 07d7 19       		.uleb128 0x19
 2547 07d8 DC0A0000 		.4byte	.LASF105
 2548 07dc 01       		.byte	0x1
 2549 07dd 2E03     		.2byte	0x32e
 2550 07df 83000000 		.4byte	0x83
 2551 07e3 B0010000 		.4byte	.LLST11
 2552 07e7 19       		.uleb128 0x19
 2553 07e8 6B0B0000 		.4byte	.LASF116
 2554 07ec 01       		.byte	0x1
 2555 07ed 2F03     		.2byte	0x32f
 2556 07ef 0A080000 		.4byte	0x80a
 2557 07f3 CE010000 		.4byte	.LLST12
 2558 07f7 1E       		.uleb128 0x1e
 2559 07f8 0A000000 		.4byte	.LVL33
 2560 07fc 120F0000 		.4byte	0xf12
 2561 0800 1E       		.uleb128 0x1e
 2562 0801 2C000000 		.4byte	.LVL38
 2563 0805 1D0F0000 		.4byte	0xf1d
 2564 0809 00       		.byte	0
 2565 080a 10       		.uleb128 0x10
 2566 080b 04       		.byte	0x4
 2567 080c 10080000 		.4byte	0x810
 2568 0810 1A       		.uleb128 0x1a
 2569 0811 6B000000 		.4byte	0x6b
 2570 0815 1D       		.uleb128 0x1d
 2571 0816 E4050000 		.4byte	.LASF117
 2572 081a 01       		.byte	0x1
 2573 081b B403     		.2byte	0x3b4
 2574 081d 00000000 		.4byte	.LFB7
 2575 0821 30000000 		.4byte	.LFE7-.LFB7
 2576 0825 01       		.uleb128 0x1
 2577 0826 9C       		.byte	0x9c
 2578 0827 75080000 		.4byte	0x875
 2579 082b 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 96


 2580 082c 760B0000 		.4byte	.LASF112
 2581 0830 01       		.byte	0x1
 2582 0831 B603     		.2byte	0x3b6
 2583 0833 83000000 		.4byte	0x83
 2584 0837 FC010000 		.4byte	.LLST13
 2585 083b 19       		.uleb128 0x19
 2586 083c 35020000 		.4byte	.LASF118
 2587 0840 01       		.byte	0x1
 2588 0841 B703     		.2byte	0x3b7
 2589 0843 83000000 		.4byte	0x83
 2590 0847 0F020000 		.4byte	.LLST14
 2591 084b 19       		.uleb128 0x19
 2592 084c DC0A0000 		.4byte	.LASF105
 2593 0850 01       		.byte	0x1
 2594 0851 B803     		.2byte	0x3b8
 2595 0853 83000000 		.4byte	0x83
 2596 0857 0F020000 		.4byte	.LLST14
 2597 085b 19       		.uleb128 0x19
 2598 085c 05020000 		.4byte	.LASF102
 2599 0860 01       		.byte	0x1
 2600 0861 BA03     		.2byte	0x3ba
 2601 0863 15070000 		.4byte	0x715
 2602 0867 22020000 		.4byte	.LLST16
 2603 086b 1E       		.uleb128 0x1e
 2604 086c 24000000 		.4byte	.LVL45
 2605 0870 20070000 		.4byte	0x720
 2606 0874 00       		.byte	0
 2607 0875 1D       		.uleb128 0x1d
 2608 0876 6E0A0000 		.4byte	.LASF119
 2609 087a 01       		.byte	0x1
 2610 087b 1904     		.2byte	0x419
 2611 087d 00000000 		.4byte	.LFB8
 2612 0881 14000000 		.4byte	.LFE8-.LFB8
 2613 0885 01       		.uleb128 0x1
 2614 0886 9C       		.byte	0x9c
 2615 0887 9A080000 		.4byte	0x89a
 2616 088b 1F       		.uleb128 0x1f
 2617 088c 05020000 		.4byte	.LASF102
 2618 0890 01       		.byte	0x1
 2619 0891 1904     		.2byte	0x419
 2620 0893 15070000 		.4byte	0x715
 2621 0897 01       		.uleb128 0x1
 2622 0898 50       		.byte	0x50
 2623 0899 00       		.byte	0
 2624 089a 20       		.uleb128 0x20
 2625 089b C7040000 		.4byte	.LASF169
 2626 089f 01       		.byte	0x1
 2627 08a0 8709     		.2byte	0x987
 2628 08a2 03       		.byte	0x3
 2629 08a3 CC080000 		.4byte	0x8cc
 2630 08a7 21       		.uleb128 0x21
 2631 08a8 AB090000 		.4byte	.LASF120
 2632 08ac 01       		.byte	0x1
 2633 08ad C609     		.2byte	0x9c6
 2634 08af 83000000 		.4byte	0x83
 2635 08b3 21       		.uleb128 0x21
 2636 08b4 DC0A0000 		.4byte	.LASF105
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 97


 2637 08b8 01       		.byte	0x1
 2638 08b9 C709     		.2byte	0x9c7
 2639 08bb 83000000 		.4byte	0x83
 2640 08bf 21       		.uleb128 0x21
 2641 08c0 3F020000 		.4byte	.LASF121
 2642 08c4 01       		.byte	0x1
 2643 08c5 C809     		.2byte	0x9c8
 2644 08c7 83000000 		.4byte	0x83
 2645 08cb 00       		.byte	0
 2646 08cc 1D       		.uleb128 0x1d
 2647 08cd 34080000 		.4byte	.LASF122
 2648 08d1 01       		.byte	0x1
 2649 08d2 EF04     		.2byte	0x4ef
 2650 08d4 00000000 		.4byte	.LFB11
 2651 08d8 B8000000 		.4byte	.LFE11-.LFB11
 2652 08dc 01       		.uleb128 0x1
 2653 08dd 9C       		.byte	0x9c
 2654 08de AB090000 		.4byte	0x9ab
 2655 08e2 19       		.uleb128 0x19
 2656 08e3 ED000000 		.4byte	.LASF115
 2657 08e7 01       		.byte	0x1
 2658 08e8 F204     		.2byte	0x4f2
 2659 08ea 6B000000 		.4byte	0x6b
 2660 08ee 35020000 		.4byte	.LLST17
 2661 08f2 22       		.uleb128 0x22
 2662 08f3 3A060000 		.4byte	0x63a
 2663 08f7 14000000 		.4byte	.LBB12
 2664 08fb 1C000000 		.4byte	.LBE12-.LBB12
 2665 08ff 01       		.byte	0x1
 2666 0900 1F05     		.2byte	0x51f
 2667 0902 10090000 		.4byte	0x910
 2668 0906 1E       		.uleb128 0x1e
 2669 0907 1C000000 		.4byte	.LVL49
 2670 090b 280F0000 		.4byte	0xf28
 2671 090f 00       		.byte	0
 2672 0910 22       		.uleb128 0x22
 2673 0911 9A080000 		.4byte	0x89a
 2674 0915 30000000 		.4byte	.LBB14
 2675 0919 3E000000 		.4byte	.LBE14-.LBB14
 2676 091d 01       		.byte	0x1
 2677 091e 2205     		.2byte	0x522
 2678 0920 6D090000 		.4byte	0x96d
 2679 0924 23       		.uleb128 0x23
 2680 0925 30000000 		.4byte	.LBB15
 2681 0929 3E000000 		.4byte	.LBE15-.LBB15
 2682 092d 24       		.uleb128 0x24
 2683 092e A7080000 		.4byte	0x8a7
 2684 0932 48020000 		.4byte	.LLST18
 2685 0936 24       		.uleb128 0x24
 2686 0937 B3080000 		.4byte	0x8b3
 2687 093b 67020000 		.4byte	.LLST19
 2688 093f 24       		.uleb128 0x24
 2689 0940 BF080000 		.4byte	0x8bf
 2690 0944 BB020000 		.4byte	.LLST20
 2691 0948 25       		.uleb128 0x25
 2692 0949 3A000000 		.4byte	.LVL51
 2693 094d 330F0000 		.4byte	0xf33
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 98


 2694 0951 5C090000 		.4byte	0x95c
 2695 0955 1C       		.uleb128 0x1c
 2696 0956 01       		.uleb128 0x1
 2697 0957 50       		.byte	0x50
 2698 0958 02       		.uleb128 0x2
 2699 0959 08       		.byte	0x8
 2700 095a 57       		.byte	0x57
 2701 095b 00       		.byte	0
 2702 095c 1B       		.uleb128 0x1b
 2703 095d 6E000000 		.4byte	.LVL61
 2704 0961 3E0F0000 		.4byte	0xf3e
 2705 0965 1C       		.uleb128 0x1c
 2706 0966 01       		.uleb128 0x1
 2707 0967 50       		.byte	0x50
 2708 0968 01       		.uleb128 0x1
 2709 0969 40       		.byte	0x40
 2710 096a 00       		.byte	0
 2711 096b 00       		.byte	0
 2712 096c 00       		.byte	0
 2713 096d 26       		.uleb128 0x26
 2714 096e 31060000 		.4byte	0x631
 2715 0972 74000000 		.4byte	.LBB16
 2716 0976 06000000 		.4byte	.LBE16-.LBB16
 2717 097a 01       		.byte	0x1
 2718 097b 2A05     		.2byte	0x52a
 2719 097d 1E       		.uleb128 0x1e
 2720 097e 06000000 		.4byte	.LVL47
 2721 0982 120F0000 		.4byte	0xf12
 2722 0986 25       		.uleb128 0x25
 2723 0987 74000000 		.4byte	.LVL62
 2724 098b 330F0000 		.4byte	0xf33
 2725 098f 9A090000 		.4byte	0x99a
 2726 0993 1C       		.uleb128 0x1c
 2727 0994 01       		.uleb128 0x1
 2728 0995 50       		.byte	0x50
 2729 0996 02       		.uleb128 0x2
 2730 0997 08       		.byte	0x8
 2731 0998 E7       		.byte	0xe7
 2732 0999 00       		.byte	0
 2733 099a 1B       		.uleb128 0x1b
 2734 099b 80000000 		.4byte	.LVL63
 2735 099f 1D0F0000 		.4byte	0xf1d
 2736 09a3 1C       		.uleb128 0x1c
 2737 09a4 01       		.uleb128 0x1
 2738 09a5 50       		.byte	0x50
 2739 09a6 02       		.uleb128 0x2
 2740 09a7 74       		.byte	0x74
 2741 09a8 00       		.sleb128 0
 2742 09a9 00       		.byte	0
 2743 09aa 00       		.byte	0
 2744 09ab 1D       		.uleb128 0x1d
 2745 09ac AF070000 		.4byte	.LASF123
 2746 09b0 01       		.byte	0x1
 2747 09b1 5A05     		.2byte	0x55a
 2748 09b3 00000000 		.4byte	.LFB12
 2749 09b7 1C000000 		.4byte	.LFE12-.LFB12
 2750 09bb 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 99


 2751 09bc 9C       		.byte	0x9c
 2752 09bd CB090000 		.4byte	0x9cb
 2753 09c1 1E       		.uleb128 0x1e
 2754 09c2 10000000 		.4byte	.LVL65
 2755 09c6 CC080000 		.4byte	0x8cc
 2756 09ca 00       		.byte	0
 2757 09cb 1D       		.uleb128 0x1d
 2758 09cc 19010000 		.4byte	.LASF124
 2759 09d0 01       		.byte	0x1
 2760 09d1 6906     		.2byte	0x669
 2761 09d3 00000000 		.4byte	.LFB16
 2762 09d7 34000000 		.4byte	.LFE16-.LFB16
 2763 09db 01       		.uleb128 0x1
 2764 09dc 9C       		.byte	0x9c
 2765 09dd 440A0000 		.4byte	0xa44
 2766 09e1 18       		.uleb128 0x18
 2767 09e2 25000000 		.4byte	.LASF125
 2768 09e6 01       		.byte	0x1
 2769 09e7 6906     		.2byte	0x669
 2770 09e9 440A0000 		.4byte	0xa44
 2771 09ed DC020000 		.4byte	.LLST21
 2772 09f1 19       		.uleb128 0x19
 2773 09f2 6F030000 		.4byte	.LASF126
 2774 09f6 01       		.byte	0x1
 2775 09f7 6B06     		.2byte	0x66b
 2776 09f9 83000000 		.4byte	0x83
 2777 09fd 08030000 		.4byte	.LLST22
 2778 0a01 19       		.uleb128 0x19
 2779 0a02 ED000000 		.4byte	.LASF115
 2780 0a06 01       		.byte	0x1
 2781 0a07 6C06     		.2byte	0x66c
 2782 0a09 6B000000 		.4byte	0x6b
 2783 0a0d 31030000 		.4byte	.LLST23
 2784 0a11 19       		.uleb128 0x19
 2785 0a12 99010000 		.4byte	.LASF127
 2786 0a16 01       		.byte	0x1
 2787 0a17 6D06     		.2byte	0x66d
 2788 0a19 83000000 		.4byte	0x83
 2789 0a1d 44030000 		.4byte	.LLST24
 2790 0a21 19       		.uleb128 0x19
 2791 0a22 32010000 		.4byte	.LASF128
 2792 0a26 01       		.byte	0x1
 2793 0a27 6E06     		.2byte	0x66e
 2794 0a29 83000000 		.4byte	0x83
 2795 0a2d 57030000 		.4byte	.LLST25
 2796 0a31 1E       		.uleb128 0x1e
 2797 0a32 0C000000 		.4byte	.LVL69
 2798 0a36 120F0000 		.4byte	0xf12
 2799 0a3a 1E       		.uleb128 0x1e
 2800 0a3b 32000000 		.4byte	.LVL75
 2801 0a3f 1D0F0000 		.4byte	0xf1d
 2802 0a43 00       		.byte	0
 2803 0a44 10       		.uleb128 0x10
 2804 0a45 04       		.byte	0x4
 2805 0a46 4A0A0000 		.4byte	0xa4a
 2806 0a4a 1A       		.uleb128 0x1a
 2807 0a4b 38050000 		.4byte	0x538
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 100


 2808 0a4f 1D       		.uleb128 0x1d
 2809 0a50 230A0000 		.4byte	.LASF129
 2810 0a54 01       		.byte	0x1
 2811 0a55 8E05     		.2byte	0x58e
 2812 0a57 00000000 		.4byte	.LFB13
 2813 0a5b 70000000 		.4byte	.LFE13-.LFB13
 2814 0a5f 01       		.uleb128 0x1
 2815 0a60 9C       		.byte	0x9c
 2816 0a61 9A0A0000 		.4byte	0xa9a
 2817 0a65 19       		.uleb128 0x19
 2818 0a66 05020000 		.4byte	.LASF102
 2819 0a6a 01       		.byte	0x1
 2820 0a6b 9005     		.2byte	0x590
 2821 0a6d 15070000 		.4byte	0x715
 2822 0a71 6A030000 		.4byte	.LLST26
 2823 0a75 1E       		.uleb128 0x1e
 2824 0a76 30000000 		.4byte	.LVL79
 2825 0a7a A1070000 		.4byte	0x7a1
 2826 0a7e 1E       		.uleb128 0x1e
 2827 0a7f 4A000000 		.4byte	.LVL80
 2828 0a83 CB090000 		.4byte	0x9cb
 2829 0a87 1E       		.uleb128 0x1e
 2830 0a88 50000000 		.4byte	.LVL81
 2831 0a8c 490F0000 		.4byte	0xf49
 2832 0a90 1E       		.uleb128 0x1e
 2833 0a91 54000000 		.4byte	.LVL82
 2834 0a95 AB090000 		.4byte	0x9ab
 2835 0a99 00       		.byte	0
 2836 0a9a 1D       		.uleb128 0x1d
 2837 0a9b 5F010000 		.4byte	.LASF130
 2838 0a9f 01       		.byte	0x1
 2839 0aa0 DA05     		.2byte	0x5da
 2840 0aa2 00000000 		.4byte	.LFB14
 2841 0aa6 24000000 		.4byte	.LFE14-.LFB14
 2842 0aaa 01       		.uleb128 0x1
 2843 0aab 9C       		.byte	0x9c
 2844 0aac DA0A0000 		.4byte	0xada
 2845 0ab0 18       		.uleb128 0x18
 2846 0ab1 AD0B0000 		.4byte	.LASF131
 2847 0ab5 01       		.byte	0x1
 2848 0ab6 DA05     		.2byte	0x5da
 2849 0ab8 83000000 		.4byte	0x83
 2850 0abc 7D030000 		.4byte	.LLST27
 2851 0ac0 18       		.uleb128 0x18
 2852 0ac1 FC010000 		.4byte	.LASF132
 2853 0ac5 01       		.byte	0x1
 2854 0ac6 DA05     		.2byte	0x5da
 2855 0ac8 83000000 		.4byte	0x83
 2856 0acc 9E030000 		.4byte	.LLST28
 2857 0ad0 1E       		.uleb128 0x1e
 2858 0ad1 18000000 		.4byte	.LVL86
 2859 0ad5 CB090000 		.4byte	0x9cb
 2860 0ad9 00       		.byte	0
 2861 0ada 1D       		.uleb128 0x1d
 2862 0adb 05080000 		.4byte	.LASF133
 2863 0adf 01       		.byte	0x1
 2864 0ae0 9D06     		.2byte	0x69d
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 101


 2865 0ae2 00000000 		.4byte	.LFB17
 2866 0ae6 40000000 		.4byte	.LFE17-.LFB17
 2867 0aea 01       		.uleb128 0x1
 2868 0aeb 9C       		.byte	0x9c
 2869 0aec 530B0000 		.4byte	0xb53
 2870 0af0 18       		.uleb128 0x18
 2871 0af1 25000000 		.4byte	.LASF125
 2872 0af5 01       		.byte	0x1
 2873 0af6 9D06     		.2byte	0x69d
 2874 0af8 440A0000 		.4byte	0xa44
 2875 0afc BF030000 		.4byte	.LLST29
 2876 0b00 19       		.uleb128 0x19
 2877 0b01 32010000 		.4byte	.LASF128
 2878 0b05 01       		.byte	0x1
 2879 0b06 9F06     		.2byte	0x69f
 2880 0b08 83000000 		.4byte	0x83
 2881 0b0c EB030000 		.4byte	.LLST30
 2882 0b10 19       		.uleb128 0x19
 2883 0b11 6F030000 		.4byte	.LASF126
 2884 0b15 01       		.byte	0x1
 2885 0b16 A006     		.2byte	0x6a0
 2886 0b18 83000000 		.4byte	0x83
 2887 0b1c FE030000 		.4byte	.LLST31
 2888 0b20 19       		.uleb128 0x19
 2889 0b21 99010000 		.4byte	.LASF127
 2890 0b25 01       		.byte	0x1
 2891 0b26 A106     		.2byte	0x6a1
 2892 0b28 83000000 		.4byte	0x83
 2893 0b2c 27040000 		.4byte	.LLST32
 2894 0b30 19       		.uleb128 0x19
 2895 0b31 ED000000 		.4byte	.LASF115
 2896 0b35 01       		.byte	0x1
 2897 0b36 A506     		.2byte	0x6a5
 2898 0b38 6B000000 		.4byte	0x6b
 2899 0b3c 3A040000 		.4byte	.LLST33
 2900 0b40 1E       		.uleb128 0x1e
 2901 0b41 18000000 		.4byte	.LVL90
 2902 0b45 120F0000 		.4byte	0xf12
 2903 0b49 1E       		.uleb128 0x1e
 2904 0b4a 30000000 		.4byte	.LVL95
 2905 0b4e 1D0F0000 		.4byte	0xf1d
 2906 0b52 00       		.byte	0
 2907 0b53 1D       		.uleb128 0x1d
 2908 0b54 40010000 		.4byte	.LASF134
 2909 0b58 01       		.byte	0x1
 2910 0b59 B602     		.2byte	0x2b6
 2911 0b5b 00000000 		.4byte	.LFB5
 2912 0b5f 24000000 		.4byte	.LFE5-.LFB5
 2913 0b63 01       		.uleb128 0x1
 2914 0b64 9C       		.byte	0x9c
 2915 0b65 730B0000 		.4byte	0xb73
 2916 0b69 1E       		.uleb128 0x1e
 2917 0b6a 12000000 		.4byte	.LVL98
 2918 0b6e DA0A0000 		.4byte	0xada
 2919 0b72 00       		.byte	0
 2920 0b73 1D       		.uleb128 0x1d
 2921 0b74 42090000 		.4byte	.LASF135
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 102


 2922 0b78 01       		.byte	0x1
 2923 0b79 6004     		.2byte	0x460
 2924 0b7b 00000000 		.4byte	.LFB9
 2925 0b7f 54000000 		.4byte	.LFE9-.LFB9
 2926 0b83 01       		.uleb128 0x1
 2927 0b84 9C       		.byte	0x9c
 2928 0b85 E30B0000 		.4byte	0xbe3
 2929 0b89 18       		.uleb128 0x18
 2930 0b8a AD0B0000 		.4byte	.LASF131
 2931 0b8e 01       		.byte	0x1
 2932 0b8f 6004     		.2byte	0x460
 2933 0b91 83000000 		.4byte	0x83
 2934 0b95 4D040000 		.4byte	.LLST34
 2935 0b99 19       		.uleb128 0x19
 2936 0b9a 05020000 		.4byte	.LASF102
 2937 0b9e 01       		.byte	0x1
 2938 0b9f 6304     		.2byte	0x463
 2939 0ba1 15070000 		.4byte	0x715
 2940 0ba5 6E040000 		.4byte	.LLST35
 2941 0ba9 25       		.uleb128 0x25
 2942 0baa 16000000 		.4byte	.LVL102
 2943 0bae 540F0000 		.4byte	0xf54
 2944 0bb2 BC0B0000 		.4byte	0xbbc
 2945 0bb6 1C       		.uleb128 0x1c
 2946 0bb7 01       		.uleb128 0x1
 2947 0bb8 50       		.byte	0x50
 2948 0bb9 01       		.uleb128 0x1
 2949 0bba 31       		.byte	0x31
 2950 0bbb 00       		.byte	0
 2951 0bbc 1E       		.uleb128 0x1e
 2952 0bbd 1A000000 		.4byte	.LVL103
 2953 0bc1 530B0000 		.4byte	0xb53
 2954 0bc5 25       		.uleb128 0x25
 2955 0bc6 3C000000 		.4byte	.LVL104
 2956 0bca 75080000 		.4byte	0x875
 2957 0bce D90B0000 		.4byte	0xbd9
 2958 0bd2 1C       		.uleb128 0x1c
 2959 0bd3 01       		.uleb128 0x1
 2960 0bd4 50       		.byte	0x50
 2961 0bd5 02       		.uleb128 0x2
 2962 0bd6 75       		.byte	0x75
 2963 0bd7 00       		.sleb128 0
 2964 0bd8 00       		.byte	0
 2965 0bd9 1E       		.uleb128 0x1e
 2966 0bda 40000000 		.4byte	.LVL105
 2967 0bde 15080000 		.4byte	0x815
 2968 0be2 00       		.byte	0
 2969 0be3 1D       		.uleb128 0x1d
 2970 0be4 FC000000 		.4byte	.LASF136
 2971 0be8 01       		.byte	0x1
 2972 0be9 B104     		.2byte	0x4b1
 2973 0beb 00000000 		.4byte	.LFB10
 2974 0bef 6C000000 		.4byte	.LFE10-.LFB10
 2975 0bf3 01       		.uleb128 0x1
 2976 0bf4 9C       		.byte	0x9c
 2977 0bf5 650C0000 		.4byte	0xc65
 2978 0bf9 18       		.uleb128 0x18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 103


 2979 0bfa AD0B0000 		.4byte	.LASF131
 2980 0bfe 01       		.byte	0x1
 2981 0bff B104     		.2byte	0x4b1
 2982 0c01 83000000 		.4byte	0x83
 2983 0c05 95040000 		.4byte	.LLST36
 2984 0c09 18       		.uleb128 0x18
 2985 0c0a FC010000 		.4byte	.LASF132
 2986 0c0e 01       		.byte	0x1
 2987 0c0f B104     		.2byte	0x4b1
 2988 0c11 83000000 		.4byte	0x83
 2989 0c15 B6040000 		.4byte	.LLST37
 2990 0c19 19       		.uleb128 0x19
 2991 0c1a 05020000 		.4byte	.LASF102
 2992 0c1e 01       		.byte	0x1
 2993 0c1f B304     		.2byte	0x4b3
 2994 0c21 15070000 		.4byte	0x715
 2995 0c25 D7040000 		.4byte	.LLST38
 2996 0c29 25       		.uleb128 0x25
 2997 0c2a 26000000 		.4byte	.LVL111
 2998 0c2e 730B0000 		.4byte	0xb73
 2999 0c32 3E0C0000 		.4byte	0xc3e
 3000 0c36 1C       		.uleb128 0x1c
 3001 0c37 01       		.uleb128 0x1
 3002 0c38 50       		.byte	0x50
 3003 0c39 03       		.uleb128 0x3
 3004 0c3a F3       		.byte	0xf3
 3005 0c3b 01       		.uleb128 0x1
 3006 0c3c 50       		.byte	0x50
 3007 0c3d 00       		.byte	0
 3008 0c3e 25       		.uleb128 0x25
 3009 0c3f 2C000000 		.4byte	.LVL112
 3010 0c43 A1070000 		.4byte	0x7a1
 3011 0c47 520C0000 		.4byte	0xc52
 3012 0c4b 1C       		.uleb128 0x1c
 3013 0c4c 01       		.uleb128 0x1
 3014 0c4d 50       		.byte	0x50
 3015 0c4e 02       		.uleb128 0x2
 3016 0c4f 75       		.byte	0x75
 3017 0c50 00       		.sleb128 0
 3018 0c51 00       		.byte	0
 3019 0c52 1E       		.uleb128 0x1e
 3020 0c53 44000000 		.4byte	.LVL113
 3021 0c57 CB090000 		.4byte	0x9cb
 3022 0c5b 1E       		.uleb128 0x1e
 3023 0c5c 50000000 		.4byte	.LVL114
 3024 0c60 490F0000 		.4byte	0xf49
 3025 0c64 00       		.byte	0
 3026 0c65 1D       		.uleb128 0x1d
 3027 0c66 0C090000 		.4byte	.LASF137
 3028 0c6a 01       		.byte	0x1
 3029 0c6b 2006     		.2byte	0x620
 3030 0c6d 00000000 		.4byte	.LFB15
 3031 0c71 24000000 		.4byte	.LFE15-.LFB15
 3032 0c75 01       		.uleb128 0x1
 3033 0c76 9C       		.byte	0x9c
 3034 0c77 A50C0000 		.4byte	0xca5
 3035 0c7b 18       		.uleb128 0x18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 104


 3036 0c7c AD0B0000 		.4byte	.LASF131
 3037 0c80 01       		.byte	0x1
 3038 0c81 2006     		.2byte	0x620
 3039 0c83 83000000 		.4byte	0x83
 3040 0c87 EA040000 		.4byte	.LLST39
 3041 0c8b 18       		.uleb128 0x18
 3042 0c8c FC010000 		.4byte	.LASF132
 3043 0c90 01       		.byte	0x1
 3044 0c91 2006     		.2byte	0x620
 3045 0c93 83000000 		.4byte	0x83
 3046 0c97 0B050000 		.4byte	.LLST40
 3047 0c9b 1E       		.uleb128 0x1e
 3048 0c9c 18000000 		.4byte	.LVL119
 3049 0ca0 DA0A0000 		.4byte	0xada
 3050 0ca4 00       		.byte	0
 3051 0ca5 27       		.uleb128 0x27
 3052 0ca6 B60B0000 		.4byte	.LASF139
 3053 0caa 01       		.byte	0x1
 3054 0cab 7407     		.2byte	0x774
 3055 0cad A4000000 		.4byte	0xa4
 3056 0cb1 00000000 		.4byte	.LFB21
 3057 0cb5 EC000000 		.4byte	.LFE21-.LFB21
 3058 0cb9 01       		.uleb128 0x1
 3059 0cba 9C       		.byte	0x9c
 3060 0cbb 9D0D0000 		.4byte	0xd9d
 3061 0cbf 18       		.uleb128 0x18
 3062 0cc0 1D040000 		.4byte	.LASF103
 3063 0cc4 01       		.byte	0x1
 3064 0cc5 7407     		.2byte	0x774
 3065 0cc7 83000000 		.4byte	0x83
 3066 0ccb 2C050000 		.4byte	.LLST41
 3067 0ccf 18       		.uleb128 0x18
 3068 0cd0 7C080000 		.4byte	.LASF140
 3069 0cd4 01       		.byte	0x1
 3070 0cd5 7507     		.2byte	0x775
 3071 0cd7 DF050000 		.4byte	0x5df
 3072 0cdb 58050000 		.4byte	.LLST42
 3073 0cdf 18       		.uleb128 0x18
 3074 0ce0 940A0000 		.4byte	.LASF141
 3075 0ce4 01       		.byte	0x1
 3076 0ce5 7607     		.2byte	0x776
 3077 0ce7 DF050000 		.4byte	0x5df
 3078 0ceb 84050000 		.4byte	.LLST43
 3079 0cef 16       		.uleb128 0x16
 3080 0cf0 00060000 		.4byte	.LASF106
 3081 0cf4 01       		.byte	0x1
 3082 0cf5 7807     		.2byte	0x778
 3083 0cf7 A4000000 		.4byte	0xa4
 3084 0cfb 01       		.uleb128 0x1
 3085 0cfc 50       		.byte	0x50
 3086 0cfd 19       		.uleb128 0x19
 3087 0cfe 8D020000 		.4byte	.LASF142
 3088 0d02 01       		.byte	0x1
 3089 0d03 7907     		.2byte	0x779
 3090 0d05 83000000 		.4byte	0x83
 3091 0d09 B0050000 		.4byte	.LLST44
 3092 0d0d 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 105


 3093 0d0e 3F020000 		.4byte	.LASF121
 3094 0d12 01       		.byte	0x1
 3095 0d13 7A07     		.2byte	0x77a
 3096 0d15 83000000 		.4byte	0x83
 3097 0d19 D1050000 		.4byte	.LLST45
 3098 0d1d 19       		.uleb128 0x19
 3099 0d1e 1C000000 		.4byte	.LASF143
 3100 0d22 01       		.byte	0x1
 3101 0d23 7C07     		.2byte	0x77c
 3102 0d25 77000000 		.4byte	0x77
 3103 0d29 F2050000 		.4byte	.LLST46
 3104 0d2d 19       		.uleb128 0x19
 3105 0d2e 05020000 		.4byte	.LASF102
 3106 0d32 01       		.byte	0x1
 3107 0d33 8307     		.2byte	0x783
 3108 0d35 9D0D0000 		.4byte	0xd9d
 3109 0d39 11060000 		.4byte	.LLST47
 3110 0d3d 1E       		.uleb128 0x1e
 3111 0d3e 2E000000 		.4byte	.LVL127
 3112 0d42 E30B0000 		.4byte	0xbe3
 3113 0d46 1E       		.uleb128 0x1e
 3114 0d47 32000000 		.4byte	.LVL128
 3115 0d4b 55060000 		.4byte	0x655
 3116 0d4f 25       		.uleb128 0x25
 3117 0d50 50000000 		.4byte	.LVL131
 3118 0d54 A1070000 		.4byte	0x7a1
 3119 0d58 640D0000 		.4byte	0xd64
 3120 0d5c 1C       		.uleb128 0x1c
 3121 0d5d 01       		.uleb128 0x1
 3122 0d5e 50       		.byte	0x50
 3123 0d5f 03       		.uleb128 0x3
 3124 0d60 91       		.byte	0x91
 3125 0d61 64       		.sleb128 -28
 3126 0d62 06       		.byte	0x6
 3127 0d63 00       		.byte	0
 3128 0d64 1E       		.uleb128 0x1e
 3129 0d65 54000000 		.4byte	.LVL132
 3130 0d69 AB090000 		.4byte	0x9ab
 3131 0d6d 1E       		.uleb128 0x1e
 3132 0d6e 92000000 		.4byte	.LVL137
 3133 0d72 DA0A0000 		.4byte	0xada
 3134 0d76 1E       		.uleb128 0x1e
 3135 0d77 9C000000 		.4byte	.LVL138
 3136 0d7b 7A060000 		.4byte	0x67a
 3137 0d7f 1B       		.uleb128 0x1b
 3138 0d80 A6000000 		.4byte	.LVL139
 3139 0d84 8C060000 		.4byte	0x68c
 3140 0d88 1C       		.uleb128 0x1c
 3141 0d89 01       		.uleb128 0x1
 3142 0d8a 50       		.byte	0x50
 3143 0d8b 03       		.uleb128 0x3
 3144 0d8c 91       		.byte	0x91
 3145 0d8d 64       		.sleb128 -28
 3146 0d8e 06       		.byte	0x6
 3147 0d8f 1C       		.uleb128 0x1c
 3148 0d90 01       		.uleb128 0x1
 3149 0d91 51       		.byte	0x51
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 106


 3150 0d92 02       		.uleb128 0x2
 3151 0d93 77       		.byte	0x77
 3152 0d94 00       		.sleb128 0
 3153 0d95 1C       		.uleb128 0x1c
 3154 0d96 01       		.uleb128 0x1
 3155 0d97 52       		.byte	0x52
 3156 0d98 02       		.uleb128 0x2
 3157 0d99 74       		.byte	0x74
 3158 0d9a 00       		.sleb128 0
 3159 0d9b 00       		.byte	0
 3160 0d9c 00       		.byte	0
 3161 0d9d 10       		.uleb128 0x10
 3162 0d9e 04       		.byte	0x4
 3163 0d9f 20020000 		.4byte	0x220
 3164 0da3 28       		.uleb128 0x28
 3165 0da4 A8080000 		.4byte	.LASF170
 3166 0da8 01       		.byte	0x1
 3167 0da9 3E08     		.2byte	0x83e
 3168 0dab A4000000 		.4byte	0xa4
 3169 0daf 00000000 		.4byte	.LFB22
 3170 0db3 08010000 		.4byte	.LFE22-.LFB22
 3171 0db7 01       		.uleb128 0x1
 3172 0db8 9C       		.byte	0x9c
 3173 0db9 530E0000 		.4byte	0xe53
 3174 0dbd 18       		.uleb128 0x18
 3175 0dbe AD0B0000 		.4byte	.LASF131
 3176 0dc2 01       		.byte	0x1
 3177 0dc3 3E08     		.2byte	0x83e
 3178 0dc5 83000000 		.4byte	0x83
 3179 0dc9 30060000 		.4byte	.LLST48
 3180 0dcd 18       		.uleb128 0x18
 3181 0dce B8030000 		.4byte	.LASF144
 3182 0dd2 01       		.byte	0x1
 3183 0dd3 3E08     		.2byte	0x83e
 3184 0dd5 83000000 		.4byte	0x83
 3185 0dd9 5C060000 		.4byte	.LLST49
 3186 0ddd 19       		.uleb128 0x19
 3187 0dde 1D040000 		.4byte	.LASF103
 3188 0de2 01       		.byte	0x1
 3189 0de3 4008     		.2byte	0x840
 3190 0de5 83000000 		.4byte	0x83
 3191 0de9 88060000 		.4byte	.LLST50
 3192 0ded 19       		.uleb128 0x19
 3193 0dee 00060000 		.4byte	.LASF106
 3194 0df2 01       		.byte	0x1
 3195 0df3 4108     		.2byte	0x841
 3196 0df5 A4000000 		.4byte	0xa4
 3197 0df9 C4060000 		.4byte	.LLST51
 3198 0dfd 19       		.uleb128 0x19
 3199 0dfe 05020000 		.4byte	.LASF102
 3200 0e02 01       		.byte	0x1
 3201 0e03 4B08     		.2byte	0x84b
 3202 0e05 9D0D0000 		.4byte	0xd9d
 3203 0e09 EE060000 		.4byte	.LLST52
 3204 0e0d 16       		.uleb128 0x16
 3205 0e0e 940A0000 		.4byte	.LASF141
 3206 0e12 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 107


 3207 0e13 4F08     		.2byte	0x84f
 3208 0e15 09020000 		.4byte	0x209
 3209 0e19 02       		.uleb128 0x2
 3210 0e1a 91       		.byte	0x91
 3211 0e1b 64       		.sleb128 -28
 3212 0e1c 19       		.uleb128 0x19
 3213 0e1d 7C080000 		.4byte	.LASF140
 3214 0e21 01       		.byte	0x1
 3215 0e22 5408     		.2byte	0x854
 3216 0e24 DF050000 		.4byte	0x5df
 3217 0e28 01070000 		.4byte	.LLST53
 3218 0e2c 1E       		.uleb128 0x1e
 3219 0e2d 38000000 		.4byte	.LVL155
 3220 0e31 490F0000 		.4byte	0xf49
 3221 0e35 1B       		.uleb128 0x1b
 3222 0e36 56000000 		.4byte	.LVL158
 3223 0e3a A50C0000 		.4byte	0xca5
 3224 0e3e 1C       		.uleb128 0x1c
 3225 0e3f 01       		.uleb128 0x1
 3226 0e40 50       		.byte	0x50
 3227 0e41 03       		.uleb128 0x3
 3228 0e42 91       		.byte	0x91
 3229 0e43 5C       		.sleb128 -36
 3230 0e44 06       		.byte	0x6
 3231 0e45 1C       		.uleb128 0x1c
 3232 0e46 01       		.uleb128 0x1
 3233 0e47 51       		.byte	0x51
 3234 0e48 02       		.uleb128 0x2
 3235 0e49 76       		.byte	0x76
 3236 0e4a 00       		.sleb128 0
 3237 0e4b 1C       		.uleb128 0x1c
 3238 0e4c 01       		.uleb128 0x1
 3239 0e4d 52       		.byte	0x52
 3240 0e4e 02       		.uleb128 0x2
 3241 0e4f 91       		.byte	0x91
 3242 0e50 64       		.sleb128 -28
 3243 0e51 00       		.byte	0
 3244 0e52 00       		.byte	0
 3245 0e53 29       		.uleb128 0x29
 3246 0e54 DF010000 		.4byte	.LASF145
 3247 0e58 01       		.byte	0x1
 3248 0e59 6E       		.byte	0x6e
 3249 0e5a 83000000 		.4byte	0x83
 3250 0e5e 05       		.uleb128 0x5
 3251 0e5f 03       		.byte	0x3
 3252 0e60 04000000 		.4byte	CapSense_1_counterResolution
 3253 0e64 29       		.uleb128 0x29
 3254 0e65 6E050000 		.4byte	.LASF146
 3255 0e69 01       		.byte	0x1
 3256 0e6a 72       		.byte	0x72
 3257 0e6b 6B000000 		.4byte	0x6b
 3258 0e6f 05       		.uleb128 0x5
 3259 0e70 03       		.byte	0x3
 3260 0e71 00000000 		.4byte	CapSense_1_eleCsdDisconnectFlag
 3261 0e75 2A       		.uleb128 0x2a
 3262 0e76 53070000 		.4byte	.LASF147
 3263 0e7a 05       		.byte	0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 108


 3264 0e7b 1C04     		.2byte	0x41c
 3265 0e7d A7040000 		.4byte	0x4a7
 3266 0e81 2A       		.uleb128 0x2a
 3267 0e82 5B080000 		.4byte	.LASF148
 3268 0e86 05       		.byte	0x5
 3269 0e87 1D04     		.2byte	0x41d
 3270 0e89 8D0E0000 		.4byte	0xe8d
 3271 0e8d 1A       		.uleb128 0x1a
 3272 0e8e 1E060000 		.4byte	0x61e
 3273 0e92 2B       		.uleb128 0x2b
 3274 0e93 31040000 		.4byte	.LASF149
 3275 0e97 06       		.byte	0x6
 3276 0e98 9D       		.byte	0x9d
 3277 0e99 B0000000 		.4byte	0xb0
 3278 0e9d 2B       		.uleb128 0x2b
 3279 0e9e 5C090000 		.4byte	.LASF150
 3280 0ea2 06       		.byte	0x6
 3281 0ea3 9E       		.byte	0x9e
 3282 0ea4 B0000000 		.4byte	0xb0
 3283 0ea8 2B       		.uleb128 0x2b
 3284 0ea9 4B000000 		.4byte	.LASF151
 3285 0ead 06       		.byte	0x6
 3286 0eae A1       		.byte	0xa1
 3287 0eaf D9050000 		.4byte	0x5d9
 3288 0eb3 2B       		.uleb128 0x2b
 3289 0eb4 80010000 		.4byte	.LASF152
 3290 0eb8 06       		.byte	0x6
 3291 0eb9 A8       		.byte	0xa8
 3292 0eba 10080000 		.4byte	0x810
 3293 0ebe 2B       		.uleb128 0x2b
 3294 0ebf D6000000 		.4byte	.LASF153
 3295 0ec3 06       		.byte	0x6
 3296 0ec4 B6       		.byte	0xb6
 3297 0ec5 440A0000 		.4byte	0xa44
 3298 0ec9 2C       		.uleb128 0x2c
 3299 0eca 50050000 		.4byte	.LASF154
 3300 0ece 01       		.byte	0x1
 3301 0ecf 6D       		.byte	0x6d
 3302 0ed0 83000000 		.4byte	0x83
 3303 0ed4 05       		.uleb128 0x5
 3304 0ed5 03       		.byte	0x3
 3305 0ed6 00000000 		.4byte	CapSense_1_configCsd
 3306 0eda 2C       		.uleb128 0x2c
 3307 0edb BB020000 		.4byte	.LASF155
 3308 0edf 01       		.byte	0x1
 3309 0ee0 7A       		.byte	0x7a
 3310 0ee1 6B000000 		.4byte	0x6b
 3311 0ee5 05       		.uleb128 0x5
 3312 0ee6 03       		.byte	0x3
 3313 0ee7 00000000 		.4byte	CapSense_1_calibratedIdac
 3314 0eeb 2C       		.uleb128 0x2c
 3315 0eec EE080000 		.4byte	.LASF156
 3316 0ef0 01       		.byte	0x1
 3317 0ef1 7B       		.byte	0x7b
 3318 0ef2 77000000 		.4byte	0x77
 3319 0ef6 05       		.uleb128 0x5
 3320 0ef7 03       		.byte	0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 109


 3321 0ef8 00000000 		.4byte	CapSense_1_calibratedRawcount
 3322 0efc 2D       		.uleb128 0x2d
 3323 0efd CE080000 		.4byte	.LASF157
 3324 0f01 CE080000 		.4byte	.LASF157
 3325 0f05 06       		.byte	0x6
 3326 0f06 69       		.byte	0x69
 3327 0f07 2D       		.uleb128 0x2d
 3328 0f08 E80A0000 		.4byte	.LASF158
 3329 0f0c E80A0000 		.4byte	.LASF158
 3330 0f10 06       		.byte	0x6
 3331 0f11 85       		.byte	0x85
 3332 0f12 2D       		.uleb128 0x2d
 3333 0f13 A1030000 		.4byte	.LASF159
 3334 0f17 A1030000 		.4byte	.LASF159
 3335 0f1b 07       		.byte	0x7
 3336 0f1c E5       		.byte	0xe5
 3337 0f1d 2D       		.uleb128 0x2d
 3338 0f1e F2040000 		.4byte	.LASF160
 3339 0f22 F2040000 		.4byte	.LASF160
 3340 0f26 07       		.byte	0x7
 3341 0f27 E6       		.byte	0xe6
 3342 0f28 2D       		.uleb128 0x2d
 3343 0f29 67040000 		.4byte	.LASF161
 3344 0f2d 67040000 		.4byte	.LASF161
 3345 0f31 06       		.byte	0x6
 3346 0f32 68       		.byte	0x68
 3347 0f33 2D       		.uleb128 0x2d
 3348 0f34 08050000 		.4byte	.LASF162
 3349 0f38 08050000 		.4byte	.LASF162
 3350 0f3c 07       		.byte	0x7
 3351 0f3d DC       		.byte	0xdc
 3352 0f3e 2D       		.uleb128 0x2d
 3353 0f3f 4C0A0000 		.4byte	.LASF163
 3354 0f43 4C0A0000 		.4byte	.LASF163
 3355 0f47 07       		.byte	0x7
 3356 0f48 C3       		.byte	0xc3
 3357 0f49 2D       		.uleb128 0x2d
 3358 0f4a 8A030000 		.4byte	.LASF164
 3359 0f4e 8A030000 		.4byte	.LASF164
 3360 0f52 08       		.byte	0x8
 3361 0f53 18       		.byte	0x18
 3362 0f54 2D       		.uleb128 0x2d
 3363 0f55 48040000 		.4byte	.LASF165
 3364 0f59 48040000 		.4byte	.LASF165
 3365 0f5d 06       		.byte	0x6
 3366 0f5e 6E       		.byte	0x6e
 3367 0f5f 00       		.byte	0
 3368              		.section	.debug_abbrev,"",%progbits
 3369              	.Ldebug_abbrev0:
 3370 0000 01       		.uleb128 0x1
 3371 0001 11       		.uleb128 0x11
 3372 0002 01       		.byte	0x1
 3373 0003 25       		.uleb128 0x25
 3374 0004 0E       		.uleb128 0xe
 3375 0005 13       		.uleb128 0x13
 3376 0006 0B       		.uleb128 0xb
 3377 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 110


 3378 0008 0E       		.uleb128 0xe
 3379 0009 1B       		.uleb128 0x1b
 3380 000a 0E       		.uleb128 0xe
 3381 000b 55       		.uleb128 0x55
 3382 000c 17       		.uleb128 0x17
 3383 000d 11       		.uleb128 0x11
 3384 000e 01       		.uleb128 0x1
 3385 000f 10       		.uleb128 0x10
 3386 0010 17       		.uleb128 0x17
 3387 0011 00       		.byte	0
 3388 0012 00       		.byte	0
 3389 0013 02       		.uleb128 0x2
 3390 0014 24       		.uleb128 0x24
 3391 0015 00       		.byte	0
 3392 0016 0B       		.uleb128 0xb
 3393 0017 0B       		.uleb128 0xb
 3394 0018 3E       		.uleb128 0x3e
 3395 0019 0B       		.uleb128 0xb
 3396 001a 03       		.uleb128 0x3
 3397 001b 0E       		.uleb128 0xe
 3398 001c 00       		.byte	0
 3399 001d 00       		.byte	0
 3400 001e 03       		.uleb128 0x3
 3401 001f 24       		.uleb128 0x24
 3402 0020 00       		.byte	0
 3403 0021 0B       		.uleb128 0xb
 3404 0022 0B       		.uleb128 0xb
 3405 0023 3E       		.uleb128 0x3e
 3406 0024 0B       		.uleb128 0xb
 3407 0025 03       		.uleb128 0x3
 3408 0026 08       		.uleb128 0x8
 3409 0027 00       		.byte	0
 3410 0028 00       		.byte	0
 3411 0029 04       		.uleb128 0x4
 3412 002a 16       		.uleb128 0x16
 3413 002b 00       		.byte	0
 3414 002c 03       		.uleb128 0x3
 3415 002d 0E       		.uleb128 0xe
 3416 002e 3A       		.uleb128 0x3a
 3417 002f 0B       		.uleb128 0xb
 3418 0030 3B       		.uleb128 0x3b
 3419 0031 05       		.uleb128 0x5
 3420 0032 49       		.uleb128 0x49
 3421 0033 13       		.uleb128 0x13
 3422 0034 00       		.byte	0
 3423 0035 00       		.byte	0
 3424 0036 05       		.uleb128 0x5
 3425 0037 35       		.uleb128 0x35
 3426 0038 00       		.byte	0
 3427 0039 49       		.uleb128 0x49
 3428 003a 13       		.uleb128 0x13
 3429 003b 00       		.byte	0
 3430 003c 00       		.byte	0
 3431 003d 06       		.uleb128 0x6
 3432 003e 16       		.uleb128 0x16
 3433 003f 00       		.byte	0
 3434 0040 03       		.uleb128 0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 111


 3435 0041 0E       		.uleb128 0xe
 3436 0042 3A       		.uleb128 0x3a
 3437 0043 0B       		.uleb128 0xb
 3438 0044 3B       		.uleb128 0x3b
 3439 0045 0B       		.uleb128 0xb
 3440 0046 49       		.uleb128 0x49
 3441 0047 13       		.uleb128 0x13
 3442 0048 00       		.byte	0
 3443 0049 00       		.byte	0
 3444 004a 07       		.uleb128 0x7
 3445 004b 13       		.uleb128 0x13
 3446 004c 01       		.byte	0x1
 3447 004d 0B       		.uleb128 0xb
 3448 004e 0B       		.uleb128 0xb
 3449 004f 3A       		.uleb128 0x3a
 3450 0050 0B       		.uleb128 0xb
 3451 0051 3B       		.uleb128 0x3b
 3452 0052 0B       		.uleb128 0xb
 3453 0053 01       		.uleb128 0x1
 3454 0054 13       		.uleb128 0x13
 3455 0055 00       		.byte	0
 3456 0056 00       		.byte	0
 3457 0057 08       		.uleb128 0x8
 3458 0058 0D       		.uleb128 0xd
 3459 0059 00       		.byte	0
 3460 005a 03       		.uleb128 0x3
 3461 005b 0E       		.uleb128 0xe
 3462 005c 3A       		.uleb128 0x3a
 3463 005d 0B       		.uleb128 0xb
 3464 005e 3B       		.uleb128 0x3b
 3465 005f 0B       		.uleb128 0xb
 3466 0060 49       		.uleb128 0x49
 3467 0061 13       		.uleb128 0x13
 3468 0062 38       		.uleb128 0x38
 3469 0063 0B       		.uleb128 0xb
 3470 0064 00       		.byte	0
 3471 0065 00       		.byte	0
 3472 0066 09       		.uleb128 0x9
 3473 0067 04       		.uleb128 0x4
 3474 0068 01       		.byte	0x1
 3475 0069 0B       		.uleb128 0xb
 3476 006a 0B       		.uleb128 0xb
 3477 006b 49       		.uleb128 0x49
 3478 006c 13       		.uleb128 0x13
 3479 006d 3A       		.uleb128 0x3a
 3480 006e 0B       		.uleb128 0xb
 3481 006f 3B       		.uleb128 0x3b
 3482 0070 0B       		.uleb128 0xb
 3483 0071 01       		.uleb128 0x1
 3484 0072 13       		.uleb128 0x13
 3485 0073 00       		.byte	0
 3486 0074 00       		.byte	0
 3487 0075 0A       		.uleb128 0xa
 3488 0076 28       		.uleb128 0x28
 3489 0077 00       		.byte	0
 3490 0078 03       		.uleb128 0x3
 3491 0079 0E       		.uleb128 0xe
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 112


 3492 007a 1C       		.uleb128 0x1c
 3493 007b 0B       		.uleb128 0xb
 3494 007c 00       		.byte	0
 3495 007d 00       		.byte	0
 3496 007e 0B       		.uleb128 0xb
 3497 007f 01       		.uleb128 0x1
 3498 0080 01       		.byte	0x1
 3499 0081 49       		.uleb128 0x49
 3500 0082 13       		.uleb128 0x13
 3501 0083 01       		.uleb128 0x1
 3502 0084 13       		.uleb128 0x13
 3503 0085 00       		.byte	0
 3504 0086 00       		.byte	0
 3505 0087 0C       		.uleb128 0xc
 3506 0088 21       		.uleb128 0x21
 3507 0089 00       		.byte	0
 3508 008a 49       		.uleb128 0x49
 3509 008b 13       		.uleb128 0x13
 3510 008c 2F       		.uleb128 0x2f
 3511 008d 0B       		.uleb128 0xb
 3512 008e 00       		.byte	0
 3513 008f 00       		.byte	0
 3514 0090 0D       		.uleb128 0xd
 3515 0091 0D       		.uleb128 0xd
 3516 0092 00       		.byte	0
 3517 0093 03       		.uleb128 0x3
 3518 0094 0E       		.uleb128 0xe
 3519 0095 3A       		.uleb128 0x3a
 3520 0096 0B       		.uleb128 0xb
 3521 0097 3B       		.uleb128 0x3b
 3522 0098 05       		.uleb128 0x5
 3523 0099 49       		.uleb128 0x49
 3524 009a 13       		.uleb128 0x13
 3525 009b 38       		.uleb128 0x38
 3526 009c 0B       		.uleb128 0xb
 3527 009d 00       		.byte	0
 3528 009e 00       		.byte	0
 3529 009f 0E       		.uleb128 0xe
 3530 00a0 13       		.uleb128 0x13
 3531 00a1 01       		.byte	0x1
 3532 00a2 0B       		.uleb128 0xb
 3533 00a3 0B       		.uleb128 0xb
 3534 00a4 3A       		.uleb128 0x3a
 3535 00a5 0B       		.uleb128 0xb
 3536 00a6 3B       		.uleb128 0x3b
 3537 00a7 05       		.uleb128 0x5
 3538 00a8 01       		.uleb128 0x1
 3539 00a9 13       		.uleb128 0x13
 3540 00aa 00       		.byte	0
 3541 00ab 00       		.byte	0
 3542 00ac 0F       		.uleb128 0xf
 3543 00ad 0D       		.uleb128 0xd
 3544 00ae 00       		.byte	0
 3545 00af 03       		.uleb128 0x3
 3546 00b0 08       		.uleb128 0x8
 3547 00b1 3A       		.uleb128 0x3a
 3548 00b2 0B       		.uleb128 0xb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 113


 3549 00b3 3B       		.uleb128 0x3b
 3550 00b4 05       		.uleb128 0x5
 3551 00b5 49       		.uleb128 0x49
 3552 00b6 13       		.uleb128 0x13
 3553 00b7 38       		.uleb128 0x38
 3554 00b8 0B       		.uleb128 0xb
 3555 00b9 00       		.byte	0
 3556 00ba 00       		.byte	0
 3557 00bb 10       		.uleb128 0x10
 3558 00bc 0F       		.uleb128 0xf
 3559 00bd 00       		.byte	0
 3560 00be 0B       		.uleb128 0xb
 3561 00bf 0B       		.uleb128 0xb
 3562 00c0 49       		.uleb128 0x49
 3563 00c1 13       		.uleb128 0x13
 3564 00c2 00       		.byte	0
 3565 00c3 00       		.byte	0
 3566 00c4 11       		.uleb128 0x11
 3567 00c5 26       		.uleb128 0x26
 3568 00c6 00       		.byte	0
 3569 00c7 00       		.byte	0
 3570 00c8 00       		.byte	0
 3571 00c9 12       		.uleb128 0x12
 3572 00ca 0F       		.uleb128 0xf
 3573 00cb 00       		.byte	0
 3574 00cc 0B       		.uleb128 0xb
 3575 00cd 0B       		.uleb128 0xb
 3576 00ce 00       		.byte	0
 3577 00cf 00       		.byte	0
 3578 00d0 13       		.uleb128 0x13
 3579 00d1 2E       		.uleb128 0x2e
 3580 00d2 00       		.byte	0
 3581 00d3 03       		.uleb128 0x3
 3582 00d4 0E       		.uleb128 0xe
 3583 00d5 3A       		.uleb128 0x3a
 3584 00d6 0B       		.uleb128 0xb
 3585 00d7 3B       		.uleb128 0x3b
 3586 00d8 05       		.uleb128 0x5
 3587 00d9 27       		.uleb128 0x27
 3588 00da 19       		.uleb128 0x19
 3589 00db 20       		.uleb128 0x20
 3590 00dc 0B       		.uleb128 0xb
 3591 00dd 00       		.byte	0
 3592 00de 00       		.byte	0
 3593 00df 14       		.uleb128 0x14
 3594 00e0 2E       		.uleb128 0x2e
 3595 00e1 00       		.byte	0
 3596 00e2 03       		.uleb128 0x3
 3597 00e3 0E       		.uleb128 0xe
 3598 00e4 3A       		.uleb128 0x3a
 3599 00e5 0B       		.uleb128 0xb
 3600 00e6 3B       		.uleb128 0x3b
 3601 00e7 05       		.uleb128 0x5
 3602 00e8 27       		.uleb128 0x27
 3603 00e9 19       		.uleb128 0x19
 3604 00ea 11       		.uleb128 0x11
 3605 00eb 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 114


 3606 00ec 12       		.uleb128 0x12
 3607 00ed 06       		.uleb128 0x6
 3608 00ee 40       		.uleb128 0x40
 3609 00ef 18       		.uleb128 0x18
 3610 00f0 9742     		.uleb128 0x2117
 3611 00f2 19       		.uleb128 0x19
 3612 00f3 00       		.byte	0
 3613 00f4 00       		.byte	0
 3614 00f5 15       		.uleb128 0x15
 3615 00f6 2E       		.uleb128 0x2e
 3616 00f7 01       		.byte	0x1
 3617 00f8 03       		.uleb128 0x3
 3618 00f9 0E       		.uleb128 0xe
 3619 00fa 3A       		.uleb128 0x3a
 3620 00fb 0B       		.uleb128 0xb
 3621 00fc 3B       		.uleb128 0x3b
 3622 00fd 05       		.uleb128 0x5
 3623 00fe 27       		.uleb128 0x27
 3624 00ff 19       		.uleb128 0x19
 3625 0100 11       		.uleb128 0x11
 3626 0101 01       		.uleb128 0x1
 3627 0102 12       		.uleb128 0x12
 3628 0103 06       		.uleb128 0x6
 3629 0104 40       		.uleb128 0x40
 3630 0105 18       		.uleb128 0x18
 3631 0106 9742     		.uleb128 0x2117
 3632 0108 19       		.uleb128 0x19
 3633 0109 01       		.uleb128 0x1
 3634 010a 13       		.uleb128 0x13
 3635 010b 00       		.byte	0
 3636 010c 00       		.byte	0
 3637 010d 16       		.uleb128 0x16
 3638 010e 34       		.uleb128 0x34
 3639 010f 00       		.byte	0
 3640 0110 03       		.uleb128 0x3
 3641 0111 0E       		.uleb128 0xe
 3642 0112 3A       		.uleb128 0x3a
 3643 0113 0B       		.uleb128 0xb
 3644 0114 3B       		.uleb128 0x3b
 3645 0115 05       		.uleb128 0x5
 3646 0116 49       		.uleb128 0x49
 3647 0117 13       		.uleb128 0x13
 3648 0118 02       		.uleb128 0x2
 3649 0119 18       		.uleb128 0x18
 3650 011a 00       		.byte	0
 3651 011b 00       		.byte	0
 3652 011c 17       		.uleb128 0x17
 3653 011d 2E       		.uleb128 0x2e
 3654 011e 01       		.byte	0x1
 3655 011f 03       		.uleb128 0x3
 3656 0120 0E       		.uleb128 0xe
 3657 0121 3A       		.uleb128 0x3a
 3658 0122 0B       		.uleb128 0xb
 3659 0123 3B       		.uleb128 0x3b
 3660 0124 05       		.uleb128 0x5
 3661 0125 27       		.uleb128 0x27
 3662 0126 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 115


 3663 0127 49       		.uleb128 0x49
 3664 0128 13       		.uleb128 0x13
 3665 0129 11       		.uleb128 0x11
 3666 012a 01       		.uleb128 0x1
 3667 012b 12       		.uleb128 0x12
 3668 012c 06       		.uleb128 0x6
 3669 012d 40       		.uleb128 0x40
 3670 012e 18       		.uleb128 0x18
 3671 012f 9642     		.uleb128 0x2116
 3672 0131 19       		.uleb128 0x19
 3673 0132 01       		.uleb128 0x1
 3674 0133 13       		.uleb128 0x13
 3675 0134 00       		.byte	0
 3676 0135 00       		.byte	0
 3677 0136 18       		.uleb128 0x18
 3678 0137 05       		.uleb128 0x5
 3679 0138 00       		.byte	0
 3680 0139 03       		.uleb128 0x3
 3681 013a 0E       		.uleb128 0xe
 3682 013b 3A       		.uleb128 0x3a
 3683 013c 0B       		.uleb128 0xb
 3684 013d 3B       		.uleb128 0x3b
 3685 013e 05       		.uleb128 0x5
 3686 013f 49       		.uleb128 0x49
 3687 0140 13       		.uleb128 0x13
 3688 0141 02       		.uleb128 0x2
 3689 0142 17       		.uleb128 0x17
 3690 0143 00       		.byte	0
 3691 0144 00       		.byte	0
 3692 0145 19       		.uleb128 0x19
 3693 0146 34       		.uleb128 0x34
 3694 0147 00       		.byte	0
 3695 0148 03       		.uleb128 0x3
 3696 0149 0E       		.uleb128 0xe
 3697 014a 3A       		.uleb128 0x3a
 3698 014b 0B       		.uleb128 0xb
 3699 014c 3B       		.uleb128 0x3b
 3700 014d 05       		.uleb128 0x5
 3701 014e 49       		.uleb128 0x49
 3702 014f 13       		.uleb128 0x13
 3703 0150 02       		.uleb128 0x2
 3704 0151 17       		.uleb128 0x17
 3705 0152 00       		.byte	0
 3706 0153 00       		.byte	0
 3707 0154 1A       		.uleb128 0x1a
 3708 0155 26       		.uleb128 0x26
 3709 0156 00       		.byte	0
 3710 0157 49       		.uleb128 0x49
 3711 0158 13       		.uleb128 0x13
 3712 0159 00       		.byte	0
 3713 015a 00       		.byte	0
 3714 015b 1B       		.uleb128 0x1b
 3715 015c 898201   		.uleb128 0x4109
 3716 015f 01       		.byte	0x1
 3717 0160 11       		.uleb128 0x11
 3718 0161 01       		.uleb128 0x1
 3719 0162 31       		.uleb128 0x31
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 116


 3720 0163 13       		.uleb128 0x13
 3721 0164 00       		.byte	0
 3722 0165 00       		.byte	0
 3723 0166 1C       		.uleb128 0x1c
 3724 0167 8A8201   		.uleb128 0x410a
 3725 016a 00       		.byte	0
 3726 016b 02       		.uleb128 0x2
 3727 016c 18       		.uleb128 0x18
 3728 016d 9142     		.uleb128 0x2111
 3729 016f 18       		.uleb128 0x18
 3730 0170 00       		.byte	0
 3731 0171 00       		.byte	0
 3732 0172 1D       		.uleb128 0x1d
 3733 0173 2E       		.uleb128 0x2e
 3734 0174 01       		.byte	0x1
 3735 0175 3F       		.uleb128 0x3f
 3736 0176 19       		.uleb128 0x19
 3737 0177 03       		.uleb128 0x3
 3738 0178 0E       		.uleb128 0xe
 3739 0179 3A       		.uleb128 0x3a
 3740 017a 0B       		.uleb128 0xb
 3741 017b 3B       		.uleb128 0x3b
 3742 017c 05       		.uleb128 0x5
 3743 017d 27       		.uleb128 0x27
 3744 017e 19       		.uleb128 0x19
 3745 017f 11       		.uleb128 0x11
 3746 0180 01       		.uleb128 0x1
 3747 0181 12       		.uleb128 0x12
 3748 0182 06       		.uleb128 0x6
 3749 0183 40       		.uleb128 0x40
 3750 0184 18       		.uleb128 0x18
 3751 0185 9742     		.uleb128 0x2117
 3752 0187 19       		.uleb128 0x19
 3753 0188 01       		.uleb128 0x1
 3754 0189 13       		.uleb128 0x13
 3755 018a 00       		.byte	0
 3756 018b 00       		.byte	0
 3757 018c 1E       		.uleb128 0x1e
 3758 018d 898201   		.uleb128 0x4109
 3759 0190 00       		.byte	0
 3760 0191 11       		.uleb128 0x11
 3761 0192 01       		.uleb128 0x1
 3762 0193 31       		.uleb128 0x31
 3763 0194 13       		.uleb128 0x13
 3764 0195 00       		.byte	0
 3765 0196 00       		.byte	0
 3766 0197 1F       		.uleb128 0x1f
 3767 0198 05       		.uleb128 0x5
 3768 0199 00       		.byte	0
 3769 019a 03       		.uleb128 0x3
 3770 019b 0E       		.uleb128 0xe
 3771 019c 3A       		.uleb128 0x3a
 3772 019d 0B       		.uleb128 0xb
 3773 019e 3B       		.uleb128 0x3b
 3774 019f 05       		.uleb128 0x5
 3775 01a0 49       		.uleb128 0x49
 3776 01a1 13       		.uleb128 0x13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 117


 3777 01a2 02       		.uleb128 0x2
 3778 01a3 18       		.uleb128 0x18
 3779 01a4 00       		.byte	0
 3780 01a5 00       		.byte	0
 3781 01a6 20       		.uleb128 0x20
 3782 01a7 2E       		.uleb128 0x2e
 3783 01a8 01       		.byte	0x1
 3784 01a9 03       		.uleb128 0x3
 3785 01aa 0E       		.uleb128 0xe
 3786 01ab 3A       		.uleb128 0x3a
 3787 01ac 0B       		.uleb128 0xb
 3788 01ad 3B       		.uleb128 0x3b
 3789 01ae 05       		.uleb128 0x5
 3790 01af 27       		.uleb128 0x27
 3791 01b0 19       		.uleb128 0x19
 3792 01b1 20       		.uleb128 0x20
 3793 01b2 0B       		.uleb128 0xb
 3794 01b3 01       		.uleb128 0x1
 3795 01b4 13       		.uleb128 0x13
 3796 01b5 00       		.byte	0
 3797 01b6 00       		.byte	0
 3798 01b7 21       		.uleb128 0x21
 3799 01b8 34       		.uleb128 0x34
 3800 01b9 00       		.byte	0
 3801 01ba 03       		.uleb128 0x3
 3802 01bb 0E       		.uleb128 0xe
 3803 01bc 3A       		.uleb128 0x3a
 3804 01bd 0B       		.uleb128 0xb
 3805 01be 3B       		.uleb128 0x3b
 3806 01bf 05       		.uleb128 0x5
 3807 01c0 49       		.uleb128 0x49
 3808 01c1 13       		.uleb128 0x13
 3809 01c2 00       		.byte	0
 3810 01c3 00       		.byte	0
 3811 01c4 22       		.uleb128 0x22
 3812 01c5 1D       		.uleb128 0x1d
 3813 01c6 01       		.byte	0x1
 3814 01c7 31       		.uleb128 0x31
 3815 01c8 13       		.uleb128 0x13
 3816 01c9 11       		.uleb128 0x11
 3817 01ca 01       		.uleb128 0x1
 3818 01cb 12       		.uleb128 0x12
 3819 01cc 06       		.uleb128 0x6
 3820 01cd 58       		.uleb128 0x58
 3821 01ce 0B       		.uleb128 0xb
 3822 01cf 59       		.uleb128 0x59
 3823 01d0 05       		.uleb128 0x5
 3824 01d1 01       		.uleb128 0x1
 3825 01d2 13       		.uleb128 0x13
 3826 01d3 00       		.byte	0
 3827 01d4 00       		.byte	0
 3828 01d5 23       		.uleb128 0x23
 3829 01d6 0B       		.uleb128 0xb
 3830 01d7 01       		.byte	0x1
 3831 01d8 11       		.uleb128 0x11
 3832 01d9 01       		.uleb128 0x1
 3833 01da 12       		.uleb128 0x12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 118


 3834 01db 06       		.uleb128 0x6
 3835 01dc 00       		.byte	0
 3836 01dd 00       		.byte	0
 3837 01de 24       		.uleb128 0x24
 3838 01df 34       		.uleb128 0x34
 3839 01e0 00       		.byte	0
 3840 01e1 31       		.uleb128 0x31
 3841 01e2 13       		.uleb128 0x13
 3842 01e3 02       		.uleb128 0x2
 3843 01e4 17       		.uleb128 0x17
 3844 01e5 00       		.byte	0
 3845 01e6 00       		.byte	0
 3846 01e7 25       		.uleb128 0x25
 3847 01e8 898201   		.uleb128 0x4109
 3848 01eb 01       		.byte	0x1
 3849 01ec 11       		.uleb128 0x11
 3850 01ed 01       		.uleb128 0x1
 3851 01ee 31       		.uleb128 0x31
 3852 01ef 13       		.uleb128 0x13
 3853 01f0 01       		.uleb128 0x1
 3854 01f1 13       		.uleb128 0x13
 3855 01f2 00       		.byte	0
 3856 01f3 00       		.byte	0
 3857 01f4 26       		.uleb128 0x26
 3858 01f5 1D       		.uleb128 0x1d
 3859 01f6 00       		.byte	0
 3860 01f7 31       		.uleb128 0x31
 3861 01f8 13       		.uleb128 0x13
 3862 01f9 11       		.uleb128 0x11
 3863 01fa 01       		.uleb128 0x1
 3864 01fb 12       		.uleb128 0x12
 3865 01fc 06       		.uleb128 0x6
 3866 01fd 58       		.uleb128 0x58
 3867 01fe 0B       		.uleb128 0xb
 3868 01ff 59       		.uleb128 0x59
 3869 0200 05       		.uleb128 0x5
 3870 0201 00       		.byte	0
 3871 0202 00       		.byte	0
 3872 0203 27       		.uleb128 0x27
 3873 0204 2E       		.uleb128 0x2e
 3874 0205 01       		.byte	0x1
 3875 0206 03       		.uleb128 0x3
 3876 0207 0E       		.uleb128 0xe
 3877 0208 3A       		.uleb128 0x3a
 3878 0209 0B       		.uleb128 0xb
 3879 020a 3B       		.uleb128 0x3b
 3880 020b 05       		.uleb128 0x5
 3881 020c 27       		.uleb128 0x27
 3882 020d 19       		.uleb128 0x19
 3883 020e 49       		.uleb128 0x49
 3884 020f 13       		.uleb128 0x13
 3885 0210 11       		.uleb128 0x11
 3886 0211 01       		.uleb128 0x1
 3887 0212 12       		.uleb128 0x12
 3888 0213 06       		.uleb128 0x6
 3889 0214 40       		.uleb128 0x40
 3890 0215 18       		.uleb128 0x18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 119


 3891 0216 9742     		.uleb128 0x2117
 3892 0218 19       		.uleb128 0x19
 3893 0219 01       		.uleb128 0x1
 3894 021a 13       		.uleb128 0x13
 3895 021b 00       		.byte	0
 3896 021c 00       		.byte	0
 3897 021d 28       		.uleb128 0x28
 3898 021e 2E       		.uleb128 0x2e
 3899 021f 01       		.byte	0x1
 3900 0220 3F       		.uleb128 0x3f
 3901 0221 19       		.uleb128 0x19
 3902 0222 03       		.uleb128 0x3
 3903 0223 0E       		.uleb128 0xe
 3904 0224 3A       		.uleb128 0x3a
 3905 0225 0B       		.uleb128 0xb
 3906 0226 3B       		.uleb128 0x3b
 3907 0227 05       		.uleb128 0x5
 3908 0228 27       		.uleb128 0x27
 3909 0229 19       		.uleb128 0x19
 3910 022a 49       		.uleb128 0x49
 3911 022b 13       		.uleb128 0x13
 3912 022c 11       		.uleb128 0x11
 3913 022d 01       		.uleb128 0x1
 3914 022e 12       		.uleb128 0x12
 3915 022f 06       		.uleb128 0x6
 3916 0230 40       		.uleb128 0x40
 3917 0231 18       		.uleb128 0x18
 3918 0232 9642     		.uleb128 0x2116
 3919 0234 19       		.uleb128 0x19
 3920 0235 01       		.uleb128 0x1
 3921 0236 13       		.uleb128 0x13
 3922 0237 00       		.byte	0
 3923 0238 00       		.byte	0
 3924 0239 29       		.uleb128 0x29
 3925 023a 34       		.uleb128 0x34
 3926 023b 00       		.byte	0
 3927 023c 03       		.uleb128 0x3
 3928 023d 0E       		.uleb128 0xe
 3929 023e 3A       		.uleb128 0x3a
 3930 023f 0B       		.uleb128 0xb
 3931 0240 3B       		.uleb128 0x3b
 3932 0241 0B       		.uleb128 0xb
 3933 0242 49       		.uleb128 0x49
 3934 0243 13       		.uleb128 0x13
 3935 0244 02       		.uleb128 0x2
 3936 0245 18       		.uleb128 0x18
 3937 0246 00       		.byte	0
 3938 0247 00       		.byte	0
 3939 0248 2A       		.uleb128 0x2a
 3940 0249 34       		.uleb128 0x34
 3941 024a 00       		.byte	0
 3942 024b 03       		.uleb128 0x3
 3943 024c 0E       		.uleb128 0xe
 3944 024d 3A       		.uleb128 0x3a
 3945 024e 0B       		.uleb128 0xb
 3946 024f 3B       		.uleb128 0x3b
 3947 0250 05       		.uleb128 0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 120


 3948 0251 49       		.uleb128 0x49
 3949 0252 13       		.uleb128 0x13
 3950 0253 3F       		.uleb128 0x3f
 3951 0254 19       		.uleb128 0x19
 3952 0255 3C       		.uleb128 0x3c
 3953 0256 19       		.uleb128 0x19
 3954 0257 00       		.byte	0
 3955 0258 00       		.byte	0
 3956 0259 2B       		.uleb128 0x2b
 3957 025a 34       		.uleb128 0x34
 3958 025b 00       		.byte	0
 3959 025c 03       		.uleb128 0x3
 3960 025d 0E       		.uleb128 0xe
 3961 025e 3A       		.uleb128 0x3a
 3962 025f 0B       		.uleb128 0xb
 3963 0260 3B       		.uleb128 0x3b
 3964 0261 0B       		.uleb128 0xb
 3965 0262 49       		.uleb128 0x49
 3966 0263 13       		.uleb128 0x13
 3967 0264 3F       		.uleb128 0x3f
 3968 0265 19       		.uleb128 0x19
 3969 0266 3C       		.uleb128 0x3c
 3970 0267 19       		.uleb128 0x19
 3971 0268 00       		.byte	0
 3972 0269 00       		.byte	0
 3973 026a 2C       		.uleb128 0x2c
 3974 026b 34       		.uleb128 0x34
 3975 026c 00       		.byte	0
 3976 026d 03       		.uleb128 0x3
 3977 026e 0E       		.uleb128 0xe
 3978 026f 3A       		.uleb128 0x3a
 3979 0270 0B       		.uleb128 0xb
 3980 0271 3B       		.uleb128 0x3b
 3981 0272 0B       		.uleb128 0xb
 3982 0273 49       		.uleb128 0x49
 3983 0274 13       		.uleb128 0x13
 3984 0275 3F       		.uleb128 0x3f
 3985 0276 19       		.uleb128 0x19
 3986 0277 02       		.uleb128 0x2
 3987 0278 18       		.uleb128 0x18
 3988 0279 00       		.byte	0
 3989 027a 00       		.byte	0
 3990 027b 2D       		.uleb128 0x2d
 3991 027c 2E       		.uleb128 0x2e
 3992 027d 00       		.byte	0
 3993 027e 3F       		.uleb128 0x3f
 3994 027f 19       		.uleb128 0x19
 3995 0280 3C       		.uleb128 0x3c
 3996 0281 19       		.uleb128 0x19
 3997 0282 6E       		.uleb128 0x6e
 3998 0283 0E       		.uleb128 0xe
 3999 0284 03       		.uleb128 0x3
 4000 0285 0E       		.uleb128 0xe
 4001 0286 3A       		.uleb128 0x3a
 4002 0287 0B       		.uleb128 0xb
 4003 0288 3B       		.uleb128 0x3b
 4004 0289 0B       		.uleb128 0xb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 121


 4005 028a 00       		.byte	0
 4006 028b 00       		.byte	0
 4007 028c 00       		.byte	0
 4008              		.section	.debug_loc,"",%progbits
 4009              	.Ldebug_loc0:
 4010              	.LLST0:
 4011 0000 00000000 		.4byte	.LVL2
 4012 0004 14000000 		.4byte	.LVL5
 4013 0008 0100     		.2byte	0x1
 4014 000a 50       		.byte	0x50
 4015 000b 14000000 		.4byte	.LVL5
 4016 000f 42000000 		.4byte	.LFE20
 4017 0013 0400     		.2byte	0x4
 4018 0015 F3       		.byte	0xf3
 4019 0016 01       		.uleb128 0x1
 4020 0017 50       		.byte	0x50
 4021 0018 9F       		.byte	0x9f
 4022 0019 00000000 		.4byte	0
 4023 001d 00000000 		.4byte	0
 4024              	.LLST1:
 4025 0021 00000000 		.4byte	.LVL2
 4026 0025 16000000 		.4byte	.LVL6
 4027 0029 0100     		.2byte	0x1
 4028 002b 51       		.byte	0x51
 4029 002c 16000000 		.4byte	.LVL6
 4030 0030 40000000 		.4byte	.LVL19
 4031 0034 0100     		.2byte	0x1
 4032 0036 56       		.byte	0x56
 4033 0037 40000000 		.4byte	.LVL19
 4034 003b 42000000 		.4byte	.LFE20
 4035 003f 0400     		.2byte	0x4
 4036 0041 F3       		.byte	0xf3
 4037 0042 01       		.uleb128 0x1
 4038 0043 51       		.byte	0x51
 4039 0044 9F       		.byte	0x9f
 4040 0045 00000000 		.4byte	0
 4041 0049 00000000 		.4byte	0
 4042              	.LLST2:
 4043 004d 00000000 		.4byte	.LVL2
 4044 0051 19000000 		.4byte	.LVL7-1
 4045 0055 0100     		.2byte	0x1
 4046 0057 52       		.byte	0x52
 4047 0058 19000000 		.4byte	.LVL7-1
 4048 005c 40000000 		.4byte	.LVL18
 4049 0060 0100     		.2byte	0x1
 4050 0062 55       		.byte	0x55
 4051 0063 40000000 		.4byte	.LVL18
 4052 0067 42000000 		.4byte	.LFE20
 4053 006b 0400     		.2byte	0x4
 4054 006d F3       		.byte	0xf3
 4055 006e 01       		.uleb128 0x1
 4056 006f 52       		.byte	0x52
 4057 0070 9F       		.byte	0x9f
 4058 0071 00000000 		.4byte	0
 4059 0075 00000000 		.4byte	0
 4060              	.LLST3:
 4061 0079 1C000000 		.4byte	.LVL8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 122


 4062 007d 2A000000 		.4byte	.LVL10
 4063 0081 0100     		.2byte	0x1
 4064 0083 50       		.byte	0x50
 4065 0084 2C000000 		.4byte	.LVL11
 4066 0088 2E000000 		.4byte	.LVL12
 4067 008c 0100     		.2byte	0x1
 4068 008e 50       		.byte	0x50
 4069 008f 00000000 		.4byte	0
 4070 0093 00000000 		.4byte	0
 4071              	.LLST4:
 4072 0097 06000000 		.4byte	.LVL3
 4073 009b 2A000000 		.4byte	.LVL10
 4074 009f 0200     		.2byte	0x2
 4075 00a1 30       		.byte	0x30
 4076 00a2 9F       		.byte	0x9f
 4077 00a3 2A000000 		.4byte	.LVL10
 4078 00a7 2C000000 		.4byte	.LVL11
 4079 00ab 0100     		.2byte	0x1
 4080 00ad 50       		.byte	0x50
 4081 00ae 2C000000 		.4byte	.LVL11
 4082 00b2 2E000000 		.4byte	.LVL12
 4083 00b6 0200     		.2byte	0x2
 4084 00b8 30       		.byte	0x30
 4085 00b9 9F       		.byte	0x9f
 4086 00ba 2E000000 		.4byte	.LVL12
 4087 00be 38000000 		.4byte	.LVL13
 4088 00c2 0100     		.2byte	0x1
 4089 00c4 50       		.byte	0x50
 4090 00c5 3A000000 		.4byte	.LVL14
 4091 00c9 3C000000 		.4byte	.LVL15
 4092 00cd 0100     		.2byte	0x1
 4093 00cf 50       		.byte	0x50
 4094 00d0 3E000000 		.4byte	.LVL16
 4095 00d4 40000000 		.4byte	.LVL17
 4096 00d8 0100     		.2byte	0x1
 4097 00da 50       		.byte	0x50
 4098 00db 00000000 		.4byte	0
 4099 00df 00000000 		.4byte	0
 4100              	.LLST5:
 4101 00e3 0E000000 		.4byte	.LVL4
 4102 00e7 24000000 		.4byte	.LVL9
 4103 00eb 0100     		.2byte	0x1
 4104 00ed 54       		.byte	0x54
 4105 00ee 24000000 		.4byte	.LVL9
 4106 00f2 42000000 		.4byte	.LFE20
 4107 00f6 0100     		.2byte	0x1
 4108 00f8 53       		.byte	0x53
 4109 00f9 00000000 		.4byte	0
 4110 00fd 00000000 		.4byte	0
 4111              	.LLST6:
 4112 0101 00000000 		.4byte	.LVL20
 4113 0105 0C000000 		.4byte	.LVL21
 4114 0109 0100     		.2byte	0x1
 4115 010b 50       		.byte	0x50
 4116 010c 0C000000 		.4byte	.LVL21
 4117 0110 1C000000 		.4byte	.LFE2
 4118 0114 0400     		.2byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 123


 4119 0116 F3       		.byte	0xf3
 4120 0117 01       		.uleb128 0x1
 4121 0118 50       		.byte	0x50
 4122 0119 9F       		.byte	0x9f
 4123 011a 00000000 		.4byte	0
 4124 011e 00000000 		.4byte	0
 4125              	.LLST7:
 4126 0122 00000000 		.4byte	.LVL20
 4127 0126 13000000 		.4byte	.LVL22-1
 4128 012a 0100     		.2byte	0x1
 4129 012c 51       		.byte	0x51
 4130 012d 13000000 		.4byte	.LVL22-1
 4131 0131 1C000000 		.4byte	.LFE2
 4132 0135 0400     		.2byte	0x4
 4133 0137 F3       		.byte	0xf3
 4134 0138 01       		.uleb128 0x1
 4135 0139 51       		.byte	0x51
 4136 013a 9F       		.byte	0x9f
 4137 013b 00000000 		.4byte	0
 4138 013f 00000000 		.4byte	0
 4139              	.LLST8:
 4140 0143 0E000000 		.4byte	.LVL25
 4141 0147 1A000000 		.4byte	.LVL28
 4142 014b 0100     		.2byte	0x1
 4143 014d 53       		.byte	0x53
 4144 014e 1A000000 		.4byte	.LVL28
 4145 0152 24000000 		.4byte	.LVL29
 4146 0156 0200     		.2byte	0x2
 4147 0158 71       		.byte	0x71
 4148 0159 00       		.sleb128 0
 4149 015a 00000000 		.4byte	0
 4150 015e 00000000 		.4byte	0
 4151              	.LLST9:
 4152 0162 00000000 		.4byte	.LVL30
 4153 0166 04000000 		.4byte	.LVL31
 4154 016a 0100     		.2byte	0x1
 4155 016c 50       		.byte	0x50
 4156 016d 04000000 		.4byte	.LVL31
 4157 0171 09000000 		.4byte	.LVL33-1
 4158 0175 0300     		.2byte	0x3
 4159 0177 70       		.byte	0x70
 4160 0178 77       		.sleb128 -9
 4161 0179 9F       		.byte	0x9f
 4162 017a 09000000 		.4byte	.LVL33-1
 4163 017e 1A000000 		.4byte	.LVL36
 4164 0182 0300     		.2byte	0x3
 4165 0184 74       		.byte	0x74
 4166 0185 77       		.sleb128 -9
 4167 0186 9F       		.byte	0x9f
 4168 0187 1A000000 		.4byte	.LVL36
 4169 018b 40000000 		.4byte	.LFE6
 4170 018f 0400     		.2byte	0x4
 4171 0191 F3       		.byte	0xf3
 4172 0192 01       		.uleb128 0x1
 4173 0193 50       		.byte	0x50
 4174 0194 9F       		.byte	0x9f
 4175 0195 00000000 		.4byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 124


 4176 0199 00000000 		.4byte	0
 4177              	.LLST10:
 4178 019d 0A000000 		.4byte	.LVL33
 4179 01a1 2B000000 		.4byte	.LVL38-1
 4180 01a5 0100     		.2byte	0x1
 4181 01a7 50       		.byte	0x50
 4182 01a8 00000000 		.4byte	0
 4183 01ac 00000000 		.4byte	0
 4184              	.LLST11:
 4185 01b0 0E000000 		.4byte	.LVL34
 4186 01b4 26000000 		.4byte	.LVL37
 4187 01b8 0100     		.2byte	0x1
 4188 01ba 51       		.byte	0x51
 4189 01bb 26000000 		.4byte	.LVL37
 4190 01bf 2B000000 		.4byte	.LVL38-1
 4191 01c3 0100     		.2byte	0x1
 4192 01c5 53       		.byte	0x53
 4193 01c6 00000000 		.4byte	0
 4194 01ca 00000000 		.4byte	0
 4195              	.LLST12:
 4196 01ce 06000000 		.4byte	.LVL32
 4197 01d2 09000000 		.4byte	.LVL33-1
 4198 01d6 0100     		.2byte	0x1
 4199 01d8 50       		.byte	0x50
 4200 01d9 09000000 		.4byte	.LVL33-1
 4201 01dd 1A000000 		.4byte	.LVL36
 4202 01e1 0100     		.2byte	0x1
 4203 01e3 54       		.byte	0x54
 4204 01e4 1A000000 		.4byte	.LVL36
 4205 01e8 40000000 		.4byte	.LFE6
 4206 01ec 0600     		.2byte	0x6
 4207 01ee F3       		.byte	0xf3
 4208 01ef 01       		.uleb128 0x1
 4209 01f0 50       		.byte	0x50
 4210 01f1 23       		.byte	0x23
 4211 01f2 09       		.uleb128 0x9
 4212 01f3 9F       		.byte	0x9f
 4213 01f4 00000000 		.4byte	0
 4214 01f8 00000000 		.4byte	0
 4215              	.LLST13:
 4216 01fc 10000000 		.4byte	.LVL40
 4217 0200 23000000 		.4byte	.LVL45-1
 4218 0204 0100     		.2byte	0x1
 4219 0206 51       		.byte	0x51
 4220 0207 00000000 		.4byte	0
 4221 020b 00000000 		.4byte	0
 4222              	.LLST14:
 4223 020f 12000000 		.4byte	.LVL41
 4224 0213 23000000 		.4byte	.LVL45-1
 4225 0217 0100     		.2byte	0x1
 4226 0219 50       		.byte	0x50
 4227 021a 00000000 		.4byte	0
 4228 021e 00000000 		.4byte	0
 4229              	.LLST16:
 4230 0222 0E000000 		.4byte	.LVL39
 4231 0226 14000000 		.4byte	.LVL42
 4232 022a 0100     		.2byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 125


 4233 022c 53       		.byte	0x53
 4234 022d 00000000 		.4byte	0
 4235 0231 00000000 		.4byte	0
 4236              	.LLST17:
 4237 0235 08000000 		.4byte	.LVL48
 4238 0239 80000000 		.4byte	.LVL64
 4239 023d 0100     		.2byte	0x1
 4240 023f 54       		.byte	0x54
 4241 0240 00000000 		.4byte	0
 4242 0244 00000000 		.4byte	0
 4243              	.LLST18:
 4244 0248 34000000 		.4byte	.LVL50
 4245 024c 5E000000 		.4byte	.LVL59
 4246 0250 0100     		.2byte	0x1
 4247 0252 55       		.byte	0x55
 4248 0253 5E000000 		.4byte	.LVL59
 4249 0257 68000000 		.4byte	.LVL60
 4250 025b 0200     		.2byte	0x2
 4251 025d 76       		.byte	0x76
 4252 025e 00       		.sleb128 0
 4253 025f 00000000 		.4byte	0
 4254 0263 00000000 		.4byte	0
 4255              	.LLST19:
 4256 0267 42000000 		.4byte	.LVL52
 4257 026b 46000000 		.4byte	.LVL54
 4258 026f 0100     		.2byte	0x1
 4259 0271 53       		.byte	0x53
 4260 0272 46000000 		.4byte	.LVL54
 4261 0276 5C000000 		.4byte	.LVL58
 4262 027a 0200     		.2byte	0x2
 4263 027c 76       		.byte	0x76
 4264 027d 00       		.sleb128 0
 4265 027e 5C000000 		.4byte	.LVL58
 4266 0282 5E000000 		.4byte	.LVL59
 4267 0286 1000     		.2byte	0x10
 4268 0288 75       		.byte	0x75
 4269 0289 00       		.sleb128 0
 4270 028a 11       		.byte	0x11
 4271 028b 80D0FFFF 		.sleb128 -1073747968
 4271      7B
 4272 0290 1A       		.byte	0x1a
 4273 0291 0C       		.byte	0xc
 4274 0292 F0060040 		.4byte	0x400006f0
 4275 0296 21       		.byte	0x21
 4276 0297 9F       		.byte	0x9f
 4277 0298 5E000000 		.4byte	.LVL59
 4278 029c 68000000 		.4byte	.LVL60
 4279 02a0 1100     		.2byte	0x11
 4280 02a2 76       		.byte	0x76
 4281 02a3 00       		.sleb128 0
 4282 02a4 06       		.byte	0x6
 4283 02a5 11       		.byte	0x11
 4284 02a6 80D0FFFF 		.sleb128 -1073747968
 4284      7B
 4285 02ab 1A       		.byte	0x1a
 4286 02ac 0C       		.byte	0xc
 4287 02ad F0060040 		.4byte	0x400006f0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 126


 4288 02b1 21       		.byte	0x21
 4289 02b2 9F       		.byte	0x9f
 4290 02b3 00000000 		.4byte	0
 4291 02b7 00000000 		.4byte	0
 4292              	.LLST20:
 4293 02bb 44000000 		.4byte	.LVL53
 4294 02bf 4A000000 		.4byte	.LVL55
 4295 02c3 0400     		.2byte	0x4
 4296 02c5 0A       		.byte	0xa
 4297 02c6 00E1     		.2byte	0xe100
 4298 02c8 9F       		.byte	0x9f
 4299 02c9 4A000000 		.4byte	.LVL55
 4300 02cd 5A000000 		.4byte	.LVL57
 4301 02d1 0100     		.2byte	0x1
 4302 02d3 53       		.byte	0x53
 4303 02d4 00000000 		.4byte	0
 4304 02d8 00000000 		.4byte	0
 4305              	.LLST21:
 4306 02dc 00000000 		.4byte	.LVL66
 4307 02e0 0B000000 		.4byte	.LVL69-1
 4308 02e4 0100     		.2byte	0x1
 4309 02e6 50       		.byte	0x50
 4310 02e7 0B000000 		.4byte	.LVL69-1
 4311 02eb 32000000 		.4byte	.LVL76
 4312 02ef 0100     		.2byte	0x1
 4313 02f1 54       		.byte	0x54
 4314 02f2 32000000 		.4byte	.LVL76
 4315 02f6 34000000 		.4byte	.LFE16
 4316 02fa 0400     		.2byte	0x4
 4317 02fc F3       		.byte	0xf3
 4318 02fd 01       		.uleb128 0x1
 4319 02fe 50       		.byte	0x50
 4320 02ff 9F       		.byte	0x9f
 4321 0300 00000000 		.4byte	0
 4322 0304 00000000 		.4byte	0
 4323              	.LLST22:
 4324 0308 10000000 		.4byte	.LVL70
 4325 030c 16000000 		.4byte	.LVL71
 4326 0310 0100     		.2byte	0x1
 4327 0312 53       		.byte	0x53
 4328 0313 18000000 		.4byte	.LVL72
 4329 0317 1E000000 		.4byte	.LVL73
 4330 031b 0100     		.2byte	0x1
 4331 031d 52       		.byte	0x52
 4332 031e 1E000000 		.4byte	.LVL73
 4333 0322 31000000 		.4byte	.LVL75-1
 4334 0326 0100     		.2byte	0x1
 4335 0328 53       		.byte	0x53
 4336 0329 00000000 		.4byte	0
 4337 032d 00000000 		.4byte	0
 4338              	.LLST23:
 4339 0331 0C000000 		.4byte	.LVL69
 4340 0335 31000000 		.4byte	.LVL75-1
 4341 0339 0100     		.2byte	0x1
 4342 033b 50       		.byte	0x50
 4343 033c 00000000 		.4byte	0
 4344 0340 00000000 		.4byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 127


 4345              	.LLST24:
 4346 0344 06000000 		.4byte	.LVL67
 4347 0348 32000000 		.4byte	.LVL77
 4348 034c 0100     		.2byte	0x1
 4349 034e 55       		.byte	0x55
 4350 034f 00000000 		.4byte	0
 4351 0353 00000000 		.4byte	0
 4352              	.LLST25:
 4353 0357 08000000 		.4byte	.LVL68
 4354 035b 20000000 		.4byte	.LVL74
 4355 035f 0100     		.2byte	0x1
 4356 0361 56       		.byte	0x56
 4357 0362 00000000 		.4byte	0
 4358 0366 00000000 		.4byte	0
 4359              	.LLST26:
 4360 036a 0E000000 		.4byte	.LVL78
 4361 036e 2F000000 		.4byte	.LVL79-1
 4362 0372 0100     		.2byte	0x1
 4363 0374 50       		.byte	0x50
 4364 0375 00000000 		.4byte	0
 4365 0379 00000000 		.4byte	0
 4366              	.LLST27:
 4367 037d 00000000 		.4byte	.LVL83
 4368 0381 04000000 		.4byte	.LVL84
 4369 0385 0100     		.2byte	0x1
 4370 0387 50       		.byte	0x50
 4371 0388 04000000 		.4byte	.LVL84
 4372 038c 24000000 		.4byte	.LFE14
 4373 0390 0400     		.2byte	0x4
 4374 0392 F3       		.byte	0xf3
 4375 0393 01       		.uleb128 0x1
 4376 0394 50       		.byte	0x50
 4377 0395 9F       		.byte	0x9f
 4378 0396 00000000 		.4byte	0
 4379 039a 00000000 		.4byte	0
 4380              	.LLST28:
 4381 039e 00000000 		.4byte	.LVL83
 4382 03a2 0C000000 		.4byte	.LVL85
 4383 03a6 0100     		.2byte	0x1
 4384 03a8 51       		.byte	0x51
 4385 03a9 0C000000 		.4byte	.LVL85
 4386 03ad 24000000 		.4byte	.LFE14
 4387 03b1 0400     		.2byte	0x4
 4388 03b3 F3       		.byte	0xf3
 4389 03b4 01       		.uleb128 0x1
 4390 03b5 51       		.byte	0x51
 4391 03b6 9F       		.byte	0x9f
 4392 03b7 00000000 		.4byte	0
 4393 03bb 00000000 		.4byte	0
 4394              	.LLST29:
 4395 03bf 00000000 		.4byte	.LVL87
 4396 03c3 06000000 		.4byte	.LVL88
 4397 03c7 0100     		.2byte	0x1
 4398 03c9 50       		.byte	0x50
 4399 03ca 06000000 		.4byte	.LVL88
 4400 03ce 3E000000 		.4byte	.LVL96
 4401 03d2 0100     		.2byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 128


 4402 03d4 54       		.byte	0x54
 4403 03d5 3E000000 		.4byte	.LVL96
 4404 03d9 40000000 		.4byte	.LFE17
 4405 03dd 0400     		.2byte	0x4
 4406 03df F3       		.byte	0xf3
 4407 03e0 01       		.uleb128 0x1
 4408 03e1 50       		.byte	0x50
 4409 03e2 9F       		.byte	0x9f
 4410 03e3 00000000 		.4byte	0
 4411 03e7 00000000 		.4byte	0
 4412              	.LLST30:
 4413 03eb 06000000 		.4byte	.LVL88
 4414 03ef 17000000 		.4byte	.LVL90-1
 4415 03f3 0100     		.2byte	0x1
 4416 03f5 50       		.byte	0x50
 4417 03f6 00000000 		.4byte	0
 4418 03fa 00000000 		.4byte	0
 4419              	.LLST31:
 4420 03fe 1C000000 		.4byte	.LVL91
 4421 0402 22000000 		.4byte	.LVL92
 4422 0406 0100     		.2byte	0x1
 4423 0408 53       		.byte	0x53
 4424 0409 24000000 		.4byte	.LVL93
 4425 040d 2A000000 		.4byte	.LVL94
 4426 0411 0100     		.2byte	0x1
 4427 0413 52       		.byte	0x52
 4428 0414 2A000000 		.4byte	.LVL94
 4429 0418 2F000000 		.4byte	.LVL95-1
 4430 041c 0100     		.2byte	0x1
 4431 041e 53       		.byte	0x53
 4432 041f 00000000 		.4byte	0
 4433 0423 00000000 		.4byte	0
 4434              	.LLST32:
 4435 0427 08000000 		.4byte	.LVL89
 4436 042b 3E000000 		.4byte	.LVL97
 4437 042f 0100     		.2byte	0x1
 4438 0431 55       		.byte	0x55
 4439 0432 00000000 		.4byte	0
 4440 0436 00000000 		.4byte	0
 4441              	.LLST33:
 4442 043a 18000000 		.4byte	.LVL90
 4443 043e 2F000000 		.4byte	.LVL95-1
 4444 0442 0100     		.2byte	0x1
 4445 0444 50       		.byte	0x50
 4446 0445 00000000 		.4byte	0
 4447 0449 00000000 		.4byte	0
 4448              	.LLST34:
 4449 044d 00000000 		.4byte	.LVL99
 4450 0451 0C000000 		.4byte	.LVL101
 4451 0455 0100     		.2byte	0x1
 4452 0457 50       		.byte	0x50
 4453 0458 0C000000 		.4byte	.LVL101
 4454 045c 54000000 		.4byte	.LFE9
 4455 0460 0400     		.2byte	0x4
 4456 0462 F3       		.byte	0xf3
 4457 0463 01       		.uleb128 0x1
 4458 0464 50       		.byte	0x50
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 129


 4459 0465 9F       		.byte	0x9f
 4460 0466 00000000 		.4byte	0
 4461 046a 00000000 		.4byte	0
 4462              	.LLST35:
 4463 046e 0A000000 		.4byte	.LVL100
 4464 0472 40000000 		.4byte	.LVL106
 4465 0476 0100     		.2byte	0x1
 4466 0478 55       		.byte	0x55
 4467 0479 40000000 		.4byte	.LVL106
 4468 047d 40000000 		.4byte	.LVL107
 4469 0481 0A00     		.2byte	0xa
 4470 0483 F3       		.byte	0xf3
 4471 0484 01       		.uleb128 0x1
 4472 0485 50       		.byte	0x50
 4473 0486 35       		.byte	0x35
 4474 0487 24       		.byte	0x24
 4475 0488 76       		.byte	0x76
 4476 0489 00       		.sleb128 0
 4477 048a 22       		.byte	0x22
 4478 048b 23       		.byte	0x23
 4479 048c 04       		.uleb128 0x4
 4480 048d 00000000 		.4byte	0
 4481 0491 00000000 		.4byte	0
 4482              	.LLST36:
 4483 0495 00000000 		.4byte	.LVL108
 4484 0499 25000000 		.4byte	.LVL111-1
 4485 049d 0100     		.2byte	0x1
 4486 049f 50       		.byte	0x50
 4487 04a0 25000000 		.4byte	.LVL111-1
 4488 04a4 6C000000 		.4byte	.LFE10
 4489 04a8 0400     		.2byte	0x4
 4490 04aa F3       		.byte	0xf3
 4491 04ab 01       		.uleb128 0x1
 4492 04ac 50       		.byte	0x50
 4493 04ad 9F       		.byte	0x9f
 4494 04ae 00000000 		.4byte	0
 4495 04b2 00000000 		.4byte	0
 4496              	.LLST37:
 4497 04b6 00000000 		.4byte	.LVL108
 4498 04ba 0C000000 		.4byte	.LVL110
 4499 04be 0100     		.2byte	0x1
 4500 04c0 51       		.byte	0x51
 4501 04c1 0C000000 		.4byte	.LVL110
 4502 04c5 6C000000 		.4byte	.LFE10
 4503 04c9 0400     		.2byte	0x4
 4504 04cb F3       		.byte	0xf3
 4505 04cc 01       		.uleb128 0x1
 4506 04cd 51       		.byte	0x51
 4507 04ce 9F       		.byte	0x9f
 4508 04cf 00000000 		.4byte	0
 4509 04d3 00000000 		.4byte	0
 4510              	.LLST38:
 4511 04d7 0A000000 		.4byte	.LVL109
 4512 04db 50000000 		.4byte	.LVL115
 4513 04df 0100     		.2byte	0x1
 4514 04e1 55       		.byte	0x55
 4515 04e2 00000000 		.4byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 130


 4516 04e6 00000000 		.4byte	0
 4517              	.LLST39:
 4518 04ea 00000000 		.4byte	.LVL116
 4519 04ee 04000000 		.4byte	.LVL117
 4520 04f2 0100     		.2byte	0x1
 4521 04f4 50       		.byte	0x50
 4522 04f5 04000000 		.4byte	.LVL117
 4523 04f9 24000000 		.4byte	.LFE15
 4524 04fd 0400     		.2byte	0x4
 4525 04ff F3       		.byte	0xf3
 4526 0500 01       		.uleb128 0x1
 4527 0501 50       		.byte	0x50
 4528 0502 9F       		.byte	0x9f
 4529 0503 00000000 		.4byte	0
 4530 0507 00000000 		.4byte	0
 4531              	.LLST40:
 4532 050b 00000000 		.4byte	.LVL116
 4533 050f 0C000000 		.4byte	.LVL118
 4534 0513 0100     		.2byte	0x1
 4535 0515 51       		.byte	0x51
 4536 0516 0C000000 		.4byte	.LVL118
 4537 051a 24000000 		.4byte	.LFE15
 4538 051e 0400     		.2byte	0x4
 4539 0520 F3       		.byte	0xf3
 4540 0521 01       		.uleb128 0x1
 4541 0522 51       		.byte	0x51
 4542 0523 9F       		.byte	0x9f
 4543 0524 00000000 		.4byte	0
 4544 0528 00000000 		.4byte	0
 4545              	.LLST41:
 4546 052c 00000000 		.4byte	.LVL120
 4547 0530 22000000 		.4byte	.LVL126
 4548 0534 0100     		.2byte	0x1
 4549 0536 50       		.byte	0x50
 4550 0537 22000000 		.4byte	.LVL126
 4551 053b C4000000 		.4byte	.LVL143
 4552 053f 0100     		.2byte	0x1
 4553 0541 57       		.byte	0x57
 4554 0542 C4000000 		.4byte	.LVL143
 4555 0546 EC000000 		.4byte	.LFE21
 4556 054a 0400     		.2byte	0x4
 4557 054c F3       		.byte	0xf3
 4558 054d 01       		.uleb128 0x1
 4559 054e 50       		.byte	0x50
 4560 054f 9F       		.byte	0x9f
 4561 0550 00000000 		.4byte	0
 4562 0554 00000000 		.4byte	0
 4563              	.LLST42:
 4564 0558 00000000 		.4byte	.LVL120
 4565 055c 16000000 		.4byte	.LVL123
 4566 0560 0100     		.2byte	0x1
 4567 0562 51       		.byte	0x51
 4568 0563 16000000 		.4byte	.LVL123
 4569 0567 C4000000 		.4byte	.LVL142
 4570 056b 0100     		.2byte	0x1
 4571 056d 56       		.byte	0x56
 4572 056e C4000000 		.4byte	.LVL142
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 131


 4573 0572 EC000000 		.4byte	.LFE21
 4574 0576 0400     		.2byte	0x4
 4575 0578 F3       		.byte	0xf3
 4576 0579 01       		.uleb128 0x1
 4577 057a 51       		.byte	0x51
 4578 057b 9F       		.byte	0x9f
 4579 057c 00000000 		.4byte	0
 4580 0580 00000000 		.4byte	0
 4581              	.LLST43:
 4582 0584 00000000 		.4byte	.LVL120
 4583 0588 10000000 		.4byte	.LVL122
 4584 058c 0100     		.2byte	0x1
 4585 058e 52       		.byte	0x52
 4586 058f 10000000 		.4byte	.LVL122
 4587 0593 C4000000 		.4byte	.LVL144
 4588 0597 0100     		.2byte	0x1
 4589 0599 58       		.byte	0x58
 4590 059a C4000000 		.4byte	.LVL144
 4591 059e EC000000 		.4byte	.LFE21
 4592 05a2 0400     		.2byte	0x4
 4593 05a4 F3       		.byte	0xf3
 4594 05a5 01       		.uleb128 0x1
 4595 05a6 52       		.byte	0x52
 4596 05a7 9F       		.byte	0x9f
 4597 05a8 00000000 		.4byte	0
 4598 05ac 00000000 		.4byte	0
 4599              	.LLST44:
 4600 05b0 0E000000 		.4byte	.LVL121
 4601 05b4 38000000 		.4byte	.LVL129
 4602 05b8 0400     		.2byte	0x4
 4603 05ba 0A       		.byte	0xa
 4604 05bb 0001     		.2byte	0x100
 4605 05bd 9F       		.byte	0x9f
 4606 05be 38000000 		.4byte	.LVL129
 4607 05c2 C4000000 		.4byte	.LVL141
 4608 05c6 0100     		.2byte	0x1
 4609 05c8 55       		.byte	0x55
 4610 05c9 00000000 		.4byte	0
 4611 05cd 00000000 		.4byte	0
 4612              	.LLST45:
 4613 05d1 54000000 		.4byte	.LVL132
 4614 05d5 5A000000 		.4byte	.LVL133
 4615 05d9 0400     		.2byte	0x4
 4616 05db 0A       		.byte	0xa
 4617 05dc 00E1     		.2byte	0xe100
 4618 05de 9F       		.byte	0x9f
 4619 05df 5A000000 		.4byte	.LVL133
 4620 05e3 6A000000 		.4byte	.LVL135
 4621 05e7 0100     		.2byte	0x1
 4622 05e9 53       		.byte	0x53
 4623 05ea 00000000 		.4byte	0
 4624 05ee 00000000 		.4byte	0
 4625              	.LLST46:
 4626 05f2 0E000000 		.4byte	.LVL121
 4627 05f6 38000000 		.4byte	.LVL129
 4628 05fa 0200     		.2byte	0x2
 4629 05fc 30       		.byte	0x30
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 132


 4630 05fd 9F       		.byte	0x9f
 4631 05fe 38000000 		.4byte	.LVL129
 4632 0602 C4000000 		.4byte	.LVL140
 4633 0606 0100     		.2byte	0x1
 4634 0608 54       		.byte	0x54
 4635 0609 00000000 		.4byte	0
 4636 060d 00000000 		.4byte	0
 4637              	.LLST47:
 4638 0611 1C000000 		.4byte	.LVL124
 4639 0615 1E000000 		.4byte	.LVL125
 4640 0619 0100     		.2byte	0x1
 4641 061b 53       		.byte	0x53
 4642 061c 1E000000 		.4byte	.LVL125
 4643 0620 EC000000 		.4byte	.LFE21
 4644 0624 0200     		.2byte	0x2
 4645 0626 91       		.byte	0x91
 4646 0627 64       		.sleb128 -28
 4647 0628 00000000 		.4byte	0
 4648 062c 00000000 		.4byte	0
 4649              	.LLST48:
 4650 0630 00000000 		.4byte	.LVL145
 4651 0634 1E000000 		.4byte	.LVL148
 4652 0638 0100     		.2byte	0x1
 4653 063a 50       		.byte	0x50
 4654 063b 1E000000 		.4byte	.LVL148
 4655 063f E8000000 		.4byte	.LVL163
 4656 0643 0100     		.2byte	0x1
 4657 0645 54       		.byte	0x54
 4658 0646 E8000000 		.4byte	.LVL163
 4659 064a 08010000 		.4byte	.LFE22
 4660 064e 0400     		.2byte	0x4
 4661 0650 F3       		.byte	0xf3
 4662 0651 01       		.uleb128 0x1
 4663 0652 50       		.byte	0x50
 4664 0653 9F       		.byte	0x9f
 4665 0654 00000000 		.4byte	0
 4666 0658 00000000 		.4byte	0
 4667              	.LLST49:
 4668 065c 00000000 		.4byte	.LVL145
 4669 0660 26000000 		.4byte	.LVL151
 4670 0664 0100     		.2byte	0x1
 4671 0666 51       		.byte	0x51
 4672 0667 26000000 		.4byte	.LVL151
 4673 066b E8000000 		.4byte	.LVL166
 4674 066f 0100     		.2byte	0x1
 4675 0671 59       		.byte	0x59
 4676 0672 E8000000 		.4byte	.LVL166
 4677 0676 08010000 		.4byte	.LFE22
 4678 067a 0400     		.2byte	0x4
 4679 067c F3       		.byte	0xf3
 4680 067d 01       		.uleb128 0x1
 4681 067e 51       		.byte	0x51
 4682 067f 9F       		.byte	0x9f
 4683 0680 00000000 		.4byte	0
 4684 0684 00000000 		.4byte	0
 4685              	.LLST50:
 4686 0688 22000000 		.4byte	.LVL149
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 133


 4687 068c 24000000 		.4byte	.LVL150
 4688 0690 0100     		.2byte	0x1
 4689 0692 50       		.byte	0x50
 4690 0693 24000000 		.4byte	.LVL150
 4691 0697 29000000 		.4byte	.LVL152-1
 4692 069b 0800     		.2byte	0x8
 4693 069d 75       		.byte	0x75
 4694 069e 00       		.sleb128 0
 4695 069f 73       		.byte	0x73
 4696 06a0 00       		.sleb128 0
 4697 06a1 24       		.byte	0x24
 4698 06a2 31       		.byte	0x31
 4699 06a3 1C       		.byte	0x1c
 4700 06a4 9F       		.byte	0x9f
 4701 06a5 2C000000 		.4byte	.LVL153
 4702 06a9 34000000 		.4byte	.LVL154
 4703 06ad 0100     		.2byte	0x1
 4704 06af 50       		.byte	0x50
 4705 06b0 34000000 		.4byte	.LVL154
 4706 06b4 08010000 		.4byte	.LFE22
 4707 06b8 0200     		.2byte	0x2
 4708 06ba 91       		.byte	0x91
 4709 06bb 5C       		.sleb128 -36
 4710 06bc 00000000 		.4byte	0
 4711 06c0 00000000 		.4byte	0
 4712              	.LLST51:
 4713 06c4 0C000000 		.4byte	.LVL146
 4714 06c8 4C000000 		.4byte	.LVL157
 4715 06cc 0200     		.2byte	0x2
 4716 06ce 30       		.byte	0x30
 4717 06cf 9F       		.byte	0x9f
 4718 06d0 4C000000 		.4byte	.LVL157
 4719 06d4 E8000000 		.4byte	.LVL164
 4720 06d8 0100     		.2byte	0x1
 4721 06da 55       		.byte	0x55
 4722 06db E8000000 		.4byte	.LVL164
 4723 06df 08010000 		.4byte	.LFE22
 4724 06e3 0100     		.2byte	0x1
 4725 06e5 50       		.byte	0x50
 4726 06e6 00000000 		.4byte	0
 4727 06ea 00000000 		.4byte	0
 4728              	.LLST52:
 4729 06ee 14000000 		.4byte	.LVL147
 4730 06f2 E8000000 		.4byte	.LVL165
 4731 06f6 0100     		.2byte	0x1
 4732 06f8 57       		.byte	0x57
 4733 06f9 00000000 		.4byte	0
 4734 06fd 00000000 		.4byte	0
 4735              	.LLST53:
 4736 0701 3C000000 		.4byte	.LVL156
 4737 0705 86000000 		.4byte	.LVL161
 4738 0709 0100     		.2byte	0x1
 4739 070b 56       		.byte	0x56
 4740 070c 86000000 		.4byte	.LVL161
 4741 0710 E8000000 		.4byte	.LVL165
 4742 0714 0300     		.2byte	0x3
 4743 0716 77       		.byte	0x77
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 134


 4744 0717 09       		.sleb128 9
 4745 0718 9F       		.byte	0x9f
 4746 0719 00000000 		.4byte	0
 4747 071d 00000000 		.4byte	0
 4748              		.section	.debug_aranges,"",%progbits
 4749 0000 BC000000 		.4byte	0xbc
 4750 0004 0200     		.2byte	0x2
 4751 0006 00000000 		.4byte	.Ldebug_info0
 4752 000a 04       		.byte	0x4
 4753 000b 00       		.byte	0
 4754 000c 0000     		.2byte	0
 4755 000e 0000     		.2byte	0
 4756 0010 00000000 		.4byte	.LFB3
 4757 0014 10000000 		.4byte	.LFE3-.LFB3
 4758 0018 00000000 		.4byte	.LFB18
 4759 001c 1C000000 		.4byte	.LFE18-.LFB18
 4760 0020 00000000 		.4byte	.LFB19
 4761 0024 10000000 		.4byte	.LFE19-.LFB19
 4762 0028 00000000 		.4byte	.LFB20
 4763 002c 42000000 		.4byte	.LFE20-.LFB20
 4764 0030 00000000 		.4byte	.LFB2
 4765 0034 1C000000 		.4byte	.LFE2-.LFB2
 4766 0038 00000000 		.4byte	.LFB4
 4767 003c 38000000 		.4byte	.LFE4-.LFB4
 4768 0040 00000000 		.4byte	.LFB6
 4769 0044 40000000 		.4byte	.LFE6-.LFB6
 4770 0048 00000000 		.4byte	.LFB7
 4771 004c 30000000 		.4byte	.LFE7-.LFB7
 4772 0050 00000000 		.4byte	.LFB8
 4773 0054 14000000 		.4byte	.LFE8-.LFB8
 4774 0058 00000000 		.4byte	.LFB11
 4775 005c B8000000 		.4byte	.LFE11-.LFB11
 4776 0060 00000000 		.4byte	.LFB12
 4777 0064 1C000000 		.4byte	.LFE12-.LFB12
 4778 0068 00000000 		.4byte	.LFB16
 4779 006c 34000000 		.4byte	.LFE16-.LFB16
 4780 0070 00000000 		.4byte	.LFB13
 4781 0074 70000000 		.4byte	.LFE13-.LFB13
 4782 0078 00000000 		.4byte	.LFB14
 4783 007c 24000000 		.4byte	.LFE14-.LFB14
 4784 0080 00000000 		.4byte	.LFB17
 4785 0084 40000000 		.4byte	.LFE17-.LFB17
 4786 0088 00000000 		.4byte	.LFB5
 4787 008c 24000000 		.4byte	.LFE5-.LFB5
 4788 0090 00000000 		.4byte	.LFB9
 4789 0094 54000000 		.4byte	.LFE9-.LFB9
 4790 0098 00000000 		.4byte	.LFB10
 4791 009c 6C000000 		.4byte	.LFE10-.LFB10
 4792 00a0 00000000 		.4byte	.LFB15
 4793 00a4 24000000 		.4byte	.LFE15-.LFB15
 4794 00a8 00000000 		.4byte	.LFB21
 4795 00ac EC000000 		.4byte	.LFE21-.LFB21
 4796 00b0 00000000 		.4byte	.LFB22
 4797 00b4 08010000 		.4byte	.LFE22-.LFB22
 4798 00b8 00000000 		.4byte	0
 4799 00bc 00000000 		.4byte	0
 4800              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 135


 4801              	.Ldebug_ranges0:
 4802 0000 00000000 		.4byte	.LFB3
 4803 0004 10000000 		.4byte	.LFE3
 4804 0008 00000000 		.4byte	.LFB18
 4805 000c 1C000000 		.4byte	.LFE18
 4806 0010 00000000 		.4byte	.LFB19
 4807 0014 10000000 		.4byte	.LFE19
 4808 0018 00000000 		.4byte	.LFB20
 4809 001c 42000000 		.4byte	.LFE20
 4810 0020 00000000 		.4byte	.LFB2
 4811 0024 1C000000 		.4byte	.LFE2
 4812 0028 00000000 		.4byte	.LFB4
 4813 002c 38000000 		.4byte	.LFE4
 4814 0030 00000000 		.4byte	.LFB6
 4815 0034 40000000 		.4byte	.LFE6
 4816 0038 00000000 		.4byte	.LFB7
 4817 003c 30000000 		.4byte	.LFE7
 4818 0040 00000000 		.4byte	.LFB8
 4819 0044 14000000 		.4byte	.LFE8
 4820 0048 00000000 		.4byte	.LFB11
 4821 004c B8000000 		.4byte	.LFE11
 4822 0050 00000000 		.4byte	.LFB12
 4823 0054 1C000000 		.4byte	.LFE12
 4824 0058 00000000 		.4byte	.LFB16
 4825 005c 34000000 		.4byte	.LFE16
 4826 0060 00000000 		.4byte	.LFB13
 4827 0064 70000000 		.4byte	.LFE13
 4828 0068 00000000 		.4byte	.LFB14
 4829 006c 24000000 		.4byte	.LFE14
 4830 0070 00000000 		.4byte	.LFB17
 4831 0074 40000000 		.4byte	.LFE17
 4832 0078 00000000 		.4byte	.LFB5
 4833 007c 24000000 		.4byte	.LFE5
 4834 0080 00000000 		.4byte	.LFB9
 4835 0084 54000000 		.4byte	.LFE9
 4836 0088 00000000 		.4byte	.LFB10
 4837 008c 6C000000 		.4byte	.LFE10
 4838 0090 00000000 		.4byte	.LFB15
 4839 0094 24000000 		.4byte	.LFE15
 4840 0098 00000000 		.4byte	.LFB21
 4841 009c EC000000 		.4byte	.LFE21
 4842 00a0 00000000 		.4byte	.LFB22
 4843 00a4 08010000 		.4byte	.LFE22
 4844 00a8 00000000 		.4byte	0
 4845 00ac 00000000 		.4byte	0
 4846              		.section	.debug_line,"",%progbits
 4847              	.Ldebug_line0:
 4848 0000 90030000 		.section	.debug_str,"MS",%progbits,1
 4848      0200E200 
 4848      00000201 
 4848      FB0E0D00 
 4848      01010101 
 4849              	.LASF100:
 4850 0000 43617053 		.ascii	"CapSense_1_SsCSDConfigIDACs\000"
 4850      656E7365 
 4850      5F315F53 
 4850      73435344 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 136


 4850      436F6E66 
 4851              	.LASF143:
 4852 001c 72617744 		.ascii	"rawData0\000"
 4852      61746130 
 4852      00
 4853              	.LASF125:
 4854 0025 736E7341 		.ascii	"snsAddrPtr\000"
 4854      64647250 
 4854      747200
 4855              	.LASF94:
 4856 0030 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4856      656E7365 
 4856      5F315F46 
 4856      4C415348 
 4856      5F57445F 
 4857              	.LASF151:
 4858 004b 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4858      656E7365 
 4858      5F315F63 
 4858      75725261 
 4858      6D536E73 
 4859              	.LASF69:
 4860 0063 736E7254 		.ascii	"snrTestWidgetId\000"
 4860      65737457 
 4860      69646765 
 4860      74496400 
 4861              	.LASF114:
 4862 0073 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 4862      656E7365 
 4862      5F315F53 
 4862      73435344 
 4862      53657455 
 4863              	.LASF8:
 4864 008e 756E7369 		.ascii	"unsigned int\000"
 4864      676E6564 
 4864      20696E74 
 4864      00
 4865              	.LASF60:
 4866 009b 7363616E 		.ascii	"scanCounter\000"
 4866      436F756E 
 4866      74657200 
 4867              	.LASF111:
 4868 00a7 43617053 		.ascii	"CapSense_1_SsCSDSetModeSnsClockDivider\000"
 4868      656E7365 
 4868      5F315F53 
 4868      73435344 
 4868      5365744D 
 4869              	.LASF58:
 4870 00ce 6877436C 		.ascii	"hwClock\000"
 4870      6F636B00 
 4871              	.LASF153:
 4872 00d6 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4872      656E7365 
 4872      5F315F63 
 4872      7572536E 
 4872      73494F50 
 4873              	.LASF115:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 137


 4874 00ed 696E7465 		.ascii	"interruptState\000"
 4874      72727570 
 4874      74537461 
 4874      746500
 4875              	.LASF136:
 4876 00fc 43617053 		.ascii	"CapSense_1_CSDSetupWidgetExt\000"
 4876      656E7365 
 4876      5F315F43 
 4876      53445365 
 4876      74757057 
 4877              	.LASF124:
 4878 0119 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4878      656E7365 
 4878      5F315F43 
 4878      5344436F 
 4878      6E6E6563 
 4879              	.LASF128:
 4880 0132 70696E48 		.ascii	"pinHSIOMShift\000"
 4880      53494F4D 
 4880      53686966 
 4880      7400
 4881              	.LASF134:
 4882 0140 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4882      656E7365 
 4882      5F315F53 
 4882      73435344 
 4882      456C6563 
 4883              	.LASF130:
 4884 015f 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 4884      656E7365 
 4884      5F315F53 
 4884      73435344 
 4884      436F6E6E 
 4885              	.LASF152:
 4886 0180 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4886      656E7365 
 4886      5F315F73 
 4886      63616E46 
 4886      72657149 
 4887              	.LASF127:
 4888 0199 70696E4D 		.ascii	"pinModeShift\000"
 4888      6F646553 
 4888      68696674 
 4888      00
 4889              	.LASF113:
 4890 01a6 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4890      656E7365 
 4890      5F315F53 
 4890      73435344 
 4890      496E6974 
 4891              	.LASF48:
 4892 01c1 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4892      656E7365 
 4892      5F315F52 
 4892      414D5F57 
 4892      445F4C49 
 4893              	.LASF145:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 138


 4894 01df 43617053 		.ascii	"CapSense_1_counterResolution\000"
 4894      656E7365 
 4894      5F315F63 
 4894      6F756E74 
 4894      65725265 
 4895              	.LASF132:
 4896 01fc 73656E73 		.ascii	"sensorId\000"
 4896      6F724964 
 4896      00
 4897              	.LASF102:
 4898 0205 70747257 		.ascii	"ptrWdgt\000"
 4898      64677400 
 4899              	.LASF98:
 4900 020d 43617053 		.ascii	"CapSense_1_SsCSDTriggerScan\000"
 4900      656E7365 
 4900      5F315F53 
 4900      73435344 
 4900      54726967 
 4901              	.LASF12:
 4902 0229 666C6F61 		.ascii	"float\000"
 4902      7400
 4903              	.LASF82:
 4904 022f 73686966 		.ascii	"shift\000"
 4904      7400
 4905              	.LASF118:
 4906 0235 736E7343 		.ascii	"snsClkSrc\000"
 4906      6C6B5372 
 4906      6300
 4907              	.LASF121:
 4908 023f 77617463 		.ascii	"watchdogCounter\000"
 4908      68646F67 
 4908      436F756E 
 4908      74657200 
 4909              	.LASF68:
 4910 024f 736E734C 		.ascii	"snsList\000"
 4910      69737400 
 4911              	.LASF7:
 4912 0257 6C6F6E67 		.ascii	"long long unsigned int\000"
 4912      206C6F6E 
 4912      6720756E 
 4912      7369676E 
 4912      65642069 
 4913              	.LASF70:
 4914 026e 736E7254 		.ascii	"snrTestSensorId\000"
 4914      65737453 
 4914      656E736F 
 4914      72496400 
 4915              	.LASF93:
 4916 027e 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4916      4E6F6973 
 4916      65456E76 
 4916      6C7000
 4917              	.LASF142:
 4918 028d 63616C4D 		.ascii	"calMask\000"
 4918      61736B00 
 4919              	.LASF91:
 4920 0295 77646774 		.ascii	"wdgtType\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 139


 4920      54797065 
 4920      00
 4921              	.LASF18:
 4922 029e 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4922      656E7365 
 4922      5F315F4C 
 4922      4F575F42 
 4922      534C4E5F 
 4923              	.LASF155:
 4924 02bb 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 4924      656E7365 
 4924      5F315F63 
 4924      616C6962 
 4924      72617465 
 4925              	.LASF47:
 4926 02d5 64756D6D 		.ascii	"dummywidget\000"
 4926      79776964 
 4926      67657400 
 4927              	.LASF166:
 4928 02e1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4928      43313120 
 4928      352E342E 
 4928      31203230 
 4928      31363036 
 4929 0314 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4929      20726576 
 4929      6973696F 
 4929      6E203233 
 4929      37373135 
 4930 0347 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4930      66756E63 
 4930      74696F6E 
 4930      2D736563 
 4930      74696F6E 
 4931              	.LASF126:
 4932 036f 6E657752 		.ascii	"newRegisterValue\000"
 4932      65676973 
 4932      74657256 
 4932      616C7565 
 4932      00
 4933              	.LASF66:
 4934 0380 6D6F6443 		.ascii	"modCsdClk\000"
 4934      7364436C 
 4934      6B00
 4935              	.LASF164:
 4936 038a 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4936      656E7365 
 4936      5F315F49 
 4936      53525F53 
 4936      74617274 
 4937              	.LASF159:
 4938 03a1 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4938      74657243 
 4938      72697469 
 4938      63616C53 
 4938      65637469 
 4939              	.LASF144:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 140


 4940 03b8 74617267 		.ascii	"target\000"
 4940      657400
 4941              	.LASF76:
 4942 03bf 64725074 		.ascii	"drPtr\000"
 4942      7200
 4943              	.LASF43:
 4944 03c5 73696750 		.ascii	"sigPFC\000"
 4944      464300
 4945              	.LASF167:
 4946 03cc 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
 4946      72617465 
 4946      645F536F 
 4946      75726365 
 4946      5C50536F 
 4947 03fd 00       		.ascii	"\000"
 4948              	.LASF30:
 4949 03fe 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4949      656E7365 
 4949      5F315F53 
 4949      454E5345 
 4949      5F4D4554 
 4950              	.LASF103:
 4951 041d 7261774C 		.ascii	"rawLevel\000"
 4951      6576656C 
 4951      00
 4952              	.LASF38:
 4953 0426 6C6F7742 		.ascii	"lowBslnRst\000"
 4953      736C6E52 
 4953      737400
 4954              	.LASF149:
 4955 0431 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4955      656E7365 
 4955      5F315F77 
 4955      69646765 
 4955      74496E64 
 4956              	.LASF165:
 4957 0448 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4957      656E7365 
 4957      5F315F53 
 4957      73537769 
 4957      74636853 
 4958              	.LASF161:
 4959 0467 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4959      656E7365 
 4959      5F315F53 
 4959      73536574 
 4959      4D6F6443 
 4960              	.LASF90:
 4961 048a 746F7461 		.ascii	"totalNumSns\000"
 4961      6C4E756D 
 4961      536E7300 
 4962              	.LASF108:
 4963 0496 6D696E52 		.ascii	"minRawLevel\000"
 4963      61774C65 
 4963      76656C00 
 4964              	.LASF26:
 4965 04a2 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 141


 4965      5453454E 
 4965      53455F43 
 4965      53445F4E 
 4965      4F495345 
 4966              	.LASF169:
 4967 04c7 43617053 		.ascii	"CapSense_1_SsCSDCmodPrecharge\000"
 4967      656E7365 
 4967      5F315F53 
 4967      73435344 
 4967      436D6F64 
 4968              	.LASF34:
 4969 04e5 6E6F6973 		.ascii	"noiseTh\000"
 4969      65546800 
 4970              	.LASF14:
 4971 04ed 63686172 		.ascii	"char\000"
 4971      00
 4972              	.LASF160:
 4973 04f2 43794578 		.ascii	"CyExitCriticalSection\000"
 4973      69744372 
 4973      69746963 
 4973      616C5365 
 4973      6374696F 
 4974              	.LASF162:
 4975 0508 43794465 		.ascii	"CyDelayCycles\000"
 4975      6C617943 
 4975      79636C65 
 4975      7300
 4976              	.LASF80:
 4977 0516 6873696F 		.ascii	"hsiomShift\000"
 4977      6D536869 
 4977      667400
 4978              	.LASF10:
 4979 0521 75696E74 		.ascii	"uint16\000"
 4979      313600
 4980              	.LASF32:
 4981 0528 7265736F 		.ascii	"resolution\000"
 4981      6C757469 
 4981      6F6E00
 4982              	.LASF73:
 4983 0533 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4983      656E7365 
 4983      5F315F52 
 4983      414D5F53 
 4983      54525543 
 4984              	.LASF61:
 4985 0549 73746174 		.ascii	"status\000"
 4985      757300
 4986              	.LASF154:
 4987 0550 43617053 		.ascii	"CapSense_1_configCsd\000"
 4987      656E7365 
 4987      5F315F63 
 4987      6F6E6669 
 4987      67437364 
 4988              	.LASF53:
 4989 0565 69646163 		.ascii	"idacComp\000"
 4989      436F6D70 
 4989      00
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 142


 4990              	.LASF146:
 4991 056e 43617053 		.ascii	"CapSense_1_eleCsdDisconnectFlag\000"
 4991      656E7365 
 4991      5F315F65 
 4991      6C654373 
 4991      64446973 
 4992              	.LASF75:
 4993 058e 70635074 		.ascii	"pcPtr\000"
 4993      7200
 4994              	.LASF6:
 4995 0594 6C6F6E67 		.ascii	"long long int\000"
 4995      206C6F6E 
 4995      6720696E 
 4995      7400
 4996              	.LASF17:
 4997 05a2 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4997      656E7365 
 4997      5F315F54 
 4997      48524553 
 4997      484F4C44 
 4998              	.LASF99:
 4999 05bc 43617053 		.ascii	"CapSense_1_SsCSDClockRestart\000"
 4999      656E7365 
 4999      5F315F53 
 4999      73435344 
 4999      436C6F63 
 5000              	.LASF37:
 5001 05d9 6F6E4465 		.ascii	"onDebounce\000"
 5001      626F756E 
 5001      636500
 5002              	.LASF117:
 5003 05e4 43617053 		.ascii	"CapSense_1_SsCSDConfigClock\000"
 5003      656E7365 
 5003      5F315F53 
 5003      73435344 
 5003      436F6E66 
 5004              	.LASF106:
 5005 0600 63616C69 		.ascii	"calibrateStatus\000"
 5005      62726174 
 5005      65537461 
 5005      74757300 
 5006              	.LASF67:
 5007 0610 77646774 		.ascii	"wdgtList\000"
 5007      4C697374 
 5007      00
 5008              	.LASF84:
 5009 0619 70747232 		.ascii	"ptr2SnsFlash\000"
 5009      536E7346 
 5009      6C617368 
 5009      00
 5010              	.LASF72:
 5011 0626 736E7254 		.ascii	"snrTestRawCount\000"
 5011      65737452 
 5011      6177436F 
 5011      756E7400 
 5012              	.LASF168:
 5013 0636 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\GitHub\\hello-worl"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 143


 5013      73657273 
 5013      5C627279 
 5013      616E2E6C 
 5013      65655C44 
 5014 0664 645C5073 		.ascii	"d\\Psoc_101_4BLE\\Design13.cydsn\000"
 5014      6F635F31 
 5014      30315F34 
 5014      424C455C 
 5014      44657369 
 5015              	.LASF101:
 5016 0683 43617053 		.ascii	"CapSense_1_SsCSDRestoreIdacMode\000"
 5016      656E7365 
 5016      5F315F53 
 5016      73435344 
 5016      52657374 
 5017              	.LASF35:
 5018 06a3 6E4E6F69 		.ascii	"nNoiseTh\000"
 5018      73655468 
 5018      00
 5019              	.LASF65:
 5020 06ac 63736430 		.ascii	"csd0Config\000"
 5020      436F6E66 
 5020      696700
 5021              	.LASF97:
 5022 06b7 6C6F6E67 		.ascii	"long double\000"
 5022      20646F75 
 5022      626C6500 
 5023              	.LASF45:
 5024 06c3 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5024      656E7365 
 5024      5F315F52 
 5024      414D5F57 
 5024      445F4241 
 5025              	.LASF74:
 5026 06e1 6873696F 		.ascii	"hsiomPtr\000"
 5026      6D507472 
 5026      00
 5027              	.LASF11:
 5028 06ea 75696E74 		.ascii	"uint32\000"
 5028      333200
 5029              	.LASF36:
 5030 06f1 68797374 		.ascii	"hysteresis\000"
 5030      65726573 
 5030      697300
 5031              	.LASF87:
 5032 06fc 70747232 		.ascii	"ptr2FltrHistory\000"
 5032      466C7472 
 5032      48697374 
 5032      6F727900 
 5033              	.LASF27:
 5034 070c 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5034      656E7365 
 5034      5F315F55 
 5034      4E444546 
 5034      494E4544 
 5035              	.LASF55:
 5036 0723 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 144


 5036      656E7365 
 5036      5F315F52 
 5036      414D5F53 
 5036      4E535F4C 
 5037              	.LASF79:
 5038 0742 6D61736B 		.ascii	"mask\000"
 5038      00
 5039              	.LASF109:
 5040 0747 6D617852 		.ascii	"maxRawLevel\000"
 5040      61774C65 
 5040      76656C00 
 5041              	.LASF147:
 5042 0753 43617053 		.ascii	"CapSense_1_dsRam\000"
 5042      656E7365 
 5042      5F315F64 
 5042      7352616D 
 5042      00
 5043              	.LASF31:
 5044 0764 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5044      656E7365 
 5044      5F315F53 
 5044      454E5345 
 5044      5F4D4554 
 5045              	.LASF16:
 5046 0782 72656733 		.ascii	"reg32\000"
 5046      3200
 5047              	.LASF71:
 5048 0788 736E7254 		.ascii	"snrTestScanCounter\000"
 5048      65737453 
 5048      63616E43 
 5048      6F756E74 
 5048      657200
 5049              	.LASF56:
 5050 079b 636F6E66 		.ascii	"configId\000"
 5050      69674964 
 5050      00
 5051              	.LASF86:
 5052 07a4 70747232 		.ascii	"ptr2SnsRam\000"
 5052      536E7352 
 5052      616D00
 5053              	.LASF123:
 5054 07af 43617053 		.ascii	"CapSense_1_CSDScanExt\000"
 5054      656E7365 
 5054      5F315F43 
 5054      53445363 
 5054      616E4578 
 5055              	.LASF96:
 5056 07c5 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5056      656E7365 
 5056      5F315F46 
 5056      4C415348 
 5056      5F535452 
 5057              	.LASF64:
 5058 07dd 736E7353 		.ascii	"snsStatus\000"
 5058      74617475 
 5058      7300
 5059              	.LASF41:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 145


 5060 07e7 736E7343 		.ascii	"snsClkSource\000"
 5060      6C6B536F 
 5060      75726365 
 5060      00
 5061              	.LASF104:
 5062 07f4 72617744 		.ascii	"rawData\000"
 5062      61746100 
 5063              	.LASF44:
 5064 07fc 73697A65 		.ascii	"sizetype\000"
 5064      74797065 
 5064      00
 5065              	.LASF133:
 5066 0805 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5066      656E7365 
 5066      5F315F43 
 5066      53444469 
 5066      73636F6E 
 5067              	.LASF2:
 5068 0821 73686F72 		.ascii	"short int\000"
 5068      7420696E 
 5068      7400
 5069              	.LASF4:
 5070 082b 6C6F6E67 		.ascii	"long int\000"
 5070      20696E74 
 5070      00
 5071              	.LASF122:
 5072 0834 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 5072      656E7365 
 5072      5F315F53 
 5072      73435344 
 5072      53746172 
 5073              	.LASF62:
 5074 0850 77646774 		.ascii	"wdgtEnable\000"
 5074      456E6162 
 5074      6C6500
 5075              	.LASF148:
 5076 085b 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5076      656E7365 
 5076      5F315F64 
 5076      73466C61 
 5076      736800
 5077              	.LASF51:
 5078 086e 64696666 		.ascii	"diff\000"
 5078      00
 5079              	.LASF59:
 5080 0873 74756E65 		.ascii	"tunerCmd\000"
 5080      72436D64 
 5080      00
 5081              	.LASF140:
 5082 087c 70747249 		.ascii	"ptrIdac\000"
 5082      64616300 
 5083              	.LASF77:
 5084 0884 70735074 		.ascii	"psPtr\000"
 5084      7200
 5085              	.LASF29:
 5086 088a 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5086      656E7365 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 146


 5086      5F315F53 
 5086      454E5345 
 5086      5F4D4554 
 5087              	.LASF170:
 5088 08a8 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5088      656E7365 
 5088      5F315F43 
 5088      53444361 
 5088      6C696272 
 5089              	.LASF92:
 5090 08c6 6E756D43 		.ascii	"numCols\000"
 5090      6F6C7300 
 5091              	.LASF157:
 5092 08ce 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 5092      656E7365 
 5092      5F315F53 
 5092      73536574 
 5092      536E7343 
 5093              	.LASF156:
 5094 08ee 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5094      656E7365 
 5094      5F315F63 
 5094      616C6962 
 5094      72617465 
 5095              	.LASF137:
 5096 090c 43617053 		.ascii	"CapSense_1_SsCSDDisconnectSnsExt\000"
 5096      656E7365 
 5096      5F315F53 
 5096      73435344 
 5096      44697363 
 5097              	.LASF42:
 5098 092d 66696E67 		.ascii	"fingerCap\000"
 5098      65724361 
 5098      7000
 5099              	.LASF63:
 5100 0937 77646774 		.ascii	"wdgtStatus\000"
 5100      53746174 
 5100      757300
 5101              	.LASF135:
 5102 0942 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5102      656E7365 
 5102      5F315F43 
 5102      53445365 
 5102      74757057 
 5103              	.LASF150:
 5104 095c 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5104      656E7365 
 5104      5F315F73 
 5104      656E736F 
 5104      72496E64 
 5105              	.LASF28:
 5106 0973 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5106      656E7365 
 5106      5F315F53 
 5106      454E5345 
 5106      5F4D4554 
 5107              	.LASF81:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 147


 5108 0991 64725368 		.ascii	"drShift\000"
 5108      69667400 
 5109              	.LASF5:
 5110 0999 6C6F6E67 		.ascii	"long unsigned int\000"
 5110      20756E73 
 5110      69676E65 
 5110      6420696E 
 5110      7400
 5111              	.LASF120:
 5112 09ab 746D7052 		.ascii	"tmpRegValue\000"
 5112      65675661 
 5112      6C756500 
 5113              	.LASF39:
 5114 09b7 69646163 		.ascii	"idacMod\000"
 5114      4D6F6400 
 5115              	.LASF88:
 5116 09bf 70747232 		.ascii	"ptr2DebounceArr\000"
 5116      4465626F 
 5116      756E6365 
 5116      41727200 
 5117              	.LASF33:
 5118 09cf 66696E67 		.ascii	"fingerTh\000"
 5118      65725468 
 5118      00
 5119              	.LASF50:
 5120 09d8 62736C6E 		.ascii	"bslnExt\000"
 5120      45787400 
 5121              	.LASF15:
 5122 09e0 63797374 		.ascii	"cystatus\000"
 5122      61747573 
 5122      00
 5123              	.LASF1:
 5124 09e9 756E7369 		.ascii	"unsigned char\000"
 5124      676E6564 
 5124      20636861 
 5124      7200
 5125              	.LASF89:
 5126 09f7 73746174 		.ascii	"staticConfig\000"
 5126      6963436F 
 5126      6E666967 
 5126      00
 5127              	.LASF138:
 5128 0a04 43617053 		.ascii	"CapSense_1_SsCSDCalibrateCheck\000"
 5128      656E7365 
 5128      5F315F53 
 5128      73435344 
 5128      43616C69 
 5129              	.LASF129:
 5130 0a23 43617053 		.ascii	"CapSense_1_CSDScan\000"
 5130      656E7365 
 5130      5F315F43 
 5130      53445363 
 5130      616E00
 5131              	.LASF85:
 5132 0a36 70747232 		.ascii	"ptr2WdgtRam\000"
 5132      57646774 
 5132      52616D00 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 148


 5133              	.LASF78:
 5134 0a42 6873696F 		.ascii	"hsiomMask\000"
 5134      6D4D6173 
 5134      6B00
 5135              	.LASF163:
 5136 0a4c 4379496E 		.ascii	"CyIntEnable\000"
 5136      74456E61 
 5136      626C6500 
 5137              	.LASF107:
 5138 0a58 72617743 		.ascii	"rawCountsError\000"
 5138      6F756E74 
 5138      73457272 
 5138      6F7200
 5139              	.LASF40:
 5140 0a67 736E7343 		.ascii	"snsClk\000"
 5140      6C6B00
 5141              	.LASF119:
 5142 0a6e 43617053 		.ascii	"CapSense_1_SsCSDCalculateScanDuration\000"
 5142      656E7365 
 5142      5F315F53 
 5142      73435344 
 5142      43616C63 
 5143              	.LASF141:
 5144 0a94 69444143 		.ascii	"iDAC8Max\000"
 5144      384D6178 
 5144      00
 5145              	.LASF0:
 5146 0a9d 7369676E 		.ascii	"signed char\000"
 5146      65642063 
 5146      68617200 
 5147              	.LASF49:
 5148 0aa9 62736C6E 		.ascii	"bsln\000"
 5148      00
 5149              	.LASF3:
 5150 0aae 73686F72 		.ascii	"short unsigned int\000"
 5150      7420756E 
 5150      7369676E 
 5150      65642069 
 5150      6E7400
 5151              	.LASF83:
 5152 0ac1 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5152      656E7365 
 5152      5F315F46 
 5152      4C415348 
 5152      5F494F5F 
 5153              	.LASF105:
 5154 0adc 6E657752 		.ascii	"newRegValue\000"
 5154      65675661 
 5154      6C756500 
 5155              	.LASF158:
 5156 0ae8 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5156      656E7365 
 5156      5F315F53 
 5156      73436C65 
 5156      61724353 
 5157              	.LASF9:
 5158 0b05 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 149


 5158      3800
 5159              	.LASF13:
 5160 0b0b 646F7562 		.ascii	"double\000"
 5160      6C6500
 5161              	.LASF52:
 5162 0b12 6E656742 		.ascii	"negBslnRstCnt\000"
 5162      736C6E52 
 5162      7374436E 
 5162      7400
 5163              	.LASF54:
 5164 0b20 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5164      656E7365 
 5164      5F315F52 
 5164      414D5F53 
 5164      4E535F53 
 5165              	.LASF19:
 5166 0b3a 70617261 		.ascii	"param0\000"
 5166      6D3000
 5167              	.LASF20:
 5168 0b41 70617261 		.ascii	"param1\000"
 5168      6D3100
 5169              	.LASF21:
 5170 0b48 70617261 		.ascii	"param2\000"
 5170      6D3200
 5171              	.LASF22:
 5172 0b4f 70617261 		.ascii	"param3\000"
 5172      6D3300
 5173              	.LASF23:
 5174 0b56 70617261 		.ascii	"param4\000"
 5174      6D3400
 5175              	.LASF24:
 5176 0b5d 70617261 		.ascii	"param5\000"
 5176      6D3500
 5177              	.LASF25:
 5178 0b64 70617261 		.ascii	"param6\000"
 5178      6D3600
 5179              	.LASF116:
 5180 0b6b 70747249 		.ascii	"ptrIdacMod\000"
 5180      6461634D 
 5180      6F6400
 5181              	.LASF112:
 5182 0b76 736E7343 		.ascii	"snsClkDivider\000"
 5182      6C6B4469 
 5182      76696465 
 5182      7200
 5183              	.LASF57:
 5184 0b84 64657669 		.ascii	"deviceId\000"
 5184      63654964 
 5184      00
 5185              	.LASF46:
 5186 0b8d 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5186      656E7365 
 5186      5F315F52 
 5186      414D5F57 
 5186      445F4255 
 5187              	.LASF131:
 5188 0bad 77696467 		.ascii	"widgetId\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccYHnFwT.s 			page 150


 5188      65744964 
 5188      00
 5189              	.LASF139:
 5190 0bb6 43617053 		.ascii	"CapSense_1_SsCSDCalibrateOneSensor\000"
 5190      656E7365 
 5190      5F315F53 
 5190      73435344 
 5190      43616C69 
 5191              	.LASF110:
 5192 0bd9 43617053 		.ascii	"CapSense_1_SsCSDSetSingleIdacMode\000"
 5192      656E7365 
 5192      5F315F53 
 5192      73435344 
 5192      53657453 
 5193              	.LASF95:
 5194 0bfb 77646774 		.ascii	"wdgtArray\000"
 5194      41727261 
 5194      7900
 5195              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
