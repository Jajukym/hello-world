C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.2\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB 
                    -NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.2 Component Pack 6
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0u
  26          #define CYCLOCKSTART_XTAL_ERROR  1u
  27          #define CYCLOCKSTART_32KHZ_ERROR 2u
  28          #define CYCLOCKSTART_PLL_ERROR   3u
  29          
  30          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
              /*******************************************************************************
              * Function Name: CyClockStartupError
              ********************************************************************************
              * Summary:
              *  If an error is encountered during clock configuration (crystal startup error,
              *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
              *  the customer, this function will stop in an infinite loop.
              *
              * Parameters:
              *   void
              *
              * Return:
              *   void
              *
              *******************************************************************************/
              #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
              static void CyClockStartupError(uint8 errorCode);
              #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
              static void CyClockStartupError(uint8 errorCode)
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 2   

              {
                  /* To remove the compiler warning if errorCode not used.                */
                  errorCode = errorCode;
              
                  /* `#START CyClockStartupError` */
              
                  /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
                  /* we will end up here to allow the customer to implement something to  */
                  /* deal with the clock condition.                                       */
              
                  /* `#END` */
              
                  /* If nothing else, stop here since the clocks have not started         */
                  /* correctly.                                                           */
                  while(1) {}
              }
              #endif
  71          
  72          
  73          #if defined(__C51__) || defined(__CX51__)
  74                  #define CYPACKED
  75                  #define CYALIGNED
  76                  
  77                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  78          
  79          
  80          
  81                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  82                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  83                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  84          #else
                      #error Unsupported toolchain
              #endif
  87          
  88          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  89          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  90          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080058u)
  91          
  92          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
  93          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080060u)
  94          
  95          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
  96          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080068u)
  97          
  98          
  99          /*******************************************************************************
 100          * Function Name: ClockSetup
 101          ********************************************************************************
 102          *
 103          * Summary:
 104          *  Performs the initialization of all of the clocks in the device based on the
 105          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 106          *  clocks and setting the necessary dividers to produce the desired frequency. 
 107          *
 108          * Parameters:
 109          *  void
 110          *
 111          * Return:
 112          *  void
 113          *
 114          *******************************************************************************/
 115          static void ClockSetup(void);
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 3   

 116          static void ClockSetup(void)
 117          {
 118   1              uint32 timeout;
 119   1              uint8 pllLock;
 120   1      
 121   1      
 122   1              /* Configure Digital Clocks based on settings from Clock DWR */
 123   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0008u);
 124   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 125   1      
 126   1              /* Configure Analog Clocks based on settings from Clock DWR */
 127   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 128   1      
 129   1              /* Configure ILO based on settings from Clock DWR */
 130   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 131   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 132   1      
 133   1              /* Configure IMO based on settings from Clock DWR */
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 135   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 136   1      
 137   1              /* Configure PLL based on settings from Clock DWR */
 138   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 139   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051u);
 140   1              /* Wait up to 250us for the PLL to lock */
 141   1              pllLock = 0u;
 142   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--) { 
 143   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 144   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 145   2              }
 146   1      
 147   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 148   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 149   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 150   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 151   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 152   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 153   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 154   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 155   1      
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x01u
             -)));
 157   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 159   1      }
 160          
 161          
 162          /* Analog API Functions */
 163          
 164          
 165          /*******************************************************************************
 166          * Function Name: AnalogSetDefault
 167          ********************************************************************************
 168          *
 169          * Summary:
 170          *  Sets up the analog portions of the chip to default values based on chip
 171          *  configuration options from the project.
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 4   

 172          *
 173          * Parameters:
 174          *  void
 175          *
 176          * Return:
 177          *  void
 178          *
 179          *******************************************************************************/
 180          static void AnalogSetDefault(void);
 181          static void AnalogSetDefault(void)
 182          {
 183   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 184   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 185   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_DFT1, ((uint8)((uint8)bg_xover_inl_trim >> 4)) & 0x0Fu);
 186   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x01u);
 187   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x10u);
 188   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 189   1      }
 190          
 191          
 192          /*******************************************************************************
 193          * Function Name: SetAnalogRoutingPumps
 194          ********************************************************************************
 195          *
 196          * Summary:
 197          * Enables or disables the analog pumps feeding analog routing switches.
 198          * Intended to be called at startup, based on the Vdda system configuration;
 199          * may be called during operation when the user informs us that the Vdda voltage
 200          * crossed the pump threshold.
 201          *
 202          * Parameters:
 203          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 204          *
 205          * Return:
 206          *  void
 207          *
 208          *******************************************************************************/
 209          void SetAnalogRoutingPumps(uint8 enabled)
 210          {
 211   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 212   1              if (enabled != 0u)
 213   1              {
 214   2                      regValue |= 0x22u;
 215   2              }
 216   1              else
 217   1              {
 218   2                      regValue &= (uint8)~0x22u;
 219   2              }
 220   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 221   1      }
 222          
 223          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 224          /* This is an implementation detail of the AMux. Code that depends on it may be
 225             incompatible with other versions of PSoC Creator. */
 226          uint8 CYXDATA * const CYCODE ADC_DelSig_1_AMux__addrTable[2] = {
 227                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 228                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 229          };
 230          
 231          /* This is an implementation detail of the AMux. Code that depends on it may be
 232             incompatible with other versions of PSoC Creator. */
 233          const uint8 CYCODE ADC_DelSig_1_AMux__maskTable[2] = {
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 5   

 234                  0x40u, 
 235                  0x40u, 
 236          };
 237          
 238          /*******************************************************************************
 239          * Function Name: ADC_DelSig_1_AMux_Set
 240          ********************************************************************************
 241          * Summary:
 242          *  This function is used to set a particular channel as active on the AMux.
 243          *
 244          * Parameters:  
 245          *   channel - The mux channel input to set as active
 246          *
 247          * Return:
 248          *   void
 249          *
 250          *******************************************************************************/
 251          void ADC_DelSig_1_AMux_Set(uint8 channel)
 252          {
 253   1              if (channel < 2)
 254   1              {
 255   2                      *ADC_DelSig_1_AMux__addrTable[channel] |= ADC_DelSig_1_AMux__maskTable[channel];
 256   2              }
 257   1      }
 258          
 259          /*******************************************************************************
 260          * Function Name: ADC_DelSig_1_AMux_Unset
 261          ********************************************************************************
 262          * Summary:
 263          *  This function is used to clear a particular channel from being active on the
 264          *  AMux.
 265          *
 266          * Parameters:  
 267          *   channel - The mux channel input to mark inactive
 268          *
 269          * Return:
 270          *   void
 271          *
 272          *******************************************************************************/
 273          void ADC_DelSig_1_AMux_Unset(uint8 channel)
 274          {
 275   1              if (channel < 2)
 276   1              {
 277   2                      *ADC_DelSig_1_AMux__addrTable[channel] &= (uint8)~ADC_DelSig_1_AMux__maskTable[channel];
 278   2              }
 279   1      }
 280          
 281          
 282          
 283          /*******************************************************************************
 284          * Function Name: cyfitter_cfg
 285          ********************************************************************************
 286          * Summary:
 287          *  This function is called by the start-up code for the selected device. It
 288          *  performs all of the necessary device configuration based on the design
 289          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 290          *  as Clocks and Pins as well as any component configuration that is necessary.
 291          *
 292          * Parameters:  
 293          *   void
 294          *
 295          * Return:
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 6   

 296          *   void
 297          *
 298          *******************************************************************************/
 299          
 300          void cyfitter_cfg(void)
 301          {
 302   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 303   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 304   1      
 305   1              {
 306   2      
 307   2                      typedef struct {
 308   2                              void CYFAR *address;
 309   2                              uint16 size;
 310   2                      } CYPACKED cfg_memset_t;
 311   2      
 312   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 313   2                              /* address, size */
 314   2                              {(void CYFAR *)(CYREG_PRT1_DR), 16u},
 315   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 316   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 317   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 318   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 319   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 320   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 321   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 322   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 323   2                      };
 324   2      
 325   2                      uint8 CYDATA i;
 326   2      
 327   2                      /* Zero out critical memory blocks before beginning configuration */
 328   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 329   2                      {
 330   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 331   3                              CYMEMZERO(ms->address, ms->size);
 332   3                      }
 333   2      
 334   2                      cfg_write_bytes(cfg_byte_table);
 335   2      
 336   2                      /* Enable digital routing */
 337   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 338   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 339   2      
 340   2                      /* Enable UDB array */
 341   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 342   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 343   2              }
 344   1      
 345   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 346   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 347   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 348   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 349   1      
 350   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 351   1              CY_SET_REG8((void CYXDATA *)CYDEV_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYDEV_BOOST_CR2) | 0x08u));
 352   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 7   

 353   1              {
 354   2                      CY_SET_REG8((void CYXDATA *)CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3Au);
 355   2              }
 356   1      
 357   1      
 358   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 359   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 360   1              /* Setup clocks based on selections from Clock DWR */
 361   1              ClockSetup();
 362   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 363   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 364   1      
 365   1              /* Perform basic analog initialization to defaults */
 366   1              AnalogSetDefault();
 367   1      
 368   1              /* Configure alternate active mode */
 369   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 370   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 371   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 123
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D08              MOV     R5,#08H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 124
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0013 7B08              MOV     R3,#08H
0015 7A00              MOV     R2,#00H
0017 7968              MOV     R1,#068H
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 7B00              MOV     R3,#00H
0021 7A41              MOV     R2,#041H
0023 7900              MOV     R1,#00H
0025 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0028 120000      E     LCALL   ?C?PSTXDATA
002B D001              POP     AR1
002D D002              POP     AR2
002F D003              POP     AR3
0031 7F04              MOV     R7,#04H
0033 7E00              MOV     R6,#00H
0035 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 130
0038 904300            MOV     DPTR,#04300H
003B 7402              MOV     A,#02H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
003E 904000            MOV     DPTR,#04000H
0041 7408              MOV     A,#08H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0044 904200            MOV     DPTR,#04200H
0047 7403              MOV     A,#03H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
004A 7B0C              MOV     R3,#0CH
004C 7A01              MOV     R2,#01H
004E 7908              MOV     R1,#08H
0050 120000      E     LCALL   _cyread8
0053 9046A1            MOV     DPTR,#046A1H
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0058 7B00              MOV     R3,#00H
005A 7A42              MOV     R2,#042H
005C 7922              MOV     R1,#022H
005E 7D08              MOV     R5,#08H
0060 7C00              MOV     R4,#00H
0062 120000      E     LCALL   _cywrite16
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 9   

                                           ; SOURCE LINE # 139
0065 7B00              MOV     R3,#00H
0067 7A42              MOV     R2,#042H
0069 7920              MOV     R1,#020H
006B 7D51              MOV     R5,#051H
006D 7C10              MOV     R4,#010H
006F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
0072 900000      R     MOV     DPTR,#pllLock
0075 E4                CLR     A
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0077 7F19              MOV     R7,#019H
0079 7E00              MOV     R6,#00H
007B 7D00              MOV     R5,#00H
007D 7C00              MOV     R4,#00H
007F 900000      R     MOV     DPTR,#timeout
0082 120000      E     LCALL   ?C?LSTXDATA
0085         ?C0001:
0085 900000      R     MOV     DPTR,#timeout
0088 120000      E     LCALL   ?C?LLDXDATA
008B D3                SETB    C
008C EF                MOV     A,R7
008D 9400              SUBB    A,#00H
008F EE                MOV     A,R6
0090 9400              SUBB    A,#00H
0092 404E              JC      ?C0002
0094 900000      R     MOV     DPTR,#pllLock
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 EF                MOV     A,R7
009A 6403              XRL     A,#03H
009C 6044              JZ      ?C0002
                                           ; SOURCE LINE # 143
009E 904225            MOV     DPTR,#04225H
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 EF                MOV     A,R7
00A4 5401              ANL     A,#01H
00A6 FF                MOV     R7,A
00A7 7E00              MOV     R6,#00H
00A9 900000      R     MOV     DPTR,#pllLock
00AC E0                MOVX    A,@DPTR
00AD FE                MOV     R6,A
00AE EE                MOV     A,R6
00AF 25E0              ADD     A,ACC
00B1 FE                MOV     R6,A
00B2 EE                MOV     A,R6
00B3 4F                ORL     A,R7
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 5403              ANL     A,#03H
00B8 FF                MOV     R7,A
00B9 900000      R     MOV     DPTR,#pllLock
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
00BE 7FE0              MOV     R7,#0E0H
00C0 7E01              MOV     R6,#01H
00C2 7D00              MOV     R5,#00H
00C4 7C00              MOV     R4,#00H
00C6 120000      E     LCALL   _CyDelayCycles
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 10  

                                           ; SOURCE LINE # 145
00C9 900000      R     MOV     DPTR,#timeout
00CC 120000      E     LCALL   ?C?LLDXDATA
00CF 7BFF              MOV     R3,#0FFH
00D1 7AFF              MOV     R2,#0FFH
00D3 79FF              MOV     R1,#0FFH
00D5 78FF              MOV     R0,#0FFH
00D7 120000      E     LCALL   ?C?LADD
00DA 900000      R     MOV     DPTR,#timeout
00DD 120000      E     LCALL   ?C?LSTXDATA
00E0 80A3              SJMP    ?C0001
00E2         ?C0002:
                                           ; SOURCE LINE # 148
00E2 7B00              MOV     R3,#00H
00E4 7A40              MOV     R2,#040H
00E6 7904              MOV     R1,#04H
00E8 7D00              MOV     R5,#00H
00EA 7C01              MOV     R4,#01H
00EC 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 149
00EF 904004            MOV     DPTR,#04004H
00F2 7407              MOV     A,#07H
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
00F5 904006            MOV     DPTR,#04006H
00F8 E4                CLR     A
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
00FA 904008            MOV     DPTR,#04008H
00FD 7448              MOV     A,#048H
00FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
0100 904004            MOV     DPTR,#04004H
0103 E4                CLR     A
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
0105 904001            MOV     DPTR,#04001H
0108 7402              MOV     A,#02H
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
010B 90400B            MOV     DPTR,#0400BH
010E 7404              MOV     A,#04H
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0111 9043A2            MOV     DPTR,#043A2H
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 EF                MOV     A,R7
0117 4401              ORL     A,#01H
0119 FF                MOV     R7,A
011A 9043A2            MOV     DPTR,#043A2H
011D EF                MOV     A,R7
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
011F 9043A1            MOV     DPTR,#043A1H
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 EF                MOV     A,R7
0125 4401              ORL     A,#01H
0127 FF                MOV     R7,A
0128 9043A1            MOV     DPTR,#043A1H
012B EF                MOV     A,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 11  

012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
012D 9043A0            MOV     DPTR,#043A0H
0130 E0                MOVX    A,@DPTR
0131 FF                MOV     R7,A
0132 EF                MOV     A,R7
0133 4480              ORL     A,#080H
0135 FF                MOV     R7,A
0136 9043A0            MOV     DPTR,#043A0H
0139 EF                MOV     A,R7
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
013B 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
002F 90510D            MOV     DPTR,#0510DH
0032 7401              MOV     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0035 905B00            MOV     DPTR,#05B00H
0038 7410              MOV     A,#010H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 12  

                                           ; SOURCE LINE # 189
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 209
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0006
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
0025 800E              SJMP    ?C0007
0027         ?C0006:
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0035         ?C0007:
                                           ; SOURCE LINE # 220
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_DelSig_1_AMux_Set (BEGIN)
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 13  

                                           ; SOURCE LINE # 251
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0010
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_DelSig_1_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_DelSig_1_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_DelSig_1_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0046         ?C0010:
0046 22                RET     
             ; FUNCTION _ADC_DelSig_1_AMux_Set (END)

             ; FUNCTION _ADC_DelSig_1_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 273
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 14  

                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0012
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_DelSig_1_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_DelSig_1_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_DelSig_1_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
0049         ?C0012:
0049 22                RET     
             ; FUNCTION _ADC_DelSig_1_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 303
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 15  

0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 328
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 331
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 332
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 334
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 337
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 16  

0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 338
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 341
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 346
00AB 7B08              MOV     R3,#08H
00AD 7A00              MOV     R2,#00H
00AF 7958              MOV     R1,#058H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7902              MOV     R1,#02H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F08              MOV     R7,#08H
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 347
00D0 7B08              MOV     R3,#08H
00D2 7A00              MOV     R2,#00H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 17  

00D4 7960              MOV     R1,#060H
00D6 C003              PUSH    AR3
00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 7922              MOV     R1,#022H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F08              MOV     R7,#08H
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 348
00F5 9044F4            MOV     DPTR,#044F4H
00F8 7401              MOV     A,#01H
00FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 351
00FB 904322            MOV     DPTR,#04322H
00FE E0                MOVX    A,@DPTR
00FF FF                MOV     R7,A
0100 EF                MOV     A,R7
0101 4408              ORL     A,#08H
0103 FF                MOV     R7,A
0104 904322            MOV     DPTR,#04322H
0107 EF                MOV     A,R7
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 352
0109 9046EC            MOV     DPTR,#046ECH
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E EF                MOV     A,R7
010F C3                CLR     C
0110 9405              SUBB    A,#05H
0112 5006              JNC     ?C0016
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
0114 904689            MOV     DPTR,#04689H
0117 743A              MOV     A,#03AH
0119 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 355
011A         ?C0016:
                                           ; SOURCE LINE # 359
011A 904800            MOV     DPTR,#04800H
011D 74C0              MOV     A,#0C0H
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 361
0120 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 363
0123 904800            MOV     DPTR,#04800H
0126 7480              MOV     A,#080H
0128 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 366
0129 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 369
012C 7B00              MOV     R3,#00H
012E 7A43              MOV     R2,#043H
0130 79A0              MOV     R1,#0A0H
0132 C003              PUSH    AR3
0134 C002              PUSH    AR2
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/12/2015 09:24:15 PAGE 18  

0136 C001              PUSH    AR1
0138 7B00              MOV     R3,#00H
013A 7A43              MOV     R2,#043H
013C 79B0              MOV     R1,#0B0H
013E 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0141 120000      E     LCALL   ?C?PSTXDATA
0144 D001              POP     AR1
0146 D002              POP     AR2
0148 D003              POP     AR3
014A 7F0E              MOV     R7,#0EH
014C 7E00              MOV     R6,#00H
014E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 370
0151 9043B0            MOV     DPTR,#043B0H
0154 E0                MOVX    A,@DPTR
0155 FF                MOV     R7,A
0156 EF                MOV     A,R7
0157 54FD              ANL     A,#0FDH
0159 FF                MOV     R7,A
015A EF                MOV     A,R7
015B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 371
015C 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    940    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
