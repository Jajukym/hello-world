ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWMPulseCapture.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWMPulseCapture_initVar
  20              		.bss
  21              		.type	PWMPulseCapture_initVar, %object
  22              		.size	PWMPulseCapture_initVar, 1
  23              	PWMPulseCapture_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWMPulseCapture_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWMPulseCapture_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWMPulseCapture_Start, %function
  31              	PWMPulseCapture_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWMPulseCapture.c"
   1:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWMPulseCapture.c **** * File Name: PWMPulseCapture.c
   3:Generated_Source\PSoC5/PWMPulseCapture.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWMPulseCapture.c **** *
   5:Generated_Source\PSoC5/PWMPulseCapture.c **** * Description:
   6:Generated_Source\PSoC5/PWMPulseCapture.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWMPulseCapture.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWMPulseCapture.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWMPulseCapture.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWMPulseCapture.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWMPulseCapture.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWMPulseCapture.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWMPulseCapture.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  15:Generated_Source\PSoC5/PWMPulseCapture.c **** * Note:
  16:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  17:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWMPulseCapture.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWMPulseCapture.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWMPulseCapture.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWMPulseCapture.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  24:Generated_Source\PSoC5/PWMPulseCapture.c **** #include "PWMPulseCapture.h"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 2


  25:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  26:Generated_Source\PSoC5/PWMPulseCapture.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWMPulseCapture.c **** #ifdef PWMPulseCapture_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWMPulseCapture.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWMPulseCapture.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* PWMPulseCapture_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  32:Generated_Source\PSoC5/PWMPulseCapture.c **** uint8 PWMPulseCapture_initVar = 0u;
  33:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  34:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  35:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_Start
  37:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  39:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
  40:Generated_Source\PSoC5/PWMPulseCapture.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWMPulseCapture.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWMPulseCapture.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  44:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
  45:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
  46:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  47:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
  48:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
  49:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  50:Generated_Source\PSoC5/PWMPulseCapture.c **** * Global variables:
  51:Generated_Source\PSoC5/PWMPulseCapture.c **** *  PWMPulseCapture_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWMPulseCapture.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  54:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWMPulseCapture.c **** void PWMPulseCapture_Start(void) 
  56:Generated_Source\PSoC5/PWMPulseCapture.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWMPulseCapture.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWMPulseCapture.c ****     if(PWMPulseCapture_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
  60:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWMPulseCapture_Init
  61:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
  63:Generated_Source\PSoC5/PWMPulseCapture.c ****     PWMPulseCapture_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWMPulseCapture_Enable
  64:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  65:Generated_Source\PSoC5/PWMPulseCapture.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWMPulseCapture_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWMPulseCapture_Start, .-PWMPulseCapture_Start
  68              		.section	.text.PWMPulseCapture_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWMPulseCapture_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWMPulseCapture_Init, %function
  74              	PWMPulseCapture_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  67:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  68:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_Init
  70:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  72:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
  73:Generated_Source\PSoC5/PWMPulseCapture.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWMPulseCapture.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWMPulseCapture.c **** *  PWMPulseCapture_Start().
  76:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  77:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
  78:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
  79:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  80:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
  81:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
  82:Generated_Source\PSoC5/PWMPulseCapture.c **** *
  83:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWMPulseCapture.c **** void PWMPulseCapture_Init(void) 
  85:Generated_Source\PSoC5/PWMPulseCapture.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UsingFixedFunction || PWMPulseCapture_UseControl)
  87:Generated_Source\PSoC5/PWMPulseCapture.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction || PWMPulseCapture_UseControl) */
  89:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  90:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if(!PWMPulseCapture_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UseStatus)
  92:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWMPulseCapture.c ****             uint8 PWMPulseCapture_interruptState;
  94:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UseStatus) */
  95:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (!PWMPulseCapture_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWMPulseCapture.c **** 
  97:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL |= PWMPulseCapture_CFG0_MODE;
 100:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_DeadBand2_4)
 101:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_CONTROL |= PWMPulseCapture_CFG0_DB;
 102:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 104:Generated_Source\PSoC5/PWMPulseCapture.c ****         ctrl = PWMPulseCapture_CONTROL3 & ((uint8 )(~PWMPulseCapture_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL3 = ctrl | PWMPulseCapture_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 107:Generated_Source\PSoC5/PWMPulseCapture.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_RT1 &= ((uint8)(~PWMPulseCapture_RT1_MASK));
 109:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_RT1 |= PWMPulseCapture_SYNC;
 110:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 111:Generated_Source\PSoC5/PWMPulseCapture.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_RT1 &= ((uint8)(~PWMPulseCapture_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_RT1 |= PWMPulseCapture_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 115:Generated_Source\PSoC5/PWMPulseCapture.c ****     #elif (PWMPulseCapture_UseControl)
 116:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWMPulseCapture.c ****         ctrl = PWMPulseCapture_CONTROL & ((uint8)(~PWMPulseCapture_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 204B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWMPulseCapture.c ****                 ((uint8)(~PWMPulseCapture_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL = ctrl | PWMPulseCapture_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 1D4A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F00C03 		orr	r3, r3, #12
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWMPulseCapture.c ****                                    PWMPulseCapture_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 123:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (!PWMPulseCapture_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_Resolution == 8)
 125:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_AUX_CONTROLDP0 |= (PWMPulseCapture_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else /* (PWMPulseCapture_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_AUX_CONTROLDP0 |= (PWMPulseCapture_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 5


 100              		.loc 1 129 0
 101 001e 1B4A     		ldr	r2, .L6+4
 102 0020 1A4B     		ldr	r3, .L6+4
 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_AUX_CONTROLDP1 |= (PWMPulseCapture_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 130 0
 109 002e 184A     		ldr	r2, .L6+8
 110 0030 174B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 43F00103 		orr	r3, r3, #1
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_Resolution == 8) */
 132:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 133:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_WriteCounter(PWMPulseCapture_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 003e 4FF6FF70 		movw	r0, #65535
 118 0042 FFF7FEFF 		bl	PWMPulseCapture_WriteCounter
 134:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (!PWMPulseCapture_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 136:Generated_Source\PSoC5/PWMPulseCapture.c ****     PWMPulseCapture_WritePeriod(PWMPulseCapture_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0046 4FF6FF70 		movw	r0, #65535
 121 004a FFF7FEFF 		bl	PWMPulseCapture_WritePeriod
 137:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 138:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_WriteCompare(PWMPulseCapture_INIT_COMPARE_VALUE1);
 122              		.loc 1 139 0
 123 004e 4FF40040 		mov	r0, #32768
 124 0052 FFF7FEFF 		bl	PWMPulseCapture_WriteCompare
 140:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 141:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_WriteCompare1(PWMPulseCapture_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_WriteCompare2(PWMPulseCapture_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 145:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_KillModeMinTime)
 146:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_WriteKillTime(PWMPulseCapture_MinimumKillTime);
 147:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 149:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_DeadBandUsed)
 150:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_WriteDeadTime(PWMPulseCapture_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 153:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UseStatus || PWMPulseCapture_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_SetInterruptMode(PWMPulseCapture_INIT_INTERRUPTS_MODE);
 125              		.loc 1 154 0
 126 0056 0120     		movs	r0, #1
 127 0058 FFF7FEFF 		bl	PWMPulseCapture_SetInterruptMode
 155:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UseStatus || PWMPulseCapture_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 157:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 6


 159:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_GLOBAL_ENABLE |= PWMPulseCapture_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL2 |= PWMPulseCapture_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWMPulseCapture.c ****     #else
 163:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UseStatus)
 164:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 165:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_interruptState = CyEnterCriticalSection();
 128              		.loc 1 167 0
 129 005c FFF7FEFF 		bl	CyEnterCriticalSection
 130 0060 0346     		mov	r3, r0
 131 0062 BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_STATUS_AUX_CTRL |= PWMPulseCapture_STATUS_ACTL_INT_EN_MASK;
 132              		.loc 1 169 0
 133 0064 094A     		ldr	r2, .L6+4
 134 0066 094B     		ldr	r3, .L6+4
 135 0068 1B78     		ldrb	r3, [r3]
 136 006a DBB2     		uxtb	r3, r3
 137 006c 43F01003 		orr	r3, r3, #16
 138 0070 DBB2     		uxtb	r3, r3
 139 0072 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 171:Generated_Source\PSoC5/PWMPulseCapture.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWMPulseCapture.c ****             CyExitCriticalSection(PWMPulseCapture_interruptState);
 140              		.loc 1 172 0
 141 0074 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 142 0076 1846     		mov	r0, r3
 143 0078 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 174:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Clear the FIFO to enable the PWMPulseCapture_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWMPulseCapture.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_ClearFIFO();
 144              		.loc 1 176 0
 145 007c FFF7FEFF 		bl	PWMPulseCapture_ClearFIFO
 177:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UseStatus) */
 178:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWMPulseCapture.c **** }
 146              		.loc 1 179 0
 147 0080 00BF     		nop
 148 0082 0837     		adds	r7, r7, #8
 149              		.cfi_def_cfa_offset 8
 150 0084 BD46     		mov	sp, r7
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 0086 80BD     		pop	{r7, pc}
 154              	.L7:
 155              		.align	2
 156              	.L6:
 157 0088 74650040 		.word	1073767796
 158 008c 94650040 		.word	1073767828
 159 0090 95650040 		.word	1073767829
 160              		.cfi_endproc
 161              	.LFE1:
 162              		.size	PWMPulseCapture_Init, .-PWMPulseCapture_Init
 163              		.section	.text.PWMPulseCapture_Enable,"ax",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 7


 164              		.align	2
 165              		.global	PWMPulseCapture_Enable
 166              		.thumb
 167              		.thumb_func
 168              		.type	PWMPulseCapture_Enable, %function
 169              	PWMPulseCapture_Enable:
 170              	.LFB2:
 180:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 181:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 182:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_Enable
 184:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 186:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
 187:Generated_Source\PSoC5/PWMPulseCapture.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 189:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
 190:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 191:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 192:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
 193:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 194:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 195:Generated_Source\PSoC5/PWMPulseCapture.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWMPulseCapture.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 198:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWMPulseCapture.c **** void PWMPulseCapture_Enable(void) 
 200:Generated_Source\PSoC5/PWMPulseCapture.c **** {
 171              		.loc 1 200 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 80B4     		push	{r7}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWMPulseCapture.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_GLOBAL_ENABLE |= PWMPulseCapture_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_GLOBAL_STBY_ENABLE |= PWMPulseCapture_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 207:Generated_Source\PSoC5/PWMPulseCapture.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UseControl || PWMPulseCapture_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL |= PWMPulseCapture_CTRL_ENABLE;
 181              		.loc 1 209 0
 182 0004 054A     		ldr	r2, .L9
 183 0006 054B     		ldr	r3, .L9
 184 0008 1B78     		ldrb	r3, [r3]
 185 000a DBB2     		uxtb	r3, r3
 186 000c 63F07F03 		orn	r3, r3, #127
 187 0010 DBB2     		uxtb	r3, r3
 188 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UseControl || PWMPulseCapture_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWMPulseCapture.c **** }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 8


 189              		.loc 1 211 0
 190 0014 00BF     		nop
 191 0016 BD46     		mov	sp, r7
 192              		.cfi_def_cfa_register 13
 193              		@ sp needed
 194 0018 80BC     		pop	{r7}
 195              		.cfi_restore 7
 196              		.cfi_def_cfa_offset 0
 197 001a 7047     		bx	lr
 198              	.L10:
 199              		.align	2
 200              	.L9:
 201 001c 74650040 		.word	1073767796
 202              		.cfi_endproc
 203              	.LFE2:
 204              		.size	PWMPulseCapture_Enable, .-PWMPulseCapture_Enable
 205              		.section	.text.PWMPulseCapture_Stop,"ax",%progbits
 206              		.align	2
 207              		.global	PWMPulseCapture_Stop
 208              		.thumb
 209              		.thumb_func
 210              		.type	PWMPulseCapture_Stop, %function
 211              	PWMPulseCapture_Stop:
 212              	.LFB3:
 212:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 213:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 214:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_Stop
 216:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 218:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
 219:Generated_Source\PSoC5/PWMPulseCapture.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWMPulseCapture.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 222:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
 223:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 224:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 225:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
 226:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 227:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 228:Generated_Source\PSoC5/PWMPulseCapture.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWMPulseCapture.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWMPulseCapture.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 232:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWMPulseCapture.c **** void PWMPulseCapture_Stop(void) 
 234:Generated_Source\PSoC5/PWMPulseCapture.c **** {
 213              		.loc 1 234 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 9


 235:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UseControl || PWMPulseCapture_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_CONTROL &= ((uint8)(~PWMPulseCapture_CTRL_ENABLE));
 223              		.loc 1 236 0
 224 0004 054A     		ldr	r2, .L12
 225 0006 054B     		ldr	r3, .L12
 226 0008 1B78     		ldrb	r3, [r3]
 227 000a DBB2     		uxtb	r3, r3
 228 000c 03F07F03 		and	r3, r3, #127
 229 0010 DBB2     		uxtb	r3, r3
 230 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UseControl || PWMPulseCapture_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 239:Generated_Source\PSoC5/PWMPulseCapture.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_GLOBAL_ENABLE &= ((uint8)(~PWMPulseCapture_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWMPulseCapture.c ****         PWMPulseCapture_GLOBAL_STBY_ENABLE &= ((uint8)(~PWMPulseCapture_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWMPulseCapture.c **** }
 231              		.loc 1 244 0
 232 0014 00BF     		nop
 233 0016 BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 0018 80BC     		pop	{r7}
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 001a 7047     		bx	lr
 240              	.L13:
 241              		.align	2
 242              	.L12:
 243 001c 74650040 		.word	1073767796
 244              		.cfi_endproc
 245              	.LFE3:
 246              		.size	PWMPulseCapture_Stop, .-PWMPulseCapture_Stop
 247              		.section	.text.PWMPulseCapture_WriteCounter,"ax",%progbits
 248              		.align	2
 249              		.global	PWMPulseCapture_WriteCounter
 250              		.thumb
 251              		.thumb_func
 252              		.type	PWMPulseCapture_WriteCounter, %function
 253              	PWMPulseCapture_WriteCounter:
 254              	.LFB4:
 245:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 246:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_CompareMode1SW)
 248:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 249:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 250:Generated_Source\PSoC5/PWMPulseCapture.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Function Name: PWMPulseCapture_SetCompareMode
 252:Generated_Source\PSoC5/PWMPulseCapture.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 254:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Summary:
 255:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 258:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 10


 260:Generated_Source\PSoC5/PWMPulseCapture.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 262:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Return:
 263:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  None
 264:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 265:Generated_Source\PSoC5/PWMPulseCapture.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWMPulseCapture.c ****         void PWMPulseCapture_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWMPulseCapture.c ****         {
 268:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if(PWMPulseCapture_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 270:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #if(0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMPulseCapture_CTRL_C
 272:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #else
 273:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #endif /* (0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 276:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL3 &= ((uint8)(~PWMPulseCapture_CTRL_CMPMODE1_MASK)); /*Clear
 277:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 279:Generated_Source\PSoC5/PWMPulseCapture.c ****             #elif (PWMPulseCapture_UseControl)
 280:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 281:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #if(0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWMPulseCapture_CTRL_
 283:Generated_Source\PSoC5/PWMPulseCapture.c ****                                                 PWMPulseCapture_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #else
 285:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemode1masked = comparemode & PWMPulseCapture_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #endif /* (0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 288:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #if(0 != PWMPulseCapture_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWMPulseCapture_CTRL_
 290:Generated_Source\PSoC5/PWMPulseCapture.c ****                                                PWMPulseCapture_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #else
 292:Generated_Source\PSoC5/PWMPulseCapture.c ****                     uint8 comparemode2masked = comparemode & PWMPulseCapture_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWMPulseCapture.c ****                 #endif /* (0 != PWMPulseCapture_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 295:Generated_Source\PSoC5/PWMPulseCapture.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL &= ((uint8)(~(PWMPulseCapture_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWMPulseCapture.c ****                                             PWMPulseCapture_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 300:Generated_Source\PSoC5/PWMPulseCapture.c ****             #else
 301:Generated_Source\PSoC5/PWMPulseCapture.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (PWMPulseCapture_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWMPulseCapture.c ****         }
 304:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* PWMPulseCapture_CompareMode1SW */
 305:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 306:Generated_Source\PSoC5/PWMPulseCapture.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 308:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_CompareMode1SW)
 309:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 310:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 311:Generated_Source\PSoC5/PWMPulseCapture.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Function Name: PWMPulseCapture_SetCompareMode1
 313:Generated_Source\PSoC5/PWMPulseCapture.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 315:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Summary:
 316:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 11


 317:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 318:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWMPulseCapture.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 322:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Return:
 323:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  None
 324:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 325:Generated_Source\PSoC5/PWMPulseCapture.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWMPulseCapture.c ****         void PWMPulseCapture_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWMPulseCapture.c ****         {
 328:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if(0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWMPulseCapture.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMPulseCapture_CTRL_CMPMO
 330:Generated_Source\PSoC5/PWMPulseCapture.c ****                                            PWMPulseCapture_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWMPulseCapture.c ****             #else
 332:Generated_Source\PSoC5/PWMPulseCapture.c ****                 uint8 comparemodemasked = comparemode & PWMPulseCapture_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (0 != PWMPulseCapture_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 335:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if (PWMPulseCapture_UseControl)
 336:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL &= ((uint8)(~PWMPulseCapture_CTRL_CMPMODE1_MASK)); /*Clear 
 337:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (PWMPulseCapture_UseControl) */
 339:Generated_Source\PSoC5/PWMPulseCapture.c ****         }
 340:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* PWMPulseCapture_CompareMode1SW */
 341:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 342:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_CompareMode2SW)
 343:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 344:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 345:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_SetCompareMode2
 347:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 349:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 350:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 352:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWMPulseCapture.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 356:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 357:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 358:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 359:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 362:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 363:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(0 != PWMPulseCapture_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWMPulseCapture.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMPulseCapture_CTRL_CMPMODE2_
 365:Generated_Source\PSoC5/PWMPulseCapture.c ****                                                  PWMPulseCapture_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 367:Generated_Source\PSoC5/PWMPulseCapture.c ****             uint8 comparemodemasked = comparemode & PWMPulseCapture_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (0 != PWMPulseCapture_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 370:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_UseControl)
 371:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_CONTROL &= ((uint8)(~PWMPulseCapture_CTRL_CMPMODE2_MASK)); /*Clear exis
 372:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UseControl) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 12


 374:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 375:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /*PWMPulseCapture_CompareMode2SW */
 376:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 377:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 379:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 380:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (!PWMPulseCapture_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 382:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 383:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteCounter
 385:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 387:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 388:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 393:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 396:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 397:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 398:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 399:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 402:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWMPulseCapture.c ****                                        
 405:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 255              		.loc 1 405 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260 0000 80B4     		push	{r7}
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 7, -4
 263 0002 83B0     		sub	sp, sp, #12
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 267 0006 0346     		mov	r3, r0
 268 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWMPulseCapture.c ****         CY_SET_REG16(PWMPulseCapture_COUNTER_LSB_PTR, counter);
 269              		.loc 1 406 0
 270 000a 044A     		ldr	r2, .L15
 271 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 272 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 273              		.loc 1 407 0
 274 0010 00BF     		nop
 275 0012 0C37     		adds	r7, r7, #12
 276              		.cfi_def_cfa_offset 4
 277 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 13


 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0016 80BC     		pop	{r7}
 281              		.cfi_restore 7
 282              		.cfi_def_cfa_offset 0
 283 0018 7047     		bx	lr
 284              	.L16:
 285 001a 00BF     		.align	2
 286              	.L15:
 287 001c 086A0040 		.word	1073768968
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	PWMPulseCapture_WriteCounter, .-PWMPulseCapture_WriteCounter
 291              		.section	.text.PWMPulseCapture_ReadCounter,"ax",%progbits
 292              		.align	2
 293              		.global	PWMPulseCapture_ReadCounter
 294              		.thumb
 295              		.thumb_func
 296              		.type	PWMPulseCapture_ReadCounter, %function
 297              	PWMPulseCapture_ReadCounter:
 298              	.LFB5:
 408:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 409:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 410:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadCounter
 412:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 414:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 415:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 418:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 420:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 421:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 422:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 424:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint16 PWMPulseCapture_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 299              		.loc 1 426 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 00AF     		add	r7, sp, #0
 308              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWMPulseCapture.c ****           (void)CY_GET_REG8(PWMPulseCapture_COUNTERCAP_LSB_PTR_8BIT);
 309              		.loc 1 430 0
 310 0004 044B     		ldr	r3, .L19
 311 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 14


 431:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 432:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG16(PWMPulseCapture_CAPTURE_LSB_PTR));
 312              		.loc 1 433 0
 313 0008 044B     		ldr	r3, .L19+4
 314 000a 1B88     		ldrh	r3, [r3]	@ movhi
 315 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 316              		.loc 1 434 0
 317 000e 1846     		mov	r0, r3
 318 0010 BD46     		mov	sp, r7
 319              		.cfi_def_cfa_register 13
 320              		@ sp needed
 321 0012 80BC     		pop	{r7}
 322              		.cfi_restore 7
 323              		.cfi_def_cfa_offset 0
 324 0014 7047     		bx	lr
 325              	.L20:
 326 0016 00BF     		.align	2
 327              	.L19:
 328 0018 14650040 		.word	1073767700
 329 001c A86A0040 		.word	1073769128
 330              		.cfi_endproc
 331              	.LFE5:
 332              		.size	PWMPulseCapture_ReadCounter, .-PWMPulseCapture_ReadCounter
 333              		.section	.text.PWMPulseCapture_ClearFIFO,"ax",%progbits
 334              		.align	2
 335              		.global	PWMPulseCapture_ClearFIFO
 336              		.thumb
 337              		.thumb_func
 338              		.type	PWMPulseCapture_ClearFIFO, %function
 339              	PWMPulseCapture_ClearFIFO:
 340              	.LFB6:
 435:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 436:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if (PWMPulseCapture_UseStatus)
 437:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 438:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 439:Generated_Source\PSoC5/PWMPulseCapture.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Function Name: PWMPulseCapture_ClearFIFO
 441:Generated_Source\PSoC5/PWMPulseCapture.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 443:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Summary:
 444:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 446:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  None
 448:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 449:Generated_Source\PSoC5/PWMPulseCapture.c ****         * Return:
 450:Generated_Source\PSoC5/PWMPulseCapture.c ****         *  None
 451:Generated_Source\PSoC5/PWMPulseCapture.c ****         *
 452:Generated_Source\PSoC5/PWMPulseCapture.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWMPulseCapture.c ****         void PWMPulseCapture_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWMPulseCapture.c ****         {
 341              		.loc 1 454 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 15


 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWMPulseCapture.c ****             while(0u != (PWMPulseCapture_ReadStatusRegister() & PWMPulseCapture_STATUS_FIFONEMPTY))
 351              		.loc 1 455 0
 352 0004 01E0     		b	.L22
 353              	.L23:
 456:Generated_Source\PSoC5/PWMPulseCapture.c ****             {
 457:Generated_Source\PSoC5/PWMPulseCapture.c ****                 (void)PWMPulseCapture_ReadCapture();
 354              		.loc 1 457 0
 355 0006 FFF7FEFF 		bl	PWMPulseCapture_ReadCapture
 356              	.L22:
 455:Generated_Source\PSoC5/PWMPulseCapture.c ****             while(0u != (PWMPulseCapture_ReadStatusRegister() & PWMPulseCapture_STATUS_FIFONEMPTY))
 357              		.loc 1 455 0
 358 000a FFF7FEFF 		bl	PWMPulseCapture_ReadStatusRegister
 359 000e 0346     		mov	r3, r0
 360 0010 03F01003 		and	r3, r3, #16
 361 0014 002B     		cmp	r3, #0
 362 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/PWMPulseCapture.c ****             }
 459:Generated_Source\PSoC5/PWMPulseCapture.c ****         }
 363              		.loc 1 459 0
 364 0018 00BF     		nop
 365 001a 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE6:
 368              		.size	PWMPulseCapture_ClearFIFO, .-PWMPulseCapture_ClearFIFO
 369              		.section	.text.PWMPulseCapture_WritePeriod,"ax",%progbits
 370              		.align	2
 371              		.global	PWMPulseCapture_WritePeriod
 372              		.thumb
 373              		.thumb_func
 374              		.type	PWMPulseCapture_WritePeriod, %function
 375              	PWMPulseCapture_WritePeriod:
 376              	.LFB7:
 460:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 461:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* PWMPulseCapture_UseStatus */
 462:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 463:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* !PWMPulseCapture_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 465:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 466:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_WritePeriod
 468:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 470:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
 471:Generated_Source\PSoC5/PWMPulseCapture.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWMPulseCapture.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 474:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
 475:Generated_Source\PSoC5/PWMPulseCapture.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWMPulseCapture.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 478:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 16


 479:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 480:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 481:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWMPulseCapture.c **** void PWMPulseCapture_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWMPulseCapture.c **** {
 377              		.loc 1 483 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 83B0     		sub	sp, sp, #12
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 389 0006 0346     		mov	r3, r0
 390 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if(PWMPulseCapture_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWMPulseCapture.c ****         CY_SET_REG16(PWMPulseCapture_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWMPulseCapture.c ****     #else
 487:Generated_Source\PSoC5/PWMPulseCapture.c ****         CY_SET_REG16(PWMPulseCapture_PERIOD_LSB_PTR, period);
 391              		.loc 1 487 0
 392 000a 044A     		ldr	r2, .L25
 393 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 394 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWMPulseCapture.c **** }
 395              		.loc 1 489 0
 396 0010 00BF     		nop
 397 0012 0C37     		adds	r7, r7, #12
 398              		.cfi_def_cfa_offset 4
 399 0014 BD46     		mov	sp, r7
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 0016 80BC     		pop	{r7}
 403              		.cfi_restore 7
 404              		.cfi_def_cfa_offset 0
 405 0018 7047     		bx	lr
 406              	.L26:
 407 001a 00BF     		.align	2
 408              	.L25:
 409 001c 886A0040 		.word	1073769096
 410              		.cfi_endproc
 411              	.LFE7:
 412              		.size	PWMPulseCapture_WritePeriod, .-PWMPulseCapture_WritePeriod
 413              		.section	.text.PWMPulseCapture_WriteCompare,"ax",%progbits
 414              		.align	2
 415              		.global	PWMPulseCapture_WriteCompare
 416              		.thumb
 417              		.thumb_func
 418              		.type	PWMPulseCapture_WriteCompare, %function
 419              	PWMPulseCapture_WriteCompare:
 420              	.LFB8:
 490:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 491:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_UseOneCompareMode)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 17


 492:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 493:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 494:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteCompare
 496:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 498:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 499:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 505:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 508:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 509:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 510:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 511:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 515:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWMPulseCapture.c ****                                        
 518:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 421              		.loc 1 518 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426 0000 80B4     		push	{r7}
 427              		.cfi_def_cfa_offset 4
 428              		.cfi_offset 7, -4
 429 0002 83B0     		sub	sp, sp, #12
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 433 0006 0346     		mov	r3, r0
 434 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 522:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR, compare);
 435              		.loc 1 522 0
 436 000a 044A     		ldr	r2, .L28
 437 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 438 000e 1380     		strh	r3, [r2]	@ movhi
 523:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 525:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if (PWMPulseCapture_PWMMode == PWMPulseCapture__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if(PWMPulseCapture_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWMPulseCapture.c ****                 CY_SET_REG16(PWMPulseCapture_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWMPulseCapture.c ****             #else
 529:Generated_Source\PSoC5/PWMPulseCapture.c ****                 CY_SET_REG16(PWMPulseCapture_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (PWMPulseCapture_UsingFixedFunction) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 18


 531:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_PWMMode == PWMPulseCapture__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 439              		.loc 1 532 0
 440 0010 00BF     		nop
 441 0012 0C37     		adds	r7, r7, #12
 442              		.cfi_def_cfa_offset 4
 443 0014 BD46     		mov	sp, r7
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 0016 80BC     		pop	{r7}
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 0018 7047     		bx	lr
 450              	.L29:
 451 001a 00BF     		.align	2
 452              	.L28:
 453 001c 486A0040 		.word	1073769032
 454              		.cfi_endproc
 455              	.LFE8:
 456              		.size	PWMPulseCapture_WriteCompare, .-PWMPulseCapture_WriteCompare
 457              		.section	.text.PWMPulseCapture_SetInterruptMode,"ax",%progbits
 458              		.align	2
 459              		.global	PWMPulseCapture_SetInterruptMode
 460              		.thumb
 461              		.thumb_func
 462              		.type	PWMPulseCapture_SetInterruptMode, %function
 463              	PWMPulseCapture_SetInterruptMode:
 464              	.LFB9:
 533:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 534:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 535:Generated_Source\PSoC5/PWMPulseCapture.c **** #else
 536:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 537:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 538:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteCompare1
 540:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 542:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 543:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 548:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 551:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 552:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 553:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 554:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWMPulseCapture.c ****                                         
 557:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 558:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 561:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR, compare);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 19


 562:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 564:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 565:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 566:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteCompare2
 568:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 570:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 571:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  mode.
 576:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 577:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 580:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 581:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 582:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 583:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWMPulseCapture.c ****                                         
 586:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 587:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 590:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG16(PWMPulseCapture_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 593:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 595:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_DeadBandUsed)
 596:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 597:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 598:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteDeadTime
 600:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 602:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 603:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 605:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 608:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 609:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 610:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 611:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 614:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(!PWMPulseCapture_DeadBand2_4)
 616:Generated_Source\PSoC5/PWMPulseCapture.c ****             CY_SET_REG8(PWMPulseCapture_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 618:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Otherwise the data has to be masked and offset */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 20


 619:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWMPulseCapture.c ****             PWMPulseCapture_DEADBAND_COUNT &= ((uint8)(~PWMPulseCapture_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 622:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if(PWMPulseCapture_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWMPulseCapture_DEADB
 625:Generated_Source\PSoC5/PWMPulseCapture.c ****                                                     PWMPulseCapture_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWMPulseCapture.c ****             #else
 627:Generated_Source\PSoC5/PWMPulseCapture.c ****                 PWMPulseCapture_DEADBAND_COUNT |= deadtime & PWMPulseCapture_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (PWMPulseCapture_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 630:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (!PWMPulseCapture_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 632:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 633:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 634:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadDeadTime
 636:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 638:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 639:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 641:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 643:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 644:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 645:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 647:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint8 PWMPulseCapture_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 650:Generated_Source\PSoC5/PWMPulseCapture.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(!PWMPulseCapture_DeadBand2_4)
 652:Generated_Source\PSoC5/PWMPulseCapture.c ****             return (CY_GET_REG8(PWMPulseCapture_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 654:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 655:Generated_Source\PSoC5/PWMPulseCapture.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWMPulseCapture.c ****             #if(PWMPulseCapture_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWMPulseCapture.c ****                 return ((uint8)(((uint8)(PWMPulseCapture_DEADBAND_COUNT & PWMPulseCapture_DEADBAND_
 658:Generated_Source\PSoC5/PWMPulseCapture.c ****                                                                            PWMPulseCapture_DEADBAND
 659:Generated_Source\PSoC5/PWMPulseCapture.c ****             #else
 660:Generated_Source\PSoC5/PWMPulseCapture.c ****                 return (PWMPulseCapture_DEADBAND_COUNT & PWMPulseCapture_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWMPulseCapture.c ****             #endif /* (PWMPulseCapture_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (!PWMPulseCapture_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 664:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 666:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_UseStatus || PWMPulseCapture_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 668:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 669:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_SetInterruptMode
 671:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 673:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 674:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  source status register.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 21


 676:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 677:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 680:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 681:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 682:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 683:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 465              		.loc 1 685 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 8
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470 0000 80B4     		push	{r7}
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 7, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              		.cfi_def_cfa_offset 16
 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 477 0006 0346     		mov	r3, r0
 478 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWMPulseCapture.c ****         CY_SET_REG8(PWMPulseCapture_STATUS_MASK_PTR, interruptMode);
 479              		.loc 1 686 0
 480 000a 044A     		ldr	r2, .L31
 481 000c FB79     		ldrb	r3, [r7, #7]
 482 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 483              		.loc 1 687 0
 484 0010 00BF     		nop
 485 0012 0C37     		adds	r7, r7, #12
 486              		.cfi_def_cfa_offset 4
 487 0014 BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 0016 80BC     		pop	{r7}
 491              		.cfi_restore 7
 492              		.cfi_def_cfa_offset 0
 493 0018 7047     		bx	lr
 494              	.L32:
 495 001a 00BF     		.align	2
 496              	.L31:
 497 001c 84650040 		.word	1073767812
 498              		.cfi_endproc
 499              	.LFE9:
 500              		.size	PWMPulseCapture_SetInterruptMode, .-PWMPulseCapture_SetInterruptMode
 501              		.section	.text.PWMPulseCapture_ReadStatusRegister,"ax",%progbits
 502              		.align	2
 503              		.global	PWMPulseCapture_ReadStatusRegister
 504              		.thumb
 505              		.thumb_func
 506              		.type	PWMPulseCapture_ReadStatusRegister, %function
 507              	PWMPulseCapture_ReadStatusRegister:
 508              	.LFB10:
 688:Generated_Source\PSoC5/PWMPulseCapture.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 22


 689:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 690:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadStatusRegister
 692:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 694:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 695:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 697:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 699:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 700:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 701:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 710:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint8 PWMPulseCapture_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 509              		.loc 1 712 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG8(PWMPulseCapture_STATUS_PTR));
 519              		.loc 1 713 0
 520 0004 034B     		ldr	r3, .L35
 521 0006 1B78     		ldrb	r3, [r3]
 522 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 523              		.loc 1 714 0
 524 000a 1846     		mov	r0, r3
 525 000c BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 000e 80BC     		pop	{r7}
 529              		.cfi_restore 7
 530              		.cfi_def_cfa_offset 0
 531 0010 7047     		bx	lr
 532              	.L36:
 533 0012 00BF     		.align	2
 534              	.L35:
 535 0014 64650040 		.word	1073767780
 536              		.cfi_endproc
 537              	.LFE10:
 538              		.size	PWMPulseCapture_ReadStatusRegister, .-PWMPulseCapture_ReadStatusRegister
 539              		.section	.text.PWMPulseCapture_ReadControlRegister,"ax",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 23


 540              		.align	2
 541              		.global	PWMPulseCapture_ReadControlRegister
 542              		.thumb
 543              		.thumb_func
 544              		.type	PWMPulseCapture_ReadControlRegister, %function
 545              	PWMPulseCapture_ReadControlRegister:
 546              	.LFB11:
 715:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 716:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* (PWMPulseCapture_UseStatus || PWMPulseCapture_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 718:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 719:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_UseControl)
 720:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 721:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 722:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadControlRegister
 724:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 726:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 727:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 730:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 732:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 733:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 734:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 736:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint8 PWMPulseCapture_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 547              		.loc 1 738 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552 0000 80B4     		push	{r7}
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 83B0     		sub	sp, sp, #12
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWMPulseCapture.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 741:Generated_Source\PSoC5/PWMPulseCapture.c ****         result = CY_GET_REG8(PWMPulseCapture_CONTROL_PTR);
 559              		.loc 1 741 0
 560 0006 044B     		ldr	r3, .L39
 561 0008 1B78     		ldrb	r3, [r3]
 562 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (result);
 563              		.loc 1 742 0
 564 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 565              		.loc 1 743 0
 566 000e 1846     		mov	r0, r3
 567 0010 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 24


 568              		.cfi_def_cfa_offset 4
 569 0012 BD46     		mov	sp, r7
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 0014 80BC     		pop	{r7}
 573              		.cfi_restore 7
 574              		.cfi_def_cfa_offset 0
 575 0016 7047     		bx	lr
 576              	.L40:
 577              		.align	2
 578              	.L39:
 579 0018 74650040 		.word	1073767796
 580              		.cfi_endproc
 581              	.LFE11:
 582              		.size	PWMPulseCapture_ReadControlRegister, .-PWMPulseCapture_ReadControlRegister
 583              		.section	.text.PWMPulseCapture_WriteControlRegister,"ax",%progbits
 584              		.align	2
 585              		.global	PWMPulseCapture_WriteControlRegister
 586              		.thumb
 587              		.thumb_func
 588              		.type	PWMPulseCapture_WriteControlRegister, %function
 589              	PWMPulseCapture_WriteControlRegister:
 590              	.LFB12:
 744:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 745:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 746:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_WriteControlRegister
 748:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 750:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 751:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 754:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 761:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 762:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 763:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 764:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWMPulseCapture.c ****     void PWMPulseCapture_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 591              		.loc 1 766 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 8
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 83B0     		sub	sp, sp, #12
 600              		.cfi_def_cfa_offset 16
 601 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 25


 602              		.cfi_def_cfa_register 7
 603 0006 0346     		mov	r3, r0
 604 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWMPulseCapture.c ****         CY_SET_REG8(PWMPulseCapture_CONTROL_PTR, control);
 605              		.loc 1 767 0
 606 000a 044A     		ldr	r2, .L42
 607 000c FB79     		ldrb	r3, [r7, #7]
 608 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 609              		.loc 1 768 0
 610 0010 00BF     		nop
 611 0012 0C37     		adds	r7, r7, #12
 612              		.cfi_def_cfa_offset 4
 613 0014 BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0016 80BC     		pop	{r7}
 617              		.cfi_restore 7
 618              		.cfi_def_cfa_offset 0
 619 0018 7047     		bx	lr
 620              	.L43:
 621 001a 00BF     		.align	2
 622              	.L42:
 623 001c 74650040 		.word	1073767796
 624              		.cfi_endproc
 625              	.LFE12:
 626              		.size	PWMPulseCapture_WriteControlRegister, .-PWMPulseCapture_WriteControlRegister
 627              		.section	.text.PWMPulseCapture_ReadCapture,"ax",%progbits
 628              		.align	2
 629              		.global	PWMPulseCapture_ReadCapture
 630              		.thumb
 631              		.thumb_func
 632              		.type	PWMPulseCapture_ReadCapture, %function
 633              	PWMPulseCapture_ReadCapture:
 634              	.LFB13:
 769:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 770:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* (PWMPulseCapture_UseControl) */
 771:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 772:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 773:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (!PWMPulseCapture_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 775:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 776:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadCapture
 778:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 780:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 781:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 783:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 785:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 786:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 787:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 789:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint16 PWMPulseCapture_ReadCapture(void) 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 26


 791:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 635              		.loc 1 791 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640 0000 80B4     		push	{r7}
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG16(PWMPulseCapture_CAPTURE_LSB_PTR));
 645              		.loc 1 792 0
 646 0004 034B     		ldr	r3, .L46
 647 0006 1B88     		ldrh	r3, [r3]	@ movhi
 648 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 649              		.loc 1 793 0
 650 000a 1846     		mov	r0, r3
 651 000c BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 000e 80BC     		pop	{r7}
 655              		.cfi_restore 7
 656              		.cfi_def_cfa_offset 0
 657 0010 7047     		bx	lr
 658              	.L47:
 659 0012 00BF     		.align	2
 660              	.L46:
 661 0014 A86A0040 		.word	1073769128
 662              		.cfi_endproc
 663              	.LFE13:
 664              		.size	PWMPulseCapture_ReadCapture, .-PWMPulseCapture_ReadCapture
 665              		.section	.text.PWMPulseCapture_ReadCompare,"ax",%progbits
 666              		.align	2
 667              		.global	PWMPulseCapture_ReadCompare
 668              		.thumb
 669              		.thumb_func
 670              		.type	PWMPulseCapture_ReadCompare, %function
 671              	PWMPulseCapture_ReadCompare:
 672              	.LFB14:
 794:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 795:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* (!PWMPulseCapture_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 797:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 798:Generated_Source\PSoC5/PWMPulseCapture.c **** #if (PWMPulseCapture_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 800:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 801:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadCompare
 803:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 805:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 806:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 809:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 27


 810:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 811:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 812:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 813:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 815:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint16 PWMPulseCapture_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 673              		.loc 1 817 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWMPulseCapture.c ****         #if(PWMPulseCapture_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWMPulseCapture.c ****             return ((uint16)CY_GET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWMPulseCapture.c ****         #else
 821:Generated_Source\PSoC5/PWMPulseCapture.c ****             return (CY_GET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR));
 683              		.loc 1 821 0
 684 0004 034B     		ldr	r3, .L50
 685 0006 1B88     		ldrh	r3, [r3]	@ movhi
 686 0008 9BB2     		uxth	r3, r3
 822:Generated_Source\PSoC5/PWMPulseCapture.c ****         #endif /* (PWMPulseCapture_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 687              		.loc 1 823 0
 688 000a 1846     		mov	r0, r3
 689 000c BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 000e 80BC     		pop	{r7}
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 0010 7047     		bx	lr
 696              	.L51:
 697 0012 00BF     		.align	2
 698              	.L50:
 699 0014 486A0040 		.word	1073769032
 700              		.cfi_endproc
 701              	.LFE14:
 702              		.size	PWMPulseCapture_ReadCompare, .-PWMPulseCapture_ReadCompare
 703              		.section	.text.PWMPulseCapture_ReadPeriod,"ax",%progbits
 704              		.align	2
 705              		.global	PWMPulseCapture_ReadPeriod
 706              		.thumb
 707              		.thumb_func
 708              		.type	PWMPulseCapture_ReadPeriod, %function
 709              	PWMPulseCapture_ReadPeriod:
 710              	.LFB15:
 824:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 825:Generated_Source\PSoC5/PWMPulseCapture.c **** #else
 826:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 827:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 828:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 28


 829:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadCompare1
 830:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 832:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 833:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 835:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 837:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 838:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 839:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 841:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint16 PWMPulseCapture_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 844:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG16(PWMPulseCapture_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 846:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 847:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 848:Generated_Source\PSoC5/PWMPulseCapture.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Function Name: PWMPulseCapture_ReadCompare2
 850:Generated_Source\PSoC5/PWMPulseCapture.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 852:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Summary:
 853:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 855:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  None
 857:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 858:Generated_Source\PSoC5/PWMPulseCapture.c ****     * Return:
 859:Generated_Source\PSoC5/PWMPulseCapture.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWMPulseCapture.c ****     *
 861:Generated_Source\PSoC5/PWMPulseCapture.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWMPulseCapture.c ****     uint16 PWMPulseCapture_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWMPulseCapture.c ****     {
 864:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG16(PWMPulseCapture_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWMPulseCapture.c ****     }
 866:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 867:Generated_Source\PSoC5/PWMPulseCapture.c **** #endif /* (PWMPulseCapture_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 869:Generated_Source\PSoC5/PWMPulseCapture.c **** 
 870:Generated_Source\PSoC5/PWMPulseCapture.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWMPulseCapture.c **** * Function Name: PWMPulseCapture_ReadPeriod
 872:Generated_Source\PSoC5/PWMPulseCapture.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 874:Generated_Source\PSoC5/PWMPulseCapture.c **** * Summary:
 875:Generated_Source\PSoC5/PWMPulseCapture.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 877:Generated_Source\PSoC5/PWMPulseCapture.c **** * Parameters:
 878:Generated_Source\PSoC5/PWMPulseCapture.c **** *  None
 879:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 880:Generated_Source\PSoC5/PWMPulseCapture.c **** * Return:
 881:Generated_Source\PSoC5/PWMPulseCapture.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWMPulseCapture.c **** *
 883:Generated_Source\PSoC5/PWMPulseCapture.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWMPulseCapture.c **** uint16 PWMPulseCapture_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWMPulseCapture.c **** {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 29


 711              		.loc 1 885 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716 0000 80B4     		push	{r7}
 717              		.cfi_def_cfa_offset 4
 718              		.cfi_offset 7, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWMPulseCapture.c ****     #if(PWMPulseCapture_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWMPulseCapture.c ****         return ((uint16)CY_GET_REG16(PWMPulseCapture_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWMPulseCapture.c ****     #else
 889:Generated_Source\PSoC5/PWMPulseCapture.c ****         return (CY_GET_REG16(PWMPulseCapture_PERIOD_LSB_PTR));
 721              		.loc 1 889 0
 722 0004 034B     		ldr	r3, .L54
 723 0006 1B88     		ldrh	r3, [r3]	@ movhi
 724 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWMPulseCapture.c ****     #endif /* (PWMPulseCapture_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWMPulseCapture.c **** }
 725              		.loc 1 891 0
 726 000a 1846     		mov	r0, r3
 727 000c BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 000e 80BC     		pop	{r7}
 731              		.cfi_restore 7
 732              		.cfi_def_cfa_offset 0
 733 0010 7047     		bx	lr
 734              	.L55:
 735 0012 00BF     		.align	2
 736              	.L54:
 737 0014 886A0040 		.word	1073769096
 738              		.cfi_endproc
 739              	.LFE15:
 740              		.size	PWMPulseCapture_ReadPeriod, .-PWMPulseCapture_ReadPeriod
 741              		.text
 742              	.Letext0:
 743              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 744              		.section	.debug_info,"",%progbits
 745              	.Ldebug_info0:
 746 0000 A3020000 		.4byte	0x2a3
 747 0004 0400     		.2byte	0x4
 748 0006 00000000 		.4byte	.Ldebug_abbrev0
 749 000a 04       		.byte	0x4
 750 000b 01       		.uleb128 0x1
 751 000c 2F000000 		.4byte	.LASF41
 752 0010 0C       		.byte	0xc
 753 0011 06000000 		.4byte	.LASF42
 754 0015 5E030000 		.4byte	.LASF43
 755 0019 00000000 		.4byte	.Ldebug_ranges0+0
 756 001d 00000000 		.4byte	0
 757 0021 00000000 		.4byte	.Ldebug_line0
 758 0025 02       		.uleb128 0x2
 759 0026 01       		.byte	0x1
 760 0027 06       		.byte	0x6
 761 0028 D5030000 		.4byte	.LASF0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 30


 762 002c 02       		.uleb128 0x2
 763 002d 01       		.byte	0x1
 764 002e 08       		.byte	0x8
 765 002f 30010000 		.4byte	.LASF1
 766 0033 02       		.uleb128 0x2
 767 0034 02       		.byte	0x2
 768 0035 05       		.byte	0x5
 769 0036 01010000 		.4byte	.LASF2
 770 003a 02       		.uleb128 0x2
 771 003b 02       		.byte	0x2
 772 003c 07       		.byte	0x7
 773 003d EE000000 		.4byte	.LASF3
 774 0041 02       		.uleb128 0x2
 775 0042 04       		.byte	0x4
 776 0043 05       		.byte	0x5
 777 0044 E5000000 		.4byte	.LASF4
 778 0048 02       		.uleb128 0x2
 779 0049 04       		.byte	0x4
 780 004a 07       		.byte	0x7
 781 004b 5F010000 		.4byte	.LASF5
 782 004f 02       		.uleb128 0x2
 783 0050 08       		.byte	0x8
 784 0051 05       		.byte	0x5
 785 0052 AC020000 		.4byte	.LASF6
 786 0056 02       		.uleb128 0x2
 787 0057 08       		.byte	0x8
 788 0058 07       		.byte	0x7
 789 0059 0C020000 		.4byte	.LASF7
 790 005d 03       		.uleb128 0x3
 791 005e 04       		.byte	0x4
 792 005f 05       		.byte	0x5
 793 0060 696E7400 		.ascii	"int\000"
 794 0064 02       		.uleb128 0x2
 795 0065 04       		.byte	0x4
 796 0066 07       		.byte	0x7
 797 0067 FF010000 		.4byte	.LASF8
 798 006b 04       		.uleb128 0x4
 799 006c 71010000 		.4byte	.LASF9
 800 0070 02       		.byte	0x2
 801 0071 E401     		.2byte	0x1e4
 802 0073 2C000000 		.4byte	0x2c
 803 0077 04       		.uleb128 0x4
 804 0078 F8010000 		.4byte	.LASF10
 805 007c 02       		.byte	0x2
 806 007d E501     		.2byte	0x1e5
 807 007f 3A000000 		.4byte	0x3a
 808 0083 02       		.uleb128 0x2
 809 0084 04       		.byte	0x4
 810 0085 04       		.byte	0x4
 811 0086 CF030000 		.4byte	.LASF11
 812 008a 02       		.uleb128 0x2
 813 008b 08       		.byte	0x8
 814 008c 04       		.byte	0x4
 815 008d B9010000 		.4byte	.LASF12
 816 0091 02       		.uleb128 0x2
 817 0092 01       		.byte	0x1
 818 0093 08       		.byte	0x8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 31


 819 0094 59030000 		.4byte	.LASF13
 820 0098 04       		.uleb128 0x4
 821 0099 5A010000 		.4byte	.LASF14
 822 009d 02       		.byte	0x2
 823 009e 8E02     		.2byte	0x28e
 824 00a0 A4000000 		.4byte	0xa4
 825 00a4 05       		.uleb128 0x5
 826 00a5 6B000000 		.4byte	0x6b
 827 00a9 04       		.uleb128 0x4
 828 00aa 00000000 		.4byte	.LASF15
 829 00ae 02       		.byte	0x2
 830 00af 8F02     		.2byte	0x28f
 831 00b1 B5000000 		.4byte	0xb5
 832 00b5 05       		.uleb128 0x5
 833 00b6 77000000 		.4byte	0x77
 834 00ba 02       		.uleb128 0x2
 835 00bb 08       		.byte	0x8
 836 00bc 04       		.byte	0x4
 837 00bd 73020000 		.4byte	.LASF16
 838 00c1 02       		.uleb128 0x2
 839 00c2 04       		.byte	0x4
 840 00c3 07       		.byte	0x7
 841 00c4 7F020000 		.4byte	.LASF17
 842 00c8 06       		.uleb128 0x6
 843 00c9 E9030000 		.4byte	.LASF20
 844 00cd 01       		.byte	0x1
 845 00ce 37       		.byte	0x37
 846 00cf 00000000 		.4byte	.LFB0
 847 00d3 24000000 		.4byte	.LFE0-.LFB0
 848 00d7 01       		.uleb128 0x1
 849 00d8 9C       		.byte	0x9c
 850 00d9 07       		.uleb128 0x7
 851 00da 7F010000 		.4byte	.LASF23
 852 00de 01       		.byte	0x1
 853 00df 54       		.byte	0x54
 854 00e0 00000000 		.4byte	.LFB1
 855 00e4 94000000 		.4byte	.LFE1-.LFB1
 856 00e8 01       		.uleb128 0x1
 857 00e9 9C       		.byte	0x9c
 858 00ea 0B010000 		.4byte	0x10b
 859 00ee 08       		.uleb128 0x8
 860 00ef 33030000 		.4byte	.LASF18
 861 00f3 01       		.byte	0x1
 862 00f4 57       		.byte	0x57
 863 00f5 6B000000 		.4byte	0x6b
 864 00f9 02       		.uleb128 0x2
 865 00fa 91       		.byte	0x91
 866 00fb 77       		.sleb128 -9
 867 00fc 08       		.uleb128 0x8
 868 00fd B0030000 		.4byte	.LASF19
 869 0101 01       		.byte	0x1
 870 0102 5D       		.byte	0x5d
 871 0103 6B000000 		.4byte	0x6b
 872 0107 02       		.uleb128 0x2
 873 0108 91       		.byte	0x91
 874 0109 76       		.sleb128 -10
 875 010a 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 32


 876 010b 09       		.uleb128 0x9
 877 010c DD020000 		.4byte	.LASF21
 878 0110 01       		.byte	0x1
 879 0111 C7       		.byte	0xc7
 880 0112 00000000 		.4byte	.LFB2
 881 0116 20000000 		.4byte	.LFE2-.LFB2
 882 011a 01       		.uleb128 0x1
 883 011b 9C       		.byte	0x9c
 884 011c 09       		.uleb128 0x9
 885 011d BA020000 		.4byte	.LASF22
 886 0121 01       		.byte	0x1
 887 0122 E9       		.byte	0xe9
 888 0123 00000000 		.4byte	.LFB3
 889 0127 20000000 		.4byte	.LFE3-.LFB3
 890 012b 01       		.uleb128 0x1
 891 012c 9C       		.byte	0x9c
 892 012d 0A       		.uleb128 0xa
 893 012e 23020000 		.4byte	.LASF24
 894 0132 01       		.byte	0x1
 895 0133 9301     		.2byte	0x193
 896 0135 00000000 		.4byte	.LFB4
 897 0139 20000000 		.4byte	.LFE4-.LFB4
 898 013d 01       		.uleb128 0x1
 899 013e 9C       		.byte	0x9c
 900 013f 53010000 		.4byte	0x153
 901 0143 0B       		.uleb128 0xb
 902 0144 28010000 		.4byte	.LASF27
 903 0148 01       		.byte	0x1
 904 0149 9301     		.2byte	0x193
 905 014b 77000000 		.4byte	0x77
 906 014f 02       		.uleb128 0x2
 907 0150 91       		.byte	0x91
 908 0151 76       		.sleb128 -10
 909 0152 00       		.byte	0
 910 0153 0C       		.uleb128 0xc
 911 0154 DC010000 		.4byte	.LASF33
 912 0158 01       		.byte	0x1
 913 0159 A901     		.2byte	0x1a9
 914 015b 77000000 		.4byte	0x77
 915 015f 00000000 		.4byte	.LFB5
 916 0163 20000000 		.4byte	.LFE5-.LFB5
 917 0167 01       		.uleb128 0x1
 918 0168 9C       		.byte	0x9c
 919 0169 0D       		.uleb128 0xd
 920 016a C4000000 		.4byte	.LASF25
 921 016e 01       		.byte	0x1
 922 016f C501     		.2byte	0x1c5
 923 0171 00000000 		.4byte	.LFB6
 924 0175 1C000000 		.4byte	.LFE6-.LFB6
 925 0179 01       		.uleb128 0x1
 926 017a 9C       		.byte	0x9c
 927 017b 0A       		.uleb128 0xa
 928 017c 17030000 		.4byte	.LASF26
 929 0180 01       		.byte	0x1
 930 0181 E201     		.2byte	0x1e2
 931 0183 00000000 		.4byte	.LFB7
 932 0187 20000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 33


 933 018b 01       		.uleb128 0x1
 934 018c 9C       		.byte	0x9c
 935 018d A1010000 		.4byte	0x1a1
 936 0191 0B       		.uleb128 0xb
 937 0192 DE000000 		.4byte	.LASF28
 938 0196 01       		.byte	0x1
 939 0197 E201     		.2byte	0x1e2
 940 0199 77000000 		.4byte	0x77
 941 019d 02       		.uleb128 0x2
 942 019e 91       		.byte	0x91
 943 019f 76       		.sleb128 -10
 944 01a0 00       		.byte	0
 945 01a1 0A       		.uleb128 0xa
 946 01a2 0B010000 		.4byte	.LASF29
 947 01a6 01       		.byte	0x1
 948 01a7 0402     		.2byte	0x204
 949 01a9 00000000 		.4byte	.LFB8
 950 01ad 20000000 		.4byte	.LFE8-.LFB8
 951 01b1 01       		.uleb128 0x1
 952 01b2 9C       		.byte	0x9c
 953 01b3 C7010000 		.4byte	0x1c7
 954 01b7 0B       		.uleb128 0xb
 955 01b8 E1030000 		.4byte	.LASF30
 956 01bc 01       		.byte	0x1
 957 01bd 0402     		.2byte	0x204
 958 01bf 77000000 		.4byte	0x77
 959 01c3 02       		.uleb128 0x2
 960 01c4 91       		.byte	0x91
 961 01c5 76       		.sleb128 -10
 962 01c6 00       		.byte	0
 963 01c7 0A       		.uleb128 0xa
 964 01c8 38030000 		.4byte	.LASF31
 965 01cc 01       		.byte	0x1
 966 01cd AC02     		.2byte	0x2ac
 967 01cf 00000000 		.4byte	.LFB9
 968 01d3 20000000 		.4byte	.LFE9-.LFB9
 969 01d7 01       		.uleb128 0x1
 970 01d8 9C       		.byte	0x9c
 971 01d9 ED010000 		.4byte	0x1ed
 972 01dd 0B       		.uleb128 0xb
 973 01de CF020000 		.4byte	.LASF32
 974 01e2 01       		.byte	0x1
 975 01e3 AC02     		.2byte	0x2ac
 976 01e5 6B000000 		.4byte	0x6b
 977 01e9 02       		.uleb128 0x2
 978 01ea 91       		.byte	0x91
 979 01eb 77       		.sleb128 -9
 980 01ec 00       		.byte	0
 981 01ed 0C       		.uleb128 0xc
 982 01ee F4020000 		.4byte	.LASF34
 983 01f2 01       		.byte	0x1
 984 01f3 C702     		.2byte	0x2c7
 985 01f5 6B000000 		.4byte	0x6b
 986 01f9 00000000 		.4byte	.LFB10
 987 01fd 18000000 		.4byte	.LFE10-.LFB10
 988 0201 01       		.uleb128 0x1
 989 0202 9C       		.byte	0x9c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 34


 990 0203 0E       		.uleb128 0xe
 991 0204 88020000 		.4byte	.LASF44
 992 0208 01       		.byte	0x1
 993 0209 E102     		.2byte	0x2e1
 994 020b 6B000000 		.4byte	0x6b
 995 020f 00000000 		.4byte	.LFB11
 996 0213 1C000000 		.4byte	.LFE11-.LFB11
 997 0217 01       		.uleb128 0x1
 998 0218 9C       		.byte	0x9c
 999 0219 2D020000 		.4byte	0x22d
 1000 021d 0F       		.uleb128 0xf
 1001 021e BD000000 		.4byte	.LASF35
 1002 0222 01       		.byte	0x1
 1003 0223 E302     		.2byte	0x2e3
 1004 0225 6B000000 		.4byte	0x6b
 1005 0229 02       		.uleb128 0x2
 1006 022a 91       		.byte	0x91
 1007 022b 77       		.sleb128 -9
 1008 022c 00       		.byte	0
 1009 022d 0A       		.uleb128 0xa
 1010 022e 94010000 		.4byte	.LASF36
 1011 0232 01       		.byte	0x1
 1012 0233 FD02     		.2byte	0x2fd
 1013 0235 00000000 		.4byte	.LFB12
 1014 0239 20000000 		.4byte	.LFE12-.LFB12
 1015 023d 01       		.uleb128 0x1
 1016 023e 9C       		.byte	0x9c
 1017 023f 53020000 		.4byte	0x253
 1018 0243 0B       		.uleb128 0xb
 1019 0244 77010000 		.4byte	.LASF37
 1020 0248 01       		.byte	0x1
 1021 0249 FD02     		.2byte	0x2fd
 1022 024b 6B000000 		.4byte	0x6b
 1023 024f 02       		.uleb128 0x2
 1024 0250 91       		.byte	0x91
 1025 0251 77       		.sleb128 -9
 1026 0252 00       		.byte	0
 1027 0253 0C       		.uleb128 0xc
 1028 0254 3E010000 		.4byte	.LASF38
 1029 0258 01       		.byte	0x1
 1030 0259 1603     		.2byte	0x316
 1031 025b 77000000 		.4byte	0x77
 1032 025f 00000000 		.4byte	.LFB13
 1033 0263 18000000 		.4byte	.LFE13-.LFB13
 1034 0267 01       		.uleb128 0x1
 1035 0268 9C       		.byte	0x9c
 1036 0269 0C       		.uleb128 0xc
 1037 026a C0010000 		.4byte	.LASF39
 1038 026e 01       		.byte	0x1
 1039 026f 3003     		.2byte	0x330
 1040 0271 77000000 		.4byte	0x77
 1041 0275 00000000 		.4byte	.LFB14
 1042 0279 18000000 		.4byte	.LFE14-.LFB14
 1043 027d 01       		.uleb128 0x1
 1044 027e 9C       		.byte	0x9c
 1045 027f 0C       		.uleb128 0xc
 1046 0280 58020000 		.4byte	.LASF40
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 35


 1047 0284 01       		.byte	0x1
 1048 0285 7403     		.2byte	0x374
 1049 0287 77000000 		.4byte	0x77
 1050 028b 00000000 		.4byte	.LFB15
 1051 028f 18000000 		.4byte	.LFE15-.LFB15
 1052 0293 01       		.uleb128 0x1
 1053 0294 9C       		.byte	0x9c
 1054 0295 10       		.uleb128 0x10
 1055 0296 40020000 		.4byte	.LASF45
 1056 029a 01       		.byte	0x1
 1057 029b 20       		.byte	0x20
 1058 029c 6B000000 		.4byte	0x6b
 1059 02a0 05       		.uleb128 0x5
 1060 02a1 03       		.byte	0x3
 1061 02a2 00000000 		.4byte	PWMPulseCapture_initVar
 1062 02a6 00       		.byte	0
 1063              		.section	.debug_abbrev,"",%progbits
 1064              	.Ldebug_abbrev0:
 1065 0000 01       		.uleb128 0x1
 1066 0001 11       		.uleb128 0x11
 1067 0002 01       		.byte	0x1
 1068 0003 25       		.uleb128 0x25
 1069 0004 0E       		.uleb128 0xe
 1070 0005 13       		.uleb128 0x13
 1071 0006 0B       		.uleb128 0xb
 1072 0007 03       		.uleb128 0x3
 1073 0008 0E       		.uleb128 0xe
 1074 0009 1B       		.uleb128 0x1b
 1075 000a 0E       		.uleb128 0xe
 1076 000b 55       		.uleb128 0x55
 1077 000c 17       		.uleb128 0x17
 1078 000d 11       		.uleb128 0x11
 1079 000e 01       		.uleb128 0x1
 1080 000f 10       		.uleb128 0x10
 1081 0010 17       		.uleb128 0x17
 1082 0011 00       		.byte	0
 1083 0012 00       		.byte	0
 1084 0013 02       		.uleb128 0x2
 1085 0014 24       		.uleb128 0x24
 1086 0015 00       		.byte	0
 1087 0016 0B       		.uleb128 0xb
 1088 0017 0B       		.uleb128 0xb
 1089 0018 3E       		.uleb128 0x3e
 1090 0019 0B       		.uleb128 0xb
 1091 001a 03       		.uleb128 0x3
 1092 001b 0E       		.uleb128 0xe
 1093 001c 00       		.byte	0
 1094 001d 00       		.byte	0
 1095 001e 03       		.uleb128 0x3
 1096 001f 24       		.uleb128 0x24
 1097 0020 00       		.byte	0
 1098 0021 0B       		.uleb128 0xb
 1099 0022 0B       		.uleb128 0xb
 1100 0023 3E       		.uleb128 0x3e
 1101 0024 0B       		.uleb128 0xb
 1102 0025 03       		.uleb128 0x3
 1103 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 36


 1104 0027 00       		.byte	0
 1105 0028 00       		.byte	0
 1106 0029 04       		.uleb128 0x4
 1107 002a 16       		.uleb128 0x16
 1108 002b 00       		.byte	0
 1109 002c 03       		.uleb128 0x3
 1110 002d 0E       		.uleb128 0xe
 1111 002e 3A       		.uleb128 0x3a
 1112 002f 0B       		.uleb128 0xb
 1113 0030 3B       		.uleb128 0x3b
 1114 0031 05       		.uleb128 0x5
 1115 0032 49       		.uleb128 0x49
 1116 0033 13       		.uleb128 0x13
 1117 0034 00       		.byte	0
 1118 0035 00       		.byte	0
 1119 0036 05       		.uleb128 0x5
 1120 0037 35       		.uleb128 0x35
 1121 0038 00       		.byte	0
 1122 0039 49       		.uleb128 0x49
 1123 003a 13       		.uleb128 0x13
 1124 003b 00       		.byte	0
 1125 003c 00       		.byte	0
 1126 003d 06       		.uleb128 0x6
 1127 003e 2E       		.uleb128 0x2e
 1128 003f 00       		.byte	0
 1129 0040 3F       		.uleb128 0x3f
 1130 0041 19       		.uleb128 0x19
 1131 0042 03       		.uleb128 0x3
 1132 0043 0E       		.uleb128 0xe
 1133 0044 3A       		.uleb128 0x3a
 1134 0045 0B       		.uleb128 0xb
 1135 0046 3B       		.uleb128 0x3b
 1136 0047 0B       		.uleb128 0xb
 1137 0048 27       		.uleb128 0x27
 1138 0049 19       		.uleb128 0x19
 1139 004a 11       		.uleb128 0x11
 1140 004b 01       		.uleb128 0x1
 1141 004c 12       		.uleb128 0x12
 1142 004d 06       		.uleb128 0x6
 1143 004e 40       		.uleb128 0x40
 1144 004f 18       		.uleb128 0x18
 1145 0050 9642     		.uleb128 0x2116
 1146 0052 19       		.uleb128 0x19
 1147 0053 00       		.byte	0
 1148 0054 00       		.byte	0
 1149 0055 07       		.uleb128 0x7
 1150 0056 2E       		.uleb128 0x2e
 1151 0057 01       		.byte	0x1
 1152 0058 3F       		.uleb128 0x3f
 1153 0059 19       		.uleb128 0x19
 1154 005a 03       		.uleb128 0x3
 1155 005b 0E       		.uleb128 0xe
 1156 005c 3A       		.uleb128 0x3a
 1157 005d 0B       		.uleb128 0xb
 1158 005e 3B       		.uleb128 0x3b
 1159 005f 0B       		.uleb128 0xb
 1160 0060 27       		.uleb128 0x27
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 37


 1161 0061 19       		.uleb128 0x19
 1162 0062 11       		.uleb128 0x11
 1163 0063 01       		.uleb128 0x1
 1164 0064 12       		.uleb128 0x12
 1165 0065 06       		.uleb128 0x6
 1166 0066 40       		.uleb128 0x40
 1167 0067 18       		.uleb128 0x18
 1168 0068 9642     		.uleb128 0x2116
 1169 006a 19       		.uleb128 0x19
 1170 006b 01       		.uleb128 0x1
 1171 006c 13       		.uleb128 0x13
 1172 006d 00       		.byte	0
 1173 006e 00       		.byte	0
 1174 006f 08       		.uleb128 0x8
 1175 0070 34       		.uleb128 0x34
 1176 0071 00       		.byte	0
 1177 0072 03       		.uleb128 0x3
 1178 0073 0E       		.uleb128 0xe
 1179 0074 3A       		.uleb128 0x3a
 1180 0075 0B       		.uleb128 0xb
 1181 0076 3B       		.uleb128 0x3b
 1182 0077 0B       		.uleb128 0xb
 1183 0078 49       		.uleb128 0x49
 1184 0079 13       		.uleb128 0x13
 1185 007a 02       		.uleb128 0x2
 1186 007b 18       		.uleb128 0x18
 1187 007c 00       		.byte	0
 1188 007d 00       		.byte	0
 1189 007e 09       		.uleb128 0x9
 1190 007f 2E       		.uleb128 0x2e
 1191 0080 00       		.byte	0
 1192 0081 3F       		.uleb128 0x3f
 1193 0082 19       		.uleb128 0x19
 1194 0083 03       		.uleb128 0x3
 1195 0084 0E       		.uleb128 0xe
 1196 0085 3A       		.uleb128 0x3a
 1197 0086 0B       		.uleb128 0xb
 1198 0087 3B       		.uleb128 0x3b
 1199 0088 0B       		.uleb128 0xb
 1200 0089 27       		.uleb128 0x27
 1201 008a 19       		.uleb128 0x19
 1202 008b 11       		.uleb128 0x11
 1203 008c 01       		.uleb128 0x1
 1204 008d 12       		.uleb128 0x12
 1205 008e 06       		.uleb128 0x6
 1206 008f 40       		.uleb128 0x40
 1207 0090 18       		.uleb128 0x18
 1208 0091 9742     		.uleb128 0x2117
 1209 0093 19       		.uleb128 0x19
 1210 0094 00       		.byte	0
 1211 0095 00       		.byte	0
 1212 0096 0A       		.uleb128 0xa
 1213 0097 2E       		.uleb128 0x2e
 1214 0098 01       		.byte	0x1
 1215 0099 3F       		.uleb128 0x3f
 1216 009a 19       		.uleb128 0x19
 1217 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 38


 1218 009c 0E       		.uleb128 0xe
 1219 009d 3A       		.uleb128 0x3a
 1220 009e 0B       		.uleb128 0xb
 1221 009f 3B       		.uleb128 0x3b
 1222 00a0 05       		.uleb128 0x5
 1223 00a1 27       		.uleb128 0x27
 1224 00a2 19       		.uleb128 0x19
 1225 00a3 11       		.uleb128 0x11
 1226 00a4 01       		.uleb128 0x1
 1227 00a5 12       		.uleb128 0x12
 1228 00a6 06       		.uleb128 0x6
 1229 00a7 40       		.uleb128 0x40
 1230 00a8 18       		.uleb128 0x18
 1231 00a9 9742     		.uleb128 0x2117
 1232 00ab 19       		.uleb128 0x19
 1233 00ac 01       		.uleb128 0x1
 1234 00ad 13       		.uleb128 0x13
 1235 00ae 00       		.byte	0
 1236 00af 00       		.byte	0
 1237 00b0 0B       		.uleb128 0xb
 1238 00b1 05       		.uleb128 0x5
 1239 00b2 00       		.byte	0
 1240 00b3 03       		.uleb128 0x3
 1241 00b4 0E       		.uleb128 0xe
 1242 00b5 3A       		.uleb128 0x3a
 1243 00b6 0B       		.uleb128 0xb
 1244 00b7 3B       		.uleb128 0x3b
 1245 00b8 05       		.uleb128 0x5
 1246 00b9 49       		.uleb128 0x49
 1247 00ba 13       		.uleb128 0x13
 1248 00bb 02       		.uleb128 0x2
 1249 00bc 18       		.uleb128 0x18
 1250 00bd 00       		.byte	0
 1251 00be 00       		.byte	0
 1252 00bf 0C       		.uleb128 0xc
 1253 00c0 2E       		.uleb128 0x2e
 1254 00c1 00       		.byte	0
 1255 00c2 3F       		.uleb128 0x3f
 1256 00c3 19       		.uleb128 0x19
 1257 00c4 03       		.uleb128 0x3
 1258 00c5 0E       		.uleb128 0xe
 1259 00c6 3A       		.uleb128 0x3a
 1260 00c7 0B       		.uleb128 0xb
 1261 00c8 3B       		.uleb128 0x3b
 1262 00c9 05       		.uleb128 0x5
 1263 00ca 27       		.uleb128 0x27
 1264 00cb 19       		.uleb128 0x19
 1265 00cc 49       		.uleb128 0x49
 1266 00cd 13       		.uleb128 0x13
 1267 00ce 11       		.uleb128 0x11
 1268 00cf 01       		.uleb128 0x1
 1269 00d0 12       		.uleb128 0x12
 1270 00d1 06       		.uleb128 0x6
 1271 00d2 40       		.uleb128 0x40
 1272 00d3 18       		.uleb128 0x18
 1273 00d4 9742     		.uleb128 0x2117
 1274 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 39


 1275 00d7 00       		.byte	0
 1276 00d8 00       		.byte	0
 1277 00d9 0D       		.uleb128 0xd
 1278 00da 2E       		.uleb128 0x2e
 1279 00db 00       		.byte	0
 1280 00dc 3F       		.uleb128 0x3f
 1281 00dd 19       		.uleb128 0x19
 1282 00de 03       		.uleb128 0x3
 1283 00df 0E       		.uleb128 0xe
 1284 00e0 3A       		.uleb128 0x3a
 1285 00e1 0B       		.uleb128 0xb
 1286 00e2 3B       		.uleb128 0x3b
 1287 00e3 05       		.uleb128 0x5
 1288 00e4 27       		.uleb128 0x27
 1289 00e5 19       		.uleb128 0x19
 1290 00e6 11       		.uleb128 0x11
 1291 00e7 01       		.uleb128 0x1
 1292 00e8 12       		.uleb128 0x12
 1293 00e9 06       		.uleb128 0x6
 1294 00ea 40       		.uleb128 0x40
 1295 00eb 18       		.uleb128 0x18
 1296 00ec 9642     		.uleb128 0x2116
 1297 00ee 19       		.uleb128 0x19
 1298 00ef 00       		.byte	0
 1299 00f0 00       		.byte	0
 1300 00f1 0E       		.uleb128 0xe
 1301 00f2 2E       		.uleb128 0x2e
 1302 00f3 01       		.byte	0x1
 1303 00f4 3F       		.uleb128 0x3f
 1304 00f5 19       		.uleb128 0x19
 1305 00f6 03       		.uleb128 0x3
 1306 00f7 0E       		.uleb128 0xe
 1307 00f8 3A       		.uleb128 0x3a
 1308 00f9 0B       		.uleb128 0xb
 1309 00fa 3B       		.uleb128 0x3b
 1310 00fb 05       		.uleb128 0x5
 1311 00fc 27       		.uleb128 0x27
 1312 00fd 19       		.uleb128 0x19
 1313 00fe 49       		.uleb128 0x49
 1314 00ff 13       		.uleb128 0x13
 1315 0100 11       		.uleb128 0x11
 1316 0101 01       		.uleb128 0x1
 1317 0102 12       		.uleb128 0x12
 1318 0103 06       		.uleb128 0x6
 1319 0104 40       		.uleb128 0x40
 1320 0105 18       		.uleb128 0x18
 1321 0106 9742     		.uleb128 0x2117
 1322 0108 19       		.uleb128 0x19
 1323 0109 01       		.uleb128 0x1
 1324 010a 13       		.uleb128 0x13
 1325 010b 00       		.byte	0
 1326 010c 00       		.byte	0
 1327 010d 0F       		.uleb128 0xf
 1328 010e 34       		.uleb128 0x34
 1329 010f 00       		.byte	0
 1330 0110 03       		.uleb128 0x3
 1331 0111 0E       		.uleb128 0xe
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 40


 1332 0112 3A       		.uleb128 0x3a
 1333 0113 0B       		.uleb128 0xb
 1334 0114 3B       		.uleb128 0x3b
 1335 0115 05       		.uleb128 0x5
 1336 0116 49       		.uleb128 0x49
 1337 0117 13       		.uleb128 0x13
 1338 0118 02       		.uleb128 0x2
 1339 0119 18       		.uleb128 0x18
 1340 011a 00       		.byte	0
 1341 011b 00       		.byte	0
 1342 011c 10       		.uleb128 0x10
 1343 011d 34       		.uleb128 0x34
 1344 011e 00       		.byte	0
 1345 011f 03       		.uleb128 0x3
 1346 0120 0E       		.uleb128 0xe
 1347 0121 3A       		.uleb128 0x3a
 1348 0122 0B       		.uleb128 0xb
 1349 0123 3B       		.uleb128 0x3b
 1350 0124 0B       		.uleb128 0xb
 1351 0125 49       		.uleb128 0x49
 1352 0126 13       		.uleb128 0x13
 1353 0127 3F       		.uleb128 0x3f
 1354 0128 19       		.uleb128 0x19
 1355 0129 02       		.uleb128 0x2
 1356 012a 18       		.uleb128 0x18
 1357 012b 00       		.byte	0
 1358 012c 00       		.byte	0
 1359 012d 00       		.byte	0
 1360              		.section	.debug_aranges,"",%progbits
 1361 0000 94000000 		.4byte	0x94
 1362 0004 0200     		.2byte	0x2
 1363 0006 00000000 		.4byte	.Ldebug_info0
 1364 000a 04       		.byte	0x4
 1365 000b 00       		.byte	0
 1366 000c 0000     		.2byte	0
 1367 000e 0000     		.2byte	0
 1368 0010 00000000 		.4byte	.LFB0
 1369 0014 24000000 		.4byte	.LFE0-.LFB0
 1370 0018 00000000 		.4byte	.LFB1
 1371 001c 94000000 		.4byte	.LFE1-.LFB1
 1372 0020 00000000 		.4byte	.LFB2
 1373 0024 20000000 		.4byte	.LFE2-.LFB2
 1374 0028 00000000 		.4byte	.LFB3
 1375 002c 20000000 		.4byte	.LFE3-.LFB3
 1376 0030 00000000 		.4byte	.LFB4
 1377 0034 20000000 		.4byte	.LFE4-.LFB4
 1378 0038 00000000 		.4byte	.LFB5
 1379 003c 20000000 		.4byte	.LFE5-.LFB5
 1380 0040 00000000 		.4byte	.LFB6
 1381 0044 1C000000 		.4byte	.LFE6-.LFB6
 1382 0048 00000000 		.4byte	.LFB7
 1383 004c 20000000 		.4byte	.LFE7-.LFB7
 1384 0050 00000000 		.4byte	.LFB8
 1385 0054 20000000 		.4byte	.LFE8-.LFB8
 1386 0058 00000000 		.4byte	.LFB9
 1387 005c 20000000 		.4byte	.LFE9-.LFB9
 1388 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 41


 1389 0064 18000000 		.4byte	.LFE10-.LFB10
 1390 0068 00000000 		.4byte	.LFB11
 1391 006c 1C000000 		.4byte	.LFE11-.LFB11
 1392 0070 00000000 		.4byte	.LFB12
 1393 0074 20000000 		.4byte	.LFE12-.LFB12
 1394 0078 00000000 		.4byte	.LFB13
 1395 007c 18000000 		.4byte	.LFE13-.LFB13
 1396 0080 00000000 		.4byte	.LFB14
 1397 0084 18000000 		.4byte	.LFE14-.LFB14
 1398 0088 00000000 		.4byte	.LFB15
 1399 008c 18000000 		.4byte	.LFE15-.LFB15
 1400 0090 00000000 		.4byte	0
 1401 0094 00000000 		.4byte	0
 1402              		.section	.debug_ranges,"",%progbits
 1403              	.Ldebug_ranges0:
 1404 0000 00000000 		.4byte	.LFB0
 1405 0004 24000000 		.4byte	.LFE0
 1406 0008 00000000 		.4byte	.LFB1
 1407 000c 94000000 		.4byte	.LFE1
 1408 0010 00000000 		.4byte	.LFB2
 1409 0014 20000000 		.4byte	.LFE2
 1410 0018 00000000 		.4byte	.LFB3
 1411 001c 20000000 		.4byte	.LFE3
 1412 0020 00000000 		.4byte	.LFB4
 1413 0024 20000000 		.4byte	.LFE4
 1414 0028 00000000 		.4byte	.LFB5
 1415 002c 20000000 		.4byte	.LFE5
 1416 0030 00000000 		.4byte	.LFB6
 1417 0034 1C000000 		.4byte	.LFE6
 1418 0038 00000000 		.4byte	.LFB7
 1419 003c 20000000 		.4byte	.LFE7
 1420 0040 00000000 		.4byte	.LFB8
 1421 0044 20000000 		.4byte	.LFE8
 1422 0048 00000000 		.4byte	.LFB9
 1423 004c 20000000 		.4byte	.LFE9
 1424 0050 00000000 		.4byte	.LFB10
 1425 0054 18000000 		.4byte	.LFE10
 1426 0058 00000000 		.4byte	.LFB11
 1427 005c 1C000000 		.4byte	.LFE11
 1428 0060 00000000 		.4byte	.LFB12
 1429 0064 20000000 		.4byte	.LFE12
 1430 0068 00000000 		.4byte	.LFB13
 1431 006c 18000000 		.4byte	.LFE13
 1432 0070 00000000 		.4byte	.LFB14
 1433 0074 18000000 		.4byte	.LFE14
 1434 0078 00000000 		.4byte	.LFB15
 1435 007c 18000000 		.4byte	.LFE15
 1436 0080 00000000 		.4byte	0
 1437 0084 00000000 		.4byte	0
 1438              		.section	.debug_line,"",%progbits
 1439              	.Ldebug_line0:
 1440 0000 8F010000 		.section	.debug_str,"MS",%progbits,1
 1440      02004C00 
 1440      00000201 
 1440      FB0E0D00 
 1440      01010101 
 1441              	.LASF15:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 42


 1442 0000 72656731 		.ascii	"reg16\000"
 1442      3600
 1443              	.LASF42:
 1444 0006 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWMPulseCapture.c\000"
 1444      72617465 
 1444      645F536F 
 1444      75726365 
 1444      5C50536F 
 1445              	.LASF41:
 1446 002f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1446      43313120 
 1446      352E342E 
 1446      31203230 
 1446      31363036 
 1447 0062 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1447      20726576 
 1447      6973696F 
 1447      6E203233 
 1447      37373135 
 1448 0095 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1448      66756E63 
 1448      74696F6E 
 1448      2D736563 
 1448      74696F6E 
 1449              	.LASF35:
 1450 00bd 72657375 		.ascii	"result\000"
 1450      6C7400
 1451              	.LASF25:
 1452 00c4 50574D50 		.ascii	"PWMPulseCapture_ClearFIFO\000"
 1452      756C7365 
 1452      43617074 
 1452      7572655F 
 1452      436C6561 
 1453              	.LASF28:
 1454 00de 70657269 		.ascii	"period\000"
 1454      6F6400
 1455              	.LASF4:
 1456 00e5 6C6F6E67 		.ascii	"long int\000"
 1456      20696E74 
 1456      00
 1457              	.LASF3:
 1458 00ee 73686F72 		.ascii	"short unsigned int\000"
 1458      7420756E 
 1458      7369676E 
 1458      65642069 
 1458      6E7400
 1459              	.LASF2:
 1460 0101 73686F72 		.ascii	"short int\000"
 1460      7420696E 
 1460      7400
 1461              	.LASF29:
 1462 010b 50574D50 		.ascii	"PWMPulseCapture_WriteCompare\000"
 1462      756C7365 
 1462      43617074 
 1462      7572655F 
 1462      57726974 
 1463              	.LASF27:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 43


 1464 0128 636F756E 		.ascii	"counter\000"
 1464      74657200 
 1465              	.LASF1:
 1466 0130 756E7369 		.ascii	"unsigned char\000"
 1466      676E6564 
 1466      20636861 
 1466      7200
 1467              	.LASF38:
 1468 013e 50574D50 		.ascii	"PWMPulseCapture_ReadCapture\000"
 1468      756C7365 
 1468      43617074 
 1468      7572655F 
 1468      52656164 
 1469              	.LASF14:
 1470 015a 72656738 		.ascii	"reg8\000"
 1470      00
 1471              	.LASF5:
 1472 015f 6C6F6E67 		.ascii	"long unsigned int\000"
 1472      20756E73 
 1472      69676E65 
 1472      6420696E 
 1472      7400
 1473              	.LASF9:
 1474 0171 75696E74 		.ascii	"uint8\000"
 1474      3800
 1475              	.LASF37:
 1476 0177 636F6E74 		.ascii	"control\000"
 1476      726F6C00 
 1477              	.LASF23:
 1478 017f 50574D50 		.ascii	"PWMPulseCapture_Init\000"
 1478      756C7365 
 1478      43617074 
 1478      7572655F 
 1478      496E6974 
 1479              	.LASF36:
 1480 0194 50574D50 		.ascii	"PWMPulseCapture_WriteControlRegister\000"
 1480      756C7365 
 1480      43617074 
 1480      7572655F 
 1480      57726974 
 1481              	.LASF12:
 1482 01b9 646F7562 		.ascii	"double\000"
 1482      6C6500
 1483              	.LASF39:
 1484 01c0 50574D50 		.ascii	"PWMPulseCapture_ReadCompare\000"
 1484      756C7365 
 1484      43617074 
 1484      7572655F 
 1484      52656164 
 1485              	.LASF33:
 1486 01dc 50574D50 		.ascii	"PWMPulseCapture_ReadCounter\000"
 1486      756C7365 
 1486      43617074 
 1486      7572655F 
 1486      52656164 
 1487              	.LASF10:
 1488 01f8 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 44


 1488      313600
 1489              	.LASF8:
 1490 01ff 756E7369 		.ascii	"unsigned int\000"
 1490      676E6564 
 1490      20696E74 
 1490      00
 1491              	.LASF7:
 1492 020c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1492      206C6F6E 
 1492      6720756E 
 1492      7369676E 
 1492      65642069 
 1493              	.LASF24:
 1494 0223 50574D50 		.ascii	"PWMPulseCapture_WriteCounter\000"
 1494      756C7365 
 1494      43617074 
 1494      7572655F 
 1494      57726974 
 1495              	.LASF45:
 1496 0240 50574D50 		.ascii	"PWMPulseCapture_initVar\000"
 1496      756C7365 
 1496      43617074 
 1496      7572655F 
 1496      696E6974 
 1497              	.LASF40:
 1498 0258 50574D50 		.ascii	"PWMPulseCapture_ReadPeriod\000"
 1498      756C7365 
 1498      43617074 
 1498      7572655F 
 1498      52656164 
 1499              	.LASF16:
 1500 0273 6C6F6E67 		.ascii	"long double\000"
 1500      20646F75 
 1500      626C6500 
 1501              	.LASF17:
 1502 027f 73697A65 		.ascii	"sizetype\000"
 1502      74797065 
 1502      00
 1503              	.LASF44:
 1504 0288 50574D50 		.ascii	"PWMPulseCapture_ReadControlRegister\000"
 1504      756C7365 
 1504      43617074 
 1504      7572655F 
 1504      52656164 
 1505              	.LASF6:
 1506 02ac 6C6F6E67 		.ascii	"long long int\000"
 1506      206C6F6E 
 1506      6720696E 
 1506      7400
 1507              	.LASF22:
 1508 02ba 50574D50 		.ascii	"PWMPulseCapture_Stop\000"
 1508      756C7365 
 1508      43617074 
 1508      7572655F 
 1508      53746F70 
 1509              	.LASF32:
 1510 02cf 696E7465 		.ascii	"interruptMode\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 45


 1510      72727570 
 1510      744D6F64 
 1510      6500
 1511              	.LASF21:
 1512 02dd 50574D50 		.ascii	"PWMPulseCapture_Enable\000"
 1512      756C7365 
 1512      43617074 
 1512      7572655F 
 1512      456E6162 
 1513              	.LASF34:
 1514 02f4 50574D50 		.ascii	"PWMPulseCapture_ReadStatusRegister\000"
 1514      756C7365 
 1514      43617074 
 1514      7572655F 
 1514      52656164 
 1515              	.LASF26:
 1516 0317 50574D50 		.ascii	"PWMPulseCapture_WritePeriod\000"
 1516      756C7365 
 1516      43617074 
 1516      7572655F 
 1516      57726974 
 1517              	.LASF18:
 1518 0333 6374726C 		.ascii	"ctrl\000"
 1518      00
 1519              	.LASF31:
 1520 0338 50574D50 		.ascii	"PWMPulseCapture_SetInterruptMode\000"
 1520      756C7365 
 1520      43617074 
 1520      7572655F 
 1520      53657449 
 1521              	.LASF13:
 1522 0359 63686172 		.ascii	"char\000"
 1522      00
 1523              	.LASF43:
 1524 035e 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\GitHub\\hello-worl"
 1524      73657273 
 1524      5C627279 
 1524      616E2E6C 
 1524      65655C44 
 1525 038c 645C4379 		.ascii	"d\\Cypress\\Combine_4.0\\Combine.cydsn\000"
 1525      70726573 
 1525      735C436F 
 1525      6D62696E 
 1525      655F342E 
 1526              	.LASF19:
 1527 03b0 50574D50 		.ascii	"PWMPulseCapture_interruptState\000"
 1527      756C7365 
 1527      43617074 
 1527      7572655F 
 1527      696E7465 
 1528              	.LASF11:
 1529 03cf 666C6F61 		.ascii	"float\000"
 1529      7400
 1530              	.LASF0:
 1531 03d5 7369676E 		.ascii	"signed char\000"
 1531      65642063 
 1531      68617200 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccUH23Ge.s 			page 46


 1532              	.LASF30:
 1533 03e1 636F6D70 		.ascii	"compare\000"
 1533      61726500 
 1534              	.LASF20:
 1535 03e9 50574D50 		.ascii	"PWMPulseCapture_Start\000"
 1535      756C7365 
 1535      43617074 
 1535      7572655F 
 1535      53746172 
 1536              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
