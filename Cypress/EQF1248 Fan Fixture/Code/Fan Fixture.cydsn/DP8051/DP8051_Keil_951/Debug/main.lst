C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_Ke
                    -il_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          
   2          
   3          #include <device.h>
   4          
   5          /* Functions */
   6          void ButtonPress(void);
   7          void UpdateDisplay(void);
   8          void UpdateTime(void);
   9          
  10          /* Declares */
  11          uint8   intButtonPress;
  12          uint8   uint8Compare;
  13          int     Pin12FanLevel;
  14          int     Pin6FanLevel;
  15          uint16  uint16ADC;
  16          uint16  uint16FanV;
  17          int     intVoltagePlace[4];
  18          uint16   uint16Temp;
  19          uint16  uint16LoV;
  20          uint16  uint16HiV;
  21          uint8   uint8Loop;
  22          uint8   uint8Multiply;
  23          bit     bitFanOn;
  24          uint16 uint16FanAverage[10];
  25          int     intLoop;
  26          bit     bitDisplayTimer;
  27          //Timer Declares
  28          uint8   uint8TimerLCD;
  29          uint8   uint8SaveTime[4]; //Array to hold EEPROM Values
  30          uint8   uint8HourTempLo;
  31          uint8   uint8HourTempHi;
  32          bit     bitUpdateTime;
  33          bit     bitUpdateEEPROM;
  34          uint8   intSecond;
  35          uint8   intMinute;
  36          uint16  intHour;
  37          uint8   uint8TenthSecond;
  38          uint8 uint8Index;
  39          reg8 * RegPointer; //EEPROM register pointer
  40          bit     bitWriteTime;
  41          bit     bitUpdateDisplay;
  42          bit     bitButtonPress;
  43          
  44          int main()
  45          {
  46   1      
  47   1          /* Starts */
  48   1          lcdDisplay_Start();     //Start LCD
  49   1          pwmFan_Start();         //Start 3 pin PWM
  50   1          pwmFan2_Start();        //Start 2 pin PWM
  51   1          adcVFan_Start();        //Start ADC
  52   1          clkDisplay_Start();     //Start clock display
  53   1          rtcClock_Start();           //Start the Real Time Clock
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 2   

  54   1          eepromTime_Start();         //Start EEPROM
  55   1         
  56   1          
  57   1          /*Interrupts */
  58   1          isrButton_StartEx(ButtonPress);             //Interupt for button presses
  59   1          isrUpdateDisplay_StartEx(UpdateDisplay);    //Interut to update display
  60   1          statusButtons_InterruptEnable();            //Enables interupts in button status register
  61   1          CyGlobalIntEnable;                          //Enable Global Interupts
  62   1          
  63   1          
  64   1          
  65   1          /* Run Once */
  66   1          lcdDisplay_ClearDisplay();                                  //Clear Display
  67   1          lcdDisplay_Position(0,0);                                   //Setup LCD
  68   1          lcdDisplay_PrintString("Fan PWM:");
  69   1          lcdDisplay_Position(1,0);
  70   1          lcdDisplay_PrintString("Voltage:");
  71   1          rtcClock_WriteIntervalMask(rtcClock_INTERVAL_SEC_MASK);     //Enable interupt in RTC for seconds
  72   1          adcVFan_StartConvert();                                     //Start ADC converting
  73   1          bitFanOn =  0;                                              //Set fan off
  74   1          
  75   1          /* Retrieve time from EEPROM */     
  76   1              RegPointer = (reg8 *) CYDEV_EE_BASE;                        //setup register
  77   1              for (uint8Index = 0u; uint8Index < 3; uint8Index++)         //Loop to read register
  78   1                      {
  79   2                              uint8SaveTime[uint8Index] = RegPointer[uint8Index]; //Retrieve data from EEPROM
  80   2                      }
  81   1                      uint8HourTempHi = intHour >> 8 ;                        //Convert register data to readable time
  82   1                      intHour = uint8SaveTime[0];
  83   1                      intHour = intHour <<8;
  84   1                      intHour = uint8SaveTime[1];
  85   1                      intMinute = uint8SaveTime[2];
  86   1                      intSecond = uint8SaveTime[3];
  87   1          
  88   1          /* Main Loop */
  89   1          for(;;)
  90   1          {
  91   2              if (bitUpdateTime)  //update time and EEPROM
  92   2                              {
  93   3                              bitUpdateTime = 0;  //Reset bit
  94   3                              UpdateTime();       
  95   3                              } //end IF bitUpdateTime
  96   2                      
  97   2                      //uint8TimerLCD = tmrUpdateLCD_ReadStatusRegister();
  98   2          
  99   2              /* Get ADC Value */
 100   2                      if (adcVFan_IsEndConversion(adcVFan_WAIT_FOR_RESULT) ) //Wait until ADC has good value
 101   2                      {
 102   3                  uint16ADC = adcVFan_GetResult16();  //Get Compare number from ADC
 103   3                  //Create Voltage Reading
 104   3                          //uint16FanV = ((uint16ADC-15) / 2.33);  //Convert ADC to Voltage
 105   3                  uint16FanV = ((uint16ADC-15)/2.5);  //Convert ADC to Voltage
 106   3          
 107   3                   
 108   3                  uint16Temp = uint16FanV;
 109   3                  //Validate Voltage
 110   3                      if (uint16FanV > 15000)
 111   3                          uint16FanV = 0;
 112   3                      if (uint16Temp > 99)
 113   3                          {
 114   4                          uint16HiV = uint16Temp / 100;
 115   4                          uint16LoV = uint16Temp % 100;
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 3   

 116   4                          }
 117   3                      else
 118   3                          {
 119   4                          uint16HiV = 0;
 120   4                          uint16LoV = uint16Temp;
 121   4                          }
 122   3                      
 123   3                      
 124   3                              
 125   3                  }  //End ADC conversion IF
 126   2              /* Button Press  */
 127   2          if (bitButtonPress)
 128   2          {
 129   3              bitButtonPress = 0;                                     //Reset Bit
 130   3          
 131   3              intButtonPress = statusButtons_Read();                  //Read Status Register / clears interrupt
 132   3      
 133   3              switch (intButtonPress)
 134   3                  {
 135   4                  case Button_UP:  //Up Button - increase PWM %
 136   4                      {
 137   5                      if (Pin12FanLevel >= 95)
 138   5                          Pin12FanLevel = 100;
 139   5                      else
 140   5                          Pin12FanLevel = Pin12FanLevel + 5;
 141   5                          
 142   5                      break;
 143   5                      }
 144   4                  case Button_DN:  //Down Button - decrease PWM % / Reset Timer
 145   4                      {
 146   5                      if (!bitDisplayTimer)      //If NOT displaying timer                    
 147   5                          {
 148   6                          if (Pin12FanLevel <= 5)
 149   6                               Pin12FanLevel = 0;
 150   6                          else
 151   6                              Pin12FanLevel = Pin12FanLevel - 5 ;
 152   6                          }
 153   5                      else
 154   5                          {
 155   6                          //Reset time to Zero
 156   6                              intSecond = 0;
 157   6                              intMinute = 0;
 158   6                              intHour = 0;
 159   6                              rtcClock_WriteSecond(0); //Set seconds on RCT to Zero
 160   6                              bitUpdateEEPROM = 1;  //Force a write to the EEPROM
 161   6                          UpdateTime();
 162   6                          }
 163   5                      break;
 164   5                      }
 165   4                  case Button_Start: //Start Button
 166   4                      {
 167   5                      if (bitFanOn) //If fan on, turn off. If off, turn on.
 168   5                          {
 169   6                          bitFanOn=0;    
 170   6                          pwmFan2_Stop();
 171   6                          pwmFan_Stop();
 172   6                          }
 173   5                      else
 174   5                          {
 175   6                          bitFanOn=1;
 176   6                          pwmFan2_Start();
 177   6                          pwmFan_Start();
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 4   

 178   6                          }
 179   5                      break;
 180   5                      }
 181   4                  case Button_Timer:  //Timer - Display Timer or Fan info
 182   4                      {
 183   5                      if (bitDisplayTimer)
 184   5                          {
 185   6                          bitDisplayTimer = 0;
 186   6                          lcdDisplay_ClearDisplay();
 187   6                          lcdDisplay_Position(0,0);
 188   6                          lcdDisplay_PrintString("Fan PWM:");
 189   6                          lcdDisplay_Position(1,0);
 190   6                          lcdDisplay_PrintString("Voltage:");
 191   6                          }
 192   5                      else
 193   5                          {
 194   6                          bitDisplayTimer = 1;
 195   6                          lcdDisplay_ClearDisplay();
 196   6                          lcdDisplay_PrintString("Timer:");
 197   6                          
 198   6                          }
 199   5                      break;    
 200   5                      }
 201   4                  }
 202   3                  pwmFan2_WriteCompare(Pin12FanLevel);    //Write PWM 
 203   3                  pwmFan_WriteCompare(Pin12FanLevel);     //Write PWM
 204   3                  if (Pin12FanLevel < 5)
 205   3                      {
 206   4                      bitFanOn=0;                         
 207   4                      pwmFan2_Stop();                     //Stop PWM
 208   4                      pwmFan_Stop();                      //Stop PWM
 209   4                      }
 210   3          } //End Button Press IF
 211   2       
 212   2          
 213   2          /* Update Display */
 214   2          if (bitUpdateDisplay)
 215   2              {
 216   3              bitUpdateDisplay = 0;   //Reset Bit
 217   3              if (!bitDisplayTimer)   //If NOT displaying timer show fan info
 218   3                  {
 219   4                  lcdDisplay_ClearDisplay();              //setup LCD
 220   4                  lcdDisplay_Position(0,0);
 221   4                  lcdDisplay_PrintString("Fan PWM:");
 222   4                  lcdDisplay_Position(1,0);
 223   4                  lcdDisplay_PrintString("Voltage:");
 224   4      
 225   4                  lcdDisplay_Position(0,8);
 226   4                  lcdDisplay_PrintNumber(pwmFan_ReadCompare());       //Display PWM
 227   4                  lcdDisplay_PrintString("% ");
 228   4                  lcdDisplay_Position(0,13);
 229   4                  if (bitFanOn)                                       //Display if fan is on or off
 230   4                      lcdDisplay_PrintString("On ");
 231   4                  else
 232   4                      lcdDisplay_PrintString("Off");
 233   4                  lcdDisplay_Position(1,8);
 234   4                  lcdDisplay_PrintNumber(uint16HiV);                    //Display voltage
 235   4                  lcdDisplay_PrintString(".");
 236   4                  lcdDisplay_PrintNumber(uint16LoV);
 237   4                  lcdDisplay_PrintString("v   ");
 238   4                  }
 239   3              else                //if displaying Timer, show timer.
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 5   

 240   3                  {
 241   4                  lcdDisplay_Position(0,6);
 242   4                  lcdDisplay_PrintNumber(intHour); //Print Hour
 243   4                  lcdDisplay_PrintString(":");
 244   4                  lcdDisplay_PrintNumber(intMinute / 10); //Print Minute
 245   4                  lcdDisplay_PrintNumber(intMinute % 10); //Print Minute
 246   4                  lcdDisplay_PrintString(":");
 247   4                  lcdDisplay_PrintNumber(intSecond / 10); //Print Seconds
 248   4                  lcdDisplay_PrintNumber(intSecond % 10); //Print Seconds
 249   4                  lcdDisplay_PrintString("     ");
 250   4                  }
 251   3                  
 252   3      
 253   3              } //End IF Update Display
 254   2          
 255   2          }
 256   1      }
 257          /* Interupt to update display  */
 258          CY_ISR(UpdateDisplay)
 259          {
 260   1      bitUpdateDisplay = 1;   //Update Display
 261   1      }
 262          CY_ISR(ButtonPress)  //Interpt to handle Buttons
 263          {
 264   1      bitButtonPress = 1;      //Button has been pressed
 265   1      }
 266          
 267          
 268          void UpdateTime()  //Updates time and EEPROM
 269          {
 270   1              if (bitFanOn) //Fan On 
 271   1                      {
 272   2                      intSecond++;
 273   2                      if (intSecond > 59)         //increase minutes
 274   2                              {
 275   3                              intSecond = 0;
 276   3                              intMinute ++;
 277   3                              bitUpdateEEPROM = 1;
 278   3                              }
 279   2                      if (intMinute > 59)     //Increase Hours
 280   2                              {
 281   3                              intMinute = 0;
 282   3                              intHour ++;
 283   3                              }
 284   2                      if (bitUpdateEEPROM)    //Write Timer value to EEPROM
 285   2                              {
 286   3                              bitUpdateEEPROM = 0;
 287   3      
 288   3                      //convert data and write to eeprom
 289   3                                      uint8HourTempLo = intHour;
 290   3                                      uint8HourTempHi = intHour >> 8 ;
 291   3                                      uint8SaveTime[0] = uint8HourTempHi;
 292   3                                      uint8SaveTime[1] = uint8HourTempLo;
 293   3                                      uint8SaveTime[2] = intMinute;
 294   3                                      uint8SaveTime[3] = intSecond;
 295   3                       /* Get the die temp before write */
 296   3                                  if(CySetTemp() == CYRET_SUCCESS)
 297   3                                  eepromTime_Write(uint8SaveTime, 0u); 
 298   3                              }
 299   2                      } 
 300   1          
 301   1      }
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 6   

 302          
 303          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 48
0000 120000      E     LCALL   lcdDisplay_Start
                                           ; SOURCE LINE # 49
0003 120000      E     LCALL   pwmFan_Start
                                           ; SOURCE LINE # 50
0006 120000      E     LCALL   pwmFan2_Start
                                           ; SOURCE LINE # 51
0009 120000      E     LCALL   adcVFan_Start
                                           ; SOURCE LINE # 52
000C 120000      E     LCALL   clkDisplay_Start
                                           ; SOURCE LINE # 53
000F 120000      E     LCALL   rtcClock_Start
                                           ; SOURCE LINE # 54
0012 120000      E     LCALL   eepromTime_Start
                                           ; SOURCE LINE # 58
0015 7E00        R     MOV     R6,#HIGH ButtonPress
0017 7F00        R     MOV     R7,#LOW ButtonPress
0019 120000      E     LCALL   _isrButton_StartEx
                                           ; SOURCE LINE # 59
001C 7E00        R     MOV     R6,#HIGH UpdateDisplay
001E 7F00        R     MOV     R7,#LOW UpdateDisplay
0020 120000      E     LCALL   _isrUpdateDisplay_StartEx
                                           ; SOURCE LINE # 60
0023 120000      E     LCALL   statusButtons_InterruptEnable
                                           ; SOURCE LINE # 61
0026 D2AF              SETB    EA
0028 9044F4            MOV     DPTR,#044F4H
002B 74FD              MOV     A,#0FDH
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
002E 7F01              MOV     R7,#01H
0030 120000      E     LCALL   _lcdDisplay_WriteControl
                                           ; SOURCE LINE # 67
0033 7D00              MOV     R5,#00H
0035 7F00              MOV     R7,#00H
0037 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 68
003A 7BFF              MOV     R3,#0FFH
003C 7A00        R     MOV     R2,#HIGH ?SC_0
003E 7900        R     MOV     R1,#LOW ?SC_0
0040 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 69
0043 7D00              MOV     R5,#00H
0045 7F01              MOV     R7,#01H
0047 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 70
004A 7BFF              MOV     R3,#0FFH
004C 7A00        R     MOV     R2,#HIGH ?SC_9
004E 7900        R     MOV     R1,#LOW ?SC_9
0050 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 71
0053 7F01              MOV     R7,#01H
0055 120000      E     LCALL   _rtcClock_WriteIntervalMask
                                           ; SOURCE LINE # 72
0058 120000      E     LCALL   adcVFan_StartConvert
                                           ; SOURCE LINE # 73
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 8   

005B C200        R     CLR     bitFanOn
                                           ; SOURCE LINE # 76
005D 900000      R     MOV     DPTR,#RegPointer
0060 7480              MOV     A,#080H
0062 F0                MOVX    @DPTR,A
0063 A3                INC     DPTR
0064 E4                CLR     A
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0066 900000      R     MOV     DPTR,#uint8Index
0069 E4                CLR     A
006A F0                MOVX    @DPTR,A
006B         ?C0001:
006B 900000      R     MOV     DPTR,#uint8Index
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 C3                CLR     C
0072 9403              SUBB    A,#03H
0074 5036              JNC     ?C0002
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0076 900000      R     MOV     DPTR,#uint8Index
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 900000      R     MOV     DPTR,#RegPointer
007E E0                MOVX    A,@DPTR
007F FC                MOV     R4,A
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 FD                MOV     R5,A
0083 8D82              MOV     DPL,R5
0085 8C83              MOV     DPH,R4
0087 E582              MOV     A,DPL
0089 2F                ADD     A,R7
008A F582              MOV     DPL,A
008C E4                CLR     A
008D 3583              ADDC    A,DPH
008F F583              MOV     DPH,A
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 900000      R     MOV     DPTR,#uint8Index
0096 E0                MOVX    A,@DPTR
0097 FE                MOV     R6,A
0098 7400        R     MOV     A,#LOW uint8SaveTime
009A 2E                ADD     A,R6
009B F582              MOV     DPL,A
009D E4                CLR     A
009E 3400        R     ADDC    A,#HIGH uint8SaveTime
00A0 F583              MOV     DPH,A
00A2 EF                MOV     A,R7
00A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
00A4 900000      R     MOV     DPTR,#uint8Index
00A7 E0                MOVX    A,@DPTR
00A8 04                INC     A
00A9 F0                MOVX    @DPTR,A
00AA 80BF              SJMP    ?C0001
00AC         ?C0002:
                                           ; SOURCE LINE # 81
00AC 900000      R     MOV     DPTR,#intHour
00AF E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 9   

00B0 FE                MOV     R6,A
00B1 A3                INC     DPTR
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
00B4 EE                MOV     A,R6
00B5 FF                MOV     R7,A
00B6 7E00              MOV     R6,#00H
00B8 900000      R     MOV     DPTR,#uint8HourTempHi
00BB EF                MOV     A,R7
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
00BD 900000      R     MOV     DPTR,#uint8SaveTime
00C0 E0                MOVX    A,@DPTR
00C1 FF                MOV     R7,A
00C2 7E00              MOV     R6,#00H
00C4 900000      R     MOV     DPTR,#intHour
00C7 EE                MOV     A,R6
00C8 F0                MOVX    @DPTR,A
00C9 A3                INC     DPTR
00CA EF                MOV     A,R7
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
00CC 900000      R     MOV     DPTR,#intHour
00CF E0                MOVX    A,@DPTR
00D0 FE                MOV     R6,A
00D1 A3                INC     DPTR
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 7F00              MOV     R7,#00H
00D7 FE                MOV     R6,A
00D8 900000      R     MOV     DPTR,#intHour
00DB EE                MOV     A,R6
00DC F0                MOVX    @DPTR,A
00DD A3                INC     DPTR
00DE EF                MOV     A,R7
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
00E0 900000      R     MOV     DPTR,#uint8SaveTime+01H
00E3 E0                MOVX    A,@DPTR
00E4 FF                MOV     R7,A
00E5 7E00              MOV     R6,#00H
00E7 900000      R     MOV     DPTR,#intHour
00EA EE                MOV     A,R6
00EB F0                MOVX    @DPTR,A
00EC A3                INC     DPTR
00ED EF                MOV     A,R7
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
00EF 900000      R     MOV     DPTR,#uint8SaveTime+02H
00F2 E0                MOVX    A,@DPTR
00F3 FF                MOV     R7,A
00F4 900000      R     MOV     DPTR,#intMinute
00F7 EF                MOV     A,R7
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
00F9 900000      R     MOV     DPTR,#uint8SaveTime+03H
00FC E0                MOVX    A,@DPTR
00FD FF                MOV     R7,A
00FE 900000      R     MOV     DPTR,#intSecond
0101 EF                MOV     A,R7
0102 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 10  

                                           ; SOURCE LINE # 89
0103         ?C0004:
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0103 300005            JNB     bitUpdateTime,?C0006
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
0106 C200        R     CLR     bitUpdateTime
                                           ; SOURCE LINE # 94
0108 120000      R     LCALL   UpdateTime
                                           ; SOURCE LINE # 95
010B         ?C0006:
                                           ; SOURCE LINE # 100
010B 7F00              MOV     R7,#00H
010D 120000      E     LCALL   _adcVFan_IsEndConversion
0110 EF                MOV     A,R7
0111 7003              JNZ     $ + 5H
0113 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0116 120000      E     LCALL   adcVFan_GetResult16
0119 900000      R     MOV     DPTR,#uint16ADC
011C EE                MOV     A,R6
011D F0                MOVX    @DPTR,A
011E A3                INC     DPTR
011F EF                MOV     A,R7
0120 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 105
0121 900000      R     MOV     DPTR,#uint16ADC
0124 E0                MOVX    A,@DPTR
0125 FE                MOV     R6,A
0126 A3                INC     DPTR
0127 E0                MOVX    A,@DPTR
0128 FF                MOV     R7,A
0129 EF                MOV     A,R7
012A 24F1              ADD     A,#0F1H
012C FD                MOV     R5,A
012D EE                MOV     A,R6
012E 34FF              ADDC    A,#0FFH
0130 FC                MOV     R4,A
0131 E4                CLR     A
0132 120000      E     LCALL   ?C?FCASTI
0135 7B00              MOV     R3,#00H
0137 7A00              MOV     R2,#00H
0139 7920              MOV     R1,#020H
013B 7840              MOV     R0,#040H
013D 120000      E     LCALL   ?C?FPDIV
0140 120000      E     LCALL   ?C?CASTF
0143 900000      R     MOV     DPTR,#uint16FanV
0146 EE                MOV     A,R6
0147 F0                MOVX    @DPTR,A
0148 A3                INC     DPTR
0149 EF                MOV     A,R7
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
014B 900000      R     MOV     DPTR,#uint16FanV
014E E0                MOVX    A,@DPTR
014F FE                MOV     R6,A
0150 A3                INC     DPTR
0151 E0                MOVX    A,@DPTR
0152 FF                MOV     R7,A
0153 900000      R     MOV     DPTR,#uint16Temp
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 11  

0156 EE                MOV     A,R6
0157 F0                MOVX    @DPTR,A
0158 A3                INC     DPTR
0159 EF                MOV     A,R7
015A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
015B 900000      R     MOV     DPTR,#uint16FanV
015E E0                MOVX    A,@DPTR
015F FE                MOV     R6,A
0160 A3                INC     DPTR
0161 E0                MOVX    A,@DPTR
0162 FF                MOV     R7,A
0163 D3                SETB    C
0164 EF                MOV     A,R7
0165 9498              SUBB    A,#098H
0167 EE                MOV     A,R6
0168 943A              SUBB    A,#03AH
016A 4008              JC      ?C0008
                                           ; SOURCE LINE # 111
016C 900000      R     MOV     DPTR,#uint16FanV
016F E4                CLR     A
0170 F0                MOVX    @DPTR,A
0171 A3                INC     DPTR
0172 E4                CLR     A
0173 F0                MOVX    @DPTR,A
0174         ?C0008:
                                           ; SOURCE LINE # 112
0174 900000      R     MOV     DPTR,#uint16Temp
0177 E0                MOVX    A,@DPTR
0178 FE                MOV     R6,A
0179 A3                INC     DPTR
017A E0                MOVX    A,@DPTR
017B FF                MOV     R7,A
017C D3                SETB    C
017D EF                MOV     A,R7
017E 9463              SUBB    A,#063H
0180 EE                MOV     A,R6
0181 9400              SUBB    A,#00H
0183 4030              JC      ?C0009
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0185 900000      R     MOV     DPTR,#uint16Temp
0188 E0                MOVX    A,@DPTR
0189 FE                MOV     R6,A
018A A3                INC     DPTR
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D 7C00              MOV     R4,#00H
018F 7D64              MOV     R5,#064H
0191 120000      E     LCALL   ?C?UIDIV
0194 900000      R     MOV     DPTR,#uint16HiV
0197 EE                MOV     A,R6
0198 F0                MOVX    @DPTR,A
0199 A3                INC     DPTR
019A EF                MOV     A,R7
019B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
019C 900000      R     MOV     DPTR,#uint16Temp
019F E0                MOVX    A,@DPTR
01A0 FE                MOV     R6,A
01A1 A3                INC     DPTR
01A2 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 12  

01A3 FF                MOV     R7,A
01A4 7C00              MOV     R4,#00H
01A6 7D64              MOV     R5,#064H
01A8 120000      E     LCALL   ?C?UIDIV
01AB 900000      R     MOV     DPTR,#uint16LoV
01AE EC                MOV     A,R4
01AF F0                MOVX    @DPTR,A
01B0 A3                INC     DPTR
01B1 ED                MOV     A,R5
01B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
01B3 8018              SJMP    ?C0007
01B5         ?C0009:
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
01B5 900000      R     MOV     DPTR,#uint16HiV
01B8 E4                CLR     A
01B9 F0                MOVX    @DPTR,A
01BA A3                INC     DPTR
01BB E4                CLR     A
01BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
01BD 900000      R     MOV     DPTR,#uint16Temp
01C0 E0                MOVX    A,@DPTR
01C1 FE                MOV     R6,A
01C2 A3                INC     DPTR
01C3 E0                MOVX    A,@DPTR
01C4 FF                MOV     R7,A
01C5 900000      R     MOV     DPTR,#uint16LoV
01C8 EE                MOV     A,R6
01C9 F0                MOVX    @DPTR,A
01CA A3                INC     DPTR
01CB EF                MOV     A,R7
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 125
01CD         ?C0007:
                                           ; SOURCE LINE # 127
01CD 200003      R     JB      bitButtonPress,$ + 6H
01D0 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
01D3 C200        R     CLR     bitButtonPress
                                           ; SOURCE LINE # 131
01D5 120000      E     LCALL   statusButtons_Read
01D8 900000      R     MOV     DPTR,#intButtonPress
01DB EF                MOV     A,R7
01DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
01DD 900000      R     MOV     DPTR,#intButtonPress
01E0 E0                MOVX    A,@DPTR
01E1 FF                MOV     R7,A
01E2 EF                MOV     A,R7
01E3 120000      E     LCALL   ?C?CCASE
01E6 0000        R     DW      ?C0024
01E8 04                DB      04H
01E9 0000        R     DW      ?C0013
01EB 81                DB      081H
01EC 0000        R     DW      ?C0016
01EE 82                DB      082H
01EF 0000        R     DW      ?C0021
01F1 84                DB      084H
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 13  

01F2 0000              DW      00H
01F4 0000        R     DW      ?C0012
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
01F6         ?C0013:
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
01F6 900000      R     MOV     DPTR,#Pin12FanLevel
01F9 E0                MOVX    A,@DPTR
01FA FE                MOV     R6,A
01FB A3                INC     DPTR
01FC E0                MOVX    A,@DPTR
01FD FF                MOV     R7,A
01FE C3                CLR     C
01FF EF                MOV     A,R7
0200 945F              SUBB    A,#05FH
0202 EE                MOV     A,R6
0203 6480              XRL     A,#080H
0205 9480              SUBB    A,#080H
0207 400C              JC      ?C0014
                                           ; SOURCE LINE # 138
0209 900000      R     MOV     DPTR,#Pin12FanLevel
020C E4                CLR     A
020D F0                MOVX    @DPTR,A
020E A3                INC     DPTR
020F 7464              MOV     A,#064H
0211 F0                MOVX    @DPTR,A
0212 020000      R     LJMP    ?C0012
0215         ?C0014:
                                           ; SOURCE LINE # 140
0215 900000      R     MOV     DPTR,#Pin12FanLevel
0218 E4                CLR     A
0219 75F005            MOV     B,#05H
021C 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 142
021F 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
0222         ?C0016:
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
0222 20002A            JB      bitDisplayTimer,?C0017
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0225 900000      R     MOV     DPTR,#Pin12FanLevel
0228 E0                MOVX    A,@DPTR
0229 FE                MOV     R6,A
022A A3                INC     DPTR
022B E0                MOVX    A,@DPTR
022C FF                MOV     R7,A
022D D3                SETB    C
022E EF                MOV     A,R7
022F 9405              SUBB    A,#05H
0231 EE                MOV     A,R6
0232 6480              XRL     A,#080H
0234 9480              SUBB    A,#080H
0236 500A              JNC     ?C0018
                                           ; SOURCE LINE # 149
0238 900000      R     MOV     DPTR,#Pin12FanLevel
023B E4                CLR     A
023C F0                MOVX    @DPTR,A
023D A3                INC     DPTR
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 14  

023E E4                CLR     A
023F F0                MOVX    @DPTR,A
0240 807E              SJMP    ?C0012
0242         ?C0018:
                                           ; SOURCE LINE # 151
0242 900000      R     MOV     DPTR,#Pin12FanLevel
0245 74FF              MOV     A,#0FFH
0247 75F0FB            MOV     B,#0FBH
024A 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 152
024D 8071              SJMP    ?C0012
024F         ?C0017:
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 156
024F 900000      R     MOV     DPTR,#intSecond
0252 E4                CLR     A
0253 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
0254 900000      R     MOV     DPTR,#intMinute
0257 E4                CLR     A
0258 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
0259 900000      R     MOV     DPTR,#intHour
025C E4                CLR     A
025D F0                MOVX    @DPTR,A
025E A3                INC     DPTR
025F E4                CLR     A
0260 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
0261 7F00              MOV     R7,#00H
0263 120000      E     LCALL   _rtcClock_WriteSecond
                                           ; SOURCE LINE # 160
0266 D200        R     SETB    bitUpdateEEPROM
                                           ; SOURCE LINE # 161
0268 120000      R     LCALL   UpdateTime
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
026B 8053              SJMP    ?C0012
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
026D         ?C0021:
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
026D 30000A            JNB     bitFanOn,?C0022
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
0270 C200        R     CLR     bitFanOn
                                           ; SOURCE LINE # 170
0272 120000      E     LCALL   pwmFan2_Stop
                                           ; SOURCE LINE # 171
0275 120000      E     LCALL   pwmFan_Stop
                                           ; SOURCE LINE # 172
0278 8046              SJMP    ?C0012
027A         ?C0022:
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 175
027A D200        R     SETB    bitFanOn
                                           ; SOURCE LINE # 176
027C 120000      E     LCALL   pwmFan2_Start
                                           ; SOURCE LINE # 177
027F 120000      E     LCALL   pwmFan_Start
                                           ; SOURCE LINE # 178
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 15  

                                           ; SOURCE LINE # 179
0282 803C              SJMP    ?C0012
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
0284         ?C0024:
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0284 300029            JNB     bitDisplayTimer,?C0025
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0287 C200        R     CLR     bitDisplayTimer
                                           ; SOURCE LINE # 186
0289 7F01              MOV     R7,#01H
028B 120000      E     LCALL   _lcdDisplay_WriteControl
                                           ; SOURCE LINE # 187
028E 7D00              MOV     R5,#00H
0290 7F00              MOV     R7,#00H
0292 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 188
0295 7BFF              MOV     R3,#0FFH
0297 7A00        R     MOV     R2,#HIGH ?SC_0
0299 7900        R     MOV     R1,#LOW ?SC_0
029B 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 189
029E 7D00              MOV     R5,#00H
02A0 7F01              MOV     R7,#01H
02A2 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 190
02A5 7BFF              MOV     R3,#0FFH
02A7 7A00        R     MOV     R2,#HIGH ?SC_9
02A9 7900        R     MOV     R1,#LOW ?SC_9
02AB 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 191
02AE 8010              SJMP    ?C0012
02B0         ?C0025:
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
02B0 D200        R     SETB    bitDisplayTimer
                                           ; SOURCE LINE # 195
02B2 7F01              MOV     R7,#01H
02B4 120000      E     LCALL   _lcdDisplay_WriteControl
                                           ; SOURCE LINE # 196
02B7 7BFF              MOV     R3,#0FFH
02B9 7A00        R     MOV     R2,#HIGH ?SC_18
02BB 7900        R     MOV     R1,#LOW ?SC_18
02BD 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
02C0         ?C0012:
                                           ; SOURCE LINE # 202
02C0 900000      R     MOV     DPTR,#Pin12FanLevel
02C3 E0                MOVX    A,@DPTR
02C4 FE                MOV     R6,A
02C5 A3                INC     DPTR
02C6 E0                MOVX    A,@DPTR
02C7 FF                MOV     R7,A
02C8 120000      E     LCALL   _pwmFan2_WriteCompare
                                           ; SOURCE LINE # 203
02CB 900000      R     MOV     DPTR,#Pin12FanLevel
02CE E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 16  

02CF FE                MOV     R6,A
02D0 A3                INC     DPTR
02D1 E0                MOVX    A,@DPTR
02D2 FF                MOV     R7,A
02D3 120000      E     LCALL   _pwmFan_WriteCompare
                                           ; SOURCE LINE # 204
02D6 900000      R     MOV     DPTR,#Pin12FanLevel
02D9 E0                MOVX    A,@DPTR
02DA FE                MOV     R6,A
02DB A3                INC     DPTR
02DC E0                MOVX    A,@DPTR
02DD FF                MOV     R7,A
02DE C3                CLR     C
02DF EF                MOV     A,R7
02E0 9405              SUBB    A,#05H
02E2 EE                MOV     A,R6
02E3 6480              XRL     A,#080H
02E5 9480              SUBB    A,#080H
02E7 5008              JNC     ?C0011
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
02E9 C200        R     CLR     bitFanOn
                                           ; SOURCE LINE # 207
02EB 120000      E     LCALL   pwmFan2_Stop
                                           ; SOURCE LINE # 208
02EE 120000      E     LCALL   pwmFan_Stop
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
02F1         ?C0011:
                                           ; SOURCE LINE # 214
02F1 200003      R     JB      bitUpdateDisplay,$ + 6H
02F4 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
02F7 C200        R     CLR     bitUpdateDisplay
                                           ; SOURCE LINE # 217
02F9 300003      R     JNB     bitDisplayTimer,$ + 6H
02FC 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
02FF 7F01              MOV     R7,#01H
0301 120000      E     LCALL   _lcdDisplay_WriteControl
                                           ; SOURCE LINE # 220
0304 7D00              MOV     R5,#00H
0306 7F00              MOV     R7,#00H
0308 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 221
030B 7BFF              MOV     R3,#0FFH
030D 7A00        R     MOV     R2,#HIGH ?SC_0
030F 7900        R     MOV     R1,#LOW ?SC_0
0311 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 222
0314 7D00              MOV     R5,#00H
0316 7F01              MOV     R7,#01H
0318 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 223
031B 7BFF              MOV     R3,#0FFH
031D 7A00        R     MOV     R2,#HIGH ?SC_9
031F 7900        R     MOV     R1,#LOW ?SC_9
0321 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 225
0324 7D08              MOV     R5,#08H
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 17  

0326 7F00              MOV     R7,#00H
0328 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 226
032B 120000      E     LCALL   pwmFan_ReadCompare
032E 7E00              MOV     R6,#00H
0330 E4                CLR     A
0331 FC                MOV     R4,A
0332 FD                MOV     R5,A
0333 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 227
0336 7BFF              MOV     R3,#0FFH
0338 7A00        R     MOV     R2,#HIGH ?SC_25
033A 7900        R     MOV     R1,#LOW ?SC_25
033C 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 228
033F 7D0D              MOV     R5,#0DH
0341 7F00              MOV     R7,#00H
0343 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 229
0346 30000B            JNB     bitFanOn,?C0030
                                           ; SOURCE LINE # 230
0349 7BFF              MOV     R3,#0FFH
034B 7A00        R     MOV     R2,#HIGH ?SC_28
034D 7900        R     MOV     R1,#LOW ?SC_28
034F 120000      E     LCALL   _lcdDisplay_PrintString
0352 8009              SJMP    ?C0031
0354         ?C0030:
                                           ; SOURCE LINE # 232
0354 7BFF              MOV     R3,#0FFH
0356 7A00        R     MOV     R2,#HIGH ?SC_32
0358 7900        R     MOV     R1,#LOW ?SC_32
035A 120000      E     LCALL   _lcdDisplay_PrintString
035D         ?C0031:
                                           ; SOURCE LINE # 233
035D 7D08              MOV     R5,#08H
035F 7F01              MOV     R7,#01H
0361 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 234
0364 900000      R     MOV     DPTR,#uint16HiV
0367 E0                MOVX    A,@DPTR
0368 FE                MOV     R6,A
0369 A3                INC     DPTR
036A E0                MOVX    A,@DPTR
036B FF                MOV     R7,A
036C E4                CLR     A
036D FC                MOV     R4,A
036E FD                MOV     R5,A
036F 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 235
0372 7BFF              MOV     R3,#0FFH
0374 7A00        R     MOV     R2,#HIGH ?SC_36
0376 7900        R     MOV     R1,#LOW ?SC_36
0378 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 236
037B 900000      R     MOV     DPTR,#uint16LoV
037E E0                MOVX    A,@DPTR
037F FE                MOV     R6,A
0380 A3                INC     DPTR
0381 E0                MOVX    A,@DPTR
0382 FF                MOV     R7,A
0383 E4                CLR     A
0384 FC                MOV     R4,A
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 18  

0385 FD                MOV     R5,A
0386 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 237
0389 7BFF              MOV     R3,#0FFH
038B 7A00        R     MOV     R2,#HIGH ?SC_38
038D 7900        R     MOV     R1,#LOW ?SC_38
038F 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 238
0392 020000      R     LJMP    ?C0004
0395         ?C0029:
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
0395 7D06              MOV     R5,#06H
0397 7F00              MOV     R7,#00H
0399 120000      E     LCALL   _lcdDisplay_Position
                                           ; SOURCE LINE # 242
039C 900000      R     MOV     DPTR,#intHour
039F E0                MOVX    A,@DPTR
03A0 FE                MOV     R6,A
03A1 A3                INC     DPTR
03A2 E0                MOVX    A,@DPTR
03A3 FF                MOV     R7,A
03A4 E4                CLR     A
03A5 FC                MOV     R4,A
03A6 FD                MOV     R5,A
03A7 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 243
03AA 7BFF              MOV     R3,#0FFH
03AC 7A00        R     MOV     R2,#HIGH ?SC_43
03AE 7900        R     MOV     R1,#LOW ?SC_43
03B0 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 244
03B3 900000      R     MOV     DPTR,#intMinute
03B6 E0                MOVX    A,@DPTR
03B7 FF                MOV     R7,A
03B8 EF                MOV     A,R7
03B9 75F00A            MOV     B,#0AH
03BC 84                DIV     AB
03BD FF                MOV     R7,A
03BE 7E00              MOV     R6,#00H
03C0 E4                CLR     A
03C1 FC                MOV     R4,A
03C2 FD                MOV     R5,A
03C3 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 245
03C6 900000      R     MOV     DPTR,#intMinute
03C9 E0                MOVX    A,@DPTR
03CA FF                MOV     R7,A
03CB EF                MOV     A,R7
03CC 75F00A            MOV     B,#0AH
03CF 84                DIV     AB
03D0 AFF0              MOV     R7,B
03D2 7E00              MOV     R6,#00H
03D4 E4                CLR     A
03D5 FC                MOV     R4,A
03D6 FD                MOV     R5,A
03D7 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 246
03DA 7BFF              MOV     R3,#0FFH
03DC 7A00        R     MOV     R2,#HIGH ?SC_43
03DE 7900        R     MOV     R1,#LOW ?SC_43
03E0 120000      E     LCALL   _lcdDisplay_PrintString
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 19  

                                           ; SOURCE LINE # 247
03E3 900000      R     MOV     DPTR,#intSecond
03E6 E0                MOVX    A,@DPTR
03E7 FF                MOV     R7,A
03E8 EF                MOV     A,R7
03E9 75F00A            MOV     B,#0AH
03EC 84                DIV     AB
03ED FF                MOV     R7,A
03EE 7E00              MOV     R6,#00H
03F0 E4                CLR     A
03F1 FC                MOV     R4,A
03F2 FD                MOV     R5,A
03F3 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 248
03F6 900000      R     MOV     DPTR,#intSecond
03F9 E0                MOVX    A,@DPTR
03FA FF                MOV     R7,A
03FB EF                MOV     A,R7
03FC 75F00A            MOV     B,#0AH
03FF 84                DIV     AB
0400 AFF0              MOV     R7,B
0402 7E00              MOV     R6,#00H
0404 E4                CLR     A
0405 FC                MOV     R4,A
0406 FD                MOV     R5,A
0407 120000      E     LCALL   _lcdDisplay_PrintU32Number
                                           ; SOURCE LINE # 249
040A 7BFF              MOV     R3,#0FFH
040C 7A00        R     MOV     R2,#HIGH ?SC_45
040E 7900        R     MOV     R1,#LOW ?SC_45
0410 120000      E     LCALL   _lcdDisplay_PrintString
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 255
0413 020000      R     LJMP    ?C0004
0416 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION UpdateDisplay (BEGIN)
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 260
0000 D200        R     SETB    bitUpdateDisplay
                                           ; SOURCE LINE # 261
0002 32                RETI    
             ; FUNCTION UpdateDisplay (END)

             ; FUNCTION ButtonPress (BEGIN)
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 264
0000 D200        R     SETB    bitButtonPress
                                           ; SOURCE LINE # 265
0002 32                RETI    
             ; FUNCTION ButtonPress (END)

             ; FUNCTION UpdateTime (BEGIN)
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
0000 200003      R     JB      bitFanOn,$ + 6H
0003 020000      R     LJMP    ?C0041
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 20  

0006 900000      R     MOV     DPTR,#intSecond
0009 E0                MOVX    A,@DPTR
000A 04                INC     A
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 273
000C 900000      R     MOV     DPTR,#intSecond
000F E0                MOVX    A,@DPTR
0010 FF                MOV     R7,A
0011 EF                MOV     A,R7
0012 D3                SETB    C
0013 943B              SUBB    A,#03BH
0015 400D              JC      ?C0037
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
0017 900000      R     MOV     DPTR,#intSecond
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 276
001C 900000      R     MOV     DPTR,#intMinute
001F E0                MOVX    A,@DPTR
0020 04                INC     A
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
0022 D200        R     SETB    bitUpdateEEPROM
                                           ; SOURCE LINE # 278
0024         ?C0037:
                                           ; SOURCE LINE # 279
0024 900000      R     MOV     DPTR,#intMinute
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A D3                SETB    C
002B 943B              SUBB    A,#03BH
002D 400F              JC      ?C0038
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
002F 900000      R     MOV     DPTR,#intMinute
0032 E4                CLR     A
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 282
0034 900000      R     MOV     DPTR,#intHour
0037 E4                CLR     A
0038 75F001            MOV     B,#01H
003B 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 283
003E         ?C0038:
                                           ; SOURCE LINE # 284
003E 300059            JNB     bitUpdateEEPROM,?C0041
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
0041 C200        R     CLR     bitUpdateEEPROM
                                           ; SOURCE LINE # 289
0043 900000      R     MOV     DPTR,#intHour
0046 E0                MOVX    A,@DPTR
0047 FE                MOV     R6,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 900000      R     MOV     DPTR,#uint8HourTempLo
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 290
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 21  

0050 900000      R     MOV     DPTR,#intHour
0053 E0                MOVX    A,@DPTR
0054 FE                MOV     R6,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 EE                MOV     A,R6
0059 FF                MOV     R7,A
005A 7E00              MOV     R6,#00H
005C 900000      R     MOV     DPTR,#uint8HourTempHi
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
0061 900000      R     MOV     DPTR,#uint8HourTempHi
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#uint8SaveTime
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
006B 900000      R     MOV     DPTR,#uint8HourTempLo
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 900000      R     MOV     DPTR,#uint8SaveTime+01H
0073 EF                MOV     A,R7
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
0075 900000      R     MOV     DPTR,#intMinute
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A 900000      R     MOV     DPTR,#uint8SaveTime+02H
007D EF                MOV     A,R7
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
007F 900000      R     MOV     DPTR,#intSecond
0082 E0                MOVX    A,@DPTR
0083 FF                MOV     R7,A
0084 900000      R     MOV     DPTR,#uint8SaveTime+03H
0087 EF                MOV     A,R7
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
0089 120000      E     LCALL   CySetTemp
008C EF                MOV     A,R7
008D 700B              JNZ     ?C0041
                                           ; SOURCE LINE # 297
008F 7B01              MOV     R3,#01H
0091 7A00        R     MOV     R2,#HIGH uint8SaveTime
0093 7900        R     MOV     R1,#LOW uint8SaveTime
0095 7D00              MOV     R5,#00H
0097 120000      E     LCALL   _eepromTime_Write
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 301
009A         ?C0041:
009A 22                RET     
             ; FUNCTION UpdateTime (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1208    ----
   CONSTANT SIZE    =     51    ----
C51 COMPILER V9.51   MAIN                                                                  05/30/2018 15:16:56 PAGE 22  

   XDATA SIZE       =     63    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
