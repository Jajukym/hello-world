C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_CLS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_cls.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\USBUART_1_cls.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2)
                    - PR(.\DP8051_Keil_951\Debug/USBUART_1_cls.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\USBUART_1_cls.obj)

line level    source

   1          /***************************************************************************//**
   2          * \file USBUART_1_cls.c
   3          * \version 3.20
   4          *
   5          * \brief
   6          *  This file contains the USB Class request handler.
   7          *
   8          ********************************************************************************
   9          * \copyright
  10          * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11          * You may use this file only in accordance with the license, terms, conditions,
  12          * disclaimers, and limitations in the end user license agreement accompanying
  13          * the software package with which this file was provided.
  14          *******************************************************************************/
  15          
  16          #include "USBUART_1_pvt.h"
  17          
  18          
  19          #if(USBUART_1_EXTERN_CLS == USBUART_1_FALSE)
  20          
  21          /***************************************
  22          * User Implemented Class Driver Declarations.
  23          ***************************************/
  24          /* `#START USER_DEFINED_CLASS_DECLARATIONS` Place your declaration here */
  25          
  26          /* `#END` */
  27          
  28          
  29          /*******************************************************************************
  30          * Function Name: USBUART_1_DispatchClassRqst
  31          ****************************************************************************//**
  32          *  This routine dispatches class specific requests depend on interface class.
  33          *
  34          * \return
  35          *  requestHandled.
  36          *
  37          * \reentrant
  38          *  No.
  39          *
  40          *******************************************************************************/
  41          uint8 USBUART_1_DispatchClassRqst(void) 
  42          {
  43   1          uint8 interfaceNumber;
  44   1          uint8 requestHandled = USBUART_1_FALSE;
  45   1      
  46   1          /* Get interface to which request is intended. */
  47   1          switch (USBUART_1_bmRequestTypeReg & USBUART_1_RQST_RCPT_MASK)
  48   1          {
  49   2              case USBUART_1_RQST_RCPT_IFC:
  50   2                  /* Class-specific request directed to interface: wIndexLoReg 
  51   2                  * contains interface number.
  52   2                  */
  53   2                  interfaceNumber = (uint8) USBUART_1_wIndexLoReg;
C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 2   

  54   2                  break;
  55   2              
  56   2              case USBUART_1_RQST_RCPT_EP:
  57   2                  /* Class-specific request directed to endpoint: wIndexLoReg contains 
  58   2                  * endpoint number. Find interface related to endpoint. 
  59   2                  */
  60   2                  interfaceNumber = USBUART_1_EP[USBUART_1_wIndexLoReg & USBUART_1_DIR_UNUSED].interface;
  61   2                  break;
  62   2                  
  63   2              default:
  64   2                  /* Default interface is zero. */
  65   2                  interfaceNumber = 0u;
  66   2                  break;
  67   2          }
  68   1          
  69   1          /* Check that interface is within acceptable range */
  70   1          if (interfaceNumber <= USBUART_1_MAX_INTERFACES_NUMBER)
  71   1          {
  72   2          #if (defined(USBUART_1_ENABLE_HID_CLASS)   || \
  73   2               defined(USBUART_1_ENABLE_AUDIO_CLASS) || \
  74   2               defined(USBUART_1_ENABLE_CDC_CLASS)   || \
  75   2               USBUART_1_ENABLE_MSC_CLASS)
  76   2      
  77   2              /* Handle class request depends on interface type. */
  78   2              switch (USBUART_1_interfaceClass[interfaceNumber])
  79   2              {
  80   3              #if defined(USBUART_1_ENABLE_HID_CLASS)
  81   3                  case USBUART_1_CLASS_HID:
  82   3                      requestHandled = USBUART_1_DispatchHIDClassRqst();
  83   3                      break;
  84   3              #endif /* (USBUART_1_ENABLE_HID_CLASS) */
  85   3                      
  86   3              #if defined(USBUART_1_ENABLE_AUDIO_CLASS)
                          case USBUART_1_CLASS_AUDIO:
                              requestHandled = USBUART_1_DispatchAUDIOClassRqst();
                              break;
                      #endif /* (USBUART_1_CLASS_AUDIO) */
  91   3                      
  92   3              #if defined(USBUART_1_ENABLE_CDC_CLASS)
  93   3                  case USBUART_1_CLASS_CDC:
  94   3                      requestHandled = USBUART_1_DispatchCDCClassRqst();
  95   3                      break;
  96   3              #endif /* (USBUART_1_ENABLE_CDC_CLASS) */
  97   3                  
  98   3              #if (USBUART_1_ENABLE_MSC_CLASS)
                          case USBUART_1_CLASS_MSD:
                          #if (USBUART_1_HANDLE_MSC_REQUESTS)
                              /* MSC requests are handled by the component. */
                              requestHandled = USBUART_1_DispatchMSCClassRqst();
                          #elif defined(USBUART_1_DISPATCH_MSC_CLASS_RQST_CALLBACK)
                              /* MSC requests are handled by user defined callbcak. */
                              requestHandled = USBUART_1_DispatchMSCClassRqst_Callback();
                          #else
                              /* MSC requests are not handled. */
                              requestHandled = USBUART_1_FALSE;
                          #endif /* (USBUART_1_HANDLE_MSC_REQUESTS) */
                              break;
                      #endif /* (USBUART_1_ENABLE_MSC_CLASS) */
 112   3                  
 113   3                  default:
 114   3                      /* Request is not handled: unknown class request type. */
 115   3                      requestHandled = USBUART_1_FALSE;
C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 3   

 116   3                      break;
 117   3              }
 118   2          #endif /* Class support is enabled */
 119   2          }
 120   1          
 121   1          /* `#START USER_DEFINED_CLASS_CODE` Place your Class request here */
 122   1      
 123   1          /* `#END` */
 124   1      
 125   1      #ifdef USBUART_1_DISPATCH_CLASS_RQST_CALLBACK
                  if (USBUART_1_FALSE == requestHandled)
                  {
                      requestHandled = USBUART_1_DispatchClassRqst_Callback(interfaceNumber);
                  }
              #endif /* (USBUART_1_DISPATCH_CLASS_RQST_CALLBACK) */
 131   1      
 132   1          return (requestHandled);
 133   1      }
 134          
 135          
 136          /*******************************************************************************
 137          * Additional user functions supporting Class Specific Requests
 138          ********************************************************************************/
 139          
 140          /* `#START CLASS_SPECIFIC_FUNCTIONS` Place any additional functions here */
 141          
 142          /* `#END` */
 143          
 144          #endif /* USBUART_1_EXTERN_CLS */
 145          
 146          
 147          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_1_DispatchClassRqst (BEGIN)
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 44
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 47
0005 906000            MOV     DPTR,#06000H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 5403              ANL     A,#03H
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F 120000      E     LCALL   ?C?CCASE
0012 0000        R     DW      ?C0002
0014 01                DB      01H
0015 0000        R     DW      ?C0003
0017 02                DB      02H
0018 0000              DW      00H
001A 0000        R     DW      ?C0004
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
001C         ?C0002:
                                           ; SOURCE LINE # 53
001C 906004            MOV     DPTR,#06004H
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#interfaceNumber
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
0026 8025              SJMP    ?C0001
                                           ; SOURCE LINE # 56
0028         ?C0003:
                                           ; SOURCE LINE # 60
0028 906004            MOV     DPTR,#06004H
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E 547F              ANL     A,#07FH
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 75F00B            MOV     B,#0BH
0035 A4                MUL     AB
0036 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
0038 F582              MOV     DPL,A
003A E4                CLR     A
003B 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
003D F583              MOV     DPH,A
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#interfaceNumber
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0046 8005              SJMP    ?C0001
                                           ; SOURCE LINE # 63
C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 5   

0048         ?C0004:
                                           ; SOURCE LINE # 65
0048 900000      R     MOV     DPTR,#interfaceNumber
004B E4                CLR     A
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
004D         ?C0001:
                                           ; SOURCE LINE # 70
004D 900000      R     MOV     DPTR,#interfaceNumber
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 EF                MOV     A,R7
0053 D3                SETB    C
0054 9402              SUBB    A,#02H
0056 5045              JNC     ?C0005
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 78
0058 900000      R     MOV     DPTR,#interfaceNumber
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D 900000      E     MOV     DPTR,#USBUART_1_interfaceClass
0060 E0                MOVX    A,@DPTR
0061 FC                MOV     R4,A
0062 A3                INC     DPTR
0063 E0                MOVX    A,@DPTR
0064 FD                MOV     R5,A
0065 8D82              MOV     DPL,R5
0067 8C83              MOV     DPH,R4
0069 E582              MOV     A,DPL
006B 2F                ADD     A,R7
006C F582              MOV     DPL,A
006E E4                CLR     A
006F 3583              ADDC    A,DPH
0071 F583              MOV     DPH,A
0073 E4                CLR     A
0074 93                MOVC    A,@A+DPTR
0075 FF                MOV     R7,A
0076 EF                MOV     A,R7
0077 120000      E     LCALL   ?C?CCASE
007A 0000        R     DW      ?C0008
007C 02                DB      02H
007D 0000        R     DW      ?C0007
007F 03                DB      03H
0080 0000              DW      00H
0082 0000        R     DW      ?C0009
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
0084         ?C0007:
                                           ; SOURCE LINE # 82
0084 120000      E     LCALL   USBUART_1_DispatchHIDClassRqst
0087 900000      R     MOV     DPTR,#requestHandled
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
008C 800F              SJMP    ?C0005
                                           ; SOURCE LINE # 93
008E         ?C0008:
                                           ; SOURCE LINE # 94
008E 120000      E     LCALL   USBUART_1_DispatchCDCClassRqst
0091 900000      R     MOV     DPTR,#requestHandled
0094 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_CLS                                                         04/02/2020 08:19:10 PAGE 6   

0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 95
0096 8005              SJMP    ?C0005
                                           ; SOURCE LINE # 113
0098         ?C0009:
                                           ; SOURCE LINE # 115
0098 900000      R     MOV     DPTR,#requestHandled
009B E4                CLR     A
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 119
009D         ?C0005:
                                           ; SOURCE LINE # 132
009D 900000      R     MOV     DPTR,#requestHandled
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
                                           ; SOURCE LINE # 133
00A2         ?C0010:
00A2 22                RET     
             ; FUNCTION USBUART_1_DispatchClassRqst (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
