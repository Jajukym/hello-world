ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"clockButtonRead.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 62010000 		.text
  20      02006700 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.clockButtonRead_Start,"ax",%progbits
  24              		.align	2
  25              		.global	clockButtonRead_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	clockButtonRead_Start, %function
  29              	clockButtonRead_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\clockButtonRead.c"
   1:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/clockButtonRead.c **** * File Name: clockButtonRead.c
   3:.\Generated_Source\PSoC5/clockButtonRead.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/clockButtonRead.c **** *
   5:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Description:
   6:.\Generated_Source\PSoC5/clockButtonRead.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/clockButtonRead.c **** *
   8:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Note:
   9:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  10:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/clockButtonRead.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/clockButtonRead.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/clockButtonRead.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/clockButtonRead.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  17:.\Generated_Source\PSoC5/clockButtonRead.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/clockButtonRead.c **** #include "clockButtonRead.h"
  19:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  20:.\Generated_Source\PSoC5/clockButtonRead.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/clockButtonRead.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/clockButtonRead.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 2


  23:.\Generated_Source\PSoC5/clockButtonRead.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/clockButtonRead.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/clockButtonRead.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  27:.\Generated_Source\PSoC5/clockButtonRead.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  29:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  30:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_Start
  32:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  34:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
  35:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/clockButtonRead.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  38:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
  39:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  40:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  41:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
  42:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  43:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  44:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_Start(void) 
  46:.\Generated_Source\PSoC5/clockButtonRead.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/clockButtonRead.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/clockButtonRead.c ****     clockButtonRead_CLKEN |= clockButtonRead_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A233 		movw	r3, #:lower16:1073759138
  46 0008 C4F20003 		movt	r3, #:upper16:1073759138
  47 000c 44F2A232 		movw	r2, #:lower16:1073759138
  48 0010 C4F20002 		movt	r2, #:upper16:1073759138
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00402 		orr	r2, r2, #4
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/clockButtonRead.c **** 	clockButtonRead_CLKSTBY |= clockButtonRead_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B233 		movw	r3, #:lower16:1073759154
  56 0024 C4F20003 		movt	r3, #:upper16:1073759154
  57 0028 44F2B232 		movw	r2, #:lower16:1073759154
  58 002c C4F20002 		movt	r2, #:upper16:1073759154
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/clockButtonRead.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	clockButtonRead_Start, .-clockButtonRead_Start
  71 0042 00BF     		.section	.text.clockButtonRead_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	clockButtonRead_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	clockButtonRead_Stop, %function
  77              	clockButtonRead_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  52:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  53:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_Stop
  55:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  57:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
  58:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/clockButtonRead.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/clockButtonRead.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/clockButtonRead.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/clockButtonRead.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  64:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
  65:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  66:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  67:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
  68:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  69:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  70:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_Stop(void) 
  72:.\Generated_Source\PSoC5/clockButtonRead.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/clockButtonRead.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/clockButtonRead.c ****     clockButtonRead_CLKEN &= (uint8)(~clockButtonRead_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A233 		movw	r3, #:lower16:1073759138
  93 0008 C4F20003 		movt	r3, #:upper16:1073759138
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 4


  94 000c 44F2A232 		movw	r2, #:lower16:1073759138
  95 0010 C4F20002 		movt	r2, #:upper16:1073759138
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FB02 		and	r2, r2, #251
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/clockButtonRead.c **** 	clockButtonRead_CLKSTBY &= (uint8)(~clockButtonRead_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B233 		movw	r3, #:lower16:1073759154
 102 0022 C4F20003 		movt	r3, #:upper16:1073759154
 103 0026 44F2B232 		movw	r2, #:lower16:1073759154
 104 002a C4F20002 		movt	r2, #:upper16:1073759154
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FB02 		and	r2, r2, #251
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	clockButtonRead_Stop, .-clockButtonRead_Stop
 116 003e 00BF     		.section	.text.clockButtonRead_StandbyPower,"ax",%progbits
 117              		.align	2
 118              		.global	clockButtonRead_StandbyPower
 119              		.thumb
 120              		.thumb_func
 121              		.type	clockButtonRead_StandbyPower, %function
 122              	clockButtonRead_StandbyPower:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  78:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  79:.\Generated_Source\PSoC5/clockButtonRead.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  81:.\Generated_Source\PSoC5/clockButtonRead.c **** 
  82:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_StopBlock
  84:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  86:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
  87:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/clockButtonRead.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/clockButtonRead.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/clockButtonRead.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  93:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
  94:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  95:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  96:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
  97:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
  98:.\Generated_Source\PSoC5/clockButtonRead.c **** *
  99:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_StopBlock(void) 
 101:.\Generated_Source\PSoC5/clockButtonRead.c **** {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 5


 102:.\Generated_Source\PSoC5/clockButtonRead.c ****     if ((clockButtonRead_CLKEN & clockButtonRead_CLKEN_MASK) != 0u)
 103:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 104:.\Generated_Source\PSoC5/clockButtonRead.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/clockButtonRead.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 107:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 109:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/clockButtonRead.c **** #if defined(clockButtonRead__CFG3)
 111:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_AMASK = clockButtonRead_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/clockButtonRead.c **** #else
 114:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_DMASK = clockButtonRead_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* clockButtonRead__CFG3 */
 117:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 118:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 120:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 121:.\Generated_Source\PSoC5/clockButtonRead.c ****         oldDivider = CY_GET_REG16(clockButtonRead_DIV_PTR);
 122:.\Generated_Source\PSoC5/clockButtonRead.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 123:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 125:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/clockButtonRead.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 129:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_CLKEN &= (uint8)(~clockButtonRead_CLKEN_MASK);
 131:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_CLKSTBY &= (uint8)(~clockButtonRead_CLKSTBY_MASK);
 132:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 133:.\Generated_Source\PSoC5/clockButtonRead.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/clockButtonRead.c ****         CLK_DIST_LD = 0x00u;
 136:.\Generated_Source\PSoC5/clockButtonRead.c ****         CY_SET_REG16(clockButtonRead_DIV_PTR, oldDivider);
 137:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 139:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 140:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 142:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 143:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_StandbyPower
 145:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 147:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 148:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 150:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 151:.\Generated_Source\PSoC5/clockButtonRead.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 153:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 154:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 155:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 156:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/clockButtonRead.c **** {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 6


 124              		.loc 1 158 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/clockButtonRead.c ****     if(state == 0u)
 141              		.loc 1 159 0
 142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 000c 002B     		cmp	r3, #0
 144 000e 0DD1     		bne	.L6
 160:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 161:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_CLKSTBY &= (uint8)(~clockButtonRead_CLKSTBY_MASK);
 145              		.loc 1 161 0
 146 0010 44F2B233 		movw	r3, #:lower16:1073759154
 147 0014 C4F20003 		movt	r3, #:upper16:1073759154
 148 0018 44F2B232 		movw	r2, #:lower16:1073759154
 149 001c C4F20002 		movt	r2, #:upper16:1073759154
 150 0020 1278     		ldrb	r2, [r2, #0]
 151 0022 D2B2     		uxtb	r2, r2
 152 0024 02F0FB02 		and	r2, r2, #251
 153 0028 1A70     		strb	r2, [r3, #0]
 154 002a 0DE0     		b	.L8
 155              	.L6:
 162:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 163:.\Generated_Source\PSoC5/clockButtonRead.c ****     else
 164:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 165:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_CLKSTBY |= clockButtonRead_CLKSTBY_MASK;
 156              		.loc 1 165 0
 157 002c 44F2B233 		movw	r3, #:lower16:1073759154
 158 0030 C4F20003 		movt	r3, #:upper16:1073759154
 159 0034 44F2B232 		movw	r2, #:lower16:1073759154
 160 0038 C4F20002 		movt	r2, #:upper16:1073759154
 161 003c 1278     		ldrb	r2, [r2, #0]
 162 003e D2B2     		uxtb	r2, r2
 163 0040 42F00402 		orr	r2, r2, #4
 164 0044 D2B2     		uxtb	r2, r2
 165 0046 1A70     		strb	r2, [r3, #0]
 166              	.L8:
 166:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 167:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 167              		.loc 1 167 0
 168 0048 07F10C07 		add	r7, r7, #12
 169 004c BD46     		mov	sp, r7
 170 004e 80BC     		pop	{r7}
 171 0050 7047     		bx	lr
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 7


 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	clockButtonRead_StandbyPower, .-clockButtonRead_StandbyPower
 175 0052 00BF     		.section	.text.clockButtonRead_SetDividerRegister,"ax",%progbits
 176              		.align	2
 177              		.global	clockButtonRead_SetDividerRegister
 178              		.thumb
 179              		.thumb_func
 180              		.type	clockButtonRead_SetDividerRegister, %function
 181              	clockButtonRead_SetDividerRegister:
 182              	.LFB3:
 168:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 169:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 170:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_SetDividerRegister
 172:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 174:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 175:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/clockButtonRead.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/clockButtonRead.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/clockButtonRead.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 180:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 181:.\Generated_Source\PSoC5/clockButtonRead.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/clockButtonRead.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/clockButtonRead.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/clockButtonRead.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/clockButtonRead.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/clockButtonRead.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/clockButtonRead.c **** *   cycle.
 188:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 189:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 190:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 191:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 192:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/clockButtonRead.c ****                                 
 195:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 183              		.loc 1 195 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI7:
 189              		.cfi_def_cfa_offset 8
 190 0002 84B0     		sub	sp, sp, #16
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 7, -8
 196              	.LCFI9:
 197              		.cfi_def_cfa_register 7
 198 0006 0246     		mov	r2, r0
 199 0008 0B46     		mov	r3, r1
 200 000a FA80     		strh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 8


 201 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/clockButtonRead.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 198:.\Generated_Source\PSoC5/clockButtonRead.c ****     uint8 currSrc = clockButtonRead_GetSourceRegister();
 202              		.loc 1 198 0
 203 000e FFF7FEFF 		bl	clockButtonRead_GetSourceRegister
 204 0012 0346     		mov	r3, r0
 205 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/clockButtonRead.c ****     uint16 oldDivider = clockButtonRead_GetDividerRegister();
 206              		.loc 1 199 0
 207 0016 FFF7FEFF 		bl	clockButtonRead_GetDividerRegister
 208 001a 0346     		mov	r3, r0
 209 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 201:.\Generated_Source\PSoC5/clockButtonRead.c ****     if (clkDivider != oldDivider)
 210              		.loc 1 201 0
 211 001e FA88     		ldrh	r2, [r7, #6]
 212 0020 FB89     		ldrh	r3, [r7, #14]
 213 0022 9A42     		cmp	r2, r3
 214 0024 00F0BB80 		beq	.L21
 202:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 203:.\Generated_Source\PSoC5/clockButtonRead.c ****         enabled = clockButtonRead_CLKEN & clockButtonRead_CLKEN_MASK;
 215              		.loc 1 203 0
 216 0028 44F2A233 		movw	r3, #:lower16:1073759138
 217 002c C4F20003 		movt	r3, #:upper16:1073759138
 218 0030 1B78     		ldrb	r3, [r3, #0]
 219 0032 DBB2     		uxtb	r3, r3
 220 0034 03F00403 		and	r3, r3, #4
 221 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 205:.\Generated_Source\PSoC5/clockButtonRead.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 222              		.loc 1 205 0
 223 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 224 003c 002B     		cmp	r3, #0
 225 003e 31D1     		bne	.L11
 226 0040 FB89     		ldrh	r3, [r7, #14]
 227 0042 002B     		cmp	r3, #0
 228 0044 02D0     		beq	.L12
 229 0046 FB88     		ldrh	r3, [r7, #6]
 230 0048 002B     		cmp	r3, #0
 231 004a 2BD1     		bne	.L11
 232              	.L12:
 206:.\Generated_Source\PSoC5/clockButtonRead.c ****         {
 207:.\Generated_Source\PSoC5/clockButtonRead.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/clockButtonRead.c ****             if (oldDivider == 0u)
 233              		.loc 1 208 0
 234 004c FB89     		ldrh	r3, [r7, #14]
 235 004e 002B     		cmp	r3, #0
 236 0050 13D1     		bne	.L13
 209:.\Generated_Source\PSoC5/clockButtonRead.c ****             {
 210:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CY_SET_REG16(clockButtonRead_DIV_PTR, clkDivider);
 237              		.loc 1 213 0
 238 0052 44F28803 		movw	r3, #:lower16:1073758344
 239 0056 C4F20003 		movt	r3, #:upper16:1073758344
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 9


 240 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 241 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/clockButtonRead.c ****                 clockButtonRead_MOD_SRC &= (uint8)(~CYCLK_SSS);
 242              		.loc 1 214 0
 243 005e 44F28A03 		movw	r3, #:lower16:1073758346
 244 0062 C4F20003 		movt	r3, #:upper16:1073758346
 245 0066 44F28A02 		movw	r2, #:lower16:1073758346
 246 006a C4F20002 		movt	r2, #:upper16:1073758346
 247 006e 1278     		ldrb	r2, [r2, #0]
 248 0070 D2B2     		uxtb	r2, r2
 249 0072 02F0BF02 		and	r2, r2, #191
 250 0076 1A70     		strb	r2, [r3, #0]
 251              		.loc 1 205 0
 252 0078 91E0     		b	.L21
 253              	.L13:
 215:.\Generated_Source\PSoC5/clockButtonRead.c ****             }
 216:.\Generated_Source\PSoC5/clockButtonRead.c ****             else
 217:.\Generated_Source\PSoC5/clockButtonRead.c ****             {
 218:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/clockButtonRead.c ****                 clockButtonRead_MOD_SRC |= CYCLK_SSS;
 254              		.loc 1 220 0
 255 007a 44F28A03 		movw	r3, #:lower16:1073758346
 256 007e C4F20003 		movt	r3, #:upper16:1073758346
 257 0082 44F28A02 		movw	r2, #:lower16:1073758346
 258 0086 C4F20002 		movt	r2, #:upper16:1073758346
 259 008a 1278     		ldrb	r2, [r2, #0]
 260 008c D2B2     		uxtb	r2, r2
 261 008e 42F04002 		orr	r2, r2, #64
 262 0092 D2B2     		uxtb	r2, r2
 263 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CY_SET_REG16(clockButtonRead_DIV_PTR, clkDivider);
 264              		.loc 1 221 0
 265 0096 44F28803 		movw	r3, #:lower16:1073758344
 266 009a C4F20003 		movt	r3, #:upper16:1073758344
 267 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 268 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 269              		.loc 1 205 0
 270 00a2 7CE0     		b	.L21
 271              	.L11:
 222:.\Generated_Source\PSoC5/clockButtonRead.c ****             }
 223:.\Generated_Source\PSoC5/clockButtonRead.c ****         }
 224:.\Generated_Source\PSoC5/clockButtonRead.c ****         else
 225:.\Generated_Source\PSoC5/clockButtonRead.c ****         {
 226:.\Generated_Source\PSoC5/clockButtonRead.c **** 			
 227:.\Generated_Source\PSoC5/clockButtonRead.c ****             if (enabled != 0u)
 272              		.loc 1 227 0
 273 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 274 00a6 002B     		cmp	r3, #0
 275 00a8 3BD0     		beq	.L15
 228:.\Generated_Source\PSoC5/clockButtonRead.c ****             {
 229:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_LD = 0x00u;
 276              		.loc 1 229 0
 277 00aa 44F20103 		movw	r3, #:lower16:1073758209
 278 00ae C4F20003 		movt	r3, #:upper16:1073758209
 279 00b2 4FF00002 		mov	r2, #0
 280 00b6 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 10


 230:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 231:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/clockButtonRead.c **** #if defined(clockButtonRead__CFG3)
 233:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_AMASK = clockButtonRead_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/clockButtonRead.c **** #else
 236:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_DMASK = clockButtonRead_CLKEN_MASK;
 281              		.loc 1 236 0
 282 00b8 44F21003 		movw	r3, #:lower16:1073758224
 283 00bc C4F20003 		movt	r3, #:upper16:1073758224
 284 00c0 4FF00402 		mov	r2, #4
 285 00c4 1A70     		strb	r2, [r3, #0]
 237:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_AMASK = 0x00u;
 286              		.loc 1 237 0
 287 00c6 44F21403 		movw	r3, #:lower16:1073758228
 288 00ca C4F20003 		movt	r3, #:upper16:1073758228
 289 00ce 4FF00002 		mov	r2, #0
 290 00d2 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* clockButtonRead__CFG3 */
 239:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 291              		.loc 1 240 0
 292 00d4 44F20803 		movw	r3, #:lower16:1073758216
 293 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 294 00dc 44F20802 		movw	r2, #:lower16:1073758216
 295 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 296 00e4 1278     		ldrb	r2, [r2, #0]
 297 00e6 D2B2     		uxtb	r2, r2
 298 00e8 02F07F02 		and	r2, r2, #127
 299 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 242:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/clockButtonRead.c ****                 if (((clockButtonRead_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 300              		.loc 1 243 0
 301 00ee 44F28A03 		movw	r3, #:lower16:1073758346
 302 00f2 C4F20003 		movt	r3, #:upper16:1073758346
 303 00f6 1B78     		ldrb	r3, [r3, #0]
 304 00f8 DBB2     		uxtb	r3, r3
 305 00fa 03F00803 		and	r3, r3, #8
 306 00fe 002B     		cmp	r3, #0
 307 0100 02D0     		beq	.L16
 308 0102 FB88     		ldrh	r3, [r7, #6]
 309 0104 002B     		cmp	r3, #0
 310 0106 0CD1     		bne	.L15
 311              	.L16:
 244:.\Generated_Source\PSoC5/clockButtonRead.c ****                 {
 245:.\Generated_Source\PSoC5/clockButtonRead.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/clockButtonRead.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/clockButtonRead.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 249:.\Generated_Source\PSoC5/clockButtonRead.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/clockButtonRead.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 253:.\Generated_Source\PSoC5/clockButtonRead.c ****                     clockButtonRead_CLKEN &= (uint8)(~clockButtonRead_CLKEN_MASK);
 312              		.loc 1 253 0
 313 0108 44F2A233 		movw	r3, #:lower16:1073759138
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 11


 314 010c C4F20003 		movt	r3, #:upper16:1073759138
 315 0110 44F2A232 		movw	r2, #:lower16:1073759138
 316 0114 C4F20002 		movt	r2, #:upper16:1073759138
 317 0118 1278     		ldrb	r2, [r2, #0]
 318 011a D2B2     		uxtb	r2, r2
 319 011c 02F0FB02 		and	r2, r2, #251
 320 0120 1A70     		strb	r2, [r3, #0]
 321              	.L15:
 254:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 255:.\Generated_Source\PSoC5/clockButtonRead.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/clockButtonRead.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/clockButtonRead.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/clockButtonRead.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/clockButtonRead.c ****                 }
 260:.\Generated_Source\PSoC5/clockButtonRead.c ****             }
 261:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 262:.\Generated_Source\PSoC5/clockButtonRead.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/clockButtonRead.c ****             if ((clockButtonRead_CLKEN & clockButtonRead_CLKEN_MASK) != 0u)
 322              		.loc 1 263 0
 323 0122 44F2A233 		movw	r3, #:lower16:1073759138
 324 0126 C4F20003 		movt	r3, #:upper16:1073759138
 325 012a 1B78     		ldrb	r3, [r3, #0]
 326 012c DBB2     		uxtb	r3, r3
 327 012e 03F00403 		and	r3, r3, #4
 328 0132 002B     		cmp	r3, #0
 329 0134 1ED0     		beq	.L17
 264:.\Generated_Source\PSoC5/clockButtonRead.c ****             {
 265:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 330              		.loc 1 266 0
 331 0136 44F20203 		movw	r3, #:lower16:1073758210
 332 013a C4F20003 		movt	r3, #:upper16:1073758210
 333 013e FA88     		ldrh	r2, [r7, #6]	@ movhi
 334 0140 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 268:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 335              		.loc 1 268 0
 336 0142 44F20103 		movw	r3, #:lower16:1073758209
 337 0146 C4F20003 		movt	r3, #:upper16:1073758209
 338 014a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 339 014c 002A     		cmp	r2, #0
 340 014e 02D0     		beq	.L18
 341 0150 4FF00302 		mov	r2, #3
 342 0154 01E0     		b	.L19
 343              	.L18:
 344 0156 4FF00102 		mov	r2, #1
 345              	.L19:
 346 015a 1A70     		strb	r2, [r3, #0]
 347              	.L20:
 269:.\Generated_Source\PSoC5/clockButtonRead.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 348              		.loc 1 269 0
 349 015c 44F20103 		movw	r3, #:lower16:1073758209
 350 0160 C4F20003 		movt	r3, #:upper16:1073758209
 351 0164 1B78     		ldrb	r3, [r3, #0]
 352 0166 DBB2     		uxtb	r3, r3
 353 0168 03F00103 		and	r3, r3, #1
 354 016c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 12


 355 016e 002B     		cmp	r3, #0
 356 0170 F4D1     		bne	.L20
 357 0172 14E0     		b	.L21
 358              	.L17:
 270:.\Generated_Source\PSoC5/clockButtonRead.c ****             }
 271:.\Generated_Source\PSoC5/clockButtonRead.c ****             else
 272:.\Generated_Source\PSoC5/clockButtonRead.c ****             {
 273:.\Generated_Source\PSoC5/clockButtonRead.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/clockButtonRead.c ****                 CY_SET_REG16(clockButtonRead_DIV_PTR, clkDivider);
 359              		.loc 1 274 0
 360 0174 44F28803 		movw	r3, #:lower16:1073758344
 361 0178 C4F20003 		movt	r3, #:upper16:1073758344
 362 017c FA88     		ldrh	r2, [r7, #6]	@ movhi
 363 017e 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/clockButtonRead.c **** 				clockButtonRead_CLKEN |= enabled;
 364              		.loc 1 275 0
 365 0180 44F2A233 		movw	r3, #:lower16:1073759138
 366 0184 C4F20003 		movt	r3, #:upper16:1073759138
 367 0188 44F2A232 		movw	r2, #:lower16:1073759138
 368 018c C4F20002 		movt	r2, #:upper16:1073759138
 369 0190 1278     		ldrb	r2, [r2, #0]
 370 0192 D1B2     		uxtb	r1, r2
 371 0194 3A7B     		ldrb	r2, [r7, #12]
 372 0196 41EA0202 		orr	r2, r1, r2
 373 019a D2B2     		uxtb	r2, r2
 374 019c 1A70     		strb	r2, [r3, #0]
 375              	.L21:
 276:.\Generated_Source\PSoC5/clockButtonRead.c ****             }
 277:.\Generated_Source\PSoC5/clockButtonRead.c ****         }
 278:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 279:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 376              		.loc 1 279 0
 377 019e 07F11007 		add	r7, r7, #16
 378 01a2 BD46     		mov	sp, r7
 379 01a4 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE3:
 382              		.size	clockButtonRead_SetDividerRegister, .-clockButtonRead_SetDividerRegister
 383 01a6 00BF     		.section	.text.clockButtonRead_GetDividerRegister,"ax",%progbits
 384              		.align	2
 385              		.global	clockButtonRead_GetDividerRegister
 386              		.thumb
 387              		.thumb_func
 388              		.type	clockButtonRead_GetDividerRegister, %function
 389              	clockButtonRead_GetDividerRegister:
 390              	.LFB4:
 280:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 281:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 282:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_GetDividerRegister
 284:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 286:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 287:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 289:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 290:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 13


 291:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 292:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 293:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/clockButtonRead.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 296:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/clockButtonRead.c **** uint16 clockButtonRead_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 391              		.loc 1 298 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              	.LCFI10:
 398              		.cfi_def_cfa_offset 4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_offset 7, -4
 401              	.LCFI11:
 402              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/clockButtonRead.c ****     return CY_GET_REG16(clockButtonRead_DIV_PTR);
 403              		.loc 1 299 0
 404 0004 44F28803 		movw	r3, #:lower16:1073758344
 405 0008 C4F20003 		movt	r3, #:upper16:1073758344
 406 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 407 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 408              		.loc 1 300 0
 409 0010 1846     		mov	r0, r3
 410 0012 BD46     		mov	sp, r7
 411 0014 80BC     		pop	{r7}
 412 0016 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE4:
 415              		.size	clockButtonRead_GetDividerRegister, .-clockButtonRead_GetDividerRegister
 416              		.section	.text.clockButtonRead_SetModeRegister,"ax",%progbits
 417              		.align	2
 418              		.global	clockButtonRead_SetModeRegister
 419              		.thumb
 420              		.thumb_func
 421              		.type	clockButtonRead_SetModeRegister, %function
 422              	clockButtonRead_SetModeRegister:
 423              	.LFB5:
 301:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 302:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 303:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_SetModeRegister
 305:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 307:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 308:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/clockButtonRead.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/clockButtonRead.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/clockButtonRead.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 313:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 314:.\Generated_Source\PSoC5/clockButtonRead.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 14


 315:.\Generated_Source\PSoC5/clockButtonRead.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 value.
 319:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/clockButtonRead.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/clockButtonRead.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 328:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 329:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 330:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 331:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 424              		.loc 1 333 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI12:
 431              		.cfi_def_cfa_offset 4
 432 0002 83B0     		sub	sp, sp, #12
 433              	.LCFI13:
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_offset 7, -4
 437              	.LCFI14:
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/clockButtonRead.c ****     clockButtonRead_MOD_SRC |= modeBitMask & (uint8)clockButtonRead_MODE_MASK;
 441              		.loc 1 334 0
 442 000a 44F28A03 		movw	r3, #:lower16:1073758346
 443 000e C4F20003 		movt	r3, #:upper16:1073758346
 444 0012 44F28A02 		movw	r2, #:lower16:1073758346
 445 0016 C4F20002 		movt	r2, #:upper16:1073758346
 446 001a 1278     		ldrb	r2, [r2, #0]
 447 001c D2B2     		uxtb	r2, r2
 448 001e 1146     		mov	r1, r2
 449 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 450 0022 D2B2     		uxtb	r2, r2
 451 0024 02F0F802 		and	r2, r2, #248
 452 0028 41EA0202 		orr	r2, r1, r2
 453 002c D2B2     		uxtb	r2, r2
 454 002e D2B2     		uxtb	r2, r2
 455 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 456              		.loc 1 335 0
 457 0032 07F10C07 		add	r7, r7, #12
 458 0036 BD46     		mov	sp, r7
 459 0038 80BC     		pop	{r7}
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 15


 460 003a 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE5:
 463              		.size	clockButtonRead_SetModeRegister, .-clockButtonRead_SetModeRegister
 464              		.section	.text.clockButtonRead_ClearModeRegister,"ax",%progbits
 465              		.align	2
 466              		.global	clockButtonRead_ClearModeRegister
 467              		.thumb
 468              		.thumb_func
 469              		.type	clockButtonRead_ClearModeRegister, %function
 470              	clockButtonRead_ClearModeRegister:
 471              	.LFB6:
 336:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 337:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 338:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_ClearModeRegister
 340:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 342:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 343:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/clockButtonRead.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/clockButtonRead.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/clockButtonRead.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 348:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 349:.\Generated_Source\PSoC5/clockButtonRead.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/clockButtonRead.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 value.
 354:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/clockButtonRead.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/clockButtonRead.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/clockButtonRead.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 363:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 364:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 365:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 366:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 472              		.loc 1 368 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              	.LCFI15:
 479              		.cfi_def_cfa_offset 4
 480 0002 83B0     		sub	sp, sp, #12
 481              	.LCFI16:
 482              		.cfi_def_cfa_offset 16
 483 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 16


 484              		.cfi_offset 7, -4
 485              	.LCFI17:
 486              		.cfi_def_cfa_register 7
 487 0006 0346     		mov	r3, r0
 488 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/clockButtonRead.c ****     clockButtonRead_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(clockButtonRead_MODE_MASK))
 489              		.loc 1 369 0
 490 000a 44F28A03 		movw	r3, #:lower16:1073758346
 491 000e C4F20003 		movt	r3, #:upper16:1073758346
 492 0012 44F28A02 		movw	r2, #:lower16:1073758346
 493 0016 C4F20002 		movt	r2, #:upper16:1073758346
 494 001a 1278     		ldrb	r2, [r2, #0]
 495 001c D1B2     		uxtb	r1, r2
 496 001e FA79     		ldrb	r2, [r7, #7]
 497 0020 6FEA0202 		mvn	r2, r2
 498 0024 D2B2     		uxtb	r2, r2
 499 0026 42F00702 		orr	r2, r2, #7
 500 002a D2B2     		uxtb	r2, r2
 501 002c 01EA0202 		and	r2, r1, r2
 502 0030 D2B2     		uxtb	r2, r2
 503 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 504              		.loc 1 370 0
 505 0034 07F10C07 		add	r7, r7, #12
 506 0038 BD46     		mov	sp, r7
 507 003a 80BC     		pop	{r7}
 508 003c 7047     		bx	lr
 509              		.cfi_endproc
 510              	.LFE6:
 511              		.size	clockButtonRead_ClearModeRegister, .-clockButtonRead_ClearModeRegister
 512 003e 00BF     		.section	.text.clockButtonRead_GetModeRegister,"ax",%progbits
 513              		.align	2
 514              		.global	clockButtonRead_GetModeRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	clockButtonRead_GetModeRegister, %function
 518              	clockButtonRead_GetModeRegister:
 519              	.LFB7:
 371:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 372:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 373:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_GetModeRegister
 375:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 377:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 378:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 380:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 381:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 382:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 383:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 384:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/clockButtonRead.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 387:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/clockButtonRead.c **** uint8 clockButtonRead_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/clockButtonRead.c **** {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 17


 520              		.loc 1 389 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              	.LCFI18:
 527              		.cfi_def_cfa_offset 4
 528 0002 00AF     		add	r7, sp, #0
 529              		.cfi_offset 7, -4
 530              	.LCFI19:
 531              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/clockButtonRead.c ****     return clockButtonRead_MOD_SRC & (uint8)(clockButtonRead_MODE_MASK);
 532              		.loc 1 390 0
 533 0004 44F28A03 		movw	r3, #:lower16:1073758346
 534 0008 C4F20003 		movt	r3, #:upper16:1073758346
 535 000c 1B78     		ldrb	r3, [r3, #0]
 536 000e DBB2     		uxtb	r3, r3
 537 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 538              		.loc 1 391 0
 539 0014 1846     		mov	r0, r3
 540 0016 BD46     		mov	sp, r7
 541 0018 80BC     		pop	{r7}
 542 001a 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE7:
 545              		.size	clockButtonRead_GetModeRegister, .-clockButtonRead_GetModeRegister
 546              		.section	.text.clockButtonRead_SetSourceRegister,"ax",%progbits
 547              		.align	2
 548              		.global	clockButtonRead_SetSourceRegister
 549              		.thumb
 550              		.thumb_func
 551              		.type	clockButtonRead_SetSourceRegister, %function
 552              	clockButtonRead_SetSourceRegister:
 553              	.LFB8:
 392:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 393:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 394:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_SetSourceRegister
 396:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 398:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 399:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/clockButtonRead.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 402:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 403:.\Generated_Source\PSoC5/clockButtonRead.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/clockButtonRead.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/clockButtonRead.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 18


 413:.\Generated_Source\PSoC5/clockButtonRead.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 415:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 416:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 417:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 418:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/clockButtonRead.c **** void clockButtonRead_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 554              		.loc 1 420 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 16
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558 0000 80B5     		push	{r7, lr}
 559              	.LCFI20:
 560              		.cfi_def_cfa_offset 8
 561 0002 84B0     		sub	sp, sp, #16
 562              	.LCFI21:
 563              		.cfi_def_cfa_offset 24
 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_offset 14, -4
 566              		.cfi_offset 7, -8
 567              	.LCFI22:
 568              		.cfi_def_cfa_register 7
 569 0006 0346     		mov	r3, r0
 570 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/clockButtonRead.c ****     uint16 currDiv = clockButtonRead_GetDividerRegister();
 571              		.loc 1 421 0
 572 000a FFF7FEFF 		bl	clockButtonRead_GetDividerRegister
 573 000e 0346     		mov	r3, r0
 574 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/clockButtonRead.c ****     uint8 oldSrc = clockButtonRead_GetSourceRegister();
 575              		.loc 1 422 0
 576 0012 FFF7FEFF 		bl	clockButtonRead_GetSourceRegister
 577 0016 0346     		mov	r3, r0
 578 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 424:.\Generated_Source\PSoC5/clockButtonRead.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 579              		.loc 1 424 0
 580 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 581 001c 002B     		cmp	r3, #0
 582 001e 29D0     		beq	.L31
 583 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 0022 002B     		cmp	r3, #0
 585 0024 26D1     		bne	.L31
 586 0026 BB89     		ldrh	r3, [r7, #12]
 587 0028 002B     		cmp	r3, #0
 588 002a 23D1     		bne	.L31
 425:.\Generated_Source\PSoC5/clockButtonRead.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 427:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_MOD_SRC |= CYCLK_SSS;
 589              		.loc 1 429 0
 590 002c 44F28A03 		movw	r3, #:lower16:1073758346
 591 0030 C4F20003 		movt	r3, #:upper16:1073758346
 592 0034 44F28A02 		movw	r2, #:lower16:1073758346
 593 0038 C4F20002 		movt	r2, #:upper16:1073758346
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 19


 594 003c 1278     		ldrb	r2, [r2, #0]
 595 003e D2B2     		uxtb	r2, r2
 596 0040 42F04002 		orr	r2, r2, #64
 597 0044 D2B2     		uxtb	r2, r2
 598 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_MOD_SRC =
 599              		.loc 1 430 0
 600 0048 44F28A03 		movw	r3, #:lower16:1073758346
 601 004c C4F20003 		movt	r3, #:upper16:1073758346
 431:.\Generated_Source\PSoC5/clockButtonRead.c ****             (clockButtonRead_MOD_SRC & (uint8)(~clockButtonRead_SRC_SEL_MSK)) | clkSource;
 602              		.loc 1 431 0
 603 0050 44F28A02 		movw	r2, #:lower16:1073758346
 604 0054 C4F20002 		movt	r2, #:upper16:1073758346
 605 0058 1278     		ldrb	r2, [r2, #0]
 606 005a D2B2     		uxtb	r2, r2
 607              		.loc 1 430 0
 608 005c D2B2     		uxtb	r2, r2
 609 005e 02F0F802 		and	r2, r2, #248
 610 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 611 0064 1146     		mov	r1, r2
 612 0066 0246     		mov	r2, r0
 613 0068 41EA0202 		orr	r2, r1, r2
 614 006c D2B2     		uxtb	r2, r2
 615 006e D2B2     		uxtb	r2, r2
 616 0070 1A70     		strb	r2, [r3, #0]
 617              		.loc 1 424 0
 618 0072 40E0     		b	.L34
 619              	.L31:
 432:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 433:.\Generated_Source\PSoC5/clockButtonRead.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 620              		.loc 1 433 0
 621 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 622 0076 002B     		cmp	r3, #0
 623 0078 28D1     		bne	.L33
 624 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 625 007c 002B     		cmp	r3, #0
 626 007e 25D0     		beq	.L33
 627 0080 BB89     		ldrh	r3, [r7, #12]
 628 0082 002B     		cmp	r3, #0
 629 0084 22D1     		bne	.L33
 434:.\Generated_Source\PSoC5/clockButtonRead.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 436:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/clockButtonRead.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_MOD_SRC =
 630              		.loc 1 438 0
 631 0086 44F28A03 		movw	r3, #:lower16:1073758346
 632 008a C4F20003 		movt	r3, #:upper16:1073758346
 439:.\Generated_Source\PSoC5/clockButtonRead.c ****             (clockButtonRead_MOD_SRC & (uint8)(~clockButtonRead_SRC_SEL_MSK)) | clkSource;
 633              		.loc 1 439 0
 634 008e 44F28A02 		movw	r2, #:lower16:1073758346
 635 0092 C4F20002 		movt	r2, #:upper16:1073758346
 636 0096 1278     		ldrb	r2, [r2, #0]
 637 0098 D2B2     		uxtb	r2, r2
 638              		.loc 1 438 0
 639 009a D2B2     		uxtb	r2, r2
 640 009c 02F0F802 		and	r2, r2, #248
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 20


 641 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 642 00a2 1146     		mov	r1, r2
 643 00a4 0246     		mov	r2, r0
 644 00a6 41EA0202 		orr	r2, r1, r2
 645 00aa D2B2     		uxtb	r2, r2
 646 00ac D2B2     		uxtb	r2, r2
 647 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_MOD_SRC &= (uint8)(~CYCLK_SSS);
 648              		.loc 1 440 0
 649 00b0 44F28A03 		movw	r3, #:lower16:1073758346
 650 00b4 C4F20003 		movt	r3, #:upper16:1073758346
 651 00b8 44F28A02 		movw	r2, #:lower16:1073758346
 652 00bc C4F20002 		movt	r2, #:upper16:1073758346
 653 00c0 1278     		ldrb	r2, [r2, #0]
 654 00c2 D2B2     		uxtb	r2, r2
 655 00c4 02F0BF02 		and	r2, r2, #191
 656 00c8 1A70     		strb	r2, [r3, #0]
 657              		.loc 1 433 0
 658 00ca 14E0     		b	.L34
 659              	.L33:
 441:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 442:.\Generated_Source\PSoC5/clockButtonRead.c ****     else
 443:.\Generated_Source\PSoC5/clockButtonRead.c ****     {
 444:.\Generated_Source\PSoC5/clockButtonRead.c ****         clockButtonRead_MOD_SRC =
 660              		.loc 1 444 0
 661 00cc 44F28A03 		movw	r3, #:lower16:1073758346
 662 00d0 C4F20003 		movt	r3, #:upper16:1073758346
 445:.\Generated_Source\PSoC5/clockButtonRead.c ****             (clockButtonRead_MOD_SRC & (uint8)(~clockButtonRead_SRC_SEL_MSK)) | clkSource;
 663              		.loc 1 445 0
 664 00d4 44F28A02 		movw	r2, #:lower16:1073758346
 665 00d8 C4F20002 		movt	r2, #:upper16:1073758346
 666 00dc 1278     		ldrb	r2, [r2, #0]
 667 00de D2B2     		uxtb	r2, r2
 668              		.loc 1 444 0
 669 00e0 D2B2     		uxtb	r2, r2
 670 00e2 02F0F802 		and	r2, r2, #248
 671 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 672 00e8 1146     		mov	r1, r2
 673 00ea 0246     		mov	r2, r0
 674 00ec 41EA0202 		orr	r2, r1, r2
 675 00f0 D2B2     		uxtb	r2, r2
 676 00f2 D2B2     		uxtb	r2, r2
 677 00f4 1A70     		strb	r2, [r3, #0]
 678              	.L34:
 446:.\Generated_Source\PSoC5/clockButtonRead.c ****     }
 447:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 679              		.loc 1 447 0
 680 00f6 07F11007 		add	r7, r7, #16
 681 00fa BD46     		mov	sp, r7
 682 00fc 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE8:
 685              		.size	clockButtonRead_SetSourceRegister, .-clockButtonRead_SetSourceRegister
 686 00fe 00BF     		.section	.text.clockButtonRead_GetSourceRegister,"ax",%progbits
 687              		.align	2
 688              		.global	clockButtonRead_GetSourceRegister
 689              		.thumb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 21


 690              		.thumb_func
 691              		.type	clockButtonRead_GetSourceRegister, %function
 692              	clockButtonRead_GetSourceRegister:
 693              	.LFB9:
 448:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 449:.\Generated_Source\PSoC5/clockButtonRead.c **** 
 450:.\Generated_Source\PSoC5/clockButtonRead.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/clockButtonRead.c **** * Function Name: clockButtonRead_GetSourceRegister
 452:.\Generated_Source\PSoC5/clockButtonRead.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 454:.\Generated_Source\PSoC5/clockButtonRead.c **** * Summary:
 455:.\Generated_Source\PSoC5/clockButtonRead.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 457:.\Generated_Source\PSoC5/clockButtonRead.c **** * Parameters:
 458:.\Generated_Source\PSoC5/clockButtonRead.c **** *  None
 459:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 460:.\Generated_Source\PSoC5/clockButtonRead.c **** * Returns:
 461:.\Generated_Source\PSoC5/clockButtonRead.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/clockButtonRead.c **** *
 463:.\Generated_Source\PSoC5/clockButtonRead.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/clockButtonRead.c **** uint8 clockButtonRead_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/clockButtonRead.c **** {
 694              		.loc 1 465 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI23:
 701              		.cfi_def_cfa_offset 4
 702 0002 00AF     		add	r7, sp, #0
 703              		.cfi_offset 7, -4
 704              	.LCFI24:
 705              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/clockButtonRead.c ****     return clockButtonRead_MOD_SRC & clockButtonRead_SRC_SEL_MSK;
 706              		.loc 1 466 0
 707 0004 44F28A03 		movw	r3, #:lower16:1073758346
 708 0008 C4F20003 		movt	r3, #:upper16:1073758346
 709 000c 1B78     		ldrb	r3, [r3, #0]
 710 000e DBB2     		uxtb	r3, r3
 711 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/clockButtonRead.c **** }
 712              		.loc 1 467 0
 713 0014 1846     		mov	r0, r3
 714 0016 BD46     		mov	sp, r7
 715 0018 80BC     		pop	{r7}
 716 001a 7047     		bx	lr
 717              		.cfi_endproc
 718              	.LFE9:
 719              		.size	clockButtonRead_GetSourceRegister, .-clockButtonRead_GetSourceRegister
 720              		.text
 721              	.Letext0:
 722              		.section	.debug_loc,"",%progbits
 723              	.Ldebug_loc0:
 724              	.LLST0:
 725 0000 00000000 		.4byte	.LFB0
 726 0004 02000000 		.4byte	.LCFI0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 22


 727 0008 0100     		.2byte	0x1
 728 000a 5D       		.byte	0x5d
 729 000b 02000000 		.4byte	.LCFI0
 730 000f 04000000 		.4byte	.LCFI1
 731 0013 0200     		.2byte	0x2
 732 0015 7D       		.byte	0x7d
 733 0016 04       		.sleb128 4
 734 0017 04000000 		.4byte	.LCFI1
 735 001b 42000000 		.4byte	.LFE0
 736 001f 0200     		.2byte	0x2
 737 0021 77       		.byte	0x77
 738 0022 04       		.sleb128 4
 739 0023 00000000 		.4byte	0x0
 740 0027 00000000 		.4byte	0x0
 741              	.LLST1:
 742 002b 00000000 		.4byte	.LFB1
 743 002f 02000000 		.4byte	.LCFI2
 744 0033 0100     		.2byte	0x1
 745 0035 5D       		.byte	0x5d
 746 0036 02000000 		.4byte	.LCFI2
 747 003a 04000000 		.4byte	.LCFI3
 748 003e 0200     		.2byte	0x2
 749 0040 7D       		.byte	0x7d
 750 0041 04       		.sleb128 4
 751 0042 04000000 		.4byte	.LCFI3
 752 0046 3E000000 		.4byte	.LFE1
 753 004a 0200     		.2byte	0x2
 754 004c 77       		.byte	0x77
 755 004d 04       		.sleb128 4
 756 004e 00000000 		.4byte	0x0
 757 0052 00000000 		.4byte	0x0
 758              	.LLST2:
 759 0056 00000000 		.4byte	.LFB2
 760 005a 02000000 		.4byte	.LCFI4
 761 005e 0100     		.2byte	0x1
 762 0060 5D       		.byte	0x5d
 763 0061 02000000 		.4byte	.LCFI4
 764 0065 04000000 		.4byte	.LCFI5
 765 0069 0200     		.2byte	0x2
 766 006b 7D       		.byte	0x7d
 767 006c 04       		.sleb128 4
 768 006d 04000000 		.4byte	.LCFI5
 769 0071 06000000 		.4byte	.LCFI6
 770 0075 0200     		.2byte	0x2
 771 0077 7D       		.byte	0x7d
 772 0078 10       		.sleb128 16
 773 0079 06000000 		.4byte	.LCFI6
 774 007d 52000000 		.4byte	.LFE2
 775 0081 0200     		.2byte	0x2
 776 0083 77       		.byte	0x77
 777 0084 10       		.sleb128 16
 778 0085 00000000 		.4byte	0x0
 779 0089 00000000 		.4byte	0x0
 780              	.LLST3:
 781 008d 00000000 		.4byte	.LFB3
 782 0091 02000000 		.4byte	.LCFI7
 783 0095 0100     		.2byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 23


 784 0097 5D       		.byte	0x5d
 785 0098 02000000 		.4byte	.LCFI7
 786 009c 04000000 		.4byte	.LCFI8
 787 00a0 0200     		.2byte	0x2
 788 00a2 7D       		.byte	0x7d
 789 00a3 08       		.sleb128 8
 790 00a4 04000000 		.4byte	.LCFI8
 791 00a8 06000000 		.4byte	.LCFI9
 792 00ac 0200     		.2byte	0x2
 793 00ae 7D       		.byte	0x7d
 794 00af 18       		.sleb128 24
 795 00b0 06000000 		.4byte	.LCFI9
 796 00b4 A6010000 		.4byte	.LFE3
 797 00b8 0200     		.2byte	0x2
 798 00ba 77       		.byte	0x77
 799 00bb 18       		.sleb128 24
 800 00bc 00000000 		.4byte	0x0
 801 00c0 00000000 		.4byte	0x0
 802              	.LLST4:
 803 00c4 00000000 		.4byte	.LFB4
 804 00c8 02000000 		.4byte	.LCFI10
 805 00cc 0100     		.2byte	0x1
 806 00ce 5D       		.byte	0x5d
 807 00cf 02000000 		.4byte	.LCFI10
 808 00d3 04000000 		.4byte	.LCFI11
 809 00d7 0200     		.2byte	0x2
 810 00d9 7D       		.byte	0x7d
 811 00da 04       		.sleb128 4
 812 00db 04000000 		.4byte	.LCFI11
 813 00df 18000000 		.4byte	.LFE4
 814 00e3 0200     		.2byte	0x2
 815 00e5 77       		.byte	0x77
 816 00e6 04       		.sleb128 4
 817 00e7 00000000 		.4byte	0x0
 818 00eb 00000000 		.4byte	0x0
 819              	.LLST5:
 820 00ef 00000000 		.4byte	.LFB5
 821 00f3 02000000 		.4byte	.LCFI12
 822 00f7 0100     		.2byte	0x1
 823 00f9 5D       		.byte	0x5d
 824 00fa 02000000 		.4byte	.LCFI12
 825 00fe 04000000 		.4byte	.LCFI13
 826 0102 0200     		.2byte	0x2
 827 0104 7D       		.byte	0x7d
 828 0105 04       		.sleb128 4
 829 0106 04000000 		.4byte	.LCFI13
 830 010a 06000000 		.4byte	.LCFI14
 831 010e 0200     		.2byte	0x2
 832 0110 7D       		.byte	0x7d
 833 0111 10       		.sleb128 16
 834 0112 06000000 		.4byte	.LCFI14
 835 0116 3C000000 		.4byte	.LFE5
 836 011a 0200     		.2byte	0x2
 837 011c 77       		.byte	0x77
 838 011d 10       		.sleb128 16
 839 011e 00000000 		.4byte	0x0
 840 0122 00000000 		.4byte	0x0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 24


 841              	.LLST6:
 842 0126 00000000 		.4byte	.LFB6
 843 012a 02000000 		.4byte	.LCFI15
 844 012e 0100     		.2byte	0x1
 845 0130 5D       		.byte	0x5d
 846 0131 02000000 		.4byte	.LCFI15
 847 0135 04000000 		.4byte	.LCFI16
 848 0139 0200     		.2byte	0x2
 849 013b 7D       		.byte	0x7d
 850 013c 04       		.sleb128 4
 851 013d 04000000 		.4byte	.LCFI16
 852 0141 06000000 		.4byte	.LCFI17
 853 0145 0200     		.2byte	0x2
 854 0147 7D       		.byte	0x7d
 855 0148 10       		.sleb128 16
 856 0149 06000000 		.4byte	.LCFI17
 857 014d 3E000000 		.4byte	.LFE6
 858 0151 0200     		.2byte	0x2
 859 0153 77       		.byte	0x77
 860 0154 10       		.sleb128 16
 861 0155 00000000 		.4byte	0x0
 862 0159 00000000 		.4byte	0x0
 863              	.LLST7:
 864 015d 00000000 		.4byte	.LFB7
 865 0161 02000000 		.4byte	.LCFI18
 866 0165 0100     		.2byte	0x1
 867 0167 5D       		.byte	0x5d
 868 0168 02000000 		.4byte	.LCFI18
 869 016c 04000000 		.4byte	.LCFI19
 870 0170 0200     		.2byte	0x2
 871 0172 7D       		.byte	0x7d
 872 0173 04       		.sleb128 4
 873 0174 04000000 		.4byte	.LCFI19
 874 0178 1C000000 		.4byte	.LFE7
 875 017c 0200     		.2byte	0x2
 876 017e 77       		.byte	0x77
 877 017f 04       		.sleb128 4
 878 0180 00000000 		.4byte	0x0
 879 0184 00000000 		.4byte	0x0
 880              	.LLST8:
 881 0188 00000000 		.4byte	.LFB8
 882 018c 02000000 		.4byte	.LCFI20
 883 0190 0100     		.2byte	0x1
 884 0192 5D       		.byte	0x5d
 885 0193 02000000 		.4byte	.LCFI20
 886 0197 04000000 		.4byte	.LCFI21
 887 019b 0200     		.2byte	0x2
 888 019d 7D       		.byte	0x7d
 889 019e 08       		.sleb128 8
 890 019f 04000000 		.4byte	.LCFI21
 891 01a3 06000000 		.4byte	.LCFI22
 892 01a7 0200     		.2byte	0x2
 893 01a9 7D       		.byte	0x7d
 894 01aa 18       		.sleb128 24
 895 01ab 06000000 		.4byte	.LCFI22
 896 01af FE000000 		.4byte	.LFE8
 897 01b3 0200     		.2byte	0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 25


 898 01b5 77       		.byte	0x77
 899 01b6 18       		.sleb128 24
 900 01b7 00000000 		.4byte	0x0
 901 01bb 00000000 		.4byte	0x0
 902              	.LLST9:
 903 01bf 00000000 		.4byte	.LFB9
 904 01c3 02000000 		.4byte	.LCFI23
 905 01c7 0100     		.2byte	0x1
 906 01c9 5D       		.byte	0x5d
 907 01ca 02000000 		.4byte	.LCFI23
 908 01ce 04000000 		.4byte	.LCFI24
 909 01d2 0200     		.2byte	0x2
 910 01d4 7D       		.byte	0x7d
 911 01d5 04       		.sleb128 4
 912 01d6 04000000 		.4byte	.LCFI24
 913 01da 1C000000 		.4byte	.LFE9
 914 01de 0200     		.2byte	0x2
 915 01e0 77       		.byte	0x77
 916 01e1 04       		.sleb128 4
 917 01e2 00000000 		.4byte	0x0
 918 01e6 00000000 		.4byte	0x0
 919              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 920              		.section	.debug_info
 921 0000 25020000 		.4byte	0x225
 922 0004 0200     		.2byte	0x2
 923 0006 00000000 		.4byte	.Ldebug_abbrev0
 924 000a 04       		.byte	0x4
 925 000b 01       		.uleb128 0x1
 926 000c 25020000 		.4byte	.LASF32
 927 0010 01       		.byte	0x1
 928 0011 04010000 		.4byte	.LASF33
 929 0015 4D000000 		.4byte	.LASF34
 930 0019 00000000 		.4byte	0x0
 931 001d 00000000 		.4byte	0x0
 932 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 933 0025 00000000 		.4byte	.Ldebug_line0
 934 0029 02       		.uleb128 0x2
 935 002a 01       		.byte	0x1
 936 002b 06       		.byte	0x6
 937 002c 61020000 		.4byte	.LASF0
 938 0030 02       		.uleb128 0x2
 939 0031 01       		.byte	0x1
 940 0032 08       		.byte	0x8
 941 0033 2F010000 		.4byte	.LASF1
 942 0037 02       		.uleb128 0x2
 943 0038 02       		.byte	0x2
 944 0039 05       		.byte	0x5
 945 003a 3E020000 		.4byte	.LASF2
 946 003e 02       		.uleb128 0x2
 947 003f 02       		.byte	0x2
 948 0040 07       		.byte	0x7
 949 0041 57010000 		.4byte	.LASF3
 950 0045 02       		.uleb128 0x2
 951 0046 04       		.byte	0x4
 952 0047 05       		.byte	0x5
 953 0048 4E020000 		.4byte	.LASF4
 954 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 26


 955 004d 04       		.byte	0x4
 956 004e 07       		.byte	0x7
 957 004f 45010000 		.4byte	.LASF5
 958 0053 02       		.uleb128 0x2
 959 0054 08       		.byte	0x8
 960 0055 05       		.byte	0x5
 961 0056 00000000 		.4byte	.LASF6
 962 005a 02       		.uleb128 0x2
 963 005b 08       		.byte	0x8
 964 005c 07       		.byte	0x7
 965 005d E0010000 		.4byte	.LASF7
 966 0061 03       		.uleb128 0x3
 967 0062 04       		.byte	0x4
 968 0063 05       		.byte	0x5
 969 0064 696E7400 		.ascii	"int\000"
 970 0068 02       		.uleb128 0x2
 971 0069 04       		.byte	0x4
 972 006a 07       		.byte	0x7
 973 006b CB010000 		.4byte	.LASF8
 974 006f 02       		.uleb128 0x2
 975 0070 01       		.byte	0x1
 976 0071 08       		.byte	0x8
 977 0072 31020000 		.4byte	.LASF9
 978 0076 04       		.uleb128 0x4
 979 0077 48020000 		.4byte	.LASF10
 980 007b 02       		.byte	0x2
 981 007c 60       		.byte	0x60
 982 007d 30000000 		.4byte	0x30
 983 0081 04       		.uleb128 0x4
 984 0082 C4010000 		.4byte	.LASF11
 985 0086 02       		.byte	0x2
 986 0087 61       		.byte	0x61
 987 0088 3E000000 		.4byte	0x3e
 988 008c 05       		.uleb128 0x5
 989 008d 01       		.byte	0x1
 990 008e 6D020000 		.4byte	.LASF12
 991 0092 01       		.byte	0x1
 992 0093 2D       		.byte	0x2d
 993 0094 01       		.byte	0x1
 994 0095 00000000 		.4byte	.LFB0
 995 0099 42000000 		.4byte	.LFE0
 996 009d 00000000 		.4byte	.LLST0
 997 00a1 05       		.uleb128 0x5
 998 00a2 01       		.byte	0x1
 999 00a3 99000000 		.4byte	.LASF13
 1000 00a7 01       		.byte	0x1
 1001 00a8 47       		.byte	0x47
 1002 00a9 01       		.byte	0x1
 1003 00aa 00000000 		.4byte	.LFB1
 1004 00ae 3E000000 		.4byte	.LFE1
 1005 00b2 2B000000 		.4byte	.LLST1
 1006 00b6 06       		.uleb128 0x6
 1007 00b7 01       		.byte	0x1
 1008 00b8 0E000000 		.4byte	.LASF14
 1009 00bc 01       		.byte	0x1
 1010 00bd 9D       		.byte	0x9d
 1011 00be 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 27


 1012 00bf 00000000 		.4byte	.LFB2
 1013 00c3 52000000 		.4byte	.LFE2
 1014 00c7 56000000 		.4byte	.LLST2
 1015 00cb DE000000 		.4byte	0xde
 1016 00cf 07       		.uleb128 0x7
 1017 00d0 FE000000 		.4byte	.LASF16
 1018 00d4 01       		.byte	0x1
 1019 00d5 9D       		.byte	0x9d
 1020 00d6 76000000 		.4byte	0x76
 1021 00da 02       		.byte	0x2
 1022 00db 91       		.byte	0x91
 1023 00dc 77       		.sleb128 -9
 1024 00dd 00       		.byte	0x0
 1025 00de 06       		.uleb128 0x6
 1026 00df 01       		.byte	0x1
 1027 00e0 DB000000 		.4byte	.LASF15
 1028 00e4 01       		.byte	0x1
 1029 00e5 C1       		.byte	0xc1
 1030 00e6 01       		.byte	0x1
 1031 00e7 00000000 		.4byte	.LFB3
 1032 00eb A6010000 		.4byte	.LFE3
 1033 00ef 8D000000 		.4byte	.LLST3
 1034 00f3 3E010000 		.4byte	0x13e
 1035 00f7 07       		.uleb128 0x7
 1036 00f8 6A010000 		.4byte	.LASF17
 1037 00fc 01       		.byte	0x1
 1038 00fd C1       		.byte	0xc1
 1039 00fe 81000000 		.4byte	0x81
 1040 0102 02       		.byte	0x2
 1041 0103 91       		.byte	0x91
 1042 0104 6E       		.sleb128 -18
 1043 0105 07       		.uleb128 0x7
 1044 0106 9C010000 		.4byte	.LASF18
 1045 010a 01       		.byte	0x1
 1046 010b C1       		.byte	0xc1
 1047 010c 76000000 		.4byte	0x76
 1048 0110 02       		.byte	0x2
 1049 0111 91       		.byte	0x91
 1050 0112 6D       		.sleb128 -19
 1051 0113 08       		.uleb128 0x8
 1052 0114 3D010000 		.4byte	.LASF19
 1053 0118 01       		.byte	0x1
 1054 0119 C4       		.byte	0xc4
 1055 011a 76000000 		.4byte	0x76
 1056 011e 02       		.byte	0x2
 1057 011f 91       		.byte	0x91
 1058 0120 74       		.sleb128 -12
 1059 0121 08       		.uleb128 0x8
 1060 0122 D8010000 		.4byte	.LASF20
 1061 0126 01       		.byte	0x1
 1062 0127 C6       		.byte	0xc6
 1063 0128 76000000 		.4byte	0x76
 1064 012c 02       		.byte	0x2
 1065 012d 91       		.byte	0x91
 1066 012e 75       		.sleb128 -11
 1067 012f 08       		.uleb128 0x8
 1068 0130 AE000000 		.4byte	.LASF21
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 28


 1069 0134 01       		.byte	0x1
 1070 0135 C7       		.byte	0xc7
 1071 0136 81000000 		.4byte	0x81
 1072 013a 02       		.byte	0x2
 1073 013b 91       		.byte	0x91
 1074 013c 76       		.sleb128 -10
 1075 013d 00       		.byte	0x0
 1076 013e 09       		.uleb128 0x9
 1077 013f 01       		.byte	0x1
 1078 0140 83020000 		.4byte	.LASF25
 1079 0144 01       		.byte	0x1
 1080 0145 2901     		.2byte	0x129
 1081 0147 01       		.byte	0x1
 1082 0148 81000000 		.4byte	0x81
 1083 014c 00000000 		.4byte	.LFB4
 1084 0150 18000000 		.4byte	.LFE4
 1085 0154 C4000000 		.4byte	.LLST4
 1086 0158 0A       		.uleb128 0xa
 1087 0159 01       		.byte	0x1
 1088 015a A4010000 		.4byte	.LASF22
 1089 015e 01       		.byte	0x1
 1090 015f 4C01     		.2byte	0x14c
 1091 0161 01       		.byte	0x1
 1092 0162 00000000 		.4byte	.LFB5
 1093 0166 3C000000 		.4byte	.LFE5
 1094 016a EF000000 		.4byte	.LLST5
 1095 016e 82010000 		.4byte	0x182
 1096 0172 0B       		.uleb128 0xb
 1097 0173 19020000 		.4byte	.LASF23
 1098 0177 01       		.byte	0x1
 1099 0178 4C01     		.2byte	0x14c
 1100 017a 76000000 		.4byte	0x76
 1101 017e 02       		.byte	0x2
 1102 017f 91       		.byte	0x91
 1103 0180 77       		.sleb128 -9
 1104 0181 00       		.byte	0x0
 1105 0182 0A       		.uleb128 0xa
 1106 0183 01       		.byte	0x1
 1107 0184 F7010000 		.4byte	.LASF24
 1108 0188 01       		.byte	0x1
 1109 0189 6F01     		.2byte	0x16f
 1110 018b 01       		.byte	0x1
 1111 018c 00000000 		.4byte	.LFB6
 1112 0190 3E000000 		.4byte	.LFE6
 1113 0194 26010000 		.4byte	.LLST6
 1114 0198 AC010000 		.4byte	0x1ac
 1115 019c 0B       		.uleb128 0xb
 1116 019d 19020000 		.4byte	.LASF23
 1117 01a1 01       		.byte	0x1
 1118 01a2 6F01     		.2byte	0x16f
 1119 01a4 76000000 		.4byte	0x76
 1120 01a8 02       		.byte	0x2
 1121 01a9 91       		.byte	0x91
 1122 01aa 77       		.sleb128 -9
 1123 01ab 00       		.byte	0x0
 1124 01ac 09       		.uleb128 0x9
 1125 01ad 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 29


 1126 01ae 7C010000 		.4byte	.LASF26
 1127 01b2 01       		.byte	0x1
 1128 01b3 8401     		.2byte	0x184
 1129 01b5 01       		.byte	0x1
 1130 01b6 76000000 		.4byte	0x76
 1131 01ba 00000000 		.4byte	.LFB7
 1132 01be 1C000000 		.4byte	.LFE7
 1133 01c2 5D010000 		.4byte	.LLST7
 1134 01c6 0A       		.uleb128 0xa
 1135 01c7 01       		.byte	0x1
 1136 01c8 2B000000 		.4byte	.LASF27
 1137 01cc 01       		.byte	0x1
 1138 01cd A301     		.2byte	0x1a3
 1139 01cf 01       		.byte	0x1
 1140 01d0 00000000 		.4byte	.LFB8
 1141 01d4 FE000000 		.4byte	.LFE8
 1142 01d8 88010000 		.4byte	.LLST8
 1143 01dc 0E020000 		.4byte	0x20e
 1144 01e0 0B       		.uleb128 0xb
 1145 01e1 57020000 		.4byte	.LASF28
 1146 01e5 01       		.byte	0x1
 1147 01e6 A301     		.2byte	0x1a3
 1148 01e8 76000000 		.4byte	0x76
 1149 01ec 02       		.byte	0x2
 1150 01ed 91       		.byte	0x91
 1151 01ee 6F       		.sleb128 -17
 1152 01ef 0C       		.uleb128 0xc
 1153 01f0 36020000 		.4byte	.LASF29
 1154 01f4 01       		.byte	0x1
 1155 01f5 A501     		.2byte	0x1a5
 1156 01f7 81000000 		.4byte	0x81
 1157 01fb 02       		.byte	0x2
 1158 01fc 91       		.byte	0x91
 1159 01fd 74       		.sleb128 -12
 1160 01fe 0C       		.uleb128 0xc
 1161 01ff 75010000 		.4byte	.LASF30
 1162 0203 01       		.byte	0x1
 1163 0204 A601     		.2byte	0x1a6
 1164 0206 76000000 		.4byte	0x76
 1165 020a 02       		.byte	0x2
 1166 020b 91       		.byte	0x91
 1167 020c 77       		.sleb128 -9
 1168 020d 00       		.byte	0x0
 1169 020e 09       		.uleb128 0x9
 1170 020f 01       		.byte	0x1
 1171 0210 B9000000 		.4byte	.LASF31
 1172 0214 01       		.byte	0x1
 1173 0215 D001     		.2byte	0x1d0
 1174 0217 01       		.byte	0x1
 1175 0218 76000000 		.4byte	0x76
 1176 021c 00000000 		.4byte	.LFB9
 1177 0220 1C000000 		.4byte	.LFE9
 1178 0224 BF010000 		.4byte	.LLST9
 1179 0228 00       		.byte	0x0
 1180              		.section	.debug_abbrev
 1181 0000 01       		.uleb128 0x1
 1182 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 30


 1183 0002 01       		.byte	0x1
 1184 0003 25       		.uleb128 0x25
 1185 0004 0E       		.uleb128 0xe
 1186 0005 13       		.uleb128 0x13
 1187 0006 0B       		.uleb128 0xb
 1188 0007 03       		.uleb128 0x3
 1189 0008 0E       		.uleb128 0xe
 1190 0009 1B       		.uleb128 0x1b
 1191 000a 0E       		.uleb128 0xe
 1192 000b 11       		.uleb128 0x11
 1193 000c 01       		.uleb128 0x1
 1194 000d 52       		.uleb128 0x52
 1195 000e 01       		.uleb128 0x1
 1196 000f 55       		.uleb128 0x55
 1197 0010 06       		.uleb128 0x6
 1198 0011 10       		.uleb128 0x10
 1199 0012 06       		.uleb128 0x6
 1200 0013 00       		.byte	0x0
 1201 0014 00       		.byte	0x0
 1202 0015 02       		.uleb128 0x2
 1203 0016 24       		.uleb128 0x24
 1204 0017 00       		.byte	0x0
 1205 0018 0B       		.uleb128 0xb
 1206 0019 0B       		.uleb128 0xb
 1207 001a 3E       		.uleb128 0x3e
 1208 001b 0B       		.uleb128 0xb
 1209 001c 03       		.uleb128 0x3
 1210 001d 0E       		.uleb128 0xe
 1211 001e 00       		.byte	0x0
 1212 001f 00       		.byte	0x0
 1213 0020 03       		.uleb128 0x3
 1214 0021 24       		.uleb128 0x24
 1215 0022 00       		.byte	0x0
 1216 0023 0B       		.uleb128 0xb
 1217 0024 0B       		.uleb128 0xb
 1218 0025 3E       		.uleb128 0x3e
 1219 0026 0B       		.uleb128 0xb
 1220 0027 03       		.uleb128 0x3
 1221 0028 08       		.uleb128 0x8
 1222 0029 00       		.byte	0x0
 1223 002a 00       		.byte	0x0
 1224 002b 04       		.uleb128 0x4
 1225 002c 16       		.uleb128 0x16
 1226 002d 00       		.byte	0x0
 1227 002e 03       		.uleb128 0x3
 1228 002f 0E       		.uleb128 0xe
 1229 0030 3A       		.uleb128 0x3a
 1230 0031 0B       		.uleb128 0xb
 1231 0032 3B       		.uleb128 0x3b
 1232 0033 0B       		.uleb128 0xb
 1233 0034 49       		.uleb128 0x49
 1234 0035 13       		.uleb128 0x13
 1235 0036 00       		.byte	0x0
 1236 0037 00       		.byte	0x0
 1237 0038 05       		.uleb128 0x5
 1238 0039 2E       		.uleb128 0x2e
 1239 003a 00       		.byte	0x0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 31


 1240 003b 3F       		.uleb128 0x3f
 1241 003c 0C       		.uleb128 0xc
 1242 003d 03       		.uleb128 0x3
 1243 003e 0E       		.uleb128 0xe
 1244 003f 3A       		.uleb128 0x3a
 1245 0040 0B       		.uleb128 0xb
 1246 0041 3B       		.uleb128 0x3b
 1247 0042 0B       		.uleb128 0xb
 1248 0043 27       		.uleb128 0x27
 1249 0044 0C       		.uleb128 0xc
 1250 0045 11       		.uleb128 0x11
 1251 0046 01       		.uleb128 0x1
 1252 0047 12       		.uleb128 0x12
 1253 0048 01       		.uleb128 0x1
 1254 0049 40       		.uleb128 0x40
 1255 004a 06       		.uleb128 0x6
 1256 004b 00       		.byte	0x0
 1257 004c 00       		.byte	0x0
 1258 004d 06       		.uleb128 0x6
 1259 004e 2E       		.uleb128 0x2e
 1260 004f 01       		.byte	0x1
 1261 0050 3F       		.uleb128 0x3f
 1262 0051 0C       		.uleb128 0xc
 1263 0052 03       		.uleb128 0x3
 1264 0053 0E       		.uleb128 0xe
 1265 0054 3A       		.uleb128 0x3a
 1266 0055 0B       		.uleb128 0xb
 1267 0056 3B       		.uleb128 0x3b
 1268 0057 0B       		.uleb128 0xb
 1269 0058 27       		.uleb128 0x27
 1270 0059 0C       		.uleb128 0xc
 1271 005a 11       		.uleb128 0x11
 1272 005b 01       		.uleb128 0x1
 1273 005c 12       		.uleb128 0x12
 1274 005d 01       		.uleb128 0x1
 1275 005e 40       		.uleb128 0x40
 1276 005f 06       		.uleb128 0x6
 1277 0060 01       		.uleb128 0x1
 1278 0061 13       		.uleb128 0x13
 1279 0062 00       		.byte	0x0
 1280 0063 00       		.byte	0x0
 1281 0064 07       		.uleb128 0x7
 1282 0065 05       		.uleb128 0x5
 1283 0066 00       		.byte	0x0
 1284 0067 03       		.uleb128 0x3
 1285 0068 0E       		.uleb128 0xe
 1286 0069 3A       		.uleb128 0x3a
 1287 006a 0B       		.uleb128 0xb
 1288 006b 3B       		.uleb128 0x3b
 1289 006c 0B       		.uleb128 0xb
 1290 006d 49       		.uleb128 0x49
 1291 006e 13       		.uleb128 0x13
 1292 006f 02       		.uleb128 0x2
 1293 0070 0A       		.uleb128 0xa
 1294 0071 00       		.byte	0x0
 1295 0072 00       		.byte	0x0
 1296 0073 08       		.uleb128 0x8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 32


 1297 0074 34       		.uleb128 0x34
 1298 0075 00       		.byte	0x0
 1299 0076 03       		.uleb128 0x3
 1300 0077 0E       		.uleb128 0xe
 1301 0078 3A       		.uleb128 0x3a
 1302 0079 0B       		.uleb128 0xb
 1303 007a 3B       		.uleb128 0x3b
 1304 007b 0B       		.uleb128 0xb
 1305 007c 49       		.uleb128 0x49
 1306 007d 13       		.uleb128 0x13
 1307 007e 02       		.uleb128 0x2
 1308 007f 0A       		.uleb128 0xa
 1309 0080 00       		.byte	0x0
 1310 0081 00       		.byte	0x0
 1311 0082 09       		.uleb128 0x9
 1312 0083 2E       		.uleb128 0x2e
 1313 0084 00       		.byte	0x0
 1314 0085 3F       		.uleb128 0x3f
 1315 0086 0C       		.uleb128 0xc
 1316 0087 03       		.uleb128 0x3
 1317 0088 0E       		.uleb128 0xe
 1318 0089 3A       		.uleb128 0x3a
 1319 008a 0B       		.uleb128 0xb
 1320 008b 3B       		.uleb128 0x3b
 1321 008c 05       		.uleb128 0x5
 1322 008d 27       		.uleb128 0x27
 1323 008e 0C       		.uleb128 0xc
 1324 008f 49       		.uleb128 0x49
 1325 0090 13       		.uleb128 0x13
 1326 0091 11       		.uleb128 0x11
 1327 0092 01       		.uleb128 0x1
 1328 0093 12       		.uleb128 0x12
 1329 0094 01       		.uleb128 0x1
 1330 0095 40       		.uleb128 0x40
 1331 0096 06       		.uleb128 0x6
 1332 0097 00       		.byte	0x0
 1333 0098 00       		.byte	0x0
 1334 0099 0A       		.uleb128 0xa
 1335 009a 2E       		.uleb128 0x2e
 1336 009b 01       		.byte	0x1
 1337 009c 3F       		.uleb128 0x3f
 1338 009d 0C       		.uleb128 0xc
 1339 009e 03       		.uleb128 0x3
 1340 009f 0E       		.uleb128 0xe
 1341 00a0 3A       		.uleb128 0x3a
 1342 00a1 0B       		.uleb128 0xb
 1343 00a2 3B       		.uleb128 0x3b
 1344 00a3 05       		.uleb128 0x5
 1345 00a4 27       		.uleb128 0x27
 1346 00a5 0C       		.uleb128 0xc
 1347 00a6 11       		.uleb128 0x11
 1348 00a7 01       		.uleb128 0x1
 1349 00a8 12       		.uleb128 0x12
 1350 00a9 01       		.uleb128 0x1
 1351 00aa 40       		.uleb128 0x40
 1352 00ab 06       		.uleb128 0x6
 1353 00ac 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 33


 1354 00ad 13       		.uleb128 0x13
 1355 00ae 00       		.byte	0x0
 1356 00af 00       		.byte	0x0
 1357 00b0 0B       		.uleb128 0xb
 1358 00b1 05       		.uleb128 0x5
 1359 00b2 00       		.byte	0x0
 1360 00b3 03       		.uleb128 0x3
 1361 00b4 0E       		.uleb128 0xe
 1362 00b5 3A       		.uleb128 0x3a
 1363 00b6 0B       		.uleb128 0xb
 1364 00b7 3B       		.uleb128 0x3b
 1365 00b8 05       		.uleb128 0x5
 1366 00b9 49       		.uleb128 0x49
 1367 00ba 13       		.uleb128 0x13
 1368 00bb 02       		.uleb128 0x2
 1369 00bc 0A       		.uleb128 0xa
 1370 00bd 00       		.byte	0x0
 1371 00be 00       		.byte	0x0
 1372 00bf 0C       		.uleb128 0xc
 1373 00c0 34       		.uleb128 0x34
 1374 00c1 00       		.byte	0x0
 1375 00c2 03       		.uleb128 0x3
 1376 00c3 0E       		.uleb128 0xe
 1377 00c4 3A       		.uleb128 0x3a
 1378 00c5 0B       		.uleb128 0xb
 1379 00c6 3B       		.uleb128 0x3b
 1380 00c7 05       		.uleb128 0x5
 1381 00c8 49       		.uleb128 0x49
 1382 00c9 13       		.uleb128 0x13
 1383 00ca 02       		.uleb128 0x2
 1384 00cb 0A       		.uleb128 0xa
 1385 00cc 00       		.byte	0x0
 1386 00cd 00       		.byte	0x0
 1387 00ce 00       		.byte	0x0
 1388              		.section	.debug_pubnames,"",%progbits
 1389 0000 6A010000 		.4byte	0x16a
 1390 0004 0200     		.2byte	0x2
 1391 0006 00000000 		.4byte	.Ldebug_info0
 1392 000a 29020000 		.4byte	0x229
 1393 000e 8C000000 		.4byte	0x8c
 1394 0012 636C6F63 		.ascii	"clockButtonRead_Start\000"
 1394      6B427574 
 1394      746F6E52 
 1394      6561645F 
 1394      53746172 
 1395 0028 A1000000 		.4byte	0xa1
 1396 002c 636C6F63 		.ascii	"clockButtonRead_Stop\000"
 1396      6B427574 
 1396      746F6E52 
 1396      6561645F 
 1396      53746F70 
 1397 0041 B6000000 		.4byte	0xb6
 1398 0045 636C6F63 		.ascii	"clockButtonRead_StandbyPower\000"
 1398      6B427574 
 1398      746F6E52 
 1398      6561645F 
 1398      5374616E 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 34


 1399 0062 DE000000 		.4byte	0xde
 1400 0066 636C6F63 		.ascii	"clockButtonRead_SetDividerRegister\000"
 1400      6B427574 
 1400      746F6E52 
 1400      6561645F 
 1400      53657444 
 1401 0089 3E010000 		.4byte	0x13e
 1402 008d 636C6F63 		.ascii	"clockButtonRead_GetDividerRegister\000"
 1402      6B427574 
 1402      746F6E52 
 1402      6561645F 
 1402      47657444 
 1403 00b0 58010000 		.4byte	0x158
 1404 00b4 636C6F63 		.ascii	"clockButtonRead_SetModeRegister\000"
 1404      6B427574 
 1404      746F6E52 
 1404      6561645F 
 1404      5365744D 
 1405 00d4 82010000 		.4byte	0x182
 1406 00d8 636C6F63 		.ascii	"clockButtonRead_ClearModeRegister\000"
 1406      6B427574 
 1406      746F6E52 
 1406      6561645F 
 1406      436C6561 
 1407 00fa AC010000 		.4byte	0x1ac
 1408 00fe 636C6F63 		.ascii	"clockButtonRead_GetModeRegister\000"
 1408      6B427574 
 1408      746F6E52 
 1408      6561645F 
 1408      4765744D 
 1409 011e C6010000 		.4byte	0x1c6
 1410 0122 636C6F63 		.ascii	"clockButtonRead_SetSourceRegister\000"
 1410      6B427574 
 1410      746F6E52 
 1410      6561645F 
 1410      53657453 
 1411 0144 0E020000 		.4byte	0x20e
 1412 0148 636C6F63 		.ascii	"clockButtonRead_GetSourceRegister\000"
 1412      6B427574 
 1412      746F6E52 
 1412      6561645F 
 1412      47657453 
 1413 016a 00000000 		.4byte	0x0
 1414              		.section	.debug_aranges,"",%progbits
 1415 0000 64000000 		.4byte	0x64
 1416 0004 0200     		.2byte	0x2
 1417 0006 00000000 		.4byte	.Ldebug_info0
 1418 000a 04       		.byte	0x4
 1419 000b 00       		.byte	0x0
 1420 000c 0000     		.2byte	0x0
 1421 000e 0000     		.2byte	0x0
 1422 0010 00000000 		.4byte	.LFB0
 1423 0014 42000000 		.4byte	.LFE0-.LFB0
 1424 0018 00000000 		.4byte	.LFB1
 1425 001c 3E000000 		.4byte	.LFE1-.LFB1
 1426 0020 00000000 		.4byte	.LFB2
 1427 0024 52000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 35


 1428 0028 00000000 		.4byte	.LFB3
 1429 002c A6010000 		.4byte	.LFE3-.LFB3
 1430 0030 00000000 		.4byte	.LFB4
 1431 0034 18000000 		.4byte	.LFE4-.LFB4
 1432 0038 00000000 		.4byte	.LFB5
 1433 003c 3C000000 		.4byte	.LFE5-.LFB5
 1434 0040 00000000 		.4byte	.LFB6
 1435 0044 3E000000 		.4byte	.LFE6-.LFB6
 1436 0048 00000000 		.4byte	.LFB7
 1437 004c 1C000000 		.4byte	.LFE7-.LFB7
 1438 0050 00000000 		.4byte	.LFB8
 1439 0054 FE000000 		.4byte	.LFE8-.LFB8
 1440 0058 00000000 		.4byte	.LFB9
 1441 005c 1C000000 		.4byte	.LFE9-.LFB9
 1442 0060 00000000 		.4byte	0x0
 1443 0064 00000000 		.4byte	0x0
 1444              		.section	.debug_ranges,"",%progbits
 1445              	.Ldebug_ranges0:
 1446 0000 00000000 		.4byte	.Ltext0
 1447 0004 00000000 		.4byte	.Letext0
 1448 0008 00000000 		.4byte	.LFB0
 1449 000c 42000000 		.4byte	.LFE0
 1450 0010 00000000 		.4byte	.LFB1
 1451 0014 3E000000 		.4byte	.LFE1
 1452 0018 00000000 		.4byte	.LFB2
 1453 001c 52000000 		.4byte	.LFE2
 1454 0020 00000000 		.4byte	.LFB3
 1455 0024 A6010000 		.4byte	.LFE3
 1456 0028 00000000 		.4byte	.LFB4
 1457 002c 18000000 		.4byte	.LFE4
 1458 0030 00000000 		.4byte	.LFB5
 1459 0034 3C000000 		.4byte	.LFE5
 1460 0038 00000000 		.4byte	.LFB6
 1461 003c 3E000000 		.4byte	.LFE6
 1462 0040 00000000 		.4byte	.LFB7
 1463 0044 1C000000 		.4byte	.LFE7
 1464 0048 00000000 		.4byte	.LFB8
 1465 004c FE000000 		.4byte	.LFE8
 1466 0050 00000000 		.4byte	.LFB9
 1467 0054 1C000000 		.4byte	.LFE9
 1468 0058 00000000 		.4byte	0x0
 1469 005c 00000000 		.4byte	0x0
 1470              		.section	.debug_str,"MS",%progbits,1
 1471              	.LASF6:
 1472 0000 6C6F6E67 		.ascii	"long long int\000"
 1472      206C6F6E 
 1472      6720696E 
 1472      7400
 1473              	.LASF14:
 1474 000e 636C6F63 		.ascii	"clockButtonRead_StandbyPower\000"
 1474      6B427574 
 1474      746F6E52 
 1474      6561645F 
 1474      5374616E 
 1475              	.LASF27:
 1476 002b 636C6F63 		.ascii	"clockButtonRead_SetSourceRegister\000"
 1476      6B427574 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 36


 1476      746F6E52 
 1476      6561645F 
 1476      53657453 
 1477              	.LASF34:
 1478 004d 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\PSoC Creator\\Puls"
 1478      73657273 
 1478      5C627279 
 1478      616E2E6C 
 1478      65655C44 
 1479 007b 655F7073 		.ascii	"e_psoc5\\Combine\\Combine.cydsn\000"
 1479      6F63355C 
 1479      436F6D62 
 1479      696E655C 
 1479      436F6D62 
 1480              	.LASF13:
 1481 0099 636C6F63 		.ascii	"clockButtonRead_Stop\000"
 1481      6B427574 
 1481      746F6E52 
 1481      6561645F 
 1481      53746F70 
 1482              	.LASF21:
 1483 00ae 6F6C6444 		.ascii	"oldDivider\000"
 1483      69766964 
 1483      657200
 1484              	.LASF31:
 1485 00b9 636C6F63 		.ascii	"clockButtonRead_GetSourceRegister\000"
 1485      6B427574 
 1485      746F6E52 
 1485      6561645F 
 1485      47657453 
 1486              	.LASF15:
 1487 00db 636C6F63 		.ascii	"clockButtonRead_SetDividerRegister\000"
 1487      6B427574 
 1487      746F6E52 
 1487      6561645F 
 1487      53657444 
 1488              	.LASF16:
 1489 00fe 73746174 		.ascii	"state\000"
 1489      6500
 1490              	.LASF33:
 1491 0104 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\clockButtonRead.c\000"
 1491      6E657261 
 1491      7465645F 
 1491      536F7572 
 1491      63655C50 
 1492              	.LASF1:
 1493 012f 756E7369 		.ascii	"unsigned char\000"
 1493      676E6564 
 1493      20636861 
 1493      7200
 1494              	.LASF19:
 1495 013d 656E6162 		.ascii	"enabled\000"
 1495      6C656400 
 1496              	.LASF5:
 1497 0145 6C6F6E67 		.ascii	"long unsigned int\000"
 1497      20756E73 
 1497      69676E65 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 37


 1497      6420696E 
 1497      7400
 1498              	.LASF3:
 1499 0157 73686F72 		.ascii	"short unsigned int\000"
 1499      7420756E 
 1499      7369676E 
 1499      65642069 
 1499      6E7400
 1500              	.LASF17:
 1501 016a 636C6B44 		.ascii	"clkDivider\000"
 1501      69766964 
 1501      657200
 1502              	.LASF30:
 1503 0175 6F6C6453 		.ascii	"oldSrc\000"
 1503      726300
 1504              	.LASF26:
 1505 017c 636C6F63 		.ascii	"clockButtonRead_GetModeRegister\000"
 1505      6B427574 
 1505      746F6E52 
 1505      6561645F 
 1505      4765744D 
 1506              	.LASF18:
 1507 019c 72657374 		.ascii	"restart\000"
 1507      61727400 
 1508              	.LASF22:
 1509 01a4 636C6F63 		.ascii	"clockButtonRead_SetModeRegister\000"
 1509      6B427574 
 1509      746F6E52 
 1509      6561645F 
 1509      5365744D 
 1510              	.LASF11:
 1511 01c4 75696E74 		.ascii	"uint16\000"
 1511      313600
 1512              	.LASF8:
 1513 01cb 756E7369 		.ascii	"unsigned int\000"
 1513      676E6564 
 1513      20696E74 
 1513      00
 1514              	.LASF20:
 1515 01d8 63757272 		.ascii	"currSrc\000"
 1515      53726300 
 1516              	.LASF7:
 1517 01e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1517      206C6F6E 
 1517      6720756E 
 1517      7369676E 
 1517      65642069 
 1518              	.LASF24:
 1519 01f7 636C6F63 		.ascii	"clockButtonRead_ClearModeRegister\000"
 1519      6B427574 
 1519      746F6E52 
 1519      6561645F 
 1519      436C6561 
 1520              	.LASF23:
 1521 0219 6D6F6465 		.ascii	"modeBitMask\000"
 1521      4269744D 
 1521      61736B00 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\ccROIJxu.s 			page 38


 1522              	.LASF32:
 1523 0225 474E5520 		.ascii	"GNU C 4.4.1\000"
 1523      4320342E 
 1523      342E3100 
 1524              	.LASF9:
 1525 0231 63686172 		.ascii	"char\000"
 1525      00
 1526              	.LASF29:
 1527 0236 63757272 		.ascii	"currDiv\000"
 1527      44697600 
 1528              	.LASF2:
 1529 023e 73686F72 		.ascii	"short int\000"
 1529      7420696E 
 1529      7400
 1530              	.LASF10:
 1531 0248 75696E74 		.ascii	"uint8\000"
 1531      3800
 1532              	.LASF4:
 1533 024e 6C6F6E67 		.ascii	"long int\000"
 1533      20696E74 
 1533      00
 1534              	.LASF28:
 1535 0257 636C6B53 		.ascii	"clkSource\000"
 1535      6F757263 
 1535      6500
 1536              	.LASF0:
 1537 0261 7369676E 		.ascii	"signed char\000"
 1537      65642063 
 1537      68617200 
 1538              	.LASF12:
 1539 026d 636C6F63 		.ascii	"clockButtonRead_Start\000"
 1539      6B427574 
 1539      746F6E52 
 1539      6561645F 
 1539      53746172 
 1540              	.LASF25:
 1541 0283 636C6F63 		.ascii	"clockButtonRead_GetDividerRegister\000"
 1541      6B427574 
 1541      746F6E52 
 1541      6561645F 
 1541      47657444 
 1542              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
