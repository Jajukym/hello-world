ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsTrimIdacsSourcing, %function
  24              	CapSense_1_SsTrimIdacsSourcing:
  25              	.LFB19:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE != CapSense_1_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
  27              		.loc 1 1906 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 35


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 1910 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
  43              		.loc 1 1911 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 1916 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
  54              		.loc 1 1917 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
  59              		.loc 1 1922 0
  60 0020 0360     		str	r3, [r0]
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
  61              		.loc 1 1923 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF2840 		.word	1076428544
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE19:
  71              		.size	CapSense_1_SsTrimIdacsSourcing, .-CapSense_1_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_1_SsTrimIdacs,"ax",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 36


  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	CapSense_1_SsTrimIdacs, %function
  77              	CapSense_1_SsTrimIdacs:
  78              	.LFB20:
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  79              		.loc 1 1944 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
  87              		.loc 1 1951 0
  88 0002 FFF7FEFF 		bl	CapSense_1_SsTrimIdacsSourcing
  89              	.LVL4:
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  90              		.loc 1 1955 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE20:
  95              		.size	CapSense_1_SsTrimIdacs, .-CapSense_1_SsTrimIdacs
  96              		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  97              		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 37


  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_1_SsCSDDisableMode, %function
 101              	CapSense_1_SsCSDDisableMode:
 102              	.LFB8:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 103              		.loc 1 769 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 111              		.loc 1 773 0
 112 0002 044A     		ldr	r2, .L6
 113 0004 1368     		ldr	r3, [r2]
 114              	.LVL5:
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 115              		.loc 1 774 0
 116 0006 0F21     		movs	r1, #15
 117 0008 8B43     		bics	r3, r1
 118              	.LVL6:
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 119              		.loc 1 775 0
 120 000a 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 121              		.loc 1 789 0
 122 000c FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 123              	.LVL7:
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 124              		.loc 1 805 0
 125              		@ sp needed
 126 0010 10BD     		pop	{r4, pc}
 127              	.L7:
 128 0012 C046     		.align	2
 129              	.L6:
 130 0014 00050240 		.word	1073874176
 131              		.cfi_endproc
 132              	.LFE8:
 133              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
 134              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
 135              		.align	2
 136              		.global	CapSense_1_IsBusy
 137              		.code	16
 138              		.thumb_func
 139              		.type	CapSense_1_IsBusy, %function
 140              	CapSense_1_IsBusy:
 141              	.LFB2:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 142              		.loc 1 234 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 38


 147              		.loc 1 235 0
 148 0000 024B     		ldr	r3, .L9
 149 0002 DB68     		ldr	r3, [r3, #12]
 150 0004 8020     		movs	r0, #128
 151 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 152              		.loc 1 236 0
 153              		@ sp needed
 154 0008 7047     		bx	lr
 155              	.L10:
 156 000a C046     		.align	2
 157              	.L9:
 158 000c 00000000 		.word	CapSense_1_dsRam
 159              		.cfi_endproc
 160              	.LFE2:
 161              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 162              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 163              		.align	2
 164              		.global	CapSense_1_SetupWidget
 165              		.code	16
 166              		.thumb_func
 167              		.type	CapSense_1_SetupWidget, %function
 168              	CapSense_1_SetupWidget:
 169              	.LFB3:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 170              		.loc 1 286 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL8:
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 179              		.loc 1 289 0
 180 0002 0E4B     		ldr	r3, .L17
 181 0004 DB68     		ldr	r3, [r3, #12]
 182 0006 DB03     		lsls	r3, r3, #15
 183 0008 0DD4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 184              		.loc 1 299 0
 185 000a 0028     		cmp	r0, #0
 186 000c 0DD1     		bne	.L15
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 187              		.loc 1 300 0 discriminator 1
 188 000e 4309     		lsrs	r3, r0, #5
 189 0010 0433     		adds	r3, r3, #4
 190 0012 9B00     		lsls	r3, r3, #2
 191 0014 094A     		ldr	r2, .L17
 192 0016 9B58     		ldr	r3, [r3, r2]
 193 0018 1F22     		movs	r2, #31
 194 001a 0240     		ands	r2, r0
 195 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 196              		.loc 1 299 0 discriminator 1
 197 001e DB07     		lsls	r3, r3, #31
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 39


 198 0020 05D4     		bmi	.L16
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 199              		.loc 1 307 0
 200 0022 0124     		movs	r4, #1
 201 0024 04E0     		b	.L12
 202              	.L14:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 203              		.loc 1 292 0
 204 0026 1124     		movs	r4, #17
 205 0028 02E0     		b	.L12
 206              	.L15:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 207              		.loc 1 307 0
 208 002a 0124     		movs	r4, #1
 209 002c 00E0     		b	.L12
 210              	.L16:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 211              		.loc 1 303 0
 212 002e 0024     		movs	r4, #0
 213              	.L12:
 214              	.LVL9:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 215              		.loc 1 314 0
 216 0030 002C     		cmp	r4, #0
 217 0032 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 327 0
 219 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 220              	.LVL10:
 221              	.L13:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 222              		.loc 1 343 0
 223 0038 2000     		movs	r0, r4
 224              		@ sp needed
 225              	.LVL11:
 226 003a 10BD     		pop	{r4, pc}
 227              	.L18:
 228              		.align	2
 229              	.L17:
 230 003c 00000000 		.word	CapSense_1_dsRam
 231              		.cfi_endproc
 232              	.LFE3:
 233              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 234              		.section	.text.CapSense_1_Scan,"ax",%progbits
 235              		.align	2
 236              		.global	CapSense_1_Scan
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_1_Scan, %function
 240              	CapSense_1_Scan:
 241              	.LFB4:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 242              		.loc 1 369 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 40


 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 250              	.LVL12:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 251              		.loc 1 372 0
 252 0002 084B     		ldr	r3, .L25
 253 0004 DB68     		ldr	r3, [r3, #12]
 254 0006 DB03     		lsls	r3, r3, #15
 255 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 256              		.loc 1 379 0
 257 000a 074B     		ldr	r3, .L25+4
 258 000c 1B78     		ldrb	r3, [r3]
 259 000e 012B     		cmp	r3, #1
 260 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 261              		.loc 1 388 0
 262 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 263              	.LVL13:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 264              		.loc 1 370 0
 265 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 266              		.loc 1 389 0
 267 0018 03E0     		b	.L20
 268              	.L22:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 269              		.loc 1 375 0
 270 001a 1120     		movs	r0, #17
 271 001c 01E0     		b	.L20
 272              	.L24:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 273              		.loc 1 397 0
 274 001e 0120     		movs	r0, #1
 275 0020 4042     		rsbs	r0, r0, #0
 276              	.L20:
 277              	.LVL14:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 278              		.loc 1 402 0
 279              		@ sp needed
 280 0022 10BD     		pop	{r4, pc}
 281              	.L26:
 282              		.align	2
 283              	.L25:
 284 0024 00000000 		.word	CapSense_1_dsRam
 285 0028 00000000 		.word	.LANCHOR0
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 289              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 290              		.align	2
 291              		.global	CapSense_1_ScanAllWidgets
 292              		.code	16
 293              		.thumb_func
 294              		.type	CapSense_1_ScanAllWidgets, %function
 295              	CapSense_1_ScanAllWidgets:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 41


 296              	.LFB5:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 297              		.loc 1 431 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 10B5     		push	{r4, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 305              	.LVL15:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 306              		.loc 1 436 0
 307 0002 0C4B     		ldr	r3, .L33
 308 0004 DB68     		ldr	r3, [r3, #12]
 309 0006 1B06     		lsls	r3, r3, #24
 310 0008 12D4     		bmi	.L32
 311 000a 0024     		movs	r4, #0
 312 000c 0120     		movs	r0, #1
 313 000e 4042     		rsbs	r0, r0, #0
 314 0010 0BE0     		b	.L29
 315              	.LVL16:
 316              	.L31:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 317              		.loc 1 452 0
 318 0012 2000     		movs	r0, r4
 319              	.LVL17:
 320 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 321              	.LVL18:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 322              		.loc 1 454 0
 323 0018 0028     		cmp	r0, #0
 324 001a 05D1     		bne	.L30
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 325              		.loc 1 471 0
 326 001c 0022     		movs	r2, #0
 327 001e 064B     		ldr	r3, .L33+4
 328 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 329              		.loc 1 476 0
 330 0022 FFF7FEFF 		bl	CapSense_1_Scan
 331              	.LVL19:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 332              		.loc 1 478 0
 333 0026 04E0     		b	.L28
 334              	.L30:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 335              		.loc 1 449 0
 336 0028 0134     		adds	r4, r4, #1
 337              	.LVL20:
 338              	.L29:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 339              		.loc 1 447 0 discriminator 1
 340 002a 002C     		cmp	r4, #0
 341 002c F1D0     		beq	.L31
 342 002e 00E0     		b	.L28
 343              	.LVL21:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 42


 344              	.L32:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 345              		.loc 1 439 0
 346 0030 1120     		movs	r0, #17
 347              	.LVL22:
 348              	.L28:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 349              		.loc 1 484 0
 350              		@ sp needed
 351 0032 10BD     		pop	{r4, pc}
 352              	.L34:
 353              		.align	2
 354              	.L33:
 355 0034 00000000 		.word	CapSense_1_dsRam
 356 0038 00000000 		.word	.LANCHOR0
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 360              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 361              		.align	2
 362              		.global	CapSense_1_SetPinState
 363              		.code	16
 364              		.thumb_func
 365              		.type	CapSense_1_SetPinState, %function
 366              	CapSense_1_SetPinState:
 367              	.LFB7:
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 368              		.loc 1 656 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL23:
 373 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 374              		.cfi_def_cfa_offset 24
 375              		.cfi_offset 3, -24
 376              		.cfi_offset 4, -20
 377              		.cfi_offset 5, -16
 378              		.cfi_offset 6, -12
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 382              		.loc 1 681 0
 383 0004 4001     		lsls	r0, r0, #5
 384              	.LVL24:
 385 0006 244B     		ldr	r3, .L42
 386 0008 C458     		ldr	r4, [r0, r3]
 387 000a CB00     		lsls	r3, r1, #3
 388 000c 591A     		subs	r1, r3, r1
 389              	.LVL25:
 390 000e 8B00     		lsls	r3, r1, #2
 391 0010 E418     		adds	r4, r4, r3
 392              	.LVL26:
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 393              		.loc 1 686 0
 394 0012 0025     		movs	r5, #0
 395 0014 3CE0     		b	.L36
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 43


 396              	.LVL27:
 397              	.L41:
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 398              		.loc 1 689 0
 399 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 400              	.LVL28:
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 401              		.loc 1 690 0
 402 001a 2168     		ldr	r1, [r4]
 403 001c 0B68     		ldr	r3, [r1]
 404 001e 277E     		ldrb	r7, [r4, #24]
 405 0020 0F22     		movs	r2, #15
 406 0022 BA40     		lsls	r2, r2, r7
 407 0024 9343     		bics	r3, r2
 408 0026 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 409              		.loc 1 691 0
 410 0028 6168     		ldr	r1, [r4, #4]
 411 002a 0B68     		ldr	r3, [r1]
 412 002c A77E     		ldrb	r7, [r4, #26]
 413 002e 0722     		movs	r2, #7
 414 0030 BA40     		lsls	r2, r2, r7
 415 0032 9343     		bics	r3, r2
 416 0034 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 417              		.loc 1 692 0
 418 0036 FFF7FEFF 		bl	CyExitCriticalSection
 419              	.LVL29:
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 420              		.loc 1 694 0
 421 003a 012E     		cmp	r6, #1
 422 003c 17D0     		beq	.L38
 423 003e 002E     		cmp	r6, #0
 424 0040 02D0     		beq	.L39
 425 0042 032E     		cmp	r6, #3
 426 0044 1FD0     		beq	.L40
 427 0046 21E0     		b	.L37
 428              	.L39:
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 429              		.loc 1 698 0
 430 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 431              	.LVL30:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 432              		.loc 1 699 0
 433 004c 6268     		ldr	r2, [r4, #4]
 434 004e 1168     		ldr	r1, [r2]
 435 0050 A77E     		ldrb	r7, [r4, #26]
 436 0052 0623     		movs	r3, #6
 437 0054 BB40     		lsls	r3, r3, r7
 438 0056 0B43     		orrs	r3, r1
 439 0058 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 440              		.loc 1 700 0
 441 005a A168     		ldr	r1, [r4, #8]
 442 005c 0B68     		ldr	r3, [r1]
 443 005e 677E     		ldrb	r7, [r4, #25]
 444 0060 0122     		movs	r2, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 44


 445 0062 BA40     		lsls	r2, r2, r7
 446 0064 9343     		bics	r3, r2
 447 0066 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 448              		.loc 1 701 0
 449 0068 FFF7FEFF 		bl	CyExitCriticalSection
 450              	.LVL31:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 451              		.loc 1 702 0
 452 006c 0EE0     		b	.L37
 453              	.L38:
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 454              		.loc 1 705 0
 455 006e FFF7FEFF 		bl	CyEnterCriticalSection
 456              	.LVL32:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 457              		.loc 1 706 0
 458 0072 A168     		ldr	r1, [r4, #8]
 459 0074 0B68     		ldr	r3, [r1]
 460 0076 677E     		ldrb	r7, [r4, #25]
 461 0078 0122     		movs	r2, #1
 462 007a BA40     		lsls	r2, r2, r7
 463 007c 9343     		bics	r3, r2
 464 007e 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 465              		.loc 1 707 0
 466 0080 FFF7FEFF 		bl	CyExitCriticalSection
 467              	.LVL33:
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 468              		.loc 1 708 0
 469 0084 02E0     		b	.L37
 470              	.L40:
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 471              		.loc 1 713 0
 472 0086 2000     		movs	r0, r4
 473 0088 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 474              	.LVL34:
 475              	.L37:
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 476              		.loc 1 748 0 discriminator 2
 477 008c 1C34     		adds	r4, r4, #28
 478              	.LVL35:
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 479              		.loc 1 686 0 discriminator 2
 480 008e 0135     		adds	r5, r5, #1
 481              	.LVL36:
 482              	.L36:
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 483              		.loc 1 686 0 is_stmt 0 discriminator 1
 484 0090 002D     		cmp	r5, #0
 485 0092 C0D0     		beq	.L41
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486              		.loc 1 750 0 is_stmt 1
 487              		@ sp needed
 488              	.LVL37:
 489              	.LVL38:
 490              	.LVL39:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 45


 491 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 492              	.L43:
 493 0096 C046     		.align	2
 494              	.L42:
 495 0098 00000000 		.word	CapSense_1_dsFlash
 496              		.cfi_endproc
 497              	.LFE7:
 498              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 499              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 500              		.align	2
 501              		.global	CapSense_1_SsSwitchSensingMode
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_1_SsSwitchSensingMode, %function
 505              	CapSense_1_SsSwitchSensingMode:
 506              	.LFB9:
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 507              		.loc 1 908 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL40:
 512 0000 10B5     		push	{r4, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 516 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 517              		.loc 1 909 0
 518 0004 0C4B     		ldr	r3, .L48
 519 0006 1B78     		ldrb	r3, [r3]
 520 0008 8342     		cmp	r3, r0
 521 000a 14D0     		beq	.L44
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 522              		.loc 1 912 0
 523 000c 012B     		cmp	r3, #1
 524 000e 01D1     		bne	.L46
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 525              		.loc 1 915 0
 526 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 527              	.LVL41:
 528              	.L46:
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529              		.loc 1 945 0
 530 0014 012C     		cmp	r4, #1
 531 0016 05D1     		bne	.L47
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 532              		.loc 1 949 0
 533 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 534              	.LVL42:
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 535              		.loc 1 950 0
 536 001c 0122     		movs	r2, #1
 537 001e 064B     		ldr	r3, .L48
 538 0020 1A70     		strb	r2, [r3]
 539 0022 08E0     		b	.L44
 540              	.L47:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 46


 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541              		.loc 1 953 0
 542 0024 022C     		cmp	r4, #2
 543 0026 06D0     		beq	.L44
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 544              		.loc 1 961 0
 545 0028 042C     		cmp	r4, #4
 546 002a 04D0     		beq	.L44
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 547              		.loc 1 969 0
 548 002c 032C     		cmp	r4, #3
 549 002e 02D0     		beq	.L44
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 550              		.loc 1 978 0
 551 0030 0022     		movs	r2, #0
 552 0032 014B     		ldr	r3, .L48
 553 0034 1A70     		strb	r2, [r3]
 554              	.L44:
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 555              		.loc 1 981 0
 556              		@ sp needed
 557 0036 10BD     		pop	{r4, pc}
 558              	.L49:
 559              		.align	2
 560              	.L48:
 561 0038 00000000 		.word	.LANCHOR0
 562              		.cfi_endproc
 563              	.LFE9:
 564              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 565              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 566              		.align	2
 567              		.global	CapSense_1_SsSetIOsInDefaultState
 568              		.code	16
 569              		.thumb_func
 570              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 571              	CapSense_1_SsSetIOsInDefaultState:
 572              	.LFB10:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 573              		.loc 1 1007 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577 0000 30B5     		push	{r4, r5, lr}
 578              		.cfi_def_cfa_offset 12
 579              		.cfi_offset 4, -12
 580              		.cfi_offset 5, -8
 581              		.cfi_offset 14, -4
 582              	.LVL43:
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 583              		.loc 1 1013 0
 584 0002 0021     		movs	r1, #0
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 585              		.loc 1 1008 0
 586 0004 0D4B     		ldr	r3, .L53
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 587              		.loc 1 1013 0
 588 0006 16E0     		b	.L51
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 47


 589              	.LVL44:
 590              	.L52:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 591              		.loc 1 1020 0 discriminator 3
 592 0008 1868     		ldr	r0, [r3]
 593 000a 0268     		ldr	r2, [r0]
 594              	.LVL45:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 595              		.loc 1 1021 0 discriminator 3
 596 000c 1C69     		ldr	r4, [r3, #16]
 597 000e A243     		bics	r2, r4
 598              	.LVL46:
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 599              		.loc 1 1022 0 discriminator 3
 600 0010 0260     		str	r2, [r0]
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 601              		.loc 1 1024 0 discriminator 3
 602 0012 5C68     		ldr	r4, [r3, #4]
 603 0014 2268     		ldr	r2, [r4]
 604              	.LVL47:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 605              		.loc 1 1025 0 discriminator 3
 606 0016 9D7E     		ldrb	r5, [r3, #26]
 607 0018 0720     		movs	r0, #7
 608 001a A840     		lsls	r0, r0, r5
 609 001c 8243     		bics	r2, r0
 610              	.LVL48:
 611 001e 1000     		movs	r0, r2
 612              	.LVL49:
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 613              		.loc 1 1026 0 discriminator 3
 614 0020 0622     		movs	r2, #6
 615 0022 AA40     		lsls	r2, r2, r5
 616 0024 0243     		orrs	r2, r0
 617              	.LVL50:
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 618              		.loc 1 1027 0 discriminator 3
 619 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 620              		.loc 1 1029 0 discriminator 3
 621 0028 9868     		ldr	r0, [r3, #8]
 622 002a 0268     		ldr	r2, [r0]
 623              	.LVL51:
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 624              		.loc 1 1030 0 discriminator 3
 625 002c 5C69     		ldr	r4, [r3, #20]
 626 002e A243     		bics	r2, r4
 627              	.LVL52:
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 628              		.loc 1 1031 0 discriminator 3
 629 0030 0260     		str	r2, [r0]
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 630              		.loc 1 1034 0 discriminator 3
 631 0032 1C33     		adds	r3, r3, #28
 632              	.LVL53:
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 633              		.loc 1 1013 0 discriminator 3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 48


 634 0034 0131     		adds	r1, r1, #1
 635              	.LVL54:
 636              	.L51:
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 637              		.loc 1 1013 0 is_stmt 0 discriminator 1
 638 0036 0029     		cmp	r1, #0
 639 0038 E6D0     		beq	.L52
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 640              		.loc 1 1040 0 is_stmt 1
 641              		@ sp needed
 642 003a 30BD     		pop	{r4, r5, pc}
 643              	.L54:
 644              		.align	2
 645              	.L53:
 646 003c 00000000 		.word	CapSense_1_ioList
 647              		.cfi_endproc
 648              	.LFE10:
 649              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 650              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 651              		.align	2
 652              		.global	CapSense_1_SsPostAllWidgetsScan
 653              		.code	16
 654              		.thumb_func
 655              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 656              	CapSense_1_SsPostAllWidgetsScan:
 657              	.LFB11:
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 658              		.loc 1 1125 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 663              		.loc 1 1182 0
 664              		@ sp needed
 665 0000 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE11:
 668              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 669 0002 C046     		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_1_SsIsrInitialize
 672              		.code	16
 673              		.thumb_func
 674              		.type	CapSense_1_SsIsrInitialize, %function
 675              	CapSense_1_SsIsrInitialize:
 676              	.LFB12:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 677              		.loc 1 1202 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              	.LVL55:
 682 0000 10B5     		push	{r4, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 4, -8
 685              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 49


1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 686              		.loc 1 1203 0
 687 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 688              	.LVL56:
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 689              		.loc 1 1204 0
 690              		@ sp needed
 691 0006 10BD     		pop	{r4, pc}
 692              		.cfi_endproc
 693              	.LFE12:
 694              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 695              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_1_SsSetModClkClockDivider
 698              		.code	16
 699              		.thumb_func
 700              		.type	CapSense_1_SsSetModClkClockDivider, %function
 701              	CapSense_1_SsSetModClkClockDivider:
 702              	.LFB13:
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 703              		.loc 1 1225 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708              	.LVL57:
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 709              		.loc 1 1228 0
 710 0000 074A     		ldr	r2, .L59
 711 0002 084B     		ldr	r3, .L59+4
 712 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 713              		.loc 1 1238 0
 714 0006 0138     		subs	r0, r0, #1
 715              	.LVL58:
 716 0008 0002     		lsls	r0, r0, #8
 717              	.LVL59:
 718 000a 074B     		ldr	r3, .L59+8
 719 000c 1860     		str	r0, [r3]
 720              	.L58:
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 721              		.loc 1 1241 0 discriminator 1
 722 000e 054B     		ldr	r3, .L59+4
 723 0010 1B68     		ldr	r3, [r3]
 724 0012 002B     		cmp	r3, #0
 725 0014 FBDB     		blt	.L58
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 726              		.loc 1 1247 0
 727 0016 054A     		ldr	r2, .L59+12
 728 0018 024B     		ldr	r3, .L59+4
 729 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 730              		.loc 1 1272 0
 731              		@ sp needed
 732 001c 7047     		bx	lr
 733              	.L60:
 734 001e C046     		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 50


 735              	.L59:
 736 0020 40000040 		.word	1073741888
 737 0024 00000140 		.word	1073807360
 738 0028 00030140 		.word	1073808128
 739 002c 40FF0080 		.word	-2147418304
 740              		.cfi_endproc
 741              	.LFE13:
 742              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 743              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 744              		.align	2
 745              		.global	CapSense_1_SsSetSnsClockDivider
 746              		.code	16
 747              		.thumb_func
 748              		.type	CapSense_1_SsSetSnsClockDivider, %function
 749              	CapSense_1_SsSetSnsClockDivider:
 750              	.LFB14:
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 751              		.loc 1 1293 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756              	.LVL60:
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
 757              		.loc 1 1309 0
 758 0000 074A     		ldr	r2, .L63
 759 0002 084B     		ldr	r3, .L63+4
 760 0004 1A60     		str	r2, [r3]
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 761              		.loc 1 1319 0
 762 0006 0138     		subs	r0, r0, #1
 763              	.LVL61:
 764 0008 0002     		lsls	r0, r0, #8
 765              	.LVL62:
 766 000a 074B     		ldr	r3, .L63+8
 767 000c 1860     		str	r0, [r3]
 768              	.L62:
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 769              		.loc 1 1322 0 discriminator 1
 770 000e 054B     		ldr	r3, .L63+4
 771 0010 1B68     		ldr	r3, [r3]
 772 0012 002B     		cmp	r3, #0
 773 0014 FBDB     		blt	.L62
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
 774              		.loc 1 1328 0
 775 0016 054A     		ldr	r2, .L63+12
 776 0018 024B     		ldr	r3, .L63+4
 777 001a 1A60     		str	r2, [r3]
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 778              		.loc 1 1354 0
 779              		@ sp needed
 780 001c 7047     		bx	lr
 781              	.L64:
 782 001e C046     		.align	2
 783              	.L63:
 784 0020 41000040 		.word	1073741889
 785 0024 00000140 		.word	1073807360
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 51


 786 0028 04030140 		.word	1073808132
 787 002c 41FF0080 		.word	-2147418303
 788              		.cfi_endproc
 789              	.LFE14:
 790              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 791              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 792              		.align	2
 793              		.global	CapSense_1_SsSetClockDividers
 794              		.code	16
 795              		.thumb_func
 796              		.type	CapSense_1_SsSetClockDividers, %function
 797              	CapSense_1_SsSetClockDividers:
 798              	.LFB15:
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 799              		.loc 1 1377 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              	.LVL63:
 804 0000 10B5     		push	{r4, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 808 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 809              		.loc 1 1379 0
 810 0004 0800     		movs	r0, r1
 811              	.LVL64:
 812 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 813              	.LVL65:
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 814              		.loc 1 1382 0
 815 000a 2000     		movs	r0, r4
 816 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 817              	.LVL66:
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 818              		.loc 1 1383 0
 819              		@ sp needed
 820              	.LVL67:
 821 0010 10BD     		pop	{r4, pc}
 822              		.cfi_endproc
 823              	.LFE15:
 824              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 825 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 826              		.align	2
 827              		.global	CapSense_1_CalibrateWidget
 828              		.code	16
 829              		.thumb_func
 830              		.type	CapSense_1_CalibrateWidget, %function
 831              	CapSense_1_CalibrateWidget:
 832              	.LFB16:
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 833              		.loc 1 1429 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL68:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 52


 838 0000 10B5     		push	{r4, lr}
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 4, -8
 841              		.cfi_offset 14, -4
 842 0002 031E     		subs	r3, r0, #0
 843              	.LVL69:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 844              		.loc 1 1434 0
 845 0004 01D1     		bne	.L69
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 846              		.loc 1 1430 0
 847 0006 0020     		movs	r0, #0
 848              	.LVL70:
 849 0008 00E0     		b	.L67
 850              	.LVL71:
 851              	.L69:
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 852              		.loc 1 1436 0
 853 000a 0120     		movs	r0, #1
 854              	.LVL72:
 855              	.L67:
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 856              		.loc 1 1454 0
 857 000c 0028     		cmp	r0, #0
 858 000e 03D1     		bne	.L68
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859              		.loc 1 1483 0
 860 0010 5521     		movs	r1, #85
 861 0012 1800     		movs	r0, r3
 862              	.LVL73:
 863 0014 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 864              	.LVL74:
 865              	.L68:
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 866              		.loc 1 1505 0
 867              		@ sp needed
 868 0018 10BD     		pop	{r4, pc}
 869              		.cfi_endproc
 870              	.LFE16:
 871              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 872 001a C046     		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 873              		.align	2
 874              		.global	CapSense_1_CalibrateAllWidgets
 875              		.code	16
 876              		.thumb_func
 877              		.type	CapSense_1_CalibrateAllWidgets, %function
 878              	CapSense_1_CalibrateAllWidgets:
 879              	.LFB17:
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 880              		.loc 1 1542 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884 0000 70B5     		push	{r4, r5, r6, lr}
 885              		.cfi_def_cfa_offset 16
 886              		.cfi_offset 4, -16
 887              		.cfi_offset 5, -12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 53


 888              		.cfi_offset 6, -8
 889              		.cfi_offset 14, -4
 890              	.LVL75:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 891              		.loc 1 1546 0
 892 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 893              		.loc 1 1543 0
 894 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 895              		.loc 1 1546 0
 896 0006 04E0     		b	.L71
 897              	.LVL76:
 898              	.L72:
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 899              		.loc 1 1548 0 discriminator 3
 900 0008 2000     		movs	r0, r4
 901 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 902              	.LVL77:
 903 000e 0543     		orrs	r5, r0
 904              	.LVL78:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 905              		.loc 1 1546 0 discriminator 3
 906 0010 0134     		adds	r4, r4, #1
 907              	.LVL79:
 908              	.L71:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 909              		.loc 1 1546 0 is_stmt 0 discriminator 1
 910 0012 002C     		cmp	r4, #0
 911 0014 F8D0     		beq	.L72
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 912              		.loc 1 1552 0 is_stmt 1
 913 0016 2800     		movs	r0, r5
 914              		@ sp needed
 915              	.LVL80:
 916              	.LVL81:
 917 0018 70BD     		pop	{r4, r5, r6, pc}
 918              		.cfi_endproc
 919              	.LFE17:
 920              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 921 001a C046     		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 922              		.align	2
 923              		.global	CapSense_1_SsClearCSDSensors
 924              		.code	16
 925              		.thumb_func
 926              		.type	CapSense_1_SsClearCSDSensors, %function
 927              	CapSense_1_SsClearCSDSensors:
 928              	.LFB23:
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 54


1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 55


2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 56


2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 57


2136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 58


2193:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 59


2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 60


2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 61


2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 62


2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 63


2478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 64


2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 929              		.loc 1 2569 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 939              	.LVL82:
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 65


2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 940              		.loc 1 2585 0
 941 0002 0025     		movs	r5, #0
 942 0004 12E0     		b	.L74
 943              	.LVL83:
 944              	.L77:
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 945              		.loc 1 2590 0
 946 0006 6B01     		lsls	r3, r5, #5
 947 0008 0A4A     		ldr	r2, .L78
 948 000a 9E58     		ldr	r6, [r3, r2]
 949              	.LVL84:
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 950              		.loc 1 2594 0
 951 000c 0024     		movs	r4, #0
 952 000e 06E0     		b	.L75
 953              	.LVL85:
 954              	.L76:
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 66


 955              		.loc 1 2622 0 discriminator 3
 956 0010 E300     		lsls	r3, r4, #3
 957 0012 1B1B     		subs	r3, r3, r4
 958 0014 9800     		lsls	r0, r3, #2
 959 0016 3018     		adds	r0, r6, r0
 960 0018 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 961              	.LVL86:
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 962              		.loc 1 2594 0 discriminator 3
 963 001c 0134     		adds	r4, r4, #1
 964              	.LVL87:
 965              	.L75:
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 966              		.loc 1 2594 0 is_stmt 0 discriminator 1
 967 001e 6B01     		lsls	r3, r5, #5
 968 0020 044A     		ldr	r2, .L78
 969 0022 D318     		adds	r3, r2, r3
 970 0024 1B7E     		ldrb	r3, [r3, #24]
 971 0026 9C42     		cmp	r4, r3
 972 0028 F2D3     		bcc	.L76
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 973              		.loc 1 2585 0 is_stmt 1 discriminator 2
 974 002a 0135     		adds	r5, r5, #1
 975              	.LVL88:
 976              	.L74:
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 977              		.loc 1 2585 0 is_stmt 0 discriminator 1
 978 002c 002D     		cmp	r5, #0
 979 002e EAD0     		beq	.L77
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 980              		.loc 1 2627 0 is_stmt 1
 981              		@ sp needed
 982              	.LVL89:
 983 0030 70BD     		pop	{r4, r5, r6, pc}
 984              	.L79:
 985 0032 C046     		.align	2
 986              	.L78:
 987 0034 00000000 		.word	CapSense_1_dsFlash
 988              		.cfi_endproc
 989              	.LFE23:
 990              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 991              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 992              		.align	2
 993              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 994              		.code	16
 995              		.thumb_func
 996              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 997              	CapSense_1_SsCSDGetColSnsClkDivider:
 998              	.LFB24:
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 67


2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 999              		.loc 1 2651 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004              	.LVL90:
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1005              		.loc 1 2658 0
 1006 0000 4001     		lsls	r0, r0, #5
 1007              	.LVL91:
 1008 0002 024B     		ldr	r3, .L81
 1009 0004 1818     		adds	r0, r3, r0
 1010 0006 4368     		ldr	r3, [r0, #4]
 1011              	.LVL92:
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1012              		.loc 1 2661 0
 1013 0008 5889     		ldrh	r0, [r3, #10]
 1014              	.LVL93:
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1015              		.loc 1 2669 0
 1016              		@ sp needed
 1017 000a 7047     		bx	lr
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 68


 1018              	.L82:
 1019              		.align	2
 1020              	.L81:
 1021 000c 00000000 		.word	CapSense_1_dsFlash
 1022              		.cfi_endproc
 1023              	.LFE24:
 1024              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1025              		.section	.text.CapSense_1_SsCSDCalcPrsSize,"ax",%progbits
 1026              		.align	2
 1027              		.global	CapSense_1_SsCSDCalcPrsSize
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CapSense_1_SsCSDCalcPrsSize, %function
 1031              	CapSense_1_SsCSDCalcPrsSize:
 1032              	.LFB25:
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 69


2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1033              		.loc 1 2738 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              	.LVL94:
 1038 0000 10B5     		push	{r4, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 4, -8
 1041              		.cfi_offset 14, -4
 1042              	.LVL95:
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
 1043              		.loc 1 2744 0
 1044 0002 0A4B     		ldr	r3, .L87
 1045 0004 1C7F     		ldrb	r4, [r3, #28]
 1046              	.LVL96:
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
 1047              		.loc 1 2747 0
 1048 0006 0203     		lsls	r2, r0, #12
 1049 0008 121A     		subs	r2, r2, r0
 1050 000a 0123     		movs	r3, #1
 1051 000c 8B40     		lsls	r3, r3, r1
 1052 000e 013B     		subs	r3, r3, #1
 1053 0010 6343     		muls	r3, r4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 70


 1054 0012 9A42     		cmp	r2, r3
 1055 0014 05D9     		bls	.L85
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
 1056              		.loc 1 2752 0
 1057 0016 0202     		lsls	r2, r0, #8
 1058 0018 101A     		subs	r0, r2, r0
 1059              	.LVL97:
 1060 001a 8342     		cmp	r3, r0
 1061 001c 03D3     		bcc	.L86
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
 1062              		.loc 1 2755 0
 1063 001e 4020     		movs	r0, #64
 1064 0020 02E0     		b	.L84
 1065              	.LVL98:
 1066              	.L85:
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1067              		.loc 1 2750 0
 1068 0022 C020     		movs	r0, #192
 1069              	.LVL99:
 1070 0024 00E0     		b	.L84
 1071              	.L86:
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
 1072              		.loc 1 2760 0
 1073 0026 0020     		movs	r0, #0
 1074              	.L84:
 1075              	.LVL100:
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
 1076              		.loc 1 2763 0
 1077 0028 C0B2     		uxtb	r0, r0
 1078              	.LVL101:
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1079              		.loc 1 2764 0
 1080              		@ sp needed
 1081              	.LVL102:
 1082 002a 10BD     		pop	{r4, pc}
 1083              	.L88:
 1084              		.align	2
 1085              	.L87:
 1086 002c 00000000 		.word	CapSense_1_dsRam
 1087              		.cfi_endproc
 1088              	.LFE25:
 1089              		.size	CapSense_1_SsCSDCalcPrsSize, .-CapSense_1_SsCSDCalcPrsSize
 1090              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
 1091              		.align	2
 1092              		.code	16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 71


 1093              		.thumb_func
 1094              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
 1095              	CapSense_1_SsSetWidgetSenseClkSrc:
 1096              	.LFB22:
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
 1097              		.loc 1 2241 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              	.LVL103:
 1102 0000 10B5     		push	{r4, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 4, -8
 1105              		.cfi_offset 14, -4
 1106 0002 0C00     		movs	r4, r1
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1107              		.loc 1 2253 0
 1108 0004 FFF7FEFF 		bl	CapSense_1_SsCSDGetColSnsClkDivider
 1109              	.LVL104:
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
 1110              		.loc 1 2273 0
 1111 0008 4000     		lsls	r0, r0, #1
 1112              	.LVL105:
 1113 000a 2188     		ldrh	r1, [r4]
 1114 000c FFF7FEFF 		bl	CapSense_1_SsCSDCalcPrsSize
 1115              	.LVL106:
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1116              		.loc 1 2282 0
 1117 0010 2073     		strb	r0, [r4, #12]
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 1118              		.loc 1 2317 0
 1119              		@ sp needed
 1120              	.LVL107:
 1121 0012 10BD     		pop	{r4, pc}
 1122              		.cfi_endproc
 1123              	.LFE22:
 1124              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
 1125              		.global	__aeabi_uidiv
 1126              		.section	.text.CapSense_1_SsAutoTune,"ax",%progbits
 1127              		.align	2
 1128              		.global	CapSense_1_SsAutoTune
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CapSense_1_SsAutoTune, %function
 1132              	CapSense_1_SsAutoTune:
 1133              	.LFB18:
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1134              		.loc 1 1578 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 40
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138 0000 70B5     		push	{r4, r5, r6, lr}
 1139              		.cfi_def_cfa_offset 16
 1140              		.cfi_offset 4, -16
 1141              		.cfi_offset 5, -12
 1142              		.cfi_offset 6, -8
 1143              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 72


 1144 0002 8AB0     		sub	sp, sp, #40
 1145              		.cfi_def_cfa_offset 56
 1146              	.LVL108:
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
 1147              		.loc 1 1592 0
 1148 0004 FA23     		movs	r3, #250
 1149 0006 9B00     		lsls	r3, r3, #2
 1150 0008 02AA     		add	r2, sp, #8
 1151 000a 1380     		strh	r3, [r2]
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
 1152              		.loc 1 1593 0
 1153 000c C833     		adds	r3, r3, #200
 1154 000e 5380     		strh	r3, [r2, #2]
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1155              		.loc 1 1594 0
 1156 0010 9380     		strh	r3, [r2, #4]
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 1157              		.loc 1 1602 0
 1158 0012 424B     		ldr	r3, .L102
 1159 0014 9381     		strh	r3, [r2, #12]
 1160              	.LVL109:
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1161              		.loc 1 1625 0
 1162 0016 0025     		movs	r5, #0
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1163              		.loc 1 1579 0
 1164 0018 0026     		movs	r6, #0
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1165              		.loc 1 1625 0
 1166 001a 43E0     		b	.L91
 1167              	.LVL110:
 1168              	.L96:
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1169              		.loc 1 1630 0
 1170 001c 6B01     		lsls	r3, r5, #5
 1171 001e 404A     		ldr	r2, .L102+4
 1172 0020 D318     		adds	r3, r2, r3
 1173 0022 5C68     		ldr	r4, [r3, #4]
 1174              	.LVL111:
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1175              		.loc 1 1634 0
 1176 0024 0C23     		movs	r3, #12
 1177 0026 2380     		strh	r3, [r4]
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
 1178              		.loc 1 1637 0
 1179 0028 0023     		movs	r3, #0
 1180 002a 2373     		strb	r3, [r4, #12]
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 1181              		.loc 1 1638 0
 1182 002c 02AB     		add	r3, sp, #8
 1183 002e 9889     		ldrh	r0, [r3, #12]
 1184 0030 3C49     		ldr	r1, .L102+8
 1185 0032 FFF7FEFF 		bl	__aeabi_uidiv
 1186              	.LVL112:
 1187 0036 6081     		strh	r0, [r4, #10]
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1188              		.loc 1 1649 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 73


 1189 0038 5521     		movs	r1, #85
 1190 003a 2800     		movs	r0, r5
 1191 003c FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1192              	.LVL113:
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1193              		.loc 1 1698 0
 1194 0040 2300     		movs	r3, r4
 1195 0042 0A33     		adds	r3, r3, #10
 1196 0044 0693     		str	r3, [sp, #24]
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1197              		.loc 1 1701 0
 1198 0046 384B     		ldr	r3, .L102+12
 1199 0048 1B78     		ldrb	r3, [r3]
 1200 004a 02AA     		add	r2, sp, #8
 1201 004c 1376     		strb	r3, [r2, #24]
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
 1202              		.loc 1 1704 0
 1203 004e 374B     		ldr	r3, .L102+16
 1204 0050 1888     		ldrh	r0, [r3]
 1205 0052 FA23     		movs	r3, #250
 1206 0054 9B00     		lsls	r3, r3, #2
 1207 0056 5843     		muls	r0, r3
 1208 0058 3549     		ldr	r1, .L102+20
 1209 005a FFF7FEFF 		bl	__aeabi_uidiv
 1210              	.LVL114:
 1211 005e 02AB     		add	r3, sp, #8
 1212 0060 D881     		strh	r0, [r3, #14]
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1213              		.loc 1 1708 0
 1214 0062 1800     		movs	r0, r3
 1215 0064 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1216              	.LVL115:
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1217              		.loc 1 1710 0
 1218 0068 324B     		ldr	r3, .L102+24
 1219 006a 9842     		cmp	r0, r3
 1220 006c 03D9     		bls	.L93
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1221              		.loc 1 1712 0
 1222 006e 0626     		movs	r6, #6
 1223              	.LVL116:
 1224 0070 01E0     		b	.L93
 1225              	.LVL117:
 1226              	.L94:
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1227              		.loc 1 1722 0
 1228 0072 5B00     		lsls	r3, r3, #1
 1229 0074 6381     		strh	r3, [r4, #10]
 1230              	.LVL118:
 1231              	.L93:
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1232              		.loc 1 1719 0
 1233 0076 02AB     		add	r3, sp, #8
 1234 0078 9989     		ldrh	r1, [r3, #12]
 1235 007a 6389     		ldrh	r3, [r4, #10]
 1236 007c 2E4A     		ldr	r2, .L102+28
 1237 007e 5A43     		muls	r2, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 74


 1238 0080 9142     		cmp	r1, r2
 1239 0082 F6D8     		bhi	.L94
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1240              		.loc 1 1719 0 is_stmt 0 discriminator 1
 1241 0084 002B     		cmp	r3, #0
 1242 0086 F4D0     		beq	.L94
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
 1243              		.loc 1 1728 0 is_stmt 1
 1244 0088 2C4A     		ldr	r2, .L102+32
 1245 008a 127F     		ldrb	r2, [r2, #28]
 1246 008c 5B00     		lsls	r3, r3, #1
 1247 008e DBB2     		uxtb	r3, r3
 1248 0090 9A42     		cmp	r2, r3
 1249 0092 00D3     		bcc	.L95
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
 1250              		.loc 1 1730 0
 1251 0094 6281     		strh	r2, [r4, #10]
 1252              	.L95:
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1253              		.loc 1 1737 0
 1254 0096 AB00     		lsls	r3, r5, #2
 1255 0098 0AAA     		add	r2, sp, #40
 1256 009a 9446     		mov	ip, r2
 1257 009c 6344     		add	r3, r3, ip
 1258 009e 043B     		subs	r3, r3, #4
 1259 00a0 1860     		str	r0, [r3]
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1260              		.loc 1 1625 0
 1261 00a2 0135     		adds	r5, r5, #1
 1262              	.LVL119:
 1263              	.L91:
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1264              		.loc 1 1625 0 is_stmt 0 discriminator 1
 1265 00a4 002D     		cmp	r5, #0
 1266 00a6 B9D0     		beq	.L96
 1267 00a8 0024     		movs	r4, #0
 1268 00aa 21E0     		b	.L97
 1269              	.LVL120:
 1270              	.L98:
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1271              		.loc 1 1771 0 is_stmt 1
 1272 00ac 6301     		lsls	r3, r4, #5
 1273 00ae 1C4A     		ldr	r2, .L102+4
 1274 00b0 D318     		adds	r3, r2, r3
 1275 00b2 5D68     		ldr	r5, [r3, #4]
 1276              	.LVL121:
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1277              		.loc 1 1775 0
 1278 00b4 5521     		movs	r1, #85
 1279 00b6 2000     		movs	r0, r4
 1280 00b8 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1281              	.LVL122:
 1282 00bc 0643     		orrs	r6, r0
 1283              	.LVL123:
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1284              		.loc 1 1778 0
 1285 00be 2B00     		movs	r3, r5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 75


 1286 00c0 0A33     		adds	r3, r3, #10
 1287 00c2 0693     		str	r3, [sp, #24]
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1288              		.loc 1 1781 0
 1289 00c4 A300     		lsls	r3, r4, #2
 1290 00c6 0AAA     		add	r2, sp, #40
 1291 00c8 9446     		mov	ip, r2
 1292 00ca 6344     		add	r3, r3, ip
 1293 00cc 043B     		subs	r3, r3, #4
 1294 00ce 1B68     		ldr	r3, [r3]
 1295 00d0 0193     		str	r3, [sp, #4]
 1296 00d2 0493     		str	r3, [sp, #16]
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1297              		.loc 1 1784 0
 1298 00d4 144B     		ldr	r3, .L102+12
 1299 00d6 1B78     		ldrb	r3, [r3]
 1300 00d8 02AA     		add	r2, sp, #8
 1301 00da 1376     		strb	r3, [r2, #24]
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1302              		.loc 1 1807 0
 1303 00dc EB89     		ldrh	r3, [r5, #14]
 1304 00de D380     		strh	r3, [r2, #6]
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1305              		.loc 1 1810 0
 1306 00e0 2B00     		movs	r3, r5
 1307 00e2 1033     		adds	r3, r3, #16
 1308 00e4 0793     		str	r3, [sp, #28]
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1309              		.loc 1 1813 0
 1310 00e6 1000     		movs	r0, r2
 1311 00e8 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1312              	.LVL124:
 1313 00ec 2880     		strh	r0, [r5]
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1314              		.loc 1 1766 0
 1315 00ee 0134     		adds	r4, r4, #1
 1316              	.LVL125:
 1317              	.L97:
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1318              		.loc 1 1766 0 is_stmt 0 discriminator 1
 1319 00f0 002C     		cmp	r4, #0
 1320 00f2 DBD0     		beq	.L98
 1321 00f4 0024     		movs	r4, #0
 1322              	.LVL126:
 1323 00f6 0CE0     		b	.L99
 1324              	.LVL127:
 1325              	.L100:
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1326              		.loc 1 1830 0 is_stmt 1
 1327 00f8 6301     		lsls	r3, r4, #5
 1328 00fa 094A     		ldr	r2, .L102+4
 1329 00fc D318     		adds	r3, r2, r3
 1330 00fe 5968     		ldr	r1, [r3, #4]
 1331              	.LVL128:
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1332              		.loc 1 1833 0
 1333 0100 2000     		movs	r0, r4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 76


 1334 0102 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1335              	.LVL129:
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1336              		.loc 1 1836 0
 1337 0106 5521     		movs	r1, #85
 1338 0108 2000     		movs	r0, r4
 1339 010a FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1340              	.LVL130:
 1341 010e 0643     		orrs	r6, r0
 1342              	.LVL131:
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1343              		.loc 1 1825 0
 1344 0110 0134     		adds	r4, r4, #1
 1345              	.LVL132:
 1346              	.L99:
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1347              		.loc 1 1825 0 is_stmt 0 discriminator 1
 1348 0112 002C     		cmp	r4, #0
 1349 0114 F0D0     		beq	.L100
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
 1350              		.loc 1 1845 0 is_stmt 1
 1351 0116 3000     		movs	r0, r6
 1352 0118 0AB0     		add	sp, sp, #40
 1353              		@ sp needed
 1354              	.LVL133:
 1355              	.LVL134:
 1356 011a 70BD     		pop	{r4, r5, r6, pc}
 1357              	.L103:
 1358              		.align	2
 1359              	.L102:
 1360 011c C05D0000 		.word	24000
 1361 0120 00000000 		.word	CapSense_1_dsFlash
 1362 0124 DC050000 		.word	1500
 1363 0128 00000000 		.word	CapSense_1_calibratedIdac
 1364 012c 00000000 		.word	CapSense_1_calibratedRawcount
 1365 0130 FF0F0000 		.word	4095
 1366 0134 870D0100 		.word	68999
 1367 0138 38310000 		.word	12600
 1368 013c 00000000 		.word	CapSense_1_dsRam
 1369              		.cfi_endproc
 1370              	.LFE18:
 1371              		.size	CapSense_1_SsAutoTune, .-CapSense_1_SsAutoTune
 1372              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1373              		.align	2
 1374              		.global	CapSense_1_SsInitializeSourceSenseClk
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1378              	CapSense_1_SsInitializeSourceSenseClk:
 1379              	.LFB21:
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1380              		.loc 1 2188 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384 0000 10B5     		push	{r4, lr}
 1385              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 77


 1386              		.cfi_offset 4, -8
 1387              		.cfi_offset 14, -4
 1388              	.LVL135:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1389              		.loc 1 2192 0
 1390 0002 0024     		movs	r4, #0
 1391 0004 07E0     		b	.L105
 1392              	.LVL136:
 1393              	.L106:
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1394              		.loc 1 2194 0
 1395 0006 6301     		lsls	r3, r4, #5
 1396 0008 044A     		ldr	r2, .L107
 1397 000a D318     		adds	r3, r2, r3
 1398 000c 5968     		ldr	r1, [r3, #4]
 1399              	.LVL137:
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1400              		.loc 1 2200 0
 1401 000e 2000     		movs	r0, r4
 1402 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1403              	.LVL138:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1404              		.loc 1 2192 0
 1405 0014 0134     		adds	r4, r4, #1
 1406              	.LVL139:
 1407              	.L105:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1408              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1409 0016 002C     		cmp	r4, #0
 1410 0018 F5D0     		beq	.L106
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1411              		.loc 1 2215 0 is_stmt 1
 1412              		@ sp needed
 1413              	.LVL140:
 1414 001a 10BD     		pop	{r4, pc}
 1415              	.L108:
 1416              		.align	2
 1417              	.L107:
 1418 001c 00000000 		.word	CapSense_1_dsFlash
 1419              		.cfi_endproc
 1420              	.LFE21:
 1421              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1422              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1423              		.align	2
 1424              		.global	CapSense_1_SsInitialize
 1425              		.code	16
 1426              		.thumb_func
 1427              		.type	CapSense_1_SsInitialize, %function
 1428              	CapSense_1_SsInitialize:
 1429              	.LFB6:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1430              		.loc 1 517 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434 0000 10B5     		push	{r4, lr}
 1435              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 78


 1436              		.cfi_offset 4, -8
 1437              		.cfi_offset 14, -4
 1438              	.LVL141:
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1439              		.loc 1 551 0
 1440 0002 FFF7FEFF 		bl	CapSense_1_SsTrimIdacs
 1441              	.LVL142:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1442              		.loc 1 556 0
 1443 0006 FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1444              	.LVL143:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1445              		.loc 1 561 0
 1446 000a FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1447              	.LVL144:
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 1448              		.loc 1 568 0
 1449 000e FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 1450              	.LVL145:
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1451              		.loc 1 569 0
 1452 0012 0120     		movs	r0, #1
 1453 0014 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1454              	.LVL146:
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1455              		.loc 1 584 0
 1456 0018 0020     		movs	r0, #0
 1457              		@ sp needed
 1458 001a 10BD     		pop	{r4, pc}
 1459              		.cfi_endproc
 1460              	.LFE6:
 1461              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1462              		.comm	CapSense_1_curSnsIOPtr,4,4
 1463              		.comm	CapSense_1_curRamSnsPtr,4,4
 1464              		.global	CapSense_1_requestScanAllWidget
 1465              		.global	CapSense_1_sensorIndex
 1466              		.global	CapSense_1_widgetIndex
 1467              		.global	CapSense_1_scanFreqIndex
 1468              		.global	CapSense_1_currentSenseMethod
 1469              		.section	.rodata
 1470              		.type	CapSense_1_scanFreqIndex, %object
 1471              		.size	CapSense_1_scanFreqIndex, 1
 1472              	CapSense_1_scanFreqIndex:
 1473 0000 00       		.space	1
 1474              		.bss
 1475              		.set	.LANCHOR0,. + 0
 1476              		.type	CapSense_1_currentSenseMethod, %object
 1477              		.size	CapSense_1_currentSenseMethod, 1
 1478              	CapSense_1_currentSenseMethod:
 1479 0000 00       		.space	1
 1480              		.type	CapSense_1_requestScanAllWidget, %object
 1481              		.size	CapSense_1_requestScanAllWidget, 1
 1482              	CapSense_1_requestScanAllWidget:
 1483 0001 00       		.space	1
 1484              		.type	CapSense_1_sensorIndex, %object
 1485              		.size	CapSense_1_sensorIndex, 1
 1486              	CapSense_1_sensorIndex:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 79


 1487 0002 00       		.space	1
 1488              		.type	CapSense_1_widgetIndex, %object
 1489              		.size	CapSense_1_widgetIndex, 1
 1490              	CapSense_1_widgetIndex:
 1491 0003 00       		.space	1
 1492              		.text
 1493              	.Letext0:
 1494              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1495              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1496              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1497              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1498              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1499              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1500              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1501              		.section	.debug_info,"",%progbits
 1502              	.Ldebug_info0:
 1503 0000 B00F0000 		.4byte	0xfb0
 1504 0004 0400     		.2byte	0x4
 1505 0006 00000000 		.4byte	.Ldebug_abbrev0
 1506 000a 04       		.byte	0x4
 1507 000b 01       		.uleb128 0x1
 1508 000c C7030000 		.4byte	.LASF187
 1509 0010 0C       		.byte	0xc
 1510 0011 B3070000 		.4byte	.LASF188
 1511 0015 B5060000 		.4byte	.LASF189
 1512 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1513 001d 00000000 		.4byte	0
 1514 0021 00000000 		.4byte	.Ldebug_line0
 1515 0025 02       		.uleb128 0x2
 1516 0026 01       		.byte	0x1
 1517 0027 06       		.byte	0x6
 1518 0028 420B0000 		.4byte	.LASF0
 1519 002c 02       		.uleb128 0x2
 1520 002d 01       		.byte	0x1
 1521 002e 08       		.byte	0x8
 1522 002f 9F0A0000 		.4byte	.LASF1
 1523 0033 02       		.uleb128 0x2
 1524 0034 02       		.byte	0x2
 1525 0035 05       		.byte	0x5
 1526 0036 BE080000 		.4byte	.LASF2
 1527 003a 02       		.uleb128 0x2
 1528 003b 02       		.byte	0x2
 1529 003c 07       		.byte	0x7
 1530 003d 530B0000 		.4byte	.LASF3
 1531 0041 02       		.uleb128 0x2
 1532 0042 04       		.byte	0x4
 1533 0043 05       		.byte	0x5
 1534 0044 C8080000 		.4byte	.LASF4
 1535 0048 02       		.uleb128 0x2
 1536 0049 04       		.byte	0x4
 1537 004a 07       		.byte	0x7
 1538 004b 110A0000 		.4byte	.LASF5
 1539 004f 02       		.uleb128 0x2
 1540 0050 08       		.byte	0x8
 1541 0051 05       		.byte	0x5
 1542 0052 24060000 		.4byte	.LASF6
 1543 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 80


 1544 0057 08       		.byte	0x8
 1545 0058 07       		.byte	0x7
 1546 0059 1F030000 		.4byte	.LASF7
 1547 005d 03       		.uleb128 0x3
 1548 005e 04       		.byte	0x4
 1549 005f 05       		.byte	0x5
 1550 0060 696E7400 		.ascii	"int\000"
 1551 0064 02       		.uleb128 0x2
 1552 0065 04       		.byte	0x4
 1553 0066 07       		.byte	0x7
 1554 0067 8B000000 		.4byte	.LASF8
 1555 006b 04       		.uleb128 0x4
 1556 006c DF0B0000 		.4byte	.LASF9
 1557 0070 02       		.byte	0x2
 1558 0071 E401     		.2byte	0x1e4
 1559 0073 2C000000 		.4byte	0x2c
 1560 0077 04       		.uleb128 0x4
 1561 0078 DF050000 		.4byte	.LASF10
 1562 007c 02       		.byte	0x2
 1563 007d E501     		.2byte	0x1e5
 1564 007f 3A000000 		.4byte	0x3a
 1565 0083 04       		.uleb128 0x4
 1566 0084 56070000 		.4byte	.LASF11
 1567 0088 02       		.byte	0x2
 1568 0089 E601     		.2byte	0x1e6
 1569 008b 48000000 		.4byte	0x48
 1570 008f 02       		.uleb128 0x2
 1571 0090 04       		.byte	0x4
 1572 0091 04       		.byte	0x4
 1573 0092 DE020000 		.4byte	.LASF12
 1574 0096 02       		.uleb128 0x2
 1575 0097 08       		.byte	0x8
 1576 0098 04       		.byte	0x4
 1577 0099 E50B0000 		.4byte	.LASF13
 1578 009d 02       		.uleb128 0x2
 1579 009e 01       		.byte	0x1
 1580 009f 08       		.byte	0x8
 1581 00a0 9F050000 		.4byte	.LASF14
 1582 00a4 04       		.uleb128 0x4
 1583 00a5 960A0000 		.4byte	.LASF15
 1584 00a9 02       		.byte	0x2
 1585 00aa 8602     		.2byte	0x286
 1586 00ac 48000000 		.4byte	0x48
 1587 00b0 04       		.uleb128 0x4
 1588 00b1 59010000 		.4byte	.LASF16
 1589 00b5 02       		.byte	0x2
 1590 00b6 8E02     		.2byte	0x28e
 1591 00b8 BC000000 		.4byte	0xbc
 1592 00bc 05       		.uleb128 0x5
 1593 00bd 6B000000 		.4byte	0x6b
 1594 00c1 04       		.uleb128 0x4
 1595 00c2 3D080000 		.4byte	.LASF17
 1596 00c6 02       		.byte	0x2
 1597 00c7 9002     		.2byte	0x290
 1598 00c9 CD000000 		.4byte	0xcd
 1599 00cd 05       		.uleb128 0x5
 1600 00ce 83000000 		.4byte	0x83
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 81


 1601 00d2 04       		.uleb128 0x4
 1602 00d3 16070000 		.4byte	.LASF18
 1603 00d7 02       		.byte	0x2
 1604 00d8 A002     		.2byte	0x2a0
 1605 00da DE000000 		.4byte	0xde
 1606 00de 06       		.uleb128 0x6
 1607 00df 04       		.byte	0x4
 1608 00e0 E4000000 		.4byte	0xe4
 1609 00e4 07       		.uleb128 0x7
 1610 00e5 08       		.uleb128 0x8
 1611 00e6 32060000 		.4byte	.LASF19
 1612 00ea 03       		.byte	0x3
 1613 00eb FD       		.byte	0xfd
 1614 00ec 77000000 		.4byte	0x77
 1615 00f0 04       		.uleb128 0x4
 1616 00f1 67030000 		.4byte	.LASF20
 1617 00f5 03       		.byte	0x3
 1618 00f6 0101     		.2byte	0x101
 1619 00f8 6B000000 		.4byte	0x6b
 1620 00fc 09       		.uleb128 0x9
 1621 00fd 1C       		.byte	0x1c
 1622 00fe 04       		.byte	0x4
 1623 00ff 2F       		.byte	0x2f
 1624 0100 7D010000 		.4byte	0x17d
 1625 0104 0A       		.uleb128 0xa
 1626 0105 2D080000 		.4byte	.LASF21
 1627 0109 04       		.byte	0x4
 1628 010a 34       		.byte	0x34
 1629 010b 77000000 		.4byte	0x77
 1630 010f 00       		.byte	0
 1631 0110 0A       		.uleb128 0xa
 1632 0111 2A0A0000 		.4byte	.LASF22
 1633 0115 04       		.byte	0x4
 1634 0116 39       		.byte	0x39
 1635 0117 77000000 		.4byte	0x77
 1636 011b 02       		.byte	0x2
 1637 011c 0A       		.uleb128 0xa
 1638 011d 99010000 		.4byte	.LASF23
 1639 0121 04       		.byte	0x4
 1640 0122 3E       		.byte	0x3e
 1641 0123 77000000 		.4byte	0x77
 1642 0127 04       		.byte	0x4
 1643 0128 0A       		.uleb128 0xa
 1644 0129 83090000 		.4byte	.LASF24
 1645 012d 04       		.byte	0x4
 1646 012e 43       		.byte	0x43
 1647 012f 77000000 		.4byte	0x77
 1648 0133 06       		.byte	0x6
 1649 0134 0A       		.uleb128 0xa
 1650 0135 C40A0000 		.4byte	.LASF25
 1651 0139 04       		.byte	0x4
 1652 013a 48       		.byte	0x48
 1653 013b 83000000 		.4byte	0x83
 1654 013f 08       		.byte	0x8
 1655 0140 0A       		.uleb128 0xa
 1656 0141 D8010000 		.4byte	.LASF26
 1657 0145 04       		.byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 82


 1658 0146 4D       		.byte	0x4d
 1659 0147 77000000 		.4byte	0x77
 1660 014b 0C       		.byte	0xc
 1661 014c 0A       		.uleb128 0xa
 1662 014d 76040000 		.4byte	.LASF27
 1663 0151 04       		.byte	0x4
 1664 0152 52       		.byte	0x52
 1665 0153 77000000 		.4byte	0x77
 1666 0157 0E       		.byte	0xe
 1667 0158 0A       		.uleb128 0xa
 1668 0159 DF070000 		.4byte	.LASF28
 1669 015d 04       		.byte	0x4
 1670 015e 57       		.byte	0x57
 1671 015f 7D010000 		.4byte	0x17d
 1672 0163 10       		.byte	0x10
 1673 0164 0A       		.uleb128 0xa
 1674 0165 B8040000 		.4byte	.LASF29
 1675 0169 04       		.byte	0x4
 1676 016a 5C       		.byte	0x5c
 1677 016b 7D010000 		.4byte	0x17d
 1678 016f 14       		.byte	0x14
 1679 0170 0A       		.uleb128 0xa
 1680 0171 AE070000 		.4byte	.LASF30
 1681 0175 04       		.byte	0x4
 1682 0176 61       		.byte	0x61
 1683 0177 6B000000 		.4byte	0x6b
 1684 017b 18       		.byte	0x18
 1685 017c 00       		.byte	0
 1686 017d 06       		.uleb128 0x6
 1687 017e 04       		.byte	0x4
 1688 017f 77000000 		.4byte	0x77
 1689 0183 08       		.uleb128 0x8
 1690 0184 660B0000 		.4byte	.LASF31
 1691 0188 04       		.byte	0x4
 1692 0189 63       		.byte	0x63
 1693 018a FC000000 		.4byte	0xfc
 1694 018e 09       		.uleb128 0x9
 1695 018f 0C       		.byte	0xc
 1696 0190 04       		.byte	0x4
 1697 0191 6E       		.byte	0x6e
 1698 0192 EB010000 		.4byte	0x1eb
 1699 0196 0A       		.uleb128 0xa
 1700 0197 140C0000 		.4byte	.LASF32
 1701 019b 04       		.byte	0x4
 1702 019c 73       		.byte	0x73
 1703 019d 77000000 		.4byte	0x77
 1704 01a1 00       		.byte	0
 1705 01a2 0A       		.uleb128 0xa
 1706 01a3 1B0C0000 		.4byte	.LASF33
 1707 01a7 04       		.byte	0x4
 1708 01a8 77       		.byte	0x77
 1709 01a9 77000000 		.4byte	0x77
 1710 01ad 02       		.byte	0x2
 1711 01ae 0A       		.uleb128 0xa
 1712 01af 220C0000 		.4byte	.LASF34
 1713 01b3 04       		.byte	0x4
 1714 01b4 7B       		.byte	0x7b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 83


 1715 01b5 77000000 		.4byte	0x77
 1716 01b9 04       		.byte	0x4
 1717 01ba 0A       		.uleb128 0xa
 1718 01bb 290C0000 		.4byte	.LASF35
 1719 01bf 04       		.byte	0x4
 1720 01c0 7F       		.byte	0x7f
 1721 01c1 77000000 		.4byte	0x77
 1722 01c5 06       		.byte	0x6
 1723 01c6 0A       		.uleb128 0xa
 1724 01c7 300C0000 		.4byte	.LASF36
 1725 01cb 04       		.byte	0x4
 1726 01cc 83       		.byte	0x83
 1727 01cd 77000000 		.4byte	0x77
 1728 01d1 08       		.byte	0x8
 1729 01d2 0A       		.uleb128 0xa
 1730 01d3 370C0000 		.4byte	.LASF37
 1731 01d7 04       		.byte	0x4
 1732 01d8 87       		.byte	0x87
 1733 01d9 6B000000 		.4byte	0x6b
 1734 01dd 0A       		.byte	0xa
 1735 01de 0A       		.uleb128 0xa
 1736 01df 3E0C0000 		.4byte	.LASF38
 1737 01e3 04       		.byte	0x4
 1738 01e4 8B       		.byte	0x8b
 1739 01e5 6B000000 		.4byte	0x6b
 1740 01e9 0B       		.byte	0xb
 1741 01ea 00       		.byte	0
 1742 01eb 08       		.uleb128 0x8
 1743 01ec 4E050000 		.4byte	.LASF39
 1744 01f0 04       		.byte	0x4
 1745 01f1 8C       		.byte	0x8c
 1746 01f2 8E010000 		.4byte	0x18e
 1747 01f6 0B       		.uleb128 0xb
 1748 01f7 01       		.byte	0x1
 1749 01f8 2C000000 		.4byte	0x2c
 1750 01fc 05       		.byte	0x5
 1751 01fd 6F       		.byte	0x6f
 1752 01fe 21020000 		.4byte	0x221
 1753 0202 0C       		.uleb128 0xc
 1754 0203 78070000 		.4byte	.LASF40
 1755 0207 00       		.byte	0
 1756 0208 0C       		.uleb128 0xc
 1757 0209 EB090000 		.4byte	.LASF41
 1758 020d 01       		.byte	0x1
 1759 020e 0C       		.uleb128 0xc
 1760 020f 21090000 		.4byte	.LASF42
 1761 0213 02       		.byte	0x2
 1762 0214 0C       		.uleb128 0xc
 1763 0215 BF040000 		.4byte	.LASF43
 1764 0219 03       		.byte	0x3
 1765 021a 0C       		.uleb128 0xc
 1766 021b 0F080000 		.4byte	.LASF44
 1767 021f 04       		.byte	0x4
 1768 0220 00       		.byte	0
 1769 0221 08       		.uleb128 0x8
 1770 0222 84030000 		.4byte	.LASF45
 1771 0226 05       		.byte	0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 84


 1772 0227 75       		.byte	0x75
 1773 0228 F6010000 		.4byte	0x1f6
 1774 022c 09       		.uleb128 0x9
 1775 022d 12       		.byte	0x12
 1776 022e 05       		.byte	0x5
 1777 022f 8D       		.byte	0x8d
 1778 0230 C5020000 		.4byte	0x2c5
 1779 0234 0A       		.uleb128 0xa
 1780 0235 E6050000 		.4byte	.LASF46
 1781 0239 05       		.byte	0x5
 1782 023a 92       		.byte	0x92
 1783 023b 77000000 		.4byte	0x77
 1784 023f 00       		.byte	0
 1785 0240 0A       		.uleb128 0xa
 1786 0241 660A0000 		.4byte	.LASF47
 1787 0245 05       		.byte	0x5
 1788 0246 97       		.byte	0x97
 1789 0247 E5000000 		.4byte	0xe5
 1790 024b 02       		.byte	0x2
 1791 024c 0A       		.uleb128 0xa
 1792 024d 97050000 		.4byte	.LASF48
 1793 0251 05       		.byte	0x5
 1794 0252 9C       		.byte	0x9c
 1795 0253 6B000000 		.4byte	0x6b
 1796 0257 04       		.byte	0x4
 1797 0258 0A       		.uleb128 0xa
 1798 0259 02070000 		.4byte	.LASF49
 1799 025d 05       		.byte	0x5
 1800 025e A1       		.byte	0xa1
 1801 025f 6B000000 		.4byte	0x6b
 1802 0263 05       		.byte	0x5
 1803 0264 0A       		.uleb128 0xa
 1804 0265 5D070000 		.4byte	.LASF50
 1805 0269 05       		.byte	0x5
 1806 026a A7       		.byte	0xa7
 1807 026b 6B000000 		.4byte	0x6b
 1808 026f 06       		.byte	0x6
 1809 0270 0A       		.uleb128 0xa
 1810 0271 4C060000 		.4byte	.LASF51
 1811 0275 05       		.byte	0x5
 1812 0276 AD       		.byte	0xad
 1813 0277 6B000000 		.4byte	0x6b
 1814 027b 07       		.byte	0x7
 1815 027c 0A       		.uleb128 0xa
 1816 027d DE040000 		.4byte	.LASF52
 1817 0281 05       		.byte	0x5
 1818 0282 B4       		.byte	0xb4
 1819 0283 F0000000 		.4byte	0xf0
 1820 0287 08       		.byte	0x8
 1821 0288 0A       		.uleb128 0xa
 1822 0289 2F0A0000 		.4byte	.LASF53
 1823 028d 05       		.byte	0x5
 1824 028e BB       		.byte	0xbb
 1825 028f C5020000 		.4byte	0x2c5
 1826 0293 09       		.byte	0x9
 1827 0294 0A       		.uleb128 0xa
 1828 0295 240B0000 		.4byte	.LASF54
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 85


 1829 0299 05       		.byte	0x5
 1830 029a C3       		.byte	0xc3
 1831 029b 77000000 		.4byte	0x77
 1832 029f 0A       		.byte	0xa
 1833 02a0 0A       		.uleb128 0xa
 1834 02a1 8C080000 		.4byte	.LASF55
 1835 02a5 05       		.byte	0x5
 1836 02a6 C8       		.byte	0xc8
 1837 02a7 6B000000 		.4byte	0x6b
 1838 02ab 0C       		.byte	0xc
 1839 02ac 0A       		.uleb128 0xa
 1840 02ad 83090000 		.4byte	.LASF24
 1841 02b1 05       		.byte	0x5
 1842 02b2 CE       		.byte	0xce
 1843 02b3 77000000 		.4byte	0x77
 1844 02b7 0E       		.byte	0xe
 1845 02b8 0A       		.uleb128 0xa
 1846 02b9 B8040000 		.4byte	.LASF29
 1847 02bd 05       		.byte	0x5
 1848 02be D3       		.byte	0xd3
 1849 02bf 77000000 		.4byte	0x77
 1850 02c3 10       		.byte	0x10
 1851 02c4 00       		.byte	0
 1852 02c5 0D       		.uleb128 0xd
 1853 02c6 6B000000 		.4byte	0x6b
 1854 02ca D5020000 		.4byte	0x2d5
 1855 02ce 0E       		.uleb128 0xe
 1856 02cf D5020000 		.4byte	0x2d5
 1857 02d3 00       		.byte	0
 1858 02d4 00       		.byte	0
 1859 02d5 02       		.uleb128 0x2
 1860 02d6 04       		.byte	0x4
 1861 02d7 07       		.byte	0x7
 1862 02d8 99080000 		.4byte	.LASF56
 1863 02dc 08       		.uleb128 0x8
 1864 02dd 2F070000 		.4byte	.LASF57
 1865 02e1 05       		.byte	0x5
 1866 02e2 D4       		.byte	0xd4
 1867 02e3 2C020000 		.4byte	0x22c
 1868 02e7 09       		.uleb128 0x9
 1869 02e8 12       		.byte	0x12
 1870 02e9 05       		.byte	0x5
 1871 02ea D9       		.byte	0xd9
 1872 02eb 86030000 		.4byte	0x386
 1873 02ef 0A       		.uleb128 0xa
 1874 02f0 E6050000 		.4byte	.LASF46
 1875 02f4 05       		.byte	0x5
 1876 02f5 DE       		.byte	0xde
 1877 02f6 77000000 		.4byte	0x77
 1878 02fa 00       		.byte	0
 1879 02fb 0A       		.uleb128 0xa
 1880 02fc 660A0000 		.4byte	.LASF47
 1881 0300 05       		.byte	0x5
 1882 0301 E3       		.byte	0xe3
 1883 0302 E5000000 		.4byte	0xe5
 1884 0306 02       		.byte	0x2
 1885 0307 0A       		.uleb128 0xa
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 86


 1886 0308 97050000 		.4byte	.LASF48
 1887 030c 05       		.byte	0x5
 1888 030d E8       		.byte	0xe8
 1889 030e 6B000000 		.4byte	0x6b
 1890 0312 04       		.byte	0x4
 1891 0313 0A       		.uleb128 0xa
 1892 0314 02070000 		.4byte	.LASF49
 1893 0318 05       		.byte	0x5
 1894 0319 ED       		.byte	0xed
 1895 031a 6B000000 		.4byte	0x6b
 1896 031e 05       		.byte	0x5
 1897 031f 0A       		.uleb128 0xa
 1898 0320 5D070000 		.4byte	.LASF50
 1899 0324 05       		.byte	0x5
 1900 0325 F3       		.byte	0xf3
 1901 0326 6B000000 		.4byte	0x6b
 1902 032a 06       		.byte	0x6
 1903 032b 0A       		.uleb128 0xa
 1904 032c 4C060000 		.4byte	.LASF51
 1905 0330 05       		.byte	0x5
 1906 0331 F9       		.byte	0xf9
 1907 0332 6B000000 		.4byte	0x6b
 1908 0336 07       		.byte	0x7
 1909 0337 0F       		.uleb128 0xf
 1910 0338 DE040000 		.4byte	.LASF52
 1911 033c 05       		.byte	0x5
 1912 033d 0001     		.2byte	0x100
 1913 033f F0000000 		.4byte	0xf0
 1914 0343 08       		.byte	0x8
 1915 0344 0F       		.uleb128 0xf
 1916 0345 2F0A0000 		.4byte	.LASF53
 1917 0349 05       		.byte	0x5
 1918 034a 0701     		.2byte	0x107
 1919 034c C5020000 		.4byte	0x2c5
 1920 0350 09       		.byte	0x9
 1921 0351 0F       		.uleb128 0xf
 1922 0352 240B0000 		.4byte	.LASF54
 1923 0356 05       		.byte	0x5
 1924 0357 0F01     		.2byte	0x10f
 1925 0359 77000000 		.4byte	0x77
 1926 035d 0A       		.byte	0xa
 1927 035e 0F       		.uleb128 0xf
 1928 035f 8C080000 		.4byte	.LASF55
 1929 0363 05       		.byte	0x5
 1930 0364 1401     		.2byte	0x114
 1931 0366 6B000000 		.4byte	0x6b
 1932 036a 0C       		.byte	0xc
 1933 036b 0F       		.uleb128 0xf
 1934 036c 83090000 		.4byte	.LASF24
 1935 0370 05       		.byte	0x5
 1936 0371 1A01     		.2byte	0x11a
 1937 0373 77000000 		.4byte	0x77
 1938 0377 0E       		.byte	0xe
 1939 0378 0F       		.uleb128 0xf
 1940 0379 B8040000 		.4byte	.LASF29
 1941 037d 05       		.byte	0x5
 1942 037e 1F01     		.2byte	0x11f
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 87


 1943 0380 77000000 		.4byte	0x77
 1944 0384 10       		.byte	0x10
 1945 0385 00       		.byte	0
 1946 0386 04       		.uleb128 0x4
 1947 0387 860C0000 		.4byte	.LASF58
 1948 038b 05       		.byte	0x5
 1949 038c 2001     		.2byte	0x120
 1950 038e E7020000 		.4byte	0x2e7
 1951 0392 10       		.uleb128 0x10
 1952 0393 12       		.byte	0x12
 1953 0394 05       		.byte	0x5
 1954 0395 2601     		.2byte	0x126
 1955 0397 A9030000 		.4byte	0x3a9
 1956 039b 0F       		.uleb128 0xf
 1957 039c BB030000 		.4byte	.LASF59
 1958 03a0 05       		.byte	0x5
 1959 03a1 2B01     		.2byte	0x12b
 1960 03a3 86030000 		.4byte	0x386
 1961 03a7 00       		.byte	0
 1962 03a8 00       		.byte	0
 1963 03a9 04       		.uleb128 0x4
 1964 03aa 52020000 		.4byte	.LASF60
 1965 03ae 05       		.byte	0x5
 1966 03af 2C01     		.2byte	0x12c
 1967 03b1 92030000 		.4byte	0x392
 1968 03b5 10       		.uleb128 0x10
 1969 03b6 0A       		.byte	0xa
 1970 03b7 05       		.byte	0x5
 1971 03b8 3201     		.2byte	0x132
 1972 03ba 0D040000 		.4byte	0x40d
 1973 03be 11       		.uleb128 0x11
 1974 03bf 72617700 		.ascii	"raw\000"
 1975 03c3 05       		.byte	0x5
 1976 03c4 3701     		.2byte	0x137
 1977 03c6 0D040000 		.4byte	0x40d
 1978 03ca 00       		.byte	0
 1979 03cb 0F       		.uleb128 0xf
 1980 03cc 4E0B0000 		.4byte	.LASF61
 1981 03d0 05       		.byte	0x5
 1982 03d1 3C01     		.2byte	0x13c
 1983 03d3 0D040000 		.4byte	0x40d
 1984 03d7 02       		.byte	0x2
 1985 03d8 0F       		.uleb128 0xf
 1986 03d9 8E0A0000 		.4byte	.LASF62
 1987 03dd 05       		.byte	0x5
 1988 03de 4201     		.2byte	0x142
 1989 03e0 C5020000 		.4byte	0x2c5
 1990 03e4 04       		.byte	0x4
 1991 03e5 0F       		.uleb128 0xf
 1992 03e6 0D090000 		.4byte	.LASF63
 1993 03ea 05       		.byte	0x5
 1994 03eb 4701     		.2byte	0x147
 1995 03ed E5000000 		.4byte	0xe5
 1996 03f1 06       		.byte	0x6
 1997 03f2 0F       		.uleb128 0xf
 1998 03f3 EC0B0000 		.4byte	.LASF64
 1999 03f7 05       		.byte	0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 88


 2000 03f8 4C01     		.2byte	0x14c
 2001 03fa 1D040000 		.4byte	0x41d
 2002 03fe 08       		.byte	0x8
 2003 03ff 0F       		.uleb128 0xf
 2004 0400 15060000 		.4byte	.LASF65
 2005 0404 05       		.byte	0x5
 2006 0405 5101     		.2byte	0x151
 2007 0407 C5020000 		.4byte	0x2c5
 2008 040b 09       		.byte	0x9
 2009 040c 00       		.byte	0
 2010 040d 0D       		.uleb128 0xd
 2011 040e 77000000 		.4byte	0x77
 2012 0412 1D040000 		.4byte	0x41d
 2013 0416 0E       		.uleb128 0xe
 2014 0417 D5020000 		.4byte	0x2d5
 2015 041b 00       		.byte	0
 2016 041c 00       		.byte	0
 2017 041d 0D       		.uleb128 0xd
 2018 041e F0000000 		.4byte	0xf0
 2019 0422 2D040000 		.4byte	0x42d
 2020 0426 0E       		.uleb128 0xe
 2021 0427 D5020000 		.4byte	0x2d5
 2022 042b 00       		.byte	0
 2023 042c 00       		.byte	0
 2024 042d 04       		.uleb128 0x4
 2025 042e FA0B0000 		.4byte	.LASF66
 2026 0432 05       		.byte	0x5
 2027 0433 5201     		.2byte	0x152
 2028 0435 B5030000 		.4byte	0x3b5
 2029 0439 10       		.uleb128 0x10
 2030 043a 0A       		.byte	0xa
 2031 043b 05       		.byte	0x5
 2032 043c 5801     		.2byte	0x158
 2033 043e 50040000 		.4byte	0x450
 2034 0442 0F       		.uleb128 0xf
 2035 0443 BB030000 		.4byte	.LASF59
 2036 0447 05       		.byte	0x5
 2037 0448 5D01     		.2byte	0x15d
 2038 044a 50040000 		.4byte	0x450
 2039 044e 00       		.byte	0
 2040 044f 00       		.byte	0
 2041 0450 0D       		.uleb128 0xd
 2042 0451 2D040000 		.4byte	0x42d
 2043 0455 60040000 		.4byte	0x460
 2044 0459 0E       		.uleb128 0xe
 2045 045a D5020000 		.4byte	0x2d5
 2046 045e 00       		.byte	0
 2047 045f 00       		.byte	0
 2048 0460 04       		.uleb128 0x4
 2049 0461 8F070000 		.4byte	.LASF67
 2050 0465 05       		.byte	0x5
 2051 0466 5E01     		.2byte	0x15e
 2052 0468 39040000 		.4byte	0x439
 2053 046c 10       		.uleb128 0x10
 2054 046d 40       		.byte	0x40
 2055 046e 05       		.byte	0x5
 2056 046f 6401     		.2byte	0x164
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 89


 2057 0471 53050000 		.4byte	0x553
 2058 0475 0F       		.uleb128 0xf
 2059 0476 56080000 		.4byte	.LASF68
 2060 047a 05       		.byte	0x5
 2061 047b 6B01     		.2byte	0x16b
 2062 047d 77000000 		.4byte	0x77
 2063 0481 00       		.byte	0
 2064 0482 0F       		.uleb128 0xf
 2065 0483 700C0000 		.4byte	.LASF69
 2066 0487 05       		.byte	0x5
 2067 0488 7001     		.2byte	0x170
 2068 048a 77000000 		.4byte	0x77
 2069 048e 02       		.byte	0x2
 2070 048f 0F       		.uleb128 0xf
 2071 0490 DE000000 		.4byte	.LASF70
 2072 0494 05       		.byte	0x5
 2073 0495 7501     		.2byte	0x175
 2074 0497 77000000 		.4byte	0x77
 2075 049b 04       		.byte	0x4
 2076 049c 0F       		.uleb128 0xf
 2077 049d 12090000 		.4byte	.LASF71
 2078 04a1 05       		.byte	0x5
 2079 04a2 7B01     		.2byte	0x17b
 2080 04a4 77000000 		.4byte	0x77
 2081 04a8 06       		.byte	0x6
 2082 04a9 0F       		.uleb128 0xf
 2083 04aa D2000000 		.4byte	.LASF72
 2084 04ae 05       		.byte	0x5
 2085 04af 8001     		.2byte	0x180
 2086 04b1 77000000 		.4byte	0x77
 2087 04b5 08       		.byte	0x8
 2088 04b6 0F       		.uleb128 0xf
 2089 04b7 07060000 		.4byte	.LASF73
 2090 04bb 05       		.byte	0x5
 2091 04bc 8501     		.2byte	0x185
 2092 04be CD000000 		.4byte	0xcd
 2093 04c2 0C       		.byte	0xc
 2094 04c3 0F       		.uleb128 0xf
 2095 04c4 D1080000 		.4byte	.LASF74
 2096 04c8 05       		.byte	0x5
 2097 04c9 8B01     		.2byte	0x18b
 2098 04cb 53050000 		.4byte	0x553
 2099 04cf 10       		.byte	0x10
 2100 04d0 0F       		.uleb128 0xf
 2101 04d1 8D090000 		.4byte	.LASF75
 2102 04d5 05       		.byte	0x5
 2103 04d6 9201     		.2byte	0x192
 2104 04d8 53050000 		.4byte	0x553
 2105 04dc 14       		.byte	0x14
 2106 04dd 0F       		.uleb128 0xf
 2107 04de 82080000 		.4byte	.LASF76
 2108 04e2 05       		.byte	0x5
 2109 04e3 A201     		.2byte	0x1a2
 2110 04e5 C5020000 		.4byte	0x2c5
 2111 04e9 18       		.byte	0x18
 2112 04ea 0F       		.uleb128 0xf
 2113 04eb 0B070000 		.4byte	.LASF77
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 90


 2114 04ef 05       		.byte	0x5
 2115 04f0 A801     		.2byte	0x1a8
 2116 04f2 77000000 		.4byte	0x77
 2117 04f6 1A       		.byte	0x1a
 2118 04f7 0F       		.uleb128 0xf
 2119 04f8 55040000 		.4byte	.LASF78
 2120 04fc 05       		.byte	0x5
 2121 04fd AD01     		.2byte	0x1ad
 2122 04ff 6B000000 		.4byte	0x6b
 2123 0503 1C       		.byte	0x1c
 2124 0504 0F       		.uleb128 0xf
 2125 0505 8F060000 		.4byte	.LASF79
 2126 0509 05       		.byte	0x5
 2127 050a B201     		.2byte	0x1b2
 2128 050c A9030000 		.4byte	0x3a9
 2129 0510 1E       		.byte	0x1e
 2130 0511 0F       		.uleb128 0xf
 2131 0512 17030000 		.4byte	.LASF80
 2132 0516 05       		.byte	0x5
 2133 0517 B701     		.2byte	0x1b7
 2134 0519 60040000 		.4byte	0x460
 2135 051d 30       		.byte	0x30
 2136 051e 0F       		.uleb128 0xf
 2137 051f 68000000 		.4byte	.LASF81
 2138 0523 05       		.byte	0x5
 2139 0524 BC01     		.2byte	0x1bc
 2140 0526 6B000000 		.4byte	0x6b
 2141 052a 3A       		.byte	0x3a
 2142 052b 0F       		.uleb128 0xf
 2143 052c 36030000 		.4byte	.LASF82
 2144 0530 05       		.byte	0x5
 2145 0531 C101     		.2byte	0x1c1
 2146 0533 6B000000 		.4byte	0x6b
 2147 0537 3B       		.byte	0x3b
 2148 0538 0F       		.uleb128 0xf
 2149 0539 43080000 		.4byte	.LASF83
 2150 053d 05       		.byte	0x5
 2151 053e C601     		.2byte	0x1c6
 2152 0540 77000000 		.4byte	0x77
 2153 0544 3C       		.byte	0x3c
 2154 0545 0F       		.uleb128 0xf
 2155 0546 A5060000 		.4byte	.LASF84
 2156 054a 05       		.byte	0x5
 2157 054b CB01     		.2byte	0x1cb
 2158 054d 0D040000 		.4byte	0x40d
 2159 0551 3E       		.byte	0x3e
 2160 0552 00       		.byte	0
 2161 0553 0D       		.uleb128 0xd
 2162 0554 83000000 		.4byte	0x83
 2163 0558 63050000 		.4byte	0x563
 2164 055c 0E       		.uleb128 0xe
 2165 055d D5020000 		.4byte	0x2d5
 2166 0561 00       		.byte	0
 2167 0562 00       		.byte	0
 2168 0563 04       		.uleb128 0x4
 2169 0564 F1050000 		.4byte	.LASF85
 2170 0568 05       		.byte	0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 91


 2171 0569 CC01     		.2byte	0x1cc
 2172 056b 6C040000 		.4byte	0x46c
 2173 056f 10       		.uleb128 0x10
 2174 0570 1C       		.byte	0x1c
 2175 0571 05       		.byte	0x5
 2176 0572 D201     		.2byte	0x1d2
 2177 0574 EE050000 		.4byte	0x5ee
 2178 0578 0F       		.uleb128 0xf
 2179 0579 4D070000 		.4byte	.LASF86
 2180 057d 05       		.byte	0x5
 2181 057e D701     		.2byte	0x1d7
 2182 0580 EE050000 		.4byte	0x5ee
 2183 0584 00       		.byte	0
 2184 0585 0F       		.uleb128 0xf
 2185 0586 1E060000 		.4byte	.LASF87
 2186 058a 05       		.byte	0x5
 2187 058b DC01     		.2byte	0x1dc
 2188 058d EE050000 		.4byte	0x5ee
 2189 0591 04       		.byte	0x4
 2190 0592 0F       		.uleb128 0xf
 2191 0593 97040000 		.4byte	.LASF88
 2192 0597 05       		.byte	0x5
 2193 0598 E101     		.2byte	0x1e1
 2194 059a EE050000 		.4byte	0x5ee
 2195 059e 08       		.byte	0x8
 2196 059f 0F       		.uleb128 0xf
 2197 05a0 1B090000 		.4byte	.LASF89
 2198 05a4 05       		.byte	0x5
 2199 05a5 E601     		.2byte	0x1e6
 2200 05a7 EE050000 		.4byte	0x5ee
 2201 05ab 0C       		.byte	0xc
 2202 05ac 0F       		.uleb128 0xf
 2203 05ad F00A0000 		.4byte	.LASF90
 2204 05b1 05       		.byte	0x5
 2205 05b2 EB01     		.2byte	0x1eb
 2206 05b4 83000000 		.4byte	0x83
 2207 05b8 10       		.byte	0x10
 2208 05b9 0F       		.uleb128 0xf
 2209 05ba 08010000 		.4byte	.LASF91
 2210 05be 05       		.byte	0x5
 2211 05bf F001     		.2byte	0x1f0
 2212 05c1 83000000 		.4byte	0x83
 2213 05c5 14       		.byte	0x14
 2214 05c6 0F       		.uleb128 0xf
 2215 05c7 D4050000 		.4byte	.LASF92
 2216 05cb 05       		.byte	0x5
 2217 05cc F501     		.2byte	0x1f5
 2218 05ce 6B000000 		.4byte	0x6b
 2219 05d2 18       		.byte	0x18
 2220 05d3 0F       		.uleb128 0xf
 2221 05d4 090A0000 		.4byte	.LASF93
 2222 05d8 05       		.byte	0x5
 2223 05d9 FA01     		.2byte	0x1fa
 2224 05db 6B000000 		.4byte	0x6b
 2225 05df 19       		.byte	0x19
 2226 05e0 0F       		.uleb128 0xf
 2227 05e1 E4020000 		.4byte	.LASF94
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 92


 2228 05e5 05       		.byte	0x5
 2229 05e6 FF01     		.2byte	0x1ff
 2230 05e8 6B000000 		.4byte	0x6b
 2231 05ec 1A       		.byte	0x1a
 2232 05ed 00       		.byte	0
 2233 05ee 06       		.uleb128 0x6
 2234 05ef 04       		.byte	0x4
 2235 05f0 C1000000 		.4byte	0xc1
 2236 05f4 04       		.uleb128 0x4
 2237 05f5 9B0B0000 		.4byte	.LASF95
 2238 05f9 05       		.byte	0x5
 2239 05fa 0002     		.2byte	0x200
 2240 05fc 6F050000 		.4byte	0x56f
 2241 0600 10       		.uleb128 0x10
 2242 0601 20       		.byte	0x20
 2243 0602 05       		.byte	0x5
 2244 0603 3302     		.2byte	0x233
 2245 0605 8C060000 		.4byte	0x68c
 2246 0609 0F       		.uleb128 0xf
 2247 060a 98060000 		.4byte	.LASF96
 2248 060e 05       		.byte	0x5
 2249 060f 3C02     		.2byte	0x23c
 2250 0611 8C060000 		.4byte	0x68c
 2251 0615 00       		.byte	0
 2252 0616 0F       		.uleb128 0xf
 2253 0617 D40A0000 		.4byte	.LASF97
 2254 061b 05       		.byte	0x5
 2255 061c 4302     		.2byte	0x243
 2256 061e 93060000 		.4byte	0x693
 2257 0622 04       		.byte	0x4
 2258 0623 0F       		.uleb128 0xf
 2259 0624 5F080000 		.4byte	.LASF98
 2260 0628 05       		.byte	0x5
 2261 0629 4902     		.2byte	0x249
 2262 062b 95060000 		.4byte	0x695
 2263 062f 08       		.byte	0x8
 2264 0630 0F       		.uleb128 0xf
 2265 0631 68070000 		.4byte	.LASF99
 2266 0635 05       		.byte	0x5
 2267 0636 4F02     		.2byte	0x24f
 2268 0638 93060000 		.4byte	0x693
 2269 063c 0C       		.byte	0xc
 2270 063d 0F       		.uleb128 0xf
 2271 063e 370A0000 		.4byte	.LASF100
 2272 0642 05       		.byte	0x5
 2273 0643 5602     		.2byte	0x256
 2274 0645 9B060000 		.4byte	0x69b
 2275 0649 10       		.byte	0x10
 2276 064a 0F       		.uleb128 0xf
 2277 064b B70A0000 		.4byte	.LASF101
 2278 064f 05       		.byte	0x5
 2279 0650 5B02     		.2byte	0x25b
 2280 0652 83000000 		.4byte	0x83
 2281 0656 14       		.byte	0x14
 2282 0657 0F       		.uleb128 0xf
 2283 0658 42050000 		.4byte	.LASF102
 2284 065c 05       		.byte	0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 93


 2285 065d 6202     		.2byte	0x262
 2286 065f 77000000 		.4byte	0x77
 2287 0663 18       		.byte	0x18
 2288 0664 0F       		.uleb128 0xf
 2289 0665 55030000 		.4byte	.LASF103
 2290 0669 05       		.byte	0x5
 2291 066a 6902     		.2byte	0x269
 2292 066c 6B000000 		.4byte	0x6b
 2293 0670 1A       		.byte	0x1a
 2294 0671 0F       		.uleb128 0xf
 2295 0672 5D090000 		.4byte	.LASF104
 2296 0676 05       		.byte	0x5
 2297 0677 7302     		.2byte	0x273
 2298 0679 6B000000 		.4byte	0x6b
 2299 067d 1B       		.byte	0x1b
 2300 067e 0F       		.uleb128 0xf
 2301 067f 46030000 		.4byte	.LASF105
 2302 0683 05       		.byte	0x5
 2303 0684 7B02     		.2byte	0x27b
 2304 0686 A1060000 		.4byte	0x6a1
 2305 068a 1C       		.byte	0x1c
 2306 068b 00       		.byte	0
 2307 068c 06       		.uleb128 0x6
 2308 068d 04       		.byte	0x4
 2309 068e 92060000 		.4byte	0x692
 2310 0692 12       		.uleb128 0x12
 2311 0693 13       		.uleb128 0x13
 2312 0694 04       		.byte	0x4
 2313 0695 06       		.uleb128 0x6
 2314 0696 04       		.byte	0x4
 2315 0697 2D040000 		.4byte	0x42d
 2316 069b 06       		.uleb128 0x6
 2317 069c 04       		.byte	0x4
 2318 069d 6B000000 		.4byte	0x6b
 2319 06a1 06       		.uleb128 0x6
 2320 06a2 04       		.byte	0x4
 2321 06a3 EB010000 		.4byte	0x1eb
 2322 06a7 04       		.uleb128 0x4
 2323 06a8 2A000000 		.4byte	.LASF106
 2324 06ac 05       		.byte	0x5
 2325 06ad 7C02     		.2byte	0x27c
 2326 06af 00060000 		.4byte	0x600
 2327 06b3 10       		.uleb128 0x10
 2328 06b4 20       		.byte	0x20
 2329 06b5 05       		.byte	0x5
 2330 06b6 8202     		.2byte	0x282
 2331 06b8 CA060000 		.4byte	0x6ca
 2332 06bc 0F       		.uleb128 0xf
 2333 06bd E60C0000 		.4byte	.LASF107
 2334 06c1 05       		.byte	0x5
 2335 06c2 8702     		.2byte	0x287
 2336 06c4 CA060000 		.4byte	0x6ca
 2337 06c8 00       		.byte	0
 2338 06c9 00       		.byte	0
 2339 06ca 0D       		.uleb128 0xd
 2340 06cb A7060000 		.4byte	0x6a7
 2341 06cf DA060000 		.4byte	0x6da
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 94


 2342 06d3 0E       		.uleb128 0xe
 2343 06d4 D5020000 		.4byte	0x2d5
 2344 06d8 00       		.byte	0
 2345 06d9 00       		.byte	0
 2346 06da 04       		.uleb128 0x4
 2347 06db 6A080000 		.4byte	.LASF108
 2348 06df 05       		.byte	0x5
 2349 06e0 8802     		.2byte	0x288
 2350 06e2 B3060000 		.4byte	0x6b3
 2351 06e6 02       		.uleb128 0x2
 2352 06e7 08       		.byte	0x8
 2353 06e8 04       		.byte	0x4
 2354 06e9 23070000 		.4byte	.LASF109
 2355 06ed 14       		.uleb128 0x14
 2356 06ee 7C0B0000 		.4byte	.LASF110
 2357 06f2 01       		.byte	0x1
 2358 06f3 7107     		.2byte	0x771
 2359 06f5 00000000 		.4byte	.LFB19
 2360 06f9 2C000000 		.4byte	.LFE19-.LFB19
 2361 06fd 01       		.uleb128 0x1
 2362 06fe 9C       		.byte	0x9c
 2363 06ff 14070000 		.4byte	0x714
 2364 0703 15       		.uleb128 0x15
 2365 0704 AD0A0000 		.4byte	.LASF113
 2366 0708 01       		.byte	0x1
 2367 0709 7307     		.2byte	0x773
 2368 070b 83000000 		.4byte	0x83
 2369 070f 00000000 		.4byte	.LLST0
 2370 0713 00       		.byte	0
 2371 0714 14       		.uleb128 0x14
 2372 0715 80040000 		.4byte	.LASF111
 2373 0719 01       		.byte	0x1
 2374 071a 9707     		.2byte	0x797
 2375 071c 00000000 		.4byte	.LFB20
 2376 0720 08000000 		.4byte	.LFE20-.LFB20
 2377 0724 01       		.uleb128 0x1
 2378 0725 9C       		.byte	0x9c
 2379 0726 34070000 		.4byte	0x734
 2380 072a 16       		.uleb128 0x16
 2381 072b 06000000 		.4byte	.LVL4
 2382 072f ED060000 		.4byte	0x6ed
 2383 0733 00       		.byte	0
 2384 0734 14       		.uleb128 0x14
 2385 0735 0E000000 		.4byte	.LASF112
 2386 0739 01       		.byte	0x1
 2387 073a 0003     		.2byte	0x300
 2388 073c 00000000 		.4byte	.LFB8
 2389 0740 18000000 		.4byte	.LFE8-.LFB8
 2390 0744 01       		.uleb128 0x1
 2391 0745 9C       		.byte	0x9c
 2392 0746 64070000 		.4byte	0x764
 2393 074a 15       		.uleb128 0x15
 2394 074b B60B0000 		.4byte	.LASF114
 2395 074f 01       		.byte	0x1
 2396 0750 0203     		.2byte	0x302
 2397 0752 83000000 		.4byte	0x83
 2398 0756 1E000000 		.4byte	.LLST1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 95


 2399 075a 16       		.uleb128 0x16
 2400 075b 10000000 		.4byte	.LVL7
 2401 075f 280F0000 		.4byte	0xf28
 2402 0763 00       		.byte	0
 2403 0764 17       		.uleb128 0x17
 2404 0765 5E010000 		.4byte	.LASF190
 2405 0769 01       		.byte	0x1
 2406 076a E9       		.byte	0xe9
 2407 076b 83000000 		.4byte	0x83
 2408 076f 00000000 		.4byte	.LFB2
 2409 0773 10000000 		.4byte	.LFE2-.LFB2
 2410 0777 01       		.uleb128 0x1
 2411 0778 9C       		.byte	0x9c
 2412 0779 18       		.uleb128 0x18
 2413 077a 00030000 		.4byte	.LASF116
 2414 077e 01       		.byte	0x1
 2415 077f 1D01     		.2byte	0x11d
 2416 0781 A4000000 		.4byte	0xa4
 2417 0785 00000000 		.4byte	.LFB3
 2418 0789 40000000 		.4byte	.LFE3-.LFB3
 2419 078d 01       		.uleb128 0x1
 2420 078e 9C       		.byte	0x9c
 2421 078f BD070000 		.4byte	0x7bd
 2422 0793 19       		.uleb128 0x19
 2423 0794 A60C0000 		.4byte	.LASF121
 2424 0798 01       		.byte	0x1
 2425 0799 1D01     		.2byte	0x11d
 2426 079b 83000000 		.4byte	0x83
 2427 079f 31000000 		.4byte	.LLST2
 2428 07a3 15       		.uleb128 0x15
 2429 07a4 790C0000 		.4byte	.LASF115
 2430 07a8 01       		.byte	0x1
 2431 07a9 1F01     		.2byte	0x11f
 2432 07ab A4000000 		.4byte	0xa4
 2433 07af 52000000 		.4byte	.LLST3
 2434 07b3 16       		.uleb128 0x16
 2435 07b4 38000000 		.4byte	.LVL10
 2436 07b8 340F0000 		.4byte	0xf34
 2437 07bc 00       		.byte	0
 2438 07bd 18       		.uleb128 0x18
 2439 07be 70010000 		.4byte	.LASF117
 2440 07c2 01       		.byte	0x1
 2441 07c3 7001     		.2byte	0x170
 2442 07c5 A4000000 		.4byte	0xa4
 2443 07c9 00000000 		.4byte	.LFB4
 2444 07cd 2C000000 		.4byte	.LFE4-.LFB4
 2445 07d1 01       		.uleb128 0x1
 2446 07d2 9C       		.byte	0x9c
 2447 07d3 F1070000 		.4byte	0x7f1
 2448 07d7 15       		.uleb128 0x15
 2449 07d8 45000000 		.4byte	.LASF118
 2450 07dc 01       		.byte	0x1
 2451 07dd 7201     		.2byte	0x172
 2452 07df A4000000 		.4byte	0xa4
 2453 07e3 70000000 		.4byte	.LLST4
 2454 07e7 16       		.uleb128 0x16
 2455 07e8 16000000 		.4byte	.LVL13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 96


 2456 07ec 400F0000 		.4byte	0xf40
 2457 07f0 00       		.byte	0
 2458 07f1 18       		.uleb128 0x18
 2459 07f2 BA050000 		.4byte	.LASF119
 2460 07f6 01       		.byte	0x1
 2461 07f7 AE01     		.2byte	0x1ae
 2462 07f9 A4000000 		.4byte	0xa4
 2463 07fd 00000000 		.4byte	.LFB5
 2464 0801 3C000000 		.4byte	.LFE5-.LFB5
 2465 0805 01       		.uleb128 0x1
 2466 0806 9C       		.byte	0x9c
 2467 0807 49080000 		.4byte	0x849
 2468 080b 15       		.uleb128 0x15
 2469 080c 45000000 		.4byte	.LASF118
 2470 0810 01       		.byte	0x1
 2471 0811 B001     		.2byte	0x1b0
 2472 0813 A4000000 		.4byte	0xa4
 2473 0817 8F000000 		.4byte	.LLST5
 2474 081b 15       		.uleb128 0x15
 2475 081c EB070000 		.4byte	.LASF120
 2476 0820 01       		.byte	0x1
 2477 0821 B201     		.2byte	0x1b2
 2478 0823 83000000 		.4byte	0x83
 2479 0827 DD000000 		.4byte	.LLST6
 2480 082b 1A       		.uleb128 0x1a
 2481 082c 18000000 		.4byte	.LVL18
 2482 0830 79070000 		.4byte	0x779
 2483 0834 3F080000 		.4byte	0x83f
 2484 0838 1B       		.uleb128 0x1b
 2485 0839 01       		.uleb128 0x1
 2486 083a 50       		.byte	0x50
 2487 083b 02       		.uleb128 0x2
 2488 083c 74       		.byte	0x74
 2489 083d 00       		.sleb128 0
 2490 083e 00       		.byte	0
 2491 083f 16       		.uleb128 0x16
 2492 0840 26000000 		.4byte	.LVL19
 2493 0844 BD070000 		.4byte	0x7bd
 2494 0848 00       		.byte	0
 2495 0849 1C       		.uleb128 0x1c
 2496 084a E9040000 		.4byte	.LASF128
 2497 084e 01       		.byte	0x1
 2498 084f 8F02     		.2byte	0x28f
 2499 0851 00000000 		.4byte	.LFB7
 2500 0855 9C000000 		.4byte	.LFE7-.LFB7
 2501 0859 01       		.uleb128 0x1
 2502 085a 9C       		.byte	0x9c
 2503 085b 13090000 		.4byte	0x913
 2504 085f 19       		.uleb128 0x19
 2505 0860 A60C0000 		.4byte	.LASF121
 2506 0864 01       		.byte	0x1
 2507 0865 8F02     		.2byte	0x28f
 2508 0867 83000000 		.4byte	0x83
 2509 086b F0000000 		.4byte	.LLST7
 2510 086f 19       		.uleb128 0x19
 2511 0870 00000000 		.4byte	.LASF122
 2512 0874 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 97


 2513 0875 8F02     		.2byte	0x28f
 2514 0877 83000000 		.4byte	0x83
 2515 087b 11010000 		.4byte	.LLST8
 2516 087f 19       		.uleb128 0x19
 2517 0880 E00A0000 		.4byte	.LASF123
 2518 0884 01       		.byte	0x1
 2519 0885 8F02     		.2byte	0x28f
 2520 0887 83000000 		.4byte	0x83
 2521 088b 32010000 		.4byte	.LLST9
 2522 088f 1D       		.uleb128 0x1d
 2523 0890 79020000 		.4byte	.LASF124
 2524 0894 01       		.byte	0x1
 2525 0895 9102     		.2byte	0x291
 2526 0897 83000000 		.4byte	0x83
 2527 089b 01       		.byte	0x1
 2528 089c 15       		.uleb128 0x15
 2529 089d E60A0000 		.4byte	.LASF125
 2530 08a1 01       		.byte	0x1
 2531 08a2 9202     		.2byte	0x292
 2532 08a4 83000000 		.4byte	0x83
 2533 08a8 5E010000 		.4byte	.LLST10
 2534 08ac 15       		.uleb128 0x15
 2535 08ad 4A010000 		.4byte	.LASF126
 2536 08b1 01       		.byte	0x1
 2537 08b2 9302     		.2byte	0x293
 2538 08b4 6B000000 		.4byte	0x6b
 2539 08b8 7D010000 		.4byte	.LLST11
 2540 08bc 15       		.uleb128 0x15
 2541 08bd CE0A0000 		.4byte	.LASF127
 2542 08c1 01       		.byte	0x1
 2543 08c2 9402     		.2byte	0x294
 2544 08c4 13090000 		.4byte	0x913
 2545 08c8 A6010000 		.4byte	.LLST12
 2546 08cc 16       		.uleb128 0x16
 2547 08cd 1A000000 		.4byte	.LVL28
 2548 08d1 4C0F0000 		.4byte	0xf4c
 2549 08d5 16       		.uleb128 0x16
 2550 08d6 3A000000 		.4byte	.LVL29
 2551 08da 570F0000 		.4byte	0xf57
 2552 08de 16       		.uleb128 0x16
 2553 08df 4C000000 		.4byte	.LVL30
 2554 08e3 4C0F0000 		.4byte	0xf4c
 2555 08e7 16       		.uleb128 0x16
 2556 08e8 6C000000 		.4byte	.LVL31
 2557 08ec 570F0000 		.4byte	0xf57
 2558 08f0 16       		.uleb128 0x16
 2559 08f1 72000000 		.4byte	.LVL32
 2560 08f5 4C0F0000 		.4byte	0xf4c
 2561 08f9 16       		.uleb128 0x16
 2562 08fa 84000000 		.4byte	.LVL33
 2563 08fe 570F0000 		.4byte	0xf57
 2564 0902 1E       		.uleb128 0x1e
 2565 0903 8C000000 		.4byte	.LVL34
 2566 0907 620F0000 		.4byte	0xf62
 2567 090b 1B       		.uleb128 0x1b
 2568 090c 01       		.uleb128 0x1
 2569 090d 50       		.byte	0x50
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 98


 2570 090e 02       		.uleb128 0x2
 2571 090f 74       		.byte	0x74
 2572 0910 00       		.sleb128 0
 2573 0911 00       		.byte	0
 2574 0912 00       		.byte	0
 2575 0913 06       		.uleb128 0x6
 2576 0914 04       		.byte	0x4
 2577 0915 19090000 		.4byte	0x919
 2578 0919 1F       		.uleb128 0x1f
 2579 091a F4050000 		.4byte	0x5f4
 2580 091e 1C       		.uleb128 0x1c
 2581 091f 00050000 		.4byte	.LASF129
 2582 0923 01       		.byte	0x1
 2583 0924 8B03     		.2byte	0x38b
 2584 0926 00000000 		.4byte	.LFB9
 2585 092a 3C000000 		.4byte	.LFE9-.LFB9
 2586 092e 01       		.uleb128 0x1
 2587 092f 9C       		.byte	0x9c
 2588 0930 57090000 		.4byte	0x957
 2589 0934 19       		.uleb128 0x19
 2590 0935 E9010000 		.4byte	.LASF130
 2591 0939 01       		.byte	0x1
 2592 093a 8B03     		.2byte	0x38b
 2593 093c 21020000 		.4byte	0x221
 2594 0940 B9010000 		.4byte	.LLST13
 2595 0944 16       		.uleb128 0x16
 2596 0945 14000000 		.4byte	.LVL41
 2597 0949 34070000 		.4byte	0x734
 2598 094d 16       		.uleb128 0x16
 2599 094e 1C000000 		.4byte	.LVL42
 2600 0952 6E0F0000 		.4byte	0xf6e
 2601 0956 00       		.byte	0
 2602 0957 1C       		.uleb128 0x1c
 2603 0958 98000000 		.4byte	.LASF131
 2604 095c 01       		.byte	0x1
 2605 095d EE03     		.2byte	0x3ee
 2606 095f 00000000 		.4byte	.LFB10
 2607 0963 40000000 		.4byte	.LFE10-.LFB10
 2608 0967 01       		.uleb128 0x1
 2609 0968 9C       		.byte	0x9c
 2610 0969 9E090000 		.4byte	0x99e
 2611 096d 15       		.uleb128 0x15
 2612 096e CE0A0000 		.4byte	.LASF127
 2613 0972 01       		.byte	0x1
 2614 0973 F003     		.2byte	0x3f0
 2615 0975 13090000 		.4byte	0x913
 2616 0979 DA010000 		.4byte	.LLST14
 2617 097d 15       		.uleb128 0x15
 2618 097e D4020000 		.4byte	.LASF132
 2619 0982 01       		.byte	0x1
 2620 0983 F103     		.2byte	0x3f1
 2621 0985 83000000 		.4byte	0x83
 2622 0989 ED010000 		.4byte	.LLST15
 2623 098d 15       		.uleb128 0x15
 2624 098e 2F010000 		.4byte	.LASF133
 2625 0992 01       		.byte	0x1
 2626 0993 F203     		.2byte	0x3f2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 99


 2627 0995 83000000 		.4byte	0x83
 2628 0999 0C020000 		.4byte	.LLST16
 2629 099d 00       		.byte	0
 2630 099e 20       		.uleb128 0x20
 2631 099f AF0C0000 		.4byte	.LASF191
 2632 09a3 01       		.byte	0x1
 2633 09a4 6404     		.2byte	0x464
 2634 09a6 00000000 		.4byte	.LFB11
 2635 09aa 02000000 		.4byte	.LFE11-.LFB11
 2636 09ae 01       		.uleb128 0x1
 2637 09af 9C       		.byte	0x9c
 2638 09b0 1C       		.uleb128 0x1c
 2639 09b1 9D040000 		.4byte	.LASF134
 2640 09b5 01       		.byte	0x1
 2641 09b6 B104     		.2byte	0x4b1
 2642 09b8 00000000 		.4byte	.LFB12
 2643 09bc 08000000 		.4byte	.LFE12-.LFB12
 2644 09c0 01       		.uleb128 0x1
 2645 09c1 9C       		.byte	0x9c
 2646 09c2 E8090000 		.4byte	0x9e8
 2647 09c6 19       		.uleb128 0x19
 2648 09c7 77060000 		.4byte	.LASF135
 2649 09cb 01       		.byte	0x1
 2650 09cc B104     		.2byte	0x4b1
 2651 09ce D2000000 		.4byte	0xd2
 2652 09d2 35020000 		.4byte	.LLST17
 2653 09d6 1E       		.uleb128 0x1e
 2654 09d7 06000000 		.4byte	.LVL56
 2655 09db 7A0F0000 		.4byte	0xf7a
 2656 09df 1B       		.uleb128 0x1b
 2657 09e0 01       		.uleb128 0x1
 2658 09e1 50       		.byte	0x50
 2659 09e2 03       		.uleb128 0x3
 2660 09e3 F3       		.byte	0xf3
 2661 09e4 01       		.uleb128 0x1
 2662 09e5 50       		.byte	0x50
 2663 09e6 00       		.byte	0
 2664 09e7 00       		.byte	0
 2665 09e8 1C       		.uleb128 0x1c
 2666 09e9 1F050000 		.4byte	.LASF136
 2667 09ed 01       		.byte	0x1
 2668 09ee C804     		.2byte	0x4c8
 2669 09f0 00000000 		.4byte	.LFB13
 2670 09f4 30000000 		.4byte	.LFE13-.LFB13
 2671 09f8 01       		.uleb128 0x1
 2672 09f9 9C       		.byte	0x9c
 2673 09fa 0F0A0000 		.4byte	0xa0f
 2674 09fe 19       		.uleb128 0x19
 2675 09ff 0E060000 		.4byte	.LASF137
 2676 0a03 01       		.byte	0x1
 2677 0a04 C804     		.2byte	0x4c8
 2678 0a06 83000000 		.4byte	0x83
 2679 0a0a 56020000 		.4byte	.LLST18
 2680 0a0e 00       		.byte	0
 2681 0a0f 1C       		.uleb128 0x1c
 2682 0a10 57060000 		.4byte	.LASF138
 2683 0a14 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 100


 2684 0a15 0C05     		.2byte	0x50c
 2685 0a17 00000000 		.4byte	.LFB14
 2686 0a1b 30000000 		.4byte	.LFE14-.LFB14
 2687 0a1f 01       		.uleb128 0x1
 2688 0a20 9C       		.byte	0x9c
 2689 0a21 360A0000 		.4byte	0xa36
 2690 0a25 19       		.uleb128 0x19
 2691 0a26 240B0000 		.4byte	.LASF54
 2692 0a2a 01       		.byte	0x1
 2693 0a2b 0C05     		.2byte	0x50c
 2694 0a2d 83000000 		.4byte	0x83
 2695 0a31 84020000 		.4byte	.LLST19
 2696 0a35 00       		.byte	0
 2697 0a36 1C       		.uleb128 0x1c
 2698 0a37 DC080000 		.4byte	.LASF139
 2699 0a3b 01       		.byte	0x1
 2700 0a3c 6005     		.2byte	0x560
 2701 0a3e 00000000 		.4byte	.LFB15
 2702 0a42 12000000 		.4byte	.LFE15-.LFB15
 2703 0a46 01       		.uleb128 0x1
 2704 0a47 9C       		.byte	0x9c
 2705 0a48 920A0000 		.4byte	0xa92
 2706 0a4c 19       		.uleb128 0x19
 2707 0a4d 240B0000 		.4byte	.LASF54
 2708 0a51 01       		.byte	0x1
 2709 0a52 6005     		.2byte	0x560
 2710 0a54 83000000 		.4byte	0x83
 2711 0a58 B2020000 		.4byte	.LLST20
 2712 0a5c 19       		.uleb128 0x19
 2713 0a5d 0E060000 		.4byte	.LASF137
 2714 0a61 01       		.byte	0x1
 2715 0a62 6005     		.2byte	0x560
 2716 0a64 83000000 		.4byte	0x83
 2717 0a68 DE020000 		.4byte	.LLST21
 2718 0a6c 1A       		.uleb128 0x1a
 2719 0a6d 0A000000 		.4byte	.LVL65
 2720 0a71 E8090000 		.4byte	0x9e8
 2721 0a75 810A0000 		.4byte	0xa81
 2722 0a79 1B       		.uleb128 0x1b
 2723 0a7a 01       		.uleb128 0x1
 2724 0a7b 50       		.byte	0x50
 2725 0a7c 03       		.uleb128 0x3
 2726 0a7d F3       		.byte	0xf3
 2727 0a7e 01       		.uleb128 0x1
 2728 0a7f 51       		.byte	0x51
 2729 0a80 00       		.byte	0
 2730 0a81 1E       		.uleb128 0x1e
 2731 0a82 10000000 		.4byte	.LVL66
 2732 0a86 0F0A0000 		.4byte	0xa0f
 2733 0a8a 1B       		.uleb128 0x1b
 2734 0a8b 01       		.uleb128 0x1
 2735 0a8c 50       		.byte	0x50
 2736 0a8d 02       		.uleb128 0x2
 2737 0a8e 74       		.byte	0x74
 2738 0a8f 00       		.sleb128 0
 2739 0a90 00       		.byte	0
 2740 0a91 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 101


 2741 0a92 18       		.uleb128 0x18
 2742 0a93 A2010000 		.4byte	.LASF140
 2743 0a97 01       		.byte	0x1
 2744 0a98 9405     		.2byte	0x594
 2745 0a9a A4000000 		.4byte	0xa4
 2746 0a9e 00000000 		.4byte	.LFB16
 2747 0aa2 1A000000 		.4byte	.LFE16-.LFB16
 2748 0aa6 01       		.uleb128 0x1
 2749 0aa7 9C       		.byte	0x9c
 2750 0aa8 E40A0000 		.4byte	0xae4
 2751 0aac 19       		.uleb128 0x19
 2752 0aad A60C0000 		.4byte	.LASF121
 2753 0ab1 01       		.byte	0x1
 2754 0ab2 9405     		.2byte	0x594
 2755 0ab4 83000000 		.4byte	0x83
 2756 0ab8 FF020000 		.4byte	.LLST22
 2757 0abc 15       		.uleb128 0x15
 2758 0abd 7F060000 		.4byte	.LASF141
 2759 0ac1 01       		.byte	0x1
 2760 0ac2 9605     		.2byte	0x596
 2761 0ac4 A4000000 		.4byte	0xa4
 2762 0ac8 41030000 		.4byte	.LLST23
 2763 0acc 1E       		.uleb128 0x1e
 2764 0acd 18000000 		.4byte	.LVL74
 2765 0ad1 850F0000 		.4byte	0xf85
 2766 0ad5 1B       		.uleb128 0x1b
 2767 0ad6 01       		.uleb128 0x1
 2768 0ad7 50       		.byte	0x50
 2769 0ad8 03       		.uleb128 0x3
 2770 0ad9 F3       		.byte	0xf3
 2771 0ada 01       		.uleb128 0x1
 2772 0adb 50       		.byte	0x50
 2773 0adc 1B       		.uleb128 0x1b
 2774 0add 01       		.uleb128 0x1
 2775 0ade 51       		.byte	0x51
 2776 0adf 02       		.uleb128 0x2
 2777 0ae0 08       		.byte	0x8
 2778 0ae1 55       		.byte	0x55
 2779 0ae2 00       		.byte	0
 2780 0ae3 00       		.byte	0
 2781 0ae4 18       		.uleb128 0x18
 2782 0ae5 6F0A0000 		.4byte	.LASF142
 2783 0ae9 01       		.byte	0x1
 2784 0aea 0506     		.2byte	0x605
 2785 0aec A4000000 		.4byte	0xa4
 2786 0af0 00000000 		.4byte	.LFB17
 2787 0af4 1A000000 		.4byte	.LFE17-.LFB17
 2788 0af8 01       		.uleb128 0x1
 2789 0af9 9C       		.byte	0x9c
 2790 0afa 2F0B0000 		.4byte	0xb2f
 2791 0afe 15       		.uleb128 0x15
 2792 0aff 7F060000 		.4byte	.LASF141
 2793 0b03 01       		.byte	0x1
 2794 0b04 0706     		.2byte	0x607
 2795 0b06 A4000000 		.4byte	0xa4
 2796 0b0a 6B030000 		.4byte	.LLST24
 2797 0b0e 15       		.uleb128 0x15
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 102


 2798 0b0f EB070000 		.4byte	.LASF120
 2799 0b13 01       		.byte	0x1
 2800 0b14 0806     		.2byte	0x608
 2801 0b16 83000000 		.4byte	0x83
 2802 0b1a 95030000 		.4byte	.LLST25
 2803 0b1e 1E       		.uleb128 0x1e
 2804 0b1f 0E000000 		.4byte	.LVL77
 2805 0b23 920A0000 		.4byte	0xa92
 2806 0b27 1B       		.uleb128 0x1b
 2807 0b28 01       		.uleb128 0x1
 2808 0b29 50       		.byte	0x50
 2809 0b2a 02       		.uleb128 0x2
 2810 0b2b 74       		.byte	0x74
 2811 0b2c 00       		.sleb128 0
 2812 0b2d 00       		.byte	0
 2813 0b2e 00       		.byte	0
 2814 0b2f 1C       		.uleb128 0x1c
 2815 0b30 C20B0000 		.4byte	.LASF143
 2816 0b34 01       		.byte	0x1
 2817 0b35 080A     		.2byte	0xa08
 2818 0b37 00000000 		.4byte	.LFB23
 2819 0b3b 38000000 		.4byte	.LFE23-.LFB23
 2820 0b3f 01       		.uleb128 0x1
 2821 0b40 9C       		.byte	0x9c
 2822 0b41 900B0000 		.4byte	0xb90
 2823 0b45 15       		.uleb128 0x15
 2824 0b46 EB070000 		.4byte	.LASF120
 2825 0b4a 01       		.byte	0x1
 2826 0b4b 0A0A     		.2byte	0xa0a
 2827 0b4d 83000000 		.4byte	0x83
 2828 0b51 B4030000 		.4byte	.LLST26
 2829 0b55 15       		.uleb128 0x15
 2830 0b56 F5070000 		.4byte	.LASF144
 2831 0b5a 01       		.byte	0x1
 2832 0b5b 0B0A     		.2byte	0xa0b
 2833 0b5d 83000000 		.4byte	0x83
 2834 0b61 D3030000 		.4byte	.LLST27
 2835 0b65 15       		.uleb128 0x15
 2836 0b66 180B0000 		.4byte	.LASF145
 2837 0b6a 01       		.byte	0x1
 2838 0b6b 170A     		.2byte	0xa17
 2839 0b6d 13090000 		.4byte	0x913
 2840 0b71 F2030000 		.4byte	.LLST28
 2841 0b75 1E       		.uleb128 0x1e
 2842 0b76 1C000000 		.4byte	.LVL86
 2843 0b7a 910F0000 		.4byte	0xf91
 2844 0b7e 1B       		.uleb128 0x1b
 2845 0b7f 01       		.uleb128 0x1
 2846 0b80 50       		.byte	0x50
 2847 0b81 0C       		.uleb128 0xc
 2848 0b82 74       		.byte	0x74
 2849 0b83 00       		.sleb128 0
 2850 0b84 33       		.byte	0x33
 2851 0b85 24       		.byte	0x24
 2852 0b86 74       		.byte	0x74
 2853 0b87 00       		.sleb128 0
 2854 0b88 1C       		.byte	0x1c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 103


 2855 0b89 32       		.byte	0x32
 2856 0b8a 24       		.byte	0x24
 2857 0b8b 76       		.byte	0x76
 2858 0b8c 00       		.sleb128 0
 2859 0b8d 22       		.byte	0x22
 2860 0b8e 00       		.byte	0
 2861 0b8f 00       		.byte	0
 2862 0b90 18       		.uleb128 0x18
 2863 0b91 73050000 		.4byte	.LASF146
 2864 0b95 01       		.byte	0x1
 2865 0b96 5A0A     		.2byte	0xa5a
 2866 0b98 83000000 		.4byte	0x83
 2867 0b9c 00000000 		.4byte	.LFB24
 2868 0ba0 10000000 		.4byte	.LFE24-.LFB24
 2869 0ba4 01       		.uleb128 0x1
 2870 0ba5 9C       		.byte	0x9c
 2871 0ba6 D70B0000 		.4byte	0xbd7
 2872 0baa 19       		.uleb128 0x19
 2873 0bab A60C0000 		.4byte	.LASF121
 2874 0baf 01       		.byte	0x1
 2875 0bb0 5A0A     		.2byte	0xa5a
 2876 0bb2 83000000 		.4byte	0x83
 2877 0bb6 05040000 		.4byte	.LLST29
 2878 0bba 21       		.uleb128 0x21
 2879 0bbb 230A0000 		.4byte	.LASF147
 2880 0bbf 01       		.byte	0x1
 2881 0bc0 5C0A     		.2byte	0xa5c
 2882 0bc2 83000000 		.4byte	0x83
 2883 0bc6 01       		.uleb128 0x1
 2884 0bc7 50       		.byte	0x50
 2885 0bc8 21       		.uleb128 0x21
 2886 0bc9 81020000 		.4byte	.LASF148
 2887 0bcd 01       		.byte	0x1
 2888 0bce 600A     		.2byte	0xa60
 2889 0bd0 D70B0000 		.4byte	0xbd7
 2890 0bd4 01       		.uleb128 0x1
 2891 0bd5 53       		.byte	0x53
 2892 0bd6 00       		.byte	0
 2893 0bd7 06       		.uleb128 0x6
 2894 0bd8 04       		.byte	0x4
 2895 0bd9 DC020000 		.4byte	0x2dc
 2896 0bdd 18       		.uleb128 0x18
 2897 0bde 98020000 		.4byte	.LASF149
 2898 0be2 01       		.byte	0x1
 2899 0be3 B10A     		.2byte	0xab1
 2900 0be5 6B000000 		.4byte	0x6b
 2901 0be9 00000000 		.4byte	.LFB25
 2902 0bed 30000000 		.4byte	.LFE25-.LFB25
 2903 0bf1 01       		.uleb128 0x1
 2904 0bf2 9C       		.byte	0x9c
 2905 0bf3 360C0000 		.4byte	0xc36
 2906 0bf7 19       		.uleb128 0x19
 2907 0bf8 540C0000 		.4byte	.LASF150
 2908 0bfc 01       		.byte	0x1
 2909 0bfd B10A     		.2byte	0xab1
 2910 0bff 83000000 		.4byte	0x83
 2911 0c03 26040000 		.4byte	.LLST30
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 104


 2912 0c07 22       		.uleb128 0x22
 2913 0c08 E6050000 		.4byte	.LASF46
 2914 0c0c 01       		.byte	0x1
 2915 0c0d B10A     		.2byte	0xab1
 2916 0c0f 83000000 		.4byte	0x83
 2917 0c13 01       		.uleb128 0x1
 2918 0c14 51       		.byte	0x51
 2919 0c15 15       		.uleb128 0x15
 2920 0c16 E3090000 		.4byte	.LASF151
 2921 0c1a 01       		.byte	0x1
 2922 0c1b B30A     		.2byte	0xab3
 2923 0c1d 83000000 		.4byte	0x83
 2924 0c21 60040000 		.4byte	.LLST31
 2925 0c25 15       		.uleb128 0x15
 2926 0c26 620C0000 		.4byte	.LASF152
 2927 0c2a 01       		.byte	0x1
 2928 0c2b B40A     		.2byte	0xab4
 2929 0c2d 83000000 		.4byte	0x83
 2930 0c31 73040000 		.4byte	.LLST32
 2931 0c35 00       		.byte	0
 2932 0c36 14       		.uleb128 0x14
 2933 0c37 E6000000 		.4byte	.LASF153
 2934 0c3b 01       		.byte	0x1
 2935 0c3c C008     		.2byte	0x8c0
 2936 0c3e 00000000 		.4byte	.LFB22
 2937 0c42 14000000 		.4byte	.LFE22-.LFB22
 2938 0c46 01       		.uleb128 0x1
 2939 0c47 9C       		.byte	0x9c
 2940 0c48 B60C0000 		.4byte	0xcb6
 2941 0c4c 19       		.uleb128 0x19
 2942 0c4d EB070000 		.4byte	.LASF120
 2943 0c51 01       		.byte	0x1
 2944 0c52 C008     		.2byte	0x8c0
 2945 0c54 83000000 		.4byte	0x83
 2946 0c58 92040000 		.4byte	.LLST33
 2947 0c5c 19       		.uleb128 0x19
 2948 0c5d 81020000 		.4byte	.LASF148
 2949 0c61 01       		.byte	0x1
 2950 0c62 C008     		.2byte	0x8c0
 2951 0c64 D70B0000 		.4byte	0xbd7
 2952 0c68 B3040000 		.4byte	.LLST34
 2953 0c6c 21       		.uleb128 0x21
 2954 0c6d 5E030000 		.4byte	.LASF154
 2955 0c71 01       		.byte	0x1
 2956 0c72 C208     		.2byte	0x8c2
 2957 0c74 6B000000 		.4byte	0x6b
 2958 0c78 01       		.uleb128 0x1
 2959 0c79 50       		.byte	0x50
 2960 0c7a 1D       		.uleb128 0x1d
 2961 0c7b EE010000 		.4byte	.LASF155
 2962 0c7f 01       		.byte	0x1
 2963 0c80 C308     		.2byte	0x8c3
 2964 0c82 6B000000 		.4byte	0x6b
 2965 0c86 00       		.byte	0
 2966 0c87 15       		.uleb128 0x15
 2967 0c88 540C0000 		.4byte	.LASF150
 2968 0c8c 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 105


 2969 0c8d C908     		.2byte	0x8c9
 2970 0c8f 83000000 		.4byte	0x83
 2971 0c93 DF040000 		.4byte	.LLST35
 2972 0c97 1A       		.uleb128 0x1a
 2973 0c98 08000000 		.4byte	.LVL104
 2974 0c9c 900B0000 		.4byte	0xb90
 2975 0ca0 AC0C0000 		.4byte	0xcac
 2976 0ca4 1B       		.uleb128 0x1b
 2977 0ca5 01       		.uleb128 0x1
 2978 0ca6 50       		.byte	0x50
 2979 0ca7 03       		.uleb128 0x3
 2980 0ca8 F3       		.byte	0xf3
 2981 0ca9 01       		.uleb128 0x1
 2982 0caa 50       		.byte	0x50
 2983 0cab 00       		.byte	0
 2984 0cac 16       		.uleb128 0x16
 2985 0cad 10000000 		.4byte	.LVL106
 2986 0cb1 DD0B0000 		.4byte	0xbdd
 2987 0cb5 00       		.byte	0
 2988 0cb6 23       		.uleb128 0x23
 2989 0cb7 EA020000 		.4byte	.LASF156
 2990 0cbb 01       		.byte	0x1
 2991 0cbc 2906     		.2byte	0x629
 2992 0cbe A4000000 		.4byte	0xa4
 2993 0cc2 00000000 		.4byte	.LFB18
 2994 0cc6 40010000 		.4byte	.LFE18-.LFB18
 2995 0cca 01       		.uleb128 0x1
 2996 0ccb 9C       		.byte	0x9c
 2997 0ccc B40D0000 		.4byte	0xdb4
 2998 0cd0 15       		.uleb128 0x15
 2999 0cd1 89020000 		.4byte	.LASF157
 3000 0cd5 01       		.byte	0x1
 3001 0cd6 2B06     		.2byte	0x62b
 3002 0cd8 A4000000 		.4byte	0xa4
 3003 0cdc F2040000 		.4byte	.LLST36
 3004 0ce0 15       		.uleb128 0x15
 3005 0ce1 EB070000 		.4byte	.LASF120
 3006 0ce5 01       		.byte	0x1
 3007 0ce6 2C06     		.2byte	0x62c
 3008 0ce8 83000000 		.4byte	0x83
 3009 0cec 27050000 		.4byte	.LLST37
 3010 0cf0 24       		.uleb128 0x24
 3011 0cf1 637000   		.ascii	"cp\000"
 3012 0cf4 01       		.byte	0x1
 3013 0cf5 2E06     		.2byte	0x62e
 3014 0cf7 83000000 		.4byte	0x83
 3015 0cfb 5C050000 		.4byte	.LLST38
 3016 0cff 21       		.uleb128 0x21
 3017 0d00 70020000 		.4byte	.LASF158
 3018 0d04 01       		.byte	0x1
 3019 0d05 3306     		.2byte	0x633
 3020 0d07 53050000 		.4byte	0x553
 3021 0d0b 02       		.uleb128 0x2
 3022 0d0c 91       		.byte	0x91
 3023 0d0d 6C       		.sleb128 -20
 3024 0d0e 15       		.uleb128 0x15
 3025 0d0f 81020000 		.4byte	.LASF148
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 106


 3026 0d13 01       		.byte	0x1
 3027 0d14 3406     		.2byte	0x634
 3028 0d16 D70B0000 		.4byte	0xbd7
 3029 0d1a 7B050000 		.4byte	.LLST39
 3030 0d1e 21       		.uleb128 0x21
 3031 0d1f 450C0000 		.4byte	.LASF159
 3032 0d23 01       		.byte	0x1
 3033 0d24 3506     		.2byte	0x635
 3034 0d26 83010000 		.4byte	0x183
 3035 0d2a 02       		.uleb128 0x2
 3036 0d2b 91       		.byte	0x91
 3037 0d2c 50       		.sleb128 -48
 3038 0d2d 1A       		.uleb128 0x1a
 3039 0d2e 40000000 		.4byte	.LVL113
 3040 0d32 850F0000 		.4byte	0xf85
 3041 0d36 470D0000 		.4byte	0xd47
 3042 0d3a 1B       		.uleb128 0x1b
 3043 0d3b 01       		.uleb128 0x1
 3044 0d3c 50       		.byte	0x50
 3045 0d3d 02       		.uleb128 0x2
 3046 0d3e 75       		.byte	0x75
 3047 0d3f 00       		.sleb128 0
 3048 0d40 1B       		.uleb128 0x1b
 3049 0d41 01       		.uleb128 0x1
 3050 0d42 51       		.byte	0x51
 3051 0d43 02       		.uleb128 0x2
 3052 0d44 08       		.byte	0x8
 3053 0d45 55       		.byte	0x55
 3054 0d46 00       		.byte	0
 3055 0d47 1A       		.uleb128 0x1a
 3056 0d48 68000000 		.4byte	.LVL115
 3057 0d4c 9D0F0000 		.4byte	0xf9d
 3058 0d50 5B0D0000 		.4byte	0xd5b
 3059 0d54 1B       		.uleb128 0x1b
 3060 0d55 01       		.uleb128 0x1
 3061 0d56 50       		.byte	0x50
 3062 0d57 02       		.uleb128 0x2
 3063 0d58 91       		.byte	0x91
 3064 0d59 50       		.sleb128 -48
 3065 0d5a 00       		.byte	0
 3066 0d5b 1A       		.uleb128 0x1a
 3067 0d5c BC000000 		.4byte	.LVL122
 3068 0d60 850F0000 		.4byte	0xf85
 3069 0d64 750D0000 		.4byte	0xd75
 3070 0d68 1B       		.uleb128 0x1b
 3071 0d69 01       		.uleb128 0x1
 3072 0d6a 50       		.byte	0x50
 3073 0d6b 02       		.uleb128 0x2
 3074 0d6c 74       		.byte	0x74
 3075 0d6d 00       		.sleb128 0
 3076 0d6e 1B       		.uleb128 0x1b
 3077 0d6f 01       		.uleb128 0x1
 3078 0d70 51       		.byte	0x51
 3079 0d71 02       		.uleb128 0x2
 3080 0d72 08       		.byte	0x8
 3081 0d73 55       		.byte	0x55
 3082 0d74 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 107


 3083 0d75 1A       		.uleb128 0x1a
 3084 0d76 EC000000 		.4byte	.LVL124
 3085 0d7a A80F0000 		.4byte	0xfa8
 3086 0d7e 890D0000 		.4byte	0xd89
 3087 0d82 1B       		.uleb128 0x1b
 3088 0d83 01       		.uleb128 0x1
 3089 0d84 50       		.byte	0x50
 3090 0d85 02       		.uleb128 0x2
 3091 0d86 91       		.byte	0x91
 3092 0d87 50       		.sleb128 -48
 3093 0d88 00       		.byte	0
 3094 0d89 1A       		.uleb128 0x1a
 3095 0d8a 06010000 		.4byte	.LVL129
 3096 0d8e 360C0000 		.4byte	0xc36
 3097 0d92 9D0D0000 		.4byte	0xd9d
 3098 0d96 1B       		.uleb128 0x1b
 3099 0d97 01       		.uleb128 0x1
 3100 0d98 50       		.byte	0x50
 3101 0d99 02       		.uleb128 0x2
 3102 0d9a 74       		.byte	0x74
 3103 0d9b 00       		.sleb128 0
 3104 0d9c 00       		.byte	0
 3105 0d9d 1E       		.uleb128 0x1e
 3106 0d9e 0E010000 		.4byte	.LVL130
 3107 0da2 850F0000 		.4byte	0xf85
 3108 0da6 1B       		.uleb128 0x1b
 3109 0da7 01       		.uleb128 0x1
 3110 0da8 50       		.byte	0x50
 3111 0da9 02       		.uleb128 0x2
 3112 0daa 74       		.byte	0x74
 3113 0dab 00       		.sleb128 0
 3114 0dac 1B       		.uleb128 0x1b
 3115 0dad 01       		.uleb128 0x1
 3116 0dae 51       		.byte	0x51
 3117 0daf 02       		.uleb128 0x2
 3118 0db0 08       		.byte	0x8
 3119 0db1 55       		.byte	0x55
 3120 0db2 00       		.byte	0
 3121 0db3 00       		.byte	0
 3122 0db4 1C       		.uleb128 0x1c
 3123 0db5 F8010000 		.4byte	.LASF160
 3124 0db9 01       		.byte	0x1
 3125 0dba 8B08     		.2byte	0x88b
 3126 0dbc 00000000 		.4byte	.LFB21
 3127 0dc0 20000000 		.4byte	.LFE21-.LFB21
 3128 0dc4 01       		.uleb128 0x1
 3129 0dc5 9C       		.byte	0x9c
 3130 0dc6 FB0D0000 		.4byte	0xdfb
 3131 0dca 15       		.uleb128 0x15
 3132 0dcb EB070000 		.4byte	.LASF120
 3133 0dcf 01       		.byte	0x1
 3134 0dd0 8D08     		.2byte	0x88d
 3135 0dd2 83000000 		.4byte	0x83
 3136 0dd6 A4050000 		.4byte	.LLST40
 3137 0dda 15       		.uleb128 0x15
 3138 0ddb 81020000 		.4byte	.LASF148
 3139 0ddf 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 108


 3140 0de0 8E08     		.2byte	0x88e
 3141 0de2 D70B0000 		.4byte	0xbd7
 3142 0de6 C3050000 		.4byte	.LLST41
 3143 0dea 1E       		.uleb128 0x1e
 3144 0deb 14000000 		.4byte	.LVL138
 3145 0def 360C0000 		.4byte	0xc36
 3146 0df3 1B       		.uleb128 0x1b
 3147 0df4 01       		.uleb128 0x1
 3148 0df5 50       		.byte	0x50
 3149 0df6 02       		.uleb128 0x2
 3150 0df7 74       		.byte	0x74
 3151 0df8 00       		.sleb128 0
 3152 0df9 00       		.byte	0
 3153 0dfa 00       		.byte	0
 3154 0dfb 18       		.uleb128 0x18
 3155 0dfc BA000000 		.4byte	.LASF161
 3156 0e00 01       		.byte	0x1
 3157 0e01 0402     		.2byte	0x204
 3158 0e03 A4000000 		.4byte	0xa4
 3159 0e07 00000000 		.4byte	.LFB6
 3160 0e0b 1C000000 		.4byte	.LFE6-.LFB6
 3161 0e0f 01       		.uleb128 0x1
 3162 0e10 9C       		.byte	0x9c
 3163 0e11 560E0000 		.4byte	0xe56
 3164 0e15 1D       		.uleb128 0x1d
 3165 0e16 24010000 		.4byte	.LASF162
 3166 0e1a 01       		.byte	0x1
 3167 0e1b 0602     		.2byte	0x206
 3168 0e1d A4000000 		.4byte	0xa4
 3169 0e21 00       		.byte	0
 3170 0e22 16       		.uleb128 0x16
 3171 0e23 06000000 		.4byte	.LVL142
 3172 0e27 14070000 		.4byte	0x714
 3173 0e2b 16       		.uleb128 0x16
 3174 0e2c 0A000000 		.4byte	.LVL143
 3175 0e30 B40D0000 		.4byte	0xdb4
 3176 0e34 16       		.uleb128 0x16
 3177 0e35 0E000000 		.4byte	.LVL144
 3178 0e39 57090000 		.4byte	0x957
 3179 0e3d 16       		.uleb128 0x16
 3180 0e3e 12000000 		.4byte	.LVL145
 3181 0e42 6E0F0000 		.4byte	0xf6e
 3182 0e46 1E       		.uleb128 0x1e
 3183 0e47 18000000 		.4byte	.LVL146
 3184 0e4b 1E090000 		.4byte	0x91e
 3185 0e4f 1B       		.uleb128 0x1b
 3186 0e50 01       		.uleb128 0x1
 3187 0e51 50       		.byte	0x50
 3188 0e52 01       		.uleb128 0x1
 3189 0e53 31       		.byte	0x31
 3190 0e54 00       		.byte	0
 3191 0e55 00       		.byte	0
 3192 0e56 25       		.uleb128 0x25
 3193 0e57 FE070000 		.4byte	.LASF163
 3194 0e5b 05       		.byte	0x5
 3195 0e5c 1C04     		.2byte	0x41c
 3196 0e5e 63050000 		.4byte	0x563
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 109


 3197 0e62 25       		.uleb128 0x25
 3198 0e63 FA080000 		.4byte	.LASF164
 3199 0e67 05       		.byte	0x5
 3200 0e68 1D04     		.2byte	0x41d
 3201 0e6a 6E0E0000 		.4byte	0xe6e
 3202 0e6e 1F       		.uleb128 0x1f
 3203 0e6f DA060000 		.4byte	0x6da
 3204 0e73 0D       		.uleb128 0xd
 3205 0e74 19090000 		.4byte	0x919
 3206 0e78 830E0000 		.4byte	0xe83
 3207 0e7c 0E       		.uleb128 0xe
 3208 0e7d D5020000 		.4byte	0x2d5
 3209 0e81 00       		.byte	0
 3210 0e82 00       		.byte	0
 3211 0e83 25       		.uleb128 0x25
 3212 0e84 38010000 		.4byte	.LASF165
 3213 0e88 05       		.byte	0x5
 3214 0e89 1E04     		.2byte	0x41e
 3215 0e8b 8F0E0000 		.4byte	0xe8f
 3216 0e8f 1F       		.uleb128 0x1f
 3217 0e90 730E0000 		.4byte	0xe73
 3218 0e94 26       		.uleb128 0x26
 3219 0e95 CF0C0000 		.4byte	.LASF166
 3220 0e99 01       		.byte	0x1
 3221 0e9a BB       		.byte	0xbb
 3222 0e9b BC000000 		.4byte	0xbc
 3223 0e9f 05       		.uleb128 0x5
 3224 0ea0 03       		.byte	0x3
 3225 0ea1 00000000 		.4byte	CapSense_1_widgetIndex
 3226 0ea5 26       		.uleb128 0x26
 3227 0ea6 B2090000 		.4byte	.LASF167
 3228 0eaa 01       		.byte	0x1
 3229 0eab BC       		.byte	0xbc
 3230 0eac BC000000 		.4byte	0xbc
 3231 0eb0 05       		.uleb128 0x5
 3232 0eb1 03       		.byte	0x3
 3233 0eb2 00000000 		.4byte	CapSense_1_sensorIndex
 3234 0eb6 26       		.uleb128 0x26
 3235 0eb7 B4020000 		.4byte	.LASF168
 3236 0ebb 01       		.byte	0x1
 3237 0ebc BD       		.byte	0xbd
 3238 0ebd 6B000000 		.4byte	0x6b
 3239 0ec1 05       		.uleb128 0x5
 3240 0ec2 03       		.byte	0x3
 3241 0ec3 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3242 0ec7 26       		.uleb128 0x26
 3243 0ec8 50000000 		.4byte	.LASF169
 3244 0ecc 01       		.byte	0x1
 3245 0ecd C0       		.byte	0xc0
 3246 0ece 95060000 		.4byte	0x695
 3247 0ed2 05       		.uleb128 0x5
 3248 0ed3 03       		.byte	0x3
 3249 0ed4 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3250 0ed8 26       		.uleb128 0x26
 3251 0ed9 FA0A0000 		.4byte	.LASF170
 3252 0edd 01       		.byte	0x1
 3253 0ede AE       		.byte	0xae
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 110


 3254 0edf 21020000 		.4byte	0x221
 3255 0ee3 05       		.uleb128 0x5
 3256 0ee4 03       		.byte	0x3
 3257 0ee5 00000000 		.4byte	CapSense_1_currentSenseMethod
 3258 0ee9 26       		.uleb128 0x26
 3259 0eea 1E020000 		.4byte	.LASF171
 3260 0eee 01       		.byte	0x1
 3261 0eef B7       		.byte	0xb7
 3262 0ef0 FA0E0000 		.4byte	0xefa
 3263 0ef4 05       		.uleb128 0x5
 3264 0ef5 03       		.byte	0x3
 3265 0ef6 00000000 		.4byte	CapSense_1_scanFreqIndex
 3266 0efa 1F       		.uleb128 0x1f
 3267 0efb 6B000000 		.4byte	0x6b
 3268 0eff 26       		.uleb128 0x26
 3269 0f00 0D010000 		.4byte	.LASF172
 3270 0f04 01       		.byte	0x1
 3271 0f05 CF       		.byte	0xcf
 3272 0f06 13090000 		.4byte	0x913
 3273 0f0a 05       		.uleb128 0x5
 3274 0f0b 03       		.byte	0x3
 3275 0f0c 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3276 0f10 25       		.uleb128 0x25
 3277 0f11 A1030000 		.4byte	.LASF173
 3278 0f15 06       		.byte	0x6
 3279 0f16 A501     		.2byte	0x1a5
 3280 0f18 6B000000 		.4byte	0x6b
 3281 0f1c 25       		.uleb128 0x25
 3282 0f1d 65090000 		.4byte	.LASF174
 3283 0f21 06       		.byte	0x6
 3284 0f22 A601     		.2byte	0x1a6
 3285 0f24 77000000 		.4byte	0x77
 3286 0f28 27       		.uleb128 0x27
 3287 0f29 470A0000 		.4byte	.LASF175
 3288 0f2d 470A0000 		.4byte	.LASF175
 3289 0f31 06       		.byte	0x6
 3290 0f32 D401     		.2byte	0x1d4
 3291 0f34 27       		.uleb128 0x27
 3292 0f35 98090000 		.4byte	.LASF176
 3293 0f39 98090000 		.4byte	.LASF176
 3294 0f3d 06       		.byte	0x6
 3295 0f3e B701     		.2byte	0x1b7
 3296 0f40 27       		.uleb128 0x27
 3297 0f41 78000000 		.4byte	.LASF177
 3298 0f45 78000000 		.4byte	.LASF177
 3299 0f49 06       		.byte	0x6
 3300 0f4a B901     		.2byte	0x1b9
 3301 0f4c 28       		.uleb128 0x28
 3302 0f4d 2B0B0000 		.4byte	.LASF178
 3303 0f51 2B0B0000 		.4byte	.LASF178
 3304 0f55 07       		.byte	0x7
 3305 0f56 E5       		.byte	0xe5
 3306 0f57 28       		.uleb128 0x28
 3307 0f58 A4050000 		.4byte	.LASF179
 3308 0f5c A4050000 		.4byte	.LASF179
 3309 0f60 07       		.byte	0x7
 3310 0f61 E6       		.byte	0xe6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 111


 3311 0f62 27       		.uleb128 0x27
 3312 0f63 80010000 		.4byte	.LASF180
 3313 0f67 80010000 		.4byte	.LASF180
 3314 0f6b 06       		.byte	0x6
 3315 0f6c C001     		.2byte	0x1c0
 3316 0f6e 27       		.uleb128 0x27
 3317 0f6f 37020000 		.4byte	.LASF181
 3318 0f73 37020000 		.4byte	.LASF181
 3319 0f77 06       		.byte	0x6
 3320 0f78 D001     		.2byte	0x1d0
 3321 0f7a 28       		.uleb128 0x28
 3322 0f7b 5F040000 		.4byte	.LASF182
 3323 0f7f 5F040000 		.4byte	.LASF182
 3324 0f83 08       		.byte	0x8
 3325 0f84 18       		.byte	0x18
 3326 0f85 27       		.uleb128 0x27
 3327 0f86 3F090000 		.4byte	.LASF183
 3328 0f8a 3F090000 		.4byte	.LASF183
 3329 0f8e 06       		.byte	0x6
 3330 0f8f BD01     		.2byte	0x1bd
 3331 0f91 27       		.uleb128 0x27
 3332 0f92 A2080000 		.4byte	.LASF184
 3333 0f96 A2080000 		.4byte	.LASF184
 3334 0f9a 06       		.byte	0x6
 3335 0f9b C101     		.2byte	0x1c1
 3336 0f9d 28       		.uleb128 0x28
 3337 0f9e C9090000 		.4byte	.LASF185
 3338 0fa2 C9090000 		.4byte	.LASF185
 3339 0fa6 04       		.byte	0x4
 3340 0fa7 B0       		.byte	0xb0
 3341 0fa8 28       		.uleb128 0x28
 3342 0fa9 BD010000 		.4byte	.LASF186
 3343 0fad BD010000 		.4byte	.LASF186
 3344 0fb1 04       		.byte	0x4
 3345 0fb2 B1       		.byte	0xb1
 3346 0fb3 00       		.byte	0
 3347              		.section	.debug_abbrev,"",%progbits
 3348              	.Ldebug_abbrev0:
 3349 0000 01       		.uleb128 0x1
 3350 0001 11       		.uleb128 0x11
 3351 0002 01       		.byte	0x1
 3352 0003 25       		.uleb128 0x25
 3353 0004 0E       		.uleb128 0xe
 3354 0005 13       		.uleb128 0x13
 3355 0006 0B       		.uleb128 0xb
 3356 0007 03       		.uleb128 0x3
 3357 0008 0E       		.uleb128 0xe
 3358 0009 1B       		.uleb128 0x1b
 3359 000a 0E       		.uleb128 0xe
 3360 000b 55       		.uleb128 0x55
 3361 000c 17       		.uleb128 0x17
 3362 000d 11       		.uleb128 0x11
 3363 000e 01       		.uleb128 0x1
 3364 000f 10       		.uleb128 0x10
 3365 0010 17       		.uleb128 0x17
 3366 0011 00       		.byte	0
 3367 0012 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 112


 3368 0013 02       		.uleb128 0x2
 3369 0014 24       		.uleb128 0x24
 3370 0015 00       		.byte	0
 3371 0016 0B       		.uleb128 0xb
 3372 0017 0B       		.uleb128 0xb
 3373 0018 3E       		.uleb128 0x3e
 3374 0019 0B       		.uleb128 0xb
 3375 001a 03       		.uleb128 0x3
 3376 001b 0E       		.uleb128 0xe
 3377 001c 00       		.byte	0
 3378 001d 00       		.byte	0
 3379 001e 03       		.uleb128 0x3
 3380 001f 24       		.uleb128 0x24
 3381 0020 00       		.byte	0
 3382 0021 0B       		.uleb128 0xb
 3383 0022 0B       		.uleb128 0xb
 3384 0023 3E       		.uleb128 0x3e
 3385 0024 0B       		.uleb128 0xb
 3386 0025 03       		.uleb128 0x3
 3387 0026 08       		.uleb128 0x8
 3388 0027 00       		.byte	0
 3389 0028 00       		.byte	0
 3390 0029 04       		.uleb128 0x4
 3391 002a 16       		.uleb128 0x16
 3392 002b 00       		.byte	0
 3393 002c 03       		.uleb128 0x3
 3394 002d 0E       		.uleb128 0xe
 3395 002e 3A       		.uleb128 0x3a
 3396 002f 0B       		.uleb128 0xb
 3397 0030 3B       		.uleb128 0x3b
 3398 0031 05       		.uleb128 0x5
 3399 0032 49       		.uleb128 0x49
 3400 0033 13       		.uleb128 0x13
 3401 0034 00       		.byte	0
 3402 0035 00       		.byte	0
 3403 0036 05       		.uleb128 0x5
 3404 0037 35       		.uleb128 0x35
 3405 0038 00       		.byte	0
 3406 0039 49       		.uleb128 0x49
 3407 003a 13       		.uleb128 0x13
 3408 003b 00       		.byte	0
 3409 003c 00       		.byte	0
 3410 003d 06       		.uleb128 0x6
 3411 003e 0F       		.uleb128 0xf
 3412 003f 00       		.byte	0
 3413 0040 0B       		.uleb128 0xb
 3414 0041 0B       		.uleb128 0xb
 3415 0042 49       		.uleb128 0x49
 3416 0043 13       		.uleb128 0x13
 3417 0044 00       		.byte	0
 3418 0045 00       		.byte	0
 3419 0046 07       		.uleb128 0x7
 3420 0047 15       		.uleb128 0x15
 3421 0048 00       		.byte	0
 3422 0049 27       		.uleb128 0x27
 3423 004a 19       		.uleb128 0x19
 3424 004b 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 113


 3425 004c 00       		.byte	0
 3426 004d 08       		.uleb128 0x8
 3427 004e 16       		.uleb128 0x16
 3428 004f 00       		.byte	0
 3429 0050 03       		.uleb128 0x3
 3430 0051 0E       		.uleb128 0xe
 3431 0052 3A       		.uleb128 0x3a
 3432 0053 0B       		.uleb128 0xb
 3433 0054 3B       		.uleb128 0x3b
 3434 0055 0B       		.uleb128 0xb
 3435 0056 49       		.uleb128 0x49
 3436 0057 13       		.uleb128 0x13
 3437 0058 00       		.byte	0
 3438 0059 00       		.byte	0
 3439 005a 09       		.uleb128 0x9
 3440 005b 13       		.uleb128 0x13
 3441 005c 01       		.byte	0x1
 3442 005d 0B       		.uleb128 0xb
 3443 005e 0B       		.uleb128 0xb
 3444 005f 3A       		.uleb128 0x3a
 3445 0060 0B       		.uleb128 0xb
 3446 0061 3B       		.uleb128 0x3b
 3447 0062 0B       		.uleb128 0xb
 3448 0063 01       		.uleb128 0x1
 3449 0064 13       		.uleb128 0x13
 3450 0065 00       		.byte	0
 3451 0066 00       		.byte	0
 3452 0067 0A       		.uleb128 0xa
 3453 0068 0D       		.uleb128 0xd
 3454 0069 00       		.byte	0
 3455 006a 03       		.uleb128 0x3
 3456 006b 0E       		.uleb128 0xe
 3457 006c 3A       		.uleb128 0x3a
 3458 006d 0B       		.uleb128 0xb
 3459 006e 3B       		.uleb128 0x3b
 3460 006f 0B       		.uleb128 0xb
 3461 0070 49       		.uleb128 0x49
 3462 0071 13       		.uleb128 0x13
 3463 0072 38       		.uleb128 0x38
 3464 0073 0B       		.uleb128 0xb
 3465 0074 00       		.byte	0
 3466 0075 00       		.byte	0
 3467 0076 0B       		.uleb128 0xb
 3468 0077 04       		.uleb128 0x4
 3469 0078 01       		.byte	0x1
 3470 0079 0B       		.uleb128 0xb
 3471 007a 0B       		.uleb128 0xb
 3472 007b 49       		.uleb128 0x49
 3473 007c 13       		.uleb128 0x13
 3474 007d 3A       		.uleb128 0x3a
 3475 007e 0B       		.uleb128 0xb
 3476 007f 3B       		.uleb128 0x3b
 3477 0080 0B       		.uleb128 0xb
 3478 0081 01       		.uleb128 0x1
 3479 0082 13       		.uleb128 0x13
 3480 0083 00       		.byte	0
 3481 0084 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 114


 3482 0085 0C       		.uleb128 0xc
 3483 0086 28       		.uleb128 0x28
 3484 0087 00       		.byte	0
 3485 0088 03       		.uleb128 0x3
 3486 0089 0E       		.uleb128 0xe
 3487 008a 1C       		.uleb128 0x1c
 3488 008b 0B       		.uleb128 0xb
 3489 008c 00       		.byte	0
 3490 008d 00       		.byte	0
 3491 008e 0D       		.uleb128 0xd
 3492 008f 01       		.uleb128 0x1
 3493 0090 01       		.byte	0x1
 3494 0091 49       		.uleb128 0x49
 3495 0092 13       		.uleb128 0x13
 3496 0093 01       		.uleb128 0x1
 3497 0094 13       		.uleb128 0x13
 3498 0095 00       		.byte	0
 3499 0096 00       		.byte	0
 3500 0097 0E       		.uleb128 0xe
 3501 0098 21       		.uleb128 0x21
 3502 0099 00       		.byte	0
 3503 009a 49       		.uleb128 0x49
 3504 009b 13       		.uleb128 0x13
 3505 009c 2F       		.uleb128 0x2f
 3506 009d 0B       		.uleb128 0xb
 3507 009e 00       		.byte	0
 3508 009f 00       		.byte	0
 3509 00a0 0F       		.uleb128 0xf
 3510 00a1 0D       		.uleb128 0xd
 3511 00a2 00       		.byte	0
 3512 00a3 03       		.uleb128 0x3
 3513 00a4 0E       		.uleb128 0xe
 3514 00a5 3A       		.uleb128 0x3a
 3515 00a6 0B       		.uleb128 0xb
 3516 00a7 3B       		.uleb128 0x3b
 3517 00a8 05       		.uleb128 0x5
 3518 00a9 49       		.uleb128 0x49
 3519 00aa 13       		.uleb128 0x13
 3520 00ab 38       		.uleb128 0x38
 3521 00ac 0B       		.uleb128 0xb
 3522 00ad 00       		.byte	0
 3523 00ae 00       		.byte	0
 3524 00af 10       		.uleb128 0x10
 3525 00b0 13       		.uleb128 0x13
 3526 00b1 01       		.byte	0x1
 3527 00b2 0B       		.uleb128 0xb
 3528 00b3 0B       		.uleb128 0xb
 3529 00b4 3A       		.uleb128 0x3a
 3530 00b5 0B       		.uleb128 0xb
 3531 00b6 3B       		.uleb128 0x3b
 3532 00b7 05       		.uleb128 0x5
 3533 00b8 01       		.uleb128 0x1
 3534 00b9 13       		.uleb128 0x13
 3535 00ba 00       		.byte	0
 3536 00bb 00       		.byte	0
 3537 00bc 11       		.uleb128 0x11
 3538 00bd 0D       		.uleb128 0xd
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 115


 3539 00be 00       		.byte	0
 3540 00bf 03       		.uleb128 0x3
 3541 00c0 08       		.uleb128 0x8
 3542 00c1 3A       		.uleb128 0x3a
 3543 00c2 0B       		.uleb128 0xb
 3544 00c3 3B       		.uleb128 0x3b
 3545 00c4 05       		.uleb128 0x5
 3546 00c5 49       		.uleb128 0x49
 3547 00c6 13       		.uleb128 0x13
 3548 00c7 38       		.uleb128 0x38
 3549 00c8 0B       		.uleb128 0xb
 3550 00c9 00       		.byte	0
 3551 00ca 00       		.byte	0
 3552 00cb 12       		.uleb128 0x12
 3553 00cc 26       		.uleb128 0x26
 3554 00cd 00       		.byte	0
 3555 00ce 00       		.byte	0
 3556 00cf 00       		.byte	0
 3557 00d0 13       		.uleb128 0x13
 3558 00d1 0F       		.uleb128 0xf
 3559 00d2 00       		.byte	0
 3560 00d3 0B       		.uleb128 0xb
 3561 00d4 0B       		.uleb128 0xb
 3562 00d5 00       		.byte	0
 3563 00d6 00       		.byte	0
 3564 00d7 14       		.uleb128 0x14
 3565 00d8 2E       		.uleb128 0x2e
 3566 00d9 01       		.byte	0x1
 3567 00da 03       		.uleb128 0x3
 3568 00db 0E       		.uleb128 0xe
 3569 00dc 3A       		.uleb128 0x3a
 3570 00dd 0B       		.uleb128 0xb
 3571 00de 3B       		.uleb128 0x3b
 3572 00df 05       		.uleb128 0x5
 3573 00e0 27       		.uleb128 0x27
 3574 00e1 19       		.uleb128 0x19
 3575 00e2 11       		.uleb128 0x11
 3576 00e3 01       		.uleb128 0x1
 3577 00e4 12       		.uleb128 0x12
 3578 00e5 06       		.uleb128 0x6
 3579 00e6 40       		.uleb128 0x40
 3580 00e7 18       		.uleb128 0x18
 3581 00e8 9742     		.uleb128 0x2117
 3582 00ea 19       		.uleb128 0x19
 3583 00eb 01       		.uleb128 0x1
 3584 00ec 13       		.uleb128 0x13
 3585 00ed 00       		.byte	0
 3586 00ee 00       		.byte	0
 3587 00ef 15       		.uleb128 0x15
 3588 00f0 34       		.uleb128 0x34
 3589 00f1 00       		.byte	0
 3590 00f2 03       		.uleb128 0x3
 3591 00f3 0E       		.uleb128 0xe
 3592 00f4 3A       		.uleb128 0x3a
 3593 00f5 0B       		.uleb128 0xb
 3594 00f6 3B       		.uleb128 0x3b
 3595 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 116


 3596 00f8 49       		.uleb128 0x49
 3597 00f9 13       		.uleb128 0x13
 3598 00fa 02       		.uleb128 0x2
 3599 00fb 17       		.uleb128 0x17
 3600 00fc 00       		.byte	0
 3601 00fd 00       		.byte	0
 3602 00fe 16       		.uleb128 0x16
 3603 00ff 898201   		.uleb128 0x4109
 3604 0102 00       		.byte	0
 3605 0103 11       		.uleb128 0x11
 3606 0104 01       		.uleb128 0x1
 3607 0105 31       		.uleb128 0x31
 3608 0106 13       		.uleb128 0x13
 3609 0107 00       		.byte	0
 3610 0108 00       		.byte	0
 3611 0109 17       		.uleb128 0x17
 3612 010a 2E       		.uleb128 0x2e
 3613 010b 00       		.byte	0
 3614 010c 3F       		.uleb128 0x3f
 3615 010d 19       		.uleb128 0x19
 3616 010e 03       		.uleb128 0x3
 3617 010f 0E       		.uleb128 0xe
 3618 0110 3A       		.uleb128 0x3a
 3619 0111 0B       		.uleb128 0xb
 3620 0112 3B       		.uleb128 0x3b
 3621 0113 0B       		.uleb128 0xb
 3622 0114 27       		.uleb128 0x27
 3623 0115 19       		.uleb128 0x19
 3624 0116 49       		.uleb128 0x49
 3625 0117 13       		.uleb128 0x13
 3626 0118 11       		.uleb128 0x11
 3627 0119 01       		.uleb128 0x1
 3628 011a 12       		.uleb128 0x12
 3629 011b 06       		.uleb128 0x6
 3630 011c 40       		.uleb128 0x40
 3631 011d 18       		.uleb128 0x18
 3632 011e 9742     		.uleb128 0x2117
 3633 0120 19       		.uleb128 0x19
 3634 0121 00       		.byte	0
 3635 0122 00       		.byte	0
 3636 0123 18       		.uleb128 0x18
 3637 0124 2E       		.uleb128 0x2e
 3638 0125 01       		.byte	0x1
 3639 0126 3F       		.uleb128 0x3f
 3640 0127 19       		.uleb128 0x19
 3641 0128 03       		.uleb128 0x3
 3642 0129 0E       		.uleb128 0xe
 3643 012a 3A       		.uleb128 0x3a
 3644 012b 0B       		.uleb128 0xb
 3645 012c 3B       		.uleb128 0x3b
 3646 012d 05       		.uleb128 0x5
 3647 012e 27       		.uleb128 0x27
 3648 012f 19       		.uleb128 0x19
 3649 0130 49       		.uleb128 0x49
 3650 0131 13       		.uleb128 0x13
 3651 0132 11       		.uleb128 0x11
 3652 0133 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 117


 3653 0134 12       		.uleb128 0x12
 3654 0135 06       		.uleb128 0x6
 3655 0136 40       		.uleb128 0x40
 3656 0137 18       		.uleb128 0x18
 3657 0138 9742     		.uleb128 0x2117
 3658 013a 19       		.uleb128 0x19
 3659 013b 01       		.uleb128 0x1
 3660 013c 13       		.uleb128 0x13
 3661 013d 00       		.byte	0
 3662 013e 00       		.byte	0
 3663 013f 19       		.uleb128 0x19
 3664 0140 05       		.uleb128 0x5
 3665 0141 00       		.byte	0
 3666 0142 03       		.uleb128 0x3
 3667 0143 0E       		.uleb128 0xe
 3668 0144 3A       		.uleb128 0x3a
 3669 0145 0B       		.uleb128 0xb
 3670 0146 3B       		.uleb128 0x3b
 3671 0147 05       		.uleb128 0x5
 3672 0148 49       		.uleb128 0x49
 3673 0149 13       		.uleb128 0x13
 3674 014a 02       		.uleb128 0x2
 3675 014b 17       		.uleb128 0x17
 3676 014c 00       		.byte	0
 3677 014d 00       		.byte	0
 3678 014e 1A       		.uleb128 0x1a
 3679 014f 898201   		.uleb128 0x4109
 3680 0152 01       		.byte	0x1
 3681 0153 11       		.uleb128 0x11
 3682 0154 01       		.uleb128 0x1
 3683 0155 31       		.uleb128 0x31
 3684 0156 13       		.uleb128 0x13
 3685 0157 01       		.uleb128 0x1
 3686 0158 13       		.uleb128 0x13
 3687 0159 00       		.byte	0
 3688 015a 00       		.byte	0
 3689 015b 1B       		.uleb128 0x1b
 3690 015c 8A8201   		.uleb128 0x410a
 3691 015f 00       		.byte	0
 3692 0160 02       		.uleb128 0x2
 3693 0161 18       		.uleb128 0x18
 3694 0162 9142     		.uleb128 0x2111
 3695 0164 18       		.uleb128 0x18
 3696 0165 00       		.byte	0
 3697 0166 00       		.byte	0
 3698 0167 1C       		.uleb128 0x1c
 3699 0168 2E       		.uleb128 0x2e
 3700 0169 01       		.byte	0x1
 3701 016a 3F       		.uleb128 0x3f
 3702 016b 19       		.uleb128 0x19
 3703 016c 03       		.uleb128 0x3
 3704 016d 0E       		.uleb128 0xe
 3705 016e 3A       		.uleb128 0x3a
 3706 016f 0B       		.uleb128 0xb
 3707 0170 3B       		.uleb128 0x3b
 3708 0171 05       		.uleb128 0x5
 3709 0172 27       		.uleb128 0x27
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 118


 3710 0173 19       		.uleb128 0x19
 3711 0174 11       		.uleb128 0x11
 3712 0175 01       		.uleb128 0x1
 3713 0176 12       		.uleb128 0x12
 3714 0177 06       		.uleb128 0x6
 3715 0178 40       		.uleb128 0x40
 3716 0179 18       		.uleb128 0x18
 3717 017a 9742     		.uleb128 0x2117
 3718 017c 19       		.uleb128 0x19
 3719 017d 01       		.uleb128 0x1
 3720 017e 13       		.uleb128 0x13
 3721 017f 00       		.byte	0
 3722 0180 00       		.byte	0
 3723 0181 1D       		.uleb128 0x1d
 3724 0182 34       		.uleb128 0x34
 3725 0183 00       		.byte	0
 3726 0184 03       		.uleb128 0x3
 3727 0185 0E       		.uleb128 0xe
 3728 0186 3A       		.uleb128 0x3a
 3729 0187 0B       		.uleb128 0xb
 3730 0188 3B       		.uleb128 0x3b
 3731 0189 05       		.uleb128 0x5
 3732 018a 49       		.uleb128 0x49
 3733 018b 13       		.uleb128 0x13
 3734 018c 1C       		.uleb128 0x1c
 3735 018d 0B       		.uleb128 0xb
 3736 018e 00       		.byte	0
 3737 018f 00       		.byte	0
 3738 0190 1E       		.uleb128 0x1e
 3739 0191 898201   		.uleb128 0x4109
 3740 0194 01       		.byte	0x1
 3741 0195 11       		.uleb128 0x11
 3742 0196 01       		.uleb128 0x1
 3743 0197 31       		.uleb128 0x31
 3744 0198 13       		.uleb128 0x13
 3745 0199 00       		.byte	0
 3746 019a 00       		.byte	0
 3747 019b 1F       		.uleb128 0x1f
 3748 019c 26       		.uleb128 0x26
 3749 019d 00       		.byte	0
 3750 019e 49       		.uleb128 0x49
 3751 019f 13       		.uleb128 0x13
 3752 01a0 00       		.byte	0
 3753 01a1 00       		.byte	0
 3754 01a2 20       		.uleb128 0x20
 3755 01a3 2E       		.uleb128 0x2e
 3756 01a4 00       		.byte	0
 3757 01a5 3F       		.uleb128 0x3f
 3758 01a6 19       		.uleb128 0x19
 3759 01a7 03       		.uleb128 0x3
 3760 01a8 0E       		.uleb128 0xe
 3761 01a9 3A       		.uleb128 0x3a
 3762 01aa 0B       		.uleb128 0xb
 3763 01ab 3B       		.uleb128 0x3b
 3764 01ac 05       		.uleb128 0x5
 3765 01ad 27       		.uleb128 0x27
 3766 01ae 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 119


 3767 01af 11       		.uleb128 0x11
 3768 01b0 01       		.uleb128 0x1
 3769 01b1 12       		.uleb128 0x12
 3770 01b2 06       		.uleb128 0x6
 3771 01b3 40       		.uleb128 0x40
 3772 01b4 18       		.uleb128 0x18
 3773 01b5 9742     		.uleb128 0x2117
 3774 01b7 19       		.uleb128 0x19
 3775 01b8 00       		.byte	0
 3776 01b9 00       		.byte	0
 3777 01ba 21       		.uleb128 0x21
 3778 01bb 34       		.uleb128 0x34
 3779 01bc 00       		.byte	0
 3780 01bd 03       		.uleb128 0x3
 3781 01be 0E       		.uleb128 0xe
 3782 01bf 3A       		.uleb128 0x3a
 3783 01c0 0B       		.uleb128 0xb
 3784 01c1 3B       		.uleb128 0x3b
 3785 01c2 05       		.uleb128 0x5
 3786 01c3 49       		.uleb128 0x49
 3787 01c4 13       		.uleb128 0x13
 3788 01c5 02       		.uleb128 0x2
 3789 01c6 18       		.uleb128 0x18
 3790 01c7 00       		.byte	0
 3791 01c8 00       		.byte	0
 3792 01c9 22       		.uleb128 0x22
 3793 01ca 05       		.uleb128 0x5
 3794 01cb 00       		.byte	0
 3795 01cc 03       		.uleb128 0x3
 3796 01cd 0E       		.uleb128 0xe
 3797 01ce 3A       		.uleb128 0x3a
 3798 01cf 0B       		.uleb128 0xb
 3799 01d0 3B       		.uleb128 0x3b
 3800 01d1 05       		.uleb128 0x5
 3801 01d2 49       		.uleb128 0x49
 3802 01d3 13       		.uleb128 0x13
 3803 01d4 02       		.uleb128 0x2
 3804 01d5 18       		.uleb128 0x18
 3805 01d6 00       		.byte	0
 3806 01d7 00       		.byte	0
 3807 01d8 23       		.uleb128 0x23
 3808 01d9 2E       		.uleb128 0x2e
 3809 01da 01       		.byte	0x1
 3810 01db 3F       		.uleb128 0x3f
 3811 01dc 19       		.uleb128 0x19
 3812 01dd 03       		.uleb128 0x3
 3813 01de 0E       		.uleb128 0xe
 3814 01df 3A       		.uleb128 0x3a
 3815 01e0 0B       		.uleb128 0xb
 3816 01e1 3B       		.uleb128 0x3b
 3817 01e2 05       		.uleb128 0x5
 3818 01e3 27       		.uleb128 0x27
 3819 01e4 19       		.uleb128 0x19
 3820 01e5 49       		.uleb128 0x49
 3821 01e6 13       		.uleb128 0x13
 3822 01e7 11       		.uleb128 0x11
 3823 01e8 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 120


 3824 01e9 12       		.uleb128 0x12
 3825 01ea 06       		.uleb128 0x6
 3826 01eb 40       		.uleb128 0x40
 3827 01ec 18       		.uleb128 0x18
 3828 01ed 9642     		.uleb128 0x2116
 3829 01ef 19       		.uleb128 0x19
 3830 01f0 01       		.uleb128 0x1
 3831 01f1 13       		.uleb128 0x13
 3832 01f2 00       		.byte	0
 3833 01f3 00       		.byte	0
 3834 01f4 24       		.uleb128 0x24
 3835 01f5 34       		.uleb128 0x34
 3836 01f6 00       		.byte	0
 3837 01f7 03       		.uleb128 0x3
 3838 01f8 08       		.uleb128 0x8
 3839 01f9 3A       		.uleb128 0x3a
 3840 01fa 0B       		.uleb128 0xb
 3841 01fb 3B       		.uleb128 0x3b
 3842 01fc 05       		.uleb128 0x5
 3843 01fd 49       		.uleb128 0x49
 3844 01fe 13       		.uleb128 0x13
 3845 01ff 02       		.uleb128 0x2
 3846 0200 17       		.uleb128 0x17
 3847 0201 00       		.byte	0
 3848 0202 00       		.byte	0
 3849 0203 25       		.uleb128 0x25
 3850 0204 34       		.uleb128 0x34
 3851 0205 00       		.byte	0
 3852 0206 03       		.uleb128 0x3
 3853 0207 0E       		.uleb128 0xe
 3854 0208 3A       		.uleb128 0x3a
 3855 0209 0B       		.uleb128 0xb
 3856 020a 3B       		.uleb128 0x3b
 3857 020b 05       		.uleb128 0x5
 3858 020c 49       		.uleb128 0x49
 3859 020d 13       		.uleb128 0x13
 3860 020e 3F       		.uleb128 0x3f
 3861 020f 19       		.uleb128 0x19
 3862 0210 3C       		.uleb128 0x3c
 3863 0211 19       		.uleb128 0x19
 3864 0212 00       		.byte	0
 3865 0213 00       		.byte	0
 3866 0214 26       		.uleb128 0x26
 3867 0215 34       		.uleb128 0x34
 3868 0216 00       		.byte	0
 3869 0217 03       		.uleb128 0x3
 3870 0218 0E       		.uleb128 0xe
 3871 0219 3A       		.uleb128 0x3a
 3872 021a 0B       		.uleb128 0xb
 3873 021b 3B       		.uleb128 0x3b
 3874 021c 0B       		.uleb128 0xb
 3875 021d 49       		.uleb128 0x49
 3876 021e 13       		.uleb128 0x13
 3877 021f 3F       		.uleb128 0x3f
 3878 0220 19       		.uleb128 0x19
 3879 0221 02       		.uleb128 0x2
 3880 0222 18       		.uleb128 0x18
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 121


 3881 0223 00       		.byte	0
 3882 0224 00       		.byte	0
 3883 0225 27       		.uleb128 0x27
 3884 0226 2E       		.uleb128 0x2e
 3885 0227 00       		.byte	0
 3886 0228 3F       		.uleb128 0x3f
 3887 0229 19       		.uleb128 0x19
 3888 022a 3C       		.uleb128 0x3c
 3889 022b 19       		.uleb128 0x19
 3890 022c 6E       		.uleb128 0x6e
 3891 022d 0E       		.uleb128 0xe
 3892 022e 03       		.uleb128 0x3
 3893 022f 0E       		.uleb128 0xe
 3894 0230 3A       		.uleb128 0x3a
 3895 0231 0B       		.uleb128 0xb
 3896 0232 3B       		.uleb128 0x3b
 3897 0233 05       		.uleb128 0x5
 3898 0234 00       		.byte	0
 3899 0235 00       		.byte	0
 3900 0236 28       		.uleb128 0x28
 3901 0237 2E       		.uleb128 0x2e
 3902 0238 00       		.byte	0
 3903 0239 3F       		.uleb128 0x3f
 3904 023a 19       		.uleb128 0x19
 3905 023b 3C       		.uleb128 0x3c
 3906 023c 19       		.uleb128 0x19
 3907 023d 6E       		.uleb128 0x6e
 3908 023e 0E       		.uleb128 0xe
 3909 023f 03       		.uleb128 0x3
 3910 0240 0E       		.uleb128 0xe
 3911 0241 3A       		.uleb128 0x3a
 3912 0242 0B       		.uleb128 0xb
 3913 0243 3B       		.uleb128 0x3b
 3914 0244 0B       		.uleb128 0xb
 3915 0245 00       		.byte	0
 3916 0246 00       		.byte	0
 3917 0247 00       		.byte	0
 3918              		.section	.debug_loc,"",%progbits
 3919              	.Ldebug_loc0:
 3920              	.LLST0:
 3921 0000 0C000000 		.4byte	.LVL0
 3922 0004 16000000 		.4byte	.LVL1
 3923 0008 0100     		.2byte	0x1
 3924 000a 51       		.byte	0x51
 3925 000b 16000000 		.4byte	.LVL1
 3926 000f 2C000000 		.4byte	.LFE19
 3927 0013 0100     		.2byte	0x1
 3928 0015 53       		.byte	0x53
 3929 0016 00000000 		.4byte	0
 3930 001a 00000000 		.4byte	0
 3931              	.LLST1:
 3932 001e 06000000 		.4byte	.LVL5
 3933 0022 0F000000 		.4byte	.LVL7-1
 3934 0026 0100     		.2byte	0x1
 3935 0028 53       		.byte	0x53
 3936 0029 00000000 		.4byte	0
 3937 002d 00000000 		.4byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 122


 3938              	.LLST2:
 3939 0031 00000000 		.4byte	.LVL8
 3940 0035 37000000 		.4byte	.LVL10-1
 3941 0039 0100     		.2byte	0x1
 3942 003b 50       		.byte	0x50
 3943 003c 37000000 		.4byte	.LVL10-1
 3944 0040 40000000 		.4byte	.LFE3
 3945 0044 0400     		.2byte	0x4
 3946 0046 F3       		.byte	0xf3
 3947 0047 01       		.uleb128 0x1
 3948 0048 50       		.byte	0x50
 3949 0049 9F       		.byte	0x9f
 3950 004a 00000000 		.4byte	0
 3951 004e 00000000 		.4byte	0
 3952              	.LLST3:
 3953 0052 30000000 		.4byte	.LVL9
 3954 0056 3A000000 		.4byte	.LVL11
 3955 005a 0100     		.2byte	0x1
 3956 005c 54       		.byte	0x54
 3957 005d 3A000000 		.4byte	.LVL11
 3958 0061 40000000 		.4byte	.LFE3
 3959 0065 0100     		.2byte	0x1
 3960 0067 50       		.byte	0x50
 3961 0068 00000000 		.4byte	0
 3962 006c 00000000 		.4byte	0
 3963              	.LLST4:
 3964 0070 02000000 		.4byte	.LVL12
 3965 0074 22000000 		.4byte	.LVL14
 3966 0078 0200     		.2byte	0x2
 3967 007a 30       		.byte	0x30
 3968 007b 9F       		.byte	0x9f
 3969 007c 22000000 		.4byte	.LVL14
 3970 0080 2C000000 		.4byte	.LFE4
 3971 0084 0100     		.2byte	0x1
 3972 0086 50       		.byte	0x50
 3973 0087 00000000 		.4byte	0
 3974 008b 00000000 		.4byte	0
 3975              	.LLST5:
 3976 008f 02000000 		.4byte	.LVL15
 3977 0093 12000000 		.4byte	.LVL16
 3978 0097 0300     		.2byte	0x3
 3979 0099 09       		.byte	0x9
 3980 009a FF       		.byte	0xff
 3981 009b 9F       		.byte	0x9f
 3982 009c 12000000 		.4byte	.LVL16
 3983 00a0 14000000 		.4byte	.LVL17
 3984 00a4 0100     		.2byte	0x1
 3985 00a6 50       		.byte	0x50
 3986 00a7 18000000 		.4byte	.LVL18
 3987 00ab 25000000 		.4byte	.LVL19-1
 3988 00af 0100     		.2byte	0x1
 3989 00b1 50       		.byte	0x50
 3990 00b2 26000000 		.4byte	.LVL19
 3991 00b6 30000000 		.4byte	.LVL21
 3992 00ba 0100     		.2byte	0x1
 3993 00bc 50       		.byte	0x50
 3994 00bd 30000000 		.4byte	.LVL21
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 123


 3995 00c1 32000000 		.4byte	.LVL22
 3996 00c5 0300     		.2byte	0x3
 3997 00c7 09       		.byte	0x9
 3998 00c8 FF       		.byte	0xff
 3999 00c9 9F       		.byte	0x9f
 4000 00ca 32000000 		.4byte	.LVL22
 4001 00ce 3C000000 		.4byte	.LFE5
 4002 00d2 0100     		.2byte	0x1
 4003 00d4 50       		.byte	0x50
 4004 00d5 00000000 		.4byte	0
 4005 00d9 00000000 		.4byte	0
 4006              	.LLST6:
 4007 00dd 12000000 		.4byte	.LVL16
 4008 00e1 30000000 		.4byte	.LVL21
 4009 00e5 0100     		.2byte	0x1
 4010 00e7 54       		.byte	0x54
 4011 00e8 00000000 		.4byte	0
 4012 00ec 00000000 		.4byte	0
 4013              	.LLST7:
 4014 00f0 00000000 		.4byte	.LVL23
 4015 00f4 06000000 		.4byte	.LVL24
 4016 00f8 0100     		.2byte	0x1
 4017 00fa 50       		.byte	0x50
 4018 00fb 06000000 		.4byte	.LVL24
 4019 00ff 9C000000 		.4byte	.LFE7
 4020 0103 0400     		.2byte	0x4
 4021 0105 F3       		.byte	0xf3
 4022 0106 01       		.uleb128 0x1
 4023 0107 50       		.byte	0x50
 4024 0108 9F       		.byte	0x9f
 4025 0109 00000000 		.4byte	0
 4026 010d 00000000 		.4byte	0
 4027              	.LLST8:
 4028 0111 00000000 		.4byte	.LVL23
 4029 0115 0E000000 		.4byte	.LVL25
 4030 0119 0100     		.2byte	0x1
 4031 011b 51       		.byte	0x51
 4032 011c 0E000000 		.4byte	.LVL25
 4033 0120 9C000000 		.4byte	.LFE7
 4034 0124 0400     		.2byte	0x4
 4035 0126 F3       		.byte	0xf3
 4036 0127 01       		.uleb128 0x1
 4037 0128 51       		.byte	0x51
 4038 0129 9F       		.byte	0x9f
 4039 012a 00000000 		.4byte	0
 4040 012e 00000000 		.4byte	0
 4041              	.LLST9:
 4042 0132 00000000 		.4byte	.LVL23
 4043 0136 16000000 		.4byte	.LVL27
 4044 013a 0100     		.2byte	0x1
 4045 013c 52       		.byte	0x52
 4046 013d 16000000 		.4byte	.LVL27
 4047 0141 94000000 		.4byte	.LVL39
 4048 0145 0100     		.2byte	0x1
 4049 0147 56       		.byte	0x56
 4050 0148 94000000 		.4byte	.LVL39
 4051 014c 9C000000 		.4byte	.LFE7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 124


 4052 0150 0400     		.2byte	0x4
 4053 0152 F3       		.byte	0xf3
 4054 0153 01       		.uleb128 0x1
 4055 0154 52       		.byte	0x52
 4056 0155 9F       		.byte	0x9f
 4057 0156 00000000 		.4byte	0
 4058 015a 00000000 		.4byte	0
 4059              	.LLST10:
 4060 015e 12000000 		.4byte	.LVL26
 4061 0162 16000000 		.4byte	.LVL27
 4062 0166 0200     		.2byte	0x2
 4063 0168 30       		.byte	0x30
 4064 0169 9F       		.byte	0x9f
 4065 016a 16000000 		.4byte	.LVL27
 4066 016e 94000000 		.4byte	.LVL38
 4067 0172 0100     		.2byte	0x1
 4068 0174 55       		.byte	0x55
 4069 0175 00000000 		.4byte	0
 4070 0179 00000000 		.4byte	0
 4071              	.LLST11:
 4072 017d 1A000000 		.4byte	.LVL28
 4073 0181 39000000 		.4byte	.LVL29-1
 4074 0185 0100     		.2byte	0x1
 4075 0187 50       		.byte	0x50
 4076 0188 4C000000 		.4byte	.LVL30
 4077 018c 6B000000 		.4byte	.LVL31-1
 4078 0190 0100     		.2byte	0x1
 4079 0192 50       		.byte	0x50
 4080 0193 72000000 		.4byte	.LVL32
 4081 0197 83000000 		.4byte	.LVL33-1
 4082 019b 0100     		.2byte	0x1
 4083 019d 50       		.byte	0x50
 4084 019e 00000000 		.4byte	0
 4085 01a2 00000000 		.4byte	0
 4086              	.LLST12:
 4087 01a6 12000000 		.4byte	.LVL26
 4088 01aa 94000000 		.4byte	.LVL37
 4089 01ae 0100     		.2byte	0x1
 4090 01b0 54       		.byte	0x54
 4091 01b1 00000000 		.4byte	0
 4092 01b5 00000000 		.4byte	0
 4093              	.LLST13:
 4094 01b9 00000000 		.4byte	.LVL40
 4095 01bd 13000000 		.4byte	.LVL41-1
 4096 01c1 0100     		.2byte	0x1
 4097 01c3 50       		.byte	0x50
 4098 01c4 13000000 		.4byte	.LVL41-1
 4099 01c8 3C000000 		.4byte	.LFE9
 4100 01cc 0400     		.2byte	0x4
 4101 01ce F3       		.byte	0xf3
 4102 01cf 01       		.uleb128 0x1
 4103 01d0 50       		.byte	0x50
 4104 01d1 9F       		.byte	0x9f
 4105 01d2 00000000 		.4byte	0
 4106 01d6 00000000 		.4byte	0
 4107              	.LLST14:
 4108 01da 08000000 		.4byte	.LVL44
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 125


 4109 01de 40000000 		.4byte	.LFE10
 4110 01e2 0100     		.2byte	0x1
 4111 01e4 53       		.byte	0x53
 4112 01e5 00000000 		.4byte	0
 4113 01e9 00000000 		.4byte	0
 4114              	.LLST15:
 4115 01ed 02000000 		.4byte	.LVL43
 4116 01f1 08000000 		.4byte	.LVL44
 4117 01f5 0200     		.2byte	0x2
 4118 01f7 30       		.byte	0x30
 4119 01f8 9F       		.byte	0x9f
 4120 01f9 08000000 		.4byte	.LVL44
 4121 01fd 40000000 		.4byte	.LFE10
 4122 0201 0100     		.2byte	0x1
 4123 0203 51       		.byte	0x51
 4124 0204 00000000 		.4byte	0
 4125 0208 00000000 		.4byte	0
 4126              	.LLST16:
 4127 020c 0C000000 		.4byte	.LVL45
 4128 0210 1E000000 		.4byte	.LVL48
 4129 0214 0100     		.2byte	0x1
 4130 0216 52       		.byte	0x52
 4131 0217 20000000 		.4byte	.LVL49
 4132 021b 26000000 		.4byte	.LVL50
 4133 021f 0100     		.2byte	0x1
 4134 0221 50       		.byte	0x50
 4135 0222 26000000 		.4byte	.LVL50
 4136 0226 36000000 		.4byte	.LVL54
 4137 022a 0100     		.2byte	0x1
 4138 022c 52       		.byte	0x52
 4139 022d 00000000 		.4byte	0
 4140 0231 00000000 		.4byte	0
 4141              	.LLST17:
 4142 0235 00000000 		.4byte	.LVL55
 4143 0239 05000000 		.4byte	.LVL56-1
 4144 023d 0100     		.2byte	0x1
 4145 023f 50       		.byte	0x50
 4146 0240 05000000 		.4byte	.LVL56-1
 4147 0244 08000000 		.4byte	.LFE12
 4148 0248 0400     		.2byte	0x4
 4149 024a F3       		.byte	0xf3
 4150 024b 01       		.uleb128 0x1
 4151 024c 50       		.byte	0x50
 4152 024d 9F       		.byte	0x9f
 4153 024e 00000000 		.4byte	0
 4154 0252 00000000 		.4byte	0
 4155              	.LLST18:
 4156 0256 00000000 		.4byte	.LVL57
 4157 025a 08000000 		.4byte	.LVL58
 4158 025e 0100     		.2byte	0x1
 4159 0260 50       		.byte	0x50
 4160 0261 08000000 		.4byte	.LVL58
 4161 0265 0A000000 		.4byte	.LVL59
 4162 0269 0300     		.2byte	0x3
 4163 026b 70       		.byte	0x70
 4164 026c 01       		.sleb128 1
 4165 026d 9F       		.byte	0x9f
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 126


 4166 026e 0A000000 		.4byte	.LVL59
 4167 0272 30000000 		.4byte	.LFE13
 4168 0276 0400     		.2byte	0x4
 4169 0278 F3       		.byte	0xf3
 4170 0279 01       		.uleb128 0x1
 4171 027a 50       		.byte	0x50
 4172 027b 9F       		.byte	0x9f
 4173 027c 00000000 		.4byte	0
 4174 0280 00000000 		.4byte	0
 4175              	.LLST19:
 4176 0284 00000000 		.4byte	.LVL60
 4177 0288 08000000 		.4byte	.LVL61
 4178 028c 0100     		.2byte	0x1
 4179 028e 50       		.byte	0x50
 4180 028f 08000000 		.4byte	.LVL61
 4181 0293 0A000000 		.4byte	.LVL62
 4182 0297 0300     		.2byte	0x3
 4183 0299 70       		.byte	0x70
 4184 029a 01       		.sleb128 1
 4185 029b 9F       		.byte	0x9f
 4186 029c 0A000000 		.4byte	.LVL62
 4187 02a0 30000000 		.4byte	.LFE14
 4188 02a4 0400     		.2byte	0x4
 4189 02a6 F3       		.byte	0xf3
 4190 02a7 01       		.uleb128 0x1
 4191 02a8 50       		.byte	0x50
 4192 02a9 9F       		.byte	0x9f
 4193 02aa 00000000 		.4byte	0
 4194 02ae 00000000 		.4byte	0
 4195              	.LLST20:
 4196 02b2 00000000 		.4byte	.LVL63
 4197 02b6 06000000 		.4byte	.LVL64
 4198 02ba 0100     		.2byte	0x1
 4199 02bc 50       		.byte	0x50
 4200 02bd 06000000 		.4byte	.LVL64
 4201 02c1 10000000 		.4byte	.LVL67
 4202 02c5 0100     		.2byte	0x1
 4203 02c7 54       		.byte	0x54
 4204 02c8 10000000 		.4byte	.LVL67
 4205 02cc 12000000 		.4byte	.LFE15
 4206 02d0 0400     		.2byte	0x4
 4207 02d2 F3       		.byte	0xf3
 4208 02d3 01       		.uleb128 0x1
 4209 02d4 50       		.byte	0x50
 4210 02d5 9F       		.byte	0x9f
 4211 02d6 00000000 		.4byte	0
 4212 02da 00000000 		.4byte	0
 4213              	.LLST21:
 4214 02de 00000000 		.4byte	.LVL63
 4215 02e2 09000000 		.4byte	.LVL65-1
 4216 02e6 0100     		.2byte	0x1
 4217 02e8 51       		.byte	0x51
 4218 02e9 09000000 		.4byte	.LVL65-1
 4219 02ed 12000000 		.4byte	.LFE15
 4220 02f1 0400     		.2byte	0x4
 4221 02f3 F3       		.byte	0xf3
 4222 02f4 01       		.uleb128 0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 127


 4223 02f5 51       		.byte	0x51
 4224 02f6 9F       		.byte	0x9f
 4225 02f7 00000000 		.4byte	0
 4226 02fb 00000000 		.4byte	0
 4227              	.LLST22:
 4228 02ff 00000000 		.4byte	.LVL68
 4229 0303 08000000 		.4byte	.LVL70
 4230 0307 0100     		.2byte	0x1
 4231 0309 50       		.byte	0x50
 4232 030a 08000000 		.4byte	.LVL70
 4233 030e 0A000000 		.4byte	.LVL71
 4234 0312 0100     		.2byte	0x1
 4235 0314 53       		.byte	0x53
 4236 0315 0A000000 		.4byte	.LVL71
 4237 0319 0C000000 		.4byte	.LVL72
 4238 031d 0100     		.2byte	0x1
 4239 031f 50       		.byte	0x50
 4240 0320 0C000000 		.4byte	.LVL72
 4241 0324 17000000 		.4byte	.LVL74-1
 4242 0328 0100     		.2byte	0x1
 4243 032a 53       		.byte	0x53
 4244 032b 17000000 		.4byte	.LVL74-1
 4245 032f 1A000000 		.4byte	.LFE16
 4246 0333 0400     		.2byte	0x4
 4247 0335 F3       		.byte	0xf3
 4248 0336 01       		.uleb128 0x1
 4249 0337 50       		.byte	0x50
 4250 0338 9F       		.byte	0x9f
 4251 0339 00000000 		.4byte	0
 4252 033d 00000000 		.4byte	0
 4253              	.LLST23:
 4254 0341 04000000 		.4byte	.LVL69
 4255 0345 0C000000 		.4byte	.LVL72
 4256 0349 0200     		.2byte	0x2
 4257 034b 30       		.byte	0x30
 4258 034c 9F       		.byte	0x9f
 4259 034d 0C000000 		.4byte	.LVL72
 4260 0351 14000000 		.4byte	.LVL73
 4261 0355 0100     		.2byte	0x1
 4262 0357 50       		.byte	0x50
 4263 0358 18000000 		.4byte	.LVL74
 4264 035c 1A000000 		.4byte	.LFE16
 4265 0360 0100     		.2byte	0x1
 4266 0362 50       		.byte	0x50
 4267 0363 00000000 		.4byte	0
 4268 0367 00000000 		.4byte	0
 4269              	.LLST24:
 4270 036b 02000000 		.4byte	.LVL75
 4271 036f 08000000 		.4byte	.LVL76
 4272 0373 0200     		.2byte	0x2
 4273 0375 30       		.byte	0x30
 4274 0376 9F       		.byte	0x9f
 4275 0377 08000000 		.4byte	.LVL76
 4276 037b 18000000 		.4byte	.LVL81
 4277 037f 0100     		.2byte	0x1
 4278 0381 55       		.byte	0x55
 4279 0382 18000000 		.4byte	.LVL81
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 128


 4280 0386 1A000000 		.4byte	.LFE17
 4281 038a 0100     		.2byte	0x1
 4282 038c 50       		.byte	0x50
 4283 038d 00000000 		.4byte	0
 4284 0391 00000000 		.4byte	0
 4285              	.LLST25:
 4286 0395 02000000 		.4byte	.LVL75
 4287 0399 08000000 		.4byte	.LVL76
 4288 039d 0200     		.2byte	0x2
 4289 039f 30       		.byte	0x30
 4290 03a0 9F       		.byte	0x9f
 4291 03a1 08000000 		.4byte	.LVL76
 4292 03a5 18000000 		.4byte	.LVL80
 4293 03a9 0100     		.2byte	0x1
 4294 03ab 54       		.byte	0x54
 4295 03ac 00000000 		.4byte	0
 4296 03b0 00000000 		.4byte	0
 4297              	.LLST26:
 4298 03b4 02000000 		.4byte	.LVL82
 4299 03b8 06000000 		.4byte	.LVL83
 4300 03bc 0200     		.2byte	0x2
 4301 03be 30       		.byte	0x30
 4302 03bf 9F       		.byte	0x9f
 4303 03c0 06000000 		.4byte	.LVL83
 4304 03c4 30000000 		.4byte	.LVL89
 4305 03c8 0100     		.2byte	0x1
 4306 03ca 55       		.byte	0x55
 4307 03cb 00000000 		.4byte	0
 4308 03cf 00000000 		.4byte	0
 4309              	.LLST27:
 4310 03d3 0C000000 		.4byte	.LVL84
 4311 03d7 10000000 		.4byte	.LVL85
 4312 03db 0200     		.2byte	0x2
 4313 03dd 30       		.byte	0x30
 4314 03de 9F       		.byte	0x9f
 4315 03df 10000000 		.4byte	.LVL85
 4316 03e3 2C000000 		.4byte	.LVL88
 4317 03e7 0100     		.2byte	0x1
 4318 03e9 54       		.byte	0x54
 4319 03ea 00000000 		.4byte	0
 4320 03ee 00000000 		.4byte	0
 4321              	.LLST28:
 4322 03f2 0C000000 		.4byte	.LVL84
 4323 03f6 2C000000 		.4byte	.LVL88
 4324 03fa 0100     		.2byte	0x1
 4325 03fc 56       		.byte	0x56
 4326 03fd 00000000 		.4byte	0
 4327 0401 00000000 		.4byte	0
 4328              	.LLST29:
 4329 0405 00000000 		.4byte	.LVL90
 4330 0409 02000000 		.4byte	.LVL91
 4331 040d 0100     		.2byte	0x1
 4332 040f 50       		.byte	0x50
 4333 0410 02000000 		.4byte	.LVL91
 4334 0414 10000000 		.4byte	.LFE24
 4335 0418 0400     		.2byte	0x4
 4336 041a F3       		.byte	0xf3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 129


 4337 041b 01       		.uleb128 0x1
 4338 041c 50       		.byte	0x50
 4339 041d 9F       		.byte	0x9f
 4340 041e 00000000 		.4byte	0
 4341 0422 00000000 		.4byte	0
 4342              	.LLST30:
 4343 0426 00000000 		.4byte	.LVL94
 4344 042a 1A000000 		.4byte	.LVL97
 4345 042e 0100     		.2byte	0x1
 4346 0430 50       		.byte	0x50
 4347 0431 1A000000 		.4byte	.LVL97
 4348 0435 22000000 		.4byte	.LVL98
 4349 0439 0400     		.2byte	0x4
 4350 043b F3       		.byte	0xf3
 4351 043c 01       		.uleb128 0x1
 4352 043d 50       		.byte	0x50
 4353 043e 9F       		.byte	0x9f
 4354 043f 22000000 		.4byte	.LVL98
 4355 0443 24000000 		.4byte	.LVL99
 4356 0447 0100     		.2byte	0x1
 4357 0449 50       		.byte	0x50
 4358 044a 24000000 		.4byte	.LVL99
 4359 044e 30000000 		.4byte	.LFE25
 4360 0452 0400     		.2byte	0x4
 4361 0454 F3       		.byte	0xf3
 4362 0455 01       		.uleb128 0x1
 4363 0456 50       		.byte	0x50
 4364 0457 9F       		.byte	0x9f
 4365 0458 00000000 		.4byte	0
 4366 045c 00000000 		.4byte	0
 4367              	.LLST31:
 4368 0460 28000000 		.4byte	.LVL100
 4369 0464 2A000000 		.4byte	.LVL101
 4370 0468 0100     		.2byte	0x1
 4371 046a 50       		.byte	0x50
 4372 046b 00000000 		.4byte	0
 4373 046f 00000000 		.4byte	0
 4374              	.LLST32:
 4375 0473 02000000 		.4byte	.LVL95
 4376 0477 06000000 		.4byte	.LVL96
 4377 047b 0200     		.2byte	0x2
 4378 047d 31       		.byte	0x31
 4379 047e 9F       		.byte	0x9f
 4380 047f 06000000 		.4byte	.LVL96
 4381 0483 2A000000 		.4byte	.LVL102
 4382 0487 0100     		.2byte	0x1
 4383 0489 54       		.byte	0x54
 4384 048a 00000000 		.4byte	0
 4385 048e 00000000 		.4byte	0
 4386              	.LLST33:
 4387 0492 00000000 		.4byte	.LVL103
 4388 0496 07000000 		.4byte	.LVL104-1
 4389 049a 0100     		.2byte	0x1
 4390 049c 50       		.byte	0x50
 4391 049d 07000000 		.4byte	.LVL104-1
 4392 04a1 14000000 		.4byte	.LFE22
 4393 04a5 0400     		.2byte	0x4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 130


 4394 04a7 F3       		.byte	0xf3
 4395 04a8 01       		.uleb128 0x1
 4396 04a9 50       		.byte	0x50
 4397 04aa 9F       		.byte	0x9f
 4398 04ab 00000000 		.4byte	0
 4399 04af 00000000 		.4byte	0
 4400              	.LLST34:
 4401 04b3 00000000 		.4byte	.LVL103
 4402 04b7 07000000 		.4byte	.LVL104-1
 4403 04bb 0100     		.2byte	0x1
 4404 04bd 51       		.byte	0x51
 4405 04be 07000000 		.4byte	.LVL104-1
 4406 04c2 12000000 		.4byte	.LVL107
 4407 04c6 0100     		.2byte	0x1
 4408 04c8 54       		.byte	0x54
 4409 04c9 12000000 		.4byte	.LVL107
 4410 04cd 14000000 		.4byte	.LFE22
 4411 04d1 0400     		.2byte	0x4
 4412 04d3 F3       		.byte	0xf3
 4413 04d4 01       		.uleb128 0x1
 4414 04d5 51       		.byte	0x51
 4415 04d6 9F       		.byte	0x9f
 4416 04d7 00000000 		.4byte	0
 4417 04db 00000000 		.4byte	0
 4418              	.LLST35:
 4419 04df 08000000 		.4byte	.LVL104
 4420 04e3 0A000000 		.4byte	.LVL105
 4421 04e7 0100     		.2byte	0x1
 4422 04e9 50       		.byte	0x50
 4423 04ea 00000000 		.4byte	0
 4424 04ee 00000000 		.4byte	0
 4425              	.LLST36:
 4426 04f2 04000000 		.4byte	.LVL108
 4427 04f6 1C000000 		.4byte	.LVL110
 4428 04fa 0200     		.2byte	0x2
 4429 04fc 30       		.byte	0x30
 4430 04fd 9F       		.byte	0x9f
 4431 04fe 1C000000 		.4byte	.LVL110
 4432 0502 70000000 		.4byte	.LVL116
 4433 0506 0100     		.2byte	0x1
 4434 0508 56       		.byte	0x56
 4435 0509 72000000 		.4byte	.LVL117
 4436 050d 1A010000 		.4byte	.LVL134
 4437 0511 0100     		.2byte	0x1
 4438 0513 56       		.byte	0x56
 4439 0514 1A010000 		.4byte	.LVL134
 4440 0518 40010000 		.4byte	.LFE18
 4441 051c 0100     		.2byte	0x1
 4442 051e 50       		.byte	0x50
 4443 051f 00000000 		.4byte	0
 4444 0523 00000000 		.4byte	0
 4445              	.LLST37:
 4446 0527 16000000 		.4byte	.LVL109
 4447 052b 1C000000 		.4byte	.LVL110
 4448 052f 0200     		.2byte	0x2
 4449 0531 30       		.byte	0x30
 4450 0532 9F       		.byte	0x9f
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 131


 4451 0533 1C000000 		.4byte	.LVL110
 4452 0537 AC000000 		.4byte	.LVL120
 4453 053b 0100     		.2byte	0x1
 4454 053d 55       		.byte	0x55
 4455 053e AC000000 		.4byte	.LVL120
 4456 0542 F6000000 		.4byte	.LVL126
 4457 0546 0100     		.2byte	0x1
 4458 0548 54       		.byte	0x54
 4459 0549 F8000000 		.4byte	.LVL127
 4460 054d 1A010000 		.4byte	.LVL133
 4461 0551 0100     		.2byte	0x1
 4462 0553 54       		.byte	0x54
 4463 0554 00000000 		.4byte	0
 4464 0558 00000000 		.4byte	0
 4465              	.LLST38:
 4466 055c 04000000 		.4byte	.LVL108
 4467 0560 1C000000 		.4byte	.LVL110
 4468 0564 0200     		.2byte	0x2
 4469 0566 30       		.byte	0x30
 4470 0567 9F       		.byte	0x9f
 4471 0568 68000000 		.4byte	.LVL115
 4472 056c A4000000 		.4byte	.LVL119
 4473 0570 0100     		.2byte	0x1
 4474 0572 50       		.byte	0x50
 4475 0573 00000000 		.4byte	0
 4476 0577 00000000 		.4byte	0
 4477              	.LLST39:
 4478 057b 24000000 		.4byte	.LVL111
 4479 057f A4000000 		.4byte	.LVL119
 4480 0583 0100     		.2byte	0x1
 4481 0585 54       		.byte	0x54
 4482 0586 B4000000 		.4byte	.LVL121
 4483 058a F0000000 		.4byte	.LVL125
 4484 058e 0100     		.2byte	0x1
 4485 0590 55       		.byte	0x55
 4486 0591 00010000 		.4byte	.LVL128
 4487 0595 05010000 		.4byte	.LVL129-1
 4488 0599 0100     		.2byte	0x1
 4489 059b 51       		.byte	0x51
 4490 059c 00000000 		.4byte	0
 4491 05a0 00000000 		.4byte	0
 4492              	.LLST40:
 4493 05a4 02000000 		.4byte	.LVL135
 4494 05a8 06000000 		.4byte	.LVL136
 4495 05ac 0200     		.2byte	0x2
 4496 05ae 30       		.byte	0x30
 4497 05af 9F       		.byte	0x9f
 4498 05b0 06000000 		.4byte	.LVL136
 4499 05b4 1A000000 		.4byte	.LVL140
 4500 05b8 0100     		.2byte	0x1
 4501 05ba 54       		.byte	0x54
 4502 05bb 00000000 		.4byte	0
 4503 05bf 00000000 		.4byte	0
 4504              	.LLST41:
 4505 05c3 0E000000 		.4byte	.LVL137
 4506 05c7 13000000 		.4byte	.LVL138-1
 4507 05cb 0100     		.2byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 132


 4508 05cd 51       		.byte	0x51
 4509 05ce 00000000 		.4byte	0
 4510 05d2 00000000 		.4byte	0
 4511              		.section	.debug_aranges,"",%progbits
 4512 0000 D4000000 		.4byte	0xd4
 4513 0004 0200     		.2byte	0x2
 4514 0006 00000000 		.4byte	.Ldebug_info0
 4515 000a 04       		.byte	0x4
 4516 000b 00       		.byte	0
 4517 000c 0000     		.2byte	0
 4518 000e 0000     		.2byte	0
 4519 0010 00000000 		.4byte	.LFB19
 4520 0014 2C000000 		.4byte	.LFE19-.LFB19
 4521 0018 00000000 		.4byte	.LFB20
 4522 001c 08000000 		.4byte	.LFE20-.LFB20
 4523 0020 00000000 		.4byte	.LFB8
 4524 0024 18000000 		.4byte	.LFE8-.LFB8
 4525 0028 00000000 		.4byte	.LFB2
 4526 002c 10000000 		.4byte	.LFE2-.LFB2
 4527 0030 00000000 		.4byte	.LFB3
 4528 0034 40000000 		.4byte	.LFE3-.LFB3
 4529 0038 00000000 		.4byte	.LFB4
 4530 003c 2C000000 		.4byte	.LFE4-.LFB4
 4531 0040 00000000 		.4byte	.LFB5
 4532 0044 3C000000 		.4byte	.LFE5-.LFB5
 4533 0048 00000000 		.4byte	.LFB7
 4534 004c 9C000000 		.4byte	.LFE7-.LFB7
 4535 0050 00000000 		.4byte	.LFB9
 4536 0054 3C000000 		.4byte	.LFE9-.LFB9
 4537 0058 00000000 		.4byte	.LFB10
 4538 005c 40000000 		.4byte	.LFE10-.LFB10
 4539 0060 00000000 		.4byte	.LFB11
 4540 0064 02000000 		.4byte	.LFE11-.LFB11
 4541 0068 00000000 		.4byte	.LFB12
 4542 006c 08000000 		.4byte	.LFE12-.LFB12
 4543 0070 00000000 		.4byte	.LFB13
 4544 0074 30000000 		.4byte	.LFE13-.LFB13
 4545 0078 00000000 		.4byte	.LFB14
 4546 007c 30000000 		.4byte	.LFE14-.LFB14
 4547 0080 00000000 		.4byte	.LFB15
 4548 0084 12000000 		.4byte	.LFE15-.LFB15
 4549 0088 00000000 		.4byte	.LFB16
 4550 008c 1A000000 		.4byte	.LFE16-.LFB16
 4551 0090 00000000 		.4byte	.LFB17
 4552 0094 1A000000 		.4byte	.LFE17-.LFB17
 4553 0098 00000000 		.4byte	.LFB23
 4554 009c 38000000 		.4byte	.LFE23-.LFB23
 4555 00a0 00000000 		.4byte	.LFB24
 4556 00a4 10000000 		.4byte	.LFE24-.LFB24
 4557 00a8 00000000 		.4byte	.LFB25
 4558 00ac 30000000 		.4byte	.LFE25-.LFB25
 4559 00b0 00000000 		.4byte	.LFB22
 4560 00b4 14000000 		.4byte	.LFE22-.LFB22
 4561 00b8 00000000 		.4byte	.LFB18
 4562 00bc 40010000 		.4byte	.LFE18-.LFB18
 4563 00c0 00000000 		.4byte	.LFB21
 4564 00c4 20000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 133


 4565 00c8 00000000 		.4byte	.LFB6
 4566 00cc 1C000000 		.4byte	.LFE6-.LFB6
 4567 00d0 00000000 		.4byte	0
 4568 00d4 00000000 		.4byte	0
 4569              		.section	.debug_ranges,"",%progbits
 4570              	.Ldebug_ranges0:
 4571 0000 00000000 		.4byte	.LFB19
 4572 0004 2C000000 		.4byte	.LFE19
 4573 0008 00000000 		.4byte	.LFB20
 4574 000c 08000000 		.4byte	.LFE20
 4575 0010 00000000 		.4byte	.LFB8
 4576 0014 18000000 		.4byte	.LFE8
 4577 0018 00000000 		.4byte	.LFB2
 4578 001c 10000000 		.4byte	.LFE2
 4579 0020 00000000 		.4byte	.LFB3
 4580 0024 40000000 		.4byte	.LFE3
 4581 0028 00000000 		.4byte	.LFB4
 4582 002c 2C000000 		.4byte	.LFE4
 4583 0030 00000000 		.4byte	.LFB5
 4584 0034 3C000000 		.4byte	.LFE5
 4585 0038 00000000 		.4byte	.LFB7
 4586 003c 9C000000 		.4byte	.LFE7
 4587 0040 00000000 		.4byte	.LFB9
 4588 0044 3C000000 		.4byte	.LFE9
 4589 0048 00000000 		.4byte	.LFB10
 4590 004c 40000000 		.4byte	.LFE10
 4591 0050 00000000 		.4byte	.LFB11
 4592 0054 02000000 		.4byte	.LFE11
 4593 0058 00000000 		.4byte	.LFB12
 4594 005c 08000000 		.4byte	.LFE12
 4595 0060 00000000 		.4byte	.LFB13
 4596 0064 30000000 		.4byte	.LFE13
 4597 0068 00000000 		.4byte	.LFB14
 4598 006c 30000000 		.4byte	.LFE14
 4599 0070 00000000 		.4byte	.LFB15
 4600 0074 12000000 		.4byte	.LFE15
 4601 0078 00000000 		.4byte	.LFB16
 4602 007c 1A000000 		.4byte	.LFE16
 4603 0080 00000000 		.4byte	.LFB17
 4604 0084 1A000000 		.4byte	.LFE17
 4605 0088 00000000 		.4byte	.LFB23
 4606 008c 38000000 		.4byte	.LFE23
 4607 0090 00000000 		.4byte	.LFB24
 4608 0094 10000000 		.4byte	.LFE24
 4609 0098 00000000 		.4byte	.LFB25
 4610 009c 30000000 		.4byte	.LFE25
 4611 00a0 00000000 		.4byte	.LFB22
 4612 00a4 14000000 		.4byte	.LFE22
 4613 00a8 00000000 		.4byte	.LFB18
 4614 00ac 40010000 		.4byte	.LFE18
 4615 00b0 00000000 		.4byte	.LFB21
 4616 00b4 20000000 		.4byte	.LFE21
 4617 00b8 00000000 		.4byte	.LFB6
 4618 00bc 1C000000 		.4byte	.LFE6
 4619 00c0 00000000 		.4byte	0
 4620 00c4 00000000 		.4byte	0
 4621              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 134


 4622              	.Ldebug_line0:
 4623 0000 50040000 		.section	.debug_str,"MS",%progbits,1
 4623      0200E200 
 4623      00000201 
 4623      FB0E0D00 
 4623      01010101 
 4624              	.LASF122:
 4625 0000 73656E73 		.ascii	"sensorElement\000"
 4625      6F72456C 
 4625      656D656E 
 4625      7400
 4626              	.LASF112:
 4627 000e 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4627      656E7365 
 4627      5F315F53 
 4627      73435344 
 4627      44697361 
 4628              	.LASF106:
 4629 002a 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4629      656E7365 
 4629      5F315F46 
 4629      4C415348 
 4629      5F57445F 
 4630              	.LASF118:
 4631 0045 7363616E 		.ascii	"scanStatus\000"
 4631      53746174 
 4631      757300
 4632              	.LASF169:
 4633 0050 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4633      656E7365 
 4633      5F315F63 
 4633      75725261 
 4633      6D536E73 
 4634              	.LASF81:
 4635 0068 736E7254 		.ascii	"snrTestWidgetId\000"
 4635      65737457 
 4635      69646765 
 4635      74496400 
 4636              	.LASF177:
 4637 0078 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4637      656E7365 
 4637      5F315F43 
 4637      53445363 
 4637      616E00
 4638              	.LASF8:
 4639 008b 756E7369 		.ascii	"unsigned int\000"
 4639      676E6564 
 4639      20696E74 
 4639      00
 4640              	.LASF131:
 4641 0098 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4641      656E7365 
 4641      5F315F53 
 4641      73536574 
 4641      494F7349 
 4642              	.LASF161:
 4643 00ba 43617053 		.ascii	"CapSense_1_SsInitialize\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 135


 4643      656E7365 
 4643      5F315F53 
 4643      73496E69 
 4643      7469616C 
 4644              	.LASF72:
 4645 00d2 7363616E 		.ascii	"scanCounter\000"
 4645      436F756E 
 4645      74657200 
 4646              	.LASF70:
 4647 00de 6877436C 		.ascii	"hwClock\000"
 4647      6F636B00 
 4648              	.LASF153:
 4649 00e6 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4649      656E7365 
 4649      5F315F53 
 4649      73536574 
 4649      57696467 
 4650              	.LASF91:
 4651 0108 6D61736B 		.ascii	"mask\000"
 4651      00
 4652              	.LASF172:
 4653 010d 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4653      656E7365 
 4653      5F315F63 
 4653      7572536E 
 4653      73494F50 
 4654              	.LASF162:
 4655 0124 696E6974 		.ascii	"initStatus\000"
 4655      53746174 
 4655      757300
 4656              	.LASF133:
 4657 012f 72656756 		.ascii	"regValue\000"
 4657      616C7565 
 4657      00
 4658              	.LASF165:
 4659 0138 43617053 		.ascii	"CapSense_1_ioList\000"
 4659      656E7365 
 4659      5F315F69 
 4659      6F4C6973 
 4659      7400
 4660              	.LASF126:
 4661 014a 696E7465 		.ascii	"interruptState\000"
 4661      72727570 
 4661      74537461 
 4661      746500
 4662              	.LASF16:
 4663 0159 72656738 		.ascii	"reg8\000"
 4663      00
 4664              	.LASF190:
 4665 015e 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4665      656E7365 
 4665      5F315F49 
 4665      73427573 
 4665      7900
 4666              	.LASF117:
 4667 0170 43617053 		.ascii	"CapSense_1_Scan\000"
 4667      656E7365 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 136


 4667      5F315F53 
 4667      63616E00 
 4668              	.LASF180:
 4669 0180 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4669      656E7365 
 4669      5F315F43 
 4669      5344436F 
 4669      6E6E6563 
 4670              	.LASF23:
 4671 0199 69446163 		.ascii	"iDacGain\000"
 4671      4761696E 
 4671      00
 4672              	.LASF140:
 4673 01a2 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4673      656E7365 
 4673      5F315F43 
 4673      616C6962 
 4673      72617465 
 4674              	.LASF186:
 4675 01bd 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 4675      7453656E 
 4675      73655F54 
 4675      756E6553 
 4675      656E7369 
 4676              	.LASF26:
 4677 01d8 736E7343 		.ascii	"snsClkInputClock\000"
 4677      6C6B496E 
 4677      70757443 
 4677      6C6F636B 
 4677      00
 4678              	.LASF130:
 4679 01e9 6D6F6465 		.ascii	"mode\000"
 4679      00
 4680              	.LASF155:
 4681 01ee 6C667372 		.ascii	"lfsrScale\000"
 4681      5363616C 
 4681      6500
 4682              	.LASF160:
 4683 01f8 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4683      656E7365 
 4683      5F315F53 
 4683      73496E69 
 4683      7469616C 
 4684              	.LASF171:
 4685 021e 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4685      656E7365 
 4685      5F315F73 
 4685      63616E46 
 4685      72657149 
 4686              	.LASF181:
 4687 0237 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4687      656E7365 
 4687      5F315F53 
 4687      73435344 
 4687      496E6974 
 4688              	.LASF60:
 4689 0252 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 137


 4689      656E7365 
 4689      5F315F52 
 4689      414D5F57 
 4689      445F4C49 
 4690              	.LASF158:
 4691 0270 63705769 		.ascii	"cpWidget\000"
 4691      64676574 
 4691      00
 4692              	.LASF124:
 4693 0279 656C7464 		.ascii	"eltdNum\000"
 4693      4E756D00 
 4694              	.LASF148:
 4695 0281 70747257 		.ascii	"ptrWdgt\000"
 4695      64677400 
 4696              	.LASF157:
 4697 0289 6175746F 		.ascii	"autoTuneStatus\000"
 4697      54756E65 
 4697      53746174 
 4697      757300
 4698              	.LASF149:
 4699 0298 43617053 		.ascii	"CapSense_1_SsCSDCalcPrsSize\000"
 4699      656E7365 
 4699      5F315F53 
 4699      73435344 
 4699      43616C63 
 4700              	.LASF168:
 4701 02b4 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4701      656E7365 
 4701      5F315F72 
 4701      65717565 
 4701      73745363 
 4702              	.LASF132:
 4703 02d4 6C6F6F70 		.ascii	"loopIndex\000"
 4703      496E6465 
 4703      7800
 4704              	.LASF12:
 4705 02de 666C6F61 		.ascii	"float\000"
 4705      7400
 4706              	.LASF94:
 4707 02e4 73686966 		.ascii	"shift\000"
 4707      7400
 4708              	.LASF156:
 4709 02ea 43617053 		.ascii	"CapSense_1_SsAutoTune\000"
 4709      656E7365 
 4709      5F315F53 
 4709      73417574 
 4709      6F54756E 
 4710              	.LASF116:
 4711 0300 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4711      656E7365 
 4711      5F315F53 
 4711      65747570 
 4711      57696467 
 4712              	.LASF80:
 4713 0317 736E734C 		.ascii	"snsList\000"
 4713      69737400 
 4714              	.LASF7:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 138


 4715 031f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4715      206C6F6E 
 4715      6720756E 
 4715      7369676E 
 4715      65642069 
 4716              	.LASF82:
 4717 0336 736E7254 		.ascii	"snrTestSensorId\000"
 4717      65737453 
 4717      656E736F 
 4717      72496400 
 4718              	.LASF105:
 4719 0346 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4719      4E6F6973 
 4719      65456E76 
 4719      6C7000
 4720              	.LASF103:
 4721 0355 77646774 		.ascii	"wdgtType\000"
 4721      54797065 
 4721      00
 4722              	.LASF154:
 4723 035e 6C667372 		.ascii	"lfsrSize\000"
 4723      53697A65 
 4723      00
 4724              	.LASF20:
 4725 0367 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4725      656E7365 
 4725      5F315F4C 
 4725      4F575F42 
 4725      534C4E5F 
 4726              	.LASF45:
 4727 0384 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4727      656E7365 
 4727      5F315F53 
 4727      454E5345 
 4727      5F4D4554 
 4728              	.LASF173:
 4729 03a1 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 4729      656E7365 
 4729      5F315F63 
 4729      616C6962 
 4729      72617465 
 4730              	.LASF59:
 4731 03bb 64756D6D 		.ascii	"dummywidget\000"
 4731      79776964 
 4731      67657400 
 4732              	.LASF187:
 4733 03c7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4733      43313120 
 4733      352E342E 
 4733      31203230 
 4733      31363036 
 4734 03fa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4734      20726576 
 4734      6973696F 
 4734      6E203233 
 4734      37373135 
 4735 042d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 139


 4735      66756E63 
 4735      74696F6E 
 4735      2D736563 
 4735      74696F6E 
 4736              	.LASF78:
 4737 0455 6D6F6443 		.ascii	"modCsdClk\000"
 4737      7364436C 
 4737      6B00
 4738              	.LASF182:
 4739 045f 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4739      656E7365 
 4739      5F315F49 
 4739      53525F53 
 4739      74617274 
 4740              	.LASF27:
 4741 0476 63616C54 		.ascii	"calTarget\000"
 4741      61726765 
 4741      7400
 4742              	.LASF111:
 4743 0480 43617053 		.ascii	"CapSense_1_SsTrimIdacs\000"
 4743      656E7365 
 4743      5F315F53 
 4743      73547269 
 4743      6D496461 
 4744              	.LASF88:
 4745 0497 64725074 		.ascii	"drPtr\000"
 4745      7200
 4746              	.LASF134:
 4747 049d 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4747      656E7365 
 4747      5F315F53 
 4747      73497372 
 4747      496E6974 
 4748              	.LASF29:
 4749 04b8 73696750 		.ascii	"sigPFC\000"
 4749      464300
 4750              	.LASF43:
 4751 04bf 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4751      656E7365 
 4751      5F315F53 
 4751      454E5345 
 4751      5F4D4554 
 4752              	.LASF52:
 4753 04de 6C6F7742 		.ascii	"lowBslnRst\000"
 4753      736C6E52 
 4753      737400
 4754              	.LASF128:
 4755 04e9 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4755      656E7365 
 4755      5F315F53 
 4755      65745069 
 4755      6E537461 
 4756              	.LASF129:
 4757 0500 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4757      656E7365 
 4757      5F315F53 
 4757      73537769 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 140


 4757      74636853 
 4758              	.LASF136:
 4759 051f 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4759      656E7365 
 4759      5F315F53 
 4759      73536574 
 4759      4D6F6443 
 4760              	.LASF102:
 4761 0542 746F7461 		.ascii	"totalNumSns\000"
 4761      6C4E756D 
 4761      536E7300 
 4762              	.LASF39:
 4763 054e 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4763      5453454E 
 4763      53455F43 
 4763      53445F4E 
 4763      4F495345 
 4764              	.LASF146:
 4765 0573 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 4765      656E7365 
 4765      5F315F53 
 4765      73435344 
 4765      47657443 
 4766              	.LASF48:
 4767 0597 6E6F6973 		.ascii	"noiseTh\000"
 4767      65546800 
 4768              	.LASF14:
 4769 059f 63686172 		.ascii	"char\000"
 4769      00
 4770              	.LASF179:
 4771 05a4 43794578 		.ascii	"CyExitCriticalSection\000"
 4771      69744372 
 4771      69746963 
 4771      616C5365 
 4771      6374696F 
 4772              	.LASF119:
 4773 05ba 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4773      656E7365 
 4773      5F315F53 
 4773      63616E41 
 4773      6C6C5769 
 4774              	.LASF92:
 4775 05d4 6873696F 		.ascii	"hsiomShift\000"
 4775      6D536869 
 4775      667400
 4776              	.LASF10:
 4777 05df 75696E74 		.ascii	"uint16\000"
 4777      313600
 4778              	.LASF46:
 4779 05e6 7265736F 		.ascii	"resolution\000"
 4779      6C757469 
 4779      6F6E00
 4780              	.LASF85:
 4781 05f1 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4781      656E7365 
 4781      5F315F52 
 4781      414D5F53 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 141


 4781      54525543 
 4782              	.LASF73:
 4783 0607 73746174 		.ascii	"status\000"
 4783      757300
 4784              	.LASF137:
 4785 060e 6D6F6443 		.ascii	"modClk\000"
 4785      6C6B00
 4786              	.LASF65:
 4787 0615 69646163 		.ascii	"idacComp\000"
 4787      436F6D70 
 4787      00
 4788              	.LASF87:
 4789 061e 70635074 		.ascii	"pcPtr\000"
 4789      7200
 4790              	.LASF6:
 4791 0624 6C6F6E67 		.ascii	"long long int\000"
 4791      206C6F6E 
 4791      6720696E 
 4791      7400
 4792              	.LASF19:
 4793 0632 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4793      656E7365 
 4793      5F315F54 
 4793      48524553 
 4793      484F4C44 
 4794              	.LASF51:
 4795 064c 6F6E4465 		.ascii	"onDebounce\000"
 4795      626F756E 
 4795      636500
 4796              	.LASF138:
 4797 0657 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4797      656E7365 
 4797      5F315F53 
 4797      73536574 
 4797      536E7343 
 4798              	.LASF135:
 4799 0677 61646472 		.ascii	"address\000"
 4799      65737300 
 4800              	.LASF141:
 4801 067f 63616C69 		.ascii	"calibrateStatus\000"
 4801      62726174 
 4801      65537461 
 4801      74757300 
 4802              	.LASF79:
 4803 068f 77646774 		.ascii	"wdgtList\000"
 4803      4C697374 
 4803      00
 4804              	.LASF96:
 4805 0698 70747232 		.ascii	"ptr2SnsFlash\000"
 4805      536E7346 
 4805      6C617368 
 4805      00
 4806              	.LASF84:
 4807 06a5 736E7254 		.ascii	"snrTestRawCount\000"
 4807      65737452 
 4807      6177436F 
 4807      756E7400 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 142


 4808              	.LASF189:
 4809 06b5 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Documents\\GitHub\\hello-worl"
 4809      73657273 
 4809      5C627279 
 4809      616E2E6C 
 4809      65655C44 
 4810 06e3 645C5073 		.ascii	"d\\Psoc_101_4BLE\\Design13.cydsn\000"
 4810      6F635F31 
 4810      30315F34 
 4810      424C455C 
 4810      44657369 
 4811              	.LASF49:
 4812 0702 6E4E6F69 		.ascii	"nNoiseTh\000"
 4812      73655468 
 4812      00
 4813              	.LASF77:
 4814 070b 63736430 		.ascii	"csd0Config\000"
 4814      436F6E66 
 4814      696700
 4815              	.LASF18:
 4816 0716 63796973 		.ascii	"cyisraddress\000"
 4816      72616464 
 4816      72657373 
 4816      00
 4817              	.LASF109:
 4818 0723 6C6F6E67 		.ascii	"long double\000"
 4818      20646F75 
 4818      626C6500 
 4819              	.LASF57:
 4820 072f 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4820      656E7365 
 4820      5F315F52 
 4820      414D5F57 
 4820      445F4241 
 4821              	.LASF86:
 4822 074d 6873696F 		.ascii	"hsiomPtr\000"
 4822      6D507472 
 4822      00
 4823              	.LASF11:
 4824 0756 75696E74 		.ascii	"uint32\000"
 4824      333200
 4825              	.LASF50:
 4826 075d 68797374 		.ascii	"hysteresis\000"
 4826      65726573 
 4826      697300
 4827              	.LASF99:
 4828 0768 70747232 		.ascii	"ptr2FltrHistory\000"
 4828      466C7472 
 4828      48697374 
 4828      6F727900 
 4829              	.LASF40:
 4830 0778 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4830      656E7365 
 4830      5F315F55 
 4830      4E444546 
 4830      494E4544 
 4831              	.LASF67:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 143


 4832 078f 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4832      656E7365 
 4832      5F315F52 
 4832      414D5F53 
 4832      4E535F4C 
 4833              	.LASF30:
 4834 07ae 69446163 		.ascii	"iDac\000"
 4834      00
 4835              	.LASF188:
 4836 07b3 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4836      72617465 
 4836      645F536F 
 4836      75726365 
 4836      5C50536F 
 4837              	.LASF28:
 4838 07df 70747253 		.ascii	"ptrSenseClk\000"
 4838      656E7365 
 4838      436C6B00 
 4839              	.LASF120:
 4840 07eb 77646774 		.ascii	"wdgtIndex\000"
 4840      496E6465 
 4840      7800
 4841              	.LASF144:
 4842 07f5 736E7349 		.ascii	"snsIndex\000"
 4842      6E646578 
 4842      00
 4843              	.LASF163:
 4844 07fe 43617053 		.ascii	"CapSense_1_dsRam\000"
 4844      656E7365 
 4844      5F315F64 
 4844      7352616D 
 4844      00
 4845              	.LASF44:
 4846 080f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4846      656E7365 
 4846      5F315F53 
 4846      454E5345 
 4846      5F4D4554 
 4847              	.LASF21:
 4848 082d 736E7343 		.ascii	"snsClkConstantR\000"
 4848      6C6B436F 
 4848      6E737461 
 4848      6E745200 
 4849              	.LASF17:
 4850 083d 72656733 		.ascii	"reg32\000"
 4850      3200
 4851              	.LASF83:
 4852 0843 736E7254 		.ascii	"snrTestScanCounter\000"
 4852      65737453 
 4852      63616E43 
 4852      6F756E74 
 4852      657200
 4853              	.LASF68:
 4854 0856 636F6E66 		.ascii	"configId\000"
 4854      69674964 
 4854      00
 4855              	.LASF98:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 144


 4856 085f 70747232 		.ascii	"ptr2SnsRam\000"
 4856      536E7352 
 4856      616D00
 4857              	.LASF108:
 4858 086a 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4858      656E7365 
 4858      5F315F46 
 4858      4C415348 
 4858      5F535452 
 4859              	.LASF76:
 4860 0882 736E7353 		.ascii	"snsStatus\000"
 4860      74617475 
 4860      7300
 4861              	.LASF55:
 4862 088c 736E7343 		.ascii	"snsClkSource\000"
 4862      6C6B536F 
 4862      75726365 
 4862      00
 4863              	.LASF56:
 4864 0899 73697A65 		.ascii	"sizetype\000"
 4864      74797065 
 4864      00
 4865              	.LASF184:
 4866 08a2 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4866      656E7365 
 4866      5F315F43 
 4866      53444469 
 4866      73636F6E 
 4867              	.LASF2:
 4868 08be 73686F72 		.ascii	"short int\000"
 4868      7420696E 
 4868      7400
 4869              	.LASF4:
 4870 08c8 6C6F6E67 		.ascii	"long int\000"
 4870      20696E74 
 4870      00
 4871              	.LASF74:
 4872 08d1 77646774 		.ascii	"wdgtEnable\000"
 4872      456E6162 
 4872      6C6500
 4873              	.LASF139:
 4874 08dc 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4874      656E7365 
 4874      5F315F53 
 4874      73536574 
 4874      436C6F63 
 4875              	.LASF164:
 4876 08fa 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4876      656E7365 
 4876      5F315F64 
 4876      73466C61 
 4876      736800
 4877              	.LASF63:
 4878 090d 64696666 		.ascii	"diff\000"
 4878      00
 4879              	.LASF71:
 4880 0912 74756E65 		.ascii	"tunerCmd\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 145


 4880      72436D64 
 4880      00
 4881              	.LASF89:
 4882 091b 70735074 		.ascii	"psPtr\000"
 4882      7200
 4883              	.LASF42:
 4884 0921 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4884      656E7365 
 4884      5F315F53 
 4884      454E5345 
 4884      5F4D4554 
 4885              	.LASF183:
 4886 093f 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 4886      656E7365 
 4886      5F315F43 
 4886      53444361 
 4886      6C696272 
 4887              	.LASF104:
 4888 095d 6E756D43 		.ascii	"numCols\000"
 4888      6F6C7300 
 4889              	.LASF174:
 4890 0965 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 4890      656E7365 
 4890      5F315F63 
 4890      616C6962 
 4890      72617465 
 4891              	.LASF24:
 4892 0983 66696E67 		.ascii	"fingerCap\000"
 4892      65724361 
 4892      7000
 4893              	.LASF75:
 4894 098d 77646774 		.ascii	"wdgtStatus\000"
 4894      53746174 
 4894      757300
 4895              	.LASF176:
 4896 0998 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 4896      656E7365 
 4896      5F315F43 
 4896      53445365 
 4896      74757057 
 4897              	.LASF167:
 4898 09b2 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4898      656E7365 
 4898      5F315F73 
 4898      656E736F 
 4898      72496E64 
 4899              	.LASF185:
 4900 09c9 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 4900      7453656E 
 4900      73655F54 
 4900      756E6550 
 4900      72657363 
 4901              	.LASF151:
 4902 09e3 70727353 		.ascii	"prsSize\000"
 4902      697A6500 
 4903              	.LASF41:
 4904 09eb 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 146


 4904      656E7365 
 4904      5F315F53 
 4904      454E5345 
 4904      5F4D4554 
 4905              	.LASF93:
 4906 0a09 64725368 		.ascii	"drShift\000"
 4906      69667400 
 4907              	.LASF5:
 4908 0a11 6C6F6E67 		.ascii	"long unsigned int\000"
 4908      20756E73 
 4908      69676E65 
 4908      6420696E 
 4908      7400
 4909              	.LASF147:
 4910 0a23 72657456 		.ascii	"retVal\000"
 4910      616C00
 4911              	.LASF22:
 4912 0a2a 76526566 		.ascii	"vRef\000"
 4912      00
 4913              	.LASF53:
 4914 0a2f 69646163 		.ascii	"idacMod\000"
 4914      4D6F6400 
 4915              	.LASF100:
 4916 0a37 70747232 		.ascii	"ptr2DebounceArr\000"
 4916      4465626F 
 4916      756E6365 
 4916      41727200 
 4917              	.LASF175:
 4918 0a47 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4918      656E7365 
 4918      5F315F53 
 4918      73435344 
 4918      456C6563 
 4919              	.LASF47:
 4920 0a66 66696E67 		.ascii	"fingerTh\000"
 4920      65725468 
 4920      00
 4921              	.LASF142:
 4922 0a6f 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4922      656E7365 
 4922      5F315F43 
 4922      616C6962 
 4922      72617465 
 4923              	.LASF62:
 4924 0a8e 62736C6E 		.ascii	"bslnExt\000"
 4924      45787400 
 4925              	.LASF15:
 4926 0a96 63797374 		.ascii	"cystatus\000"
 4926      61747573 
 4926      00
 4927              	.LASF1:
 4928 0a9f 756E7369 		.ascii	"unsigned char\000"
 4928      676E6564 
 4928      20636861 
 4928      7200
 4929              	.LASF113:
 4930 0aad 7472696D 		.ascii	"trimValue\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 147


 4930      56616C75 
 4930      6500
 4931              	.LASF101:
 4932 0ab7 73746174 		.ascii	"staticConfig\000"
 4932      6963436F 
 4932      6E666967 
 4932      00
 4933              	.LASF25:
 4934 0ac4 73656E73 		.ascii	"sensorCap\000"
 4934      6F724361 
 4934      7000
 4935              	.LASF127:
 4936 0ace 696F5074 		.ascii	"ioPtr\000"
 4936      7200
 4937              	.LASF97:
 4938 0ad4 70747232 		.ascii	"ptr2WdgtRam\000"
 4938      57646774 
 4938      52616D00 
 4939              	.LASF123:
 4940 0ae0 73746174 		.ascii	"state\000"
 4940      6500
 4941              	.LASF125:
 4942 0ae6 656C7464 		.ascii	"eltdIndex\000"
 4942      496E6465 
 4942      7800
 4943              	.LASF90:
 4944 0af0 6873696F 		.ascii	"hsiomMask\000"
 4944      6D4D6173 
 4944      6B00
 4945              	.LASF170:
 4946 0afa 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4946      656E7365 
 4946      5F315F63 
 4946      75727265 
 4946      6E745365 
 4947              	.LASF145:
 4948 0b18 63757253 		.ascii	"curSnsIOPtr\000"
 4948      6E73494F 
 4948      50747200 
 4949              	.LASF54:
 4950 0b24 736E7343 		.ascii	"snsClk\000"
 4950      6C6B00
 4951              	.LASF178:
 4952 0b2b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4952      74657243 
 4952      72697469 
 4952      63616C53 
 4952      65637469 
 4953              	.LASF0:
 4954 0b42 7369676E 		.ascii	"signed char\000"
 4954      65642063 
 4954      68617200 
 4955              	.LASF61:
 4956 0b4e 62736C6E 		.ascii	"bsln\000"
 4956      00
 4957              	.LASF3:
 4958 0b53 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 148


 4958      7420756E 
 4958      7369676E 
 4958      65642069 
 4958      6E7400
 4959              	.LASF31:
 4960 0b66 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 4960      5F54554E 
 4960      455F434F 
 4960      4E464947 
 4960      5F545950 
 4961              	.LASF110:
 4962 0b7c 43617053 		.ascii	"CapSense_1_SsTrimIdacsSourcing\000"
 4962      656E7365 
 4962      5F315F53 
 4962      73547269 
 4962      6D496461 
 4963              	.LASF95:
 4964 0b9b 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4964      656E7365 
 4964      5F315F46 
 4964      4C415348 
 4964      5F494F5F 
 4965              	.LASF114:
 4966 0bb6 6E657752 		.ascii	"newRegValue\000"
 4966      65675661 
 4966      6C756500 
 4967              	.LASF143:
 4968 0bc2 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 4968      656E7365 
 4968      5F315F53 
 4968      73436C65 
 4968      61724353 
 4969              	.LASF9:
 4970 0bdf 75696E74 		.ascii	"uint8\000"
 4970      3800
 4971              	.LASF13:
 4972 0be5 646F7562 		.ascii	"double\000"
 4972      6C6500
 4973              	.LASF64:
 4974 0bec 6E656742 		.ascii	"negBslnRstCnt\000"
 4974      736C6E52 
 4974      7374436E 
 4974      7400
 4975              	.LASF66:
 4976 0bfa 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4976      656E7365 
 4976      5F315F52 
 4976      414D5F53 
 4976      4E535F53 
 4977              	.LASF32:
 4978 0c14 70617261 		.ascii	"param0\000"
 4978      6D3000
 4979              	.LASF33:
 4980 0c1b 70617261 		.ascii	"param1\000"
 4980      6D3100
 4981              	.LASF34:
 4982 0c22 70617261 		.ascii	"param2\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 149


 4982      6D3200
 4983              	.LASF35:
 4984 0c29 70617261 		.ascii	"param3\000"
 4984      6D3300
 4985              	.LASF36:
 4986 0c30 70617261 		.ascii	"param4\000"
 4986      6D3400
 4987              	.LASF37:
 4988 0c37 70617261 		.ascii	"param5\000"
 4988      6D3500
 4989              	.LASF38:
 4990 0c3e 70617261 		.ascii	"param6\000"
 4990      6D3600
 4991              	.LASF159:
 4992 0c45 6175746F 		.ascii	"autoTuneConfig\000"
 4992      54756E65 
 4992      436F6E66 
 4992      696700
 4993              	.LASF150:
 4994 0c54 736E7343 		.ascii	"snsClkDivider\000"
 4994      6C6B4469 
 4994      76696465 
 4994      7200
 4995              	.LASF152:
 4996 0c62 6D6F6443 		.ascii	"modClkDivider\000"
 4996      6C6B4469 
 4996      76696465 
 4996      7200
 4997              	.LASF69:
 4998 0c70 64657669 		.ascii	"deviceId\000"
 4998      63654964 
 4998      00
 4999              	.LASF115:
 5000 0c79 77696467 		.ascii	"widgetStatus\000"
 5000      65745374 
 5000      61747573 
 5000      00
 5001              	.LASF58:
 5002 0c86 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5002      656E7365 
 5002      5F315F52 
 5002      414D5F57 
 5002      445F4255 
 5003              	.LASF121:
 5004 0ca6 77696467 		.ascii	"widgetId\000"
 5004      65744964 
 5004      00
 5005              	.LASF191:
 5006 0caf 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5006      656E7365 
 5006      5F315F53 
 5006      73506F73 
 5006      74416C6C 
 5007              	.LASF166:
 5008 0ccf 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5008      656E7365 
 5008      5F315F77 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc9fBHaw.s 			page 150


 5008      69646765 
 5008      74496E64 
 5009              	.LASF107:
 5010 0ce6 77646774 		.ascii	"wdgtArray\000"
 5010      41727261 
 5010      7900
 5011              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
