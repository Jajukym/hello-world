C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.2\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) DF(DEBUG) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.2 Service Pack 1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0u
  26          #define CYCLOCKSTART_XTAL_ERROR  1u
  27          #define CYCLOCKSTART_32KHZ_ERROR 2u
  28          #define CYCLOCKSTART_PLL_ERROR   3u
  29          
  30          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
              /*******************************************************************************
              * Function Name: CyClockStartupError
              ********************************************************************************
              * Summary:
              *  If an error is encountered during clock configuration (crystal startup error,
              *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
              *  the customer, this function will stop in an infinite loop.
              *
              * Parameters:
              *   void
              *
              * Return:
              *   void
              *
              *******************************************************************************/
              #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
              static void CyClockStartupError(uint8 errorCode);
              #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
              static void CyClockStartupError(uint8 errorCode)
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 2   

              {
                  /* To remove the compiler warning if errorCode not used.                */
                  errorCode = errorCode;
              
                  /* `#START CyClockStartupError` */
              
                  /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
                  /* we will end up here to allow the customer to implement something to  */
                  /* deal with the clock condition.                                       */
              
                  /* `#END` */
              
                  /* If nothing else, stop here since the clocks have not started         */
                  /* correctly.                                                           */
                  while(1) {}
              }
              #endif
  71          
  72          
  73          #if defined(__C51__) || defined(__CX51__)
  74                  #define CYPACKED
  75                  #define CYALIGNED
  76                  
  77                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  78          
  79          
  80          
  81                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  82                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  83                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  84          #else
                      #error Unsupported toolchain
              #endif
  87          
  88          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  89          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
  90          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x000802E0u)
  91          
  92          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
  93          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x000802E8u)
  94          
  95          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
  96          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000802F4u)
  97          
  98          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
  99          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x000802FCu)
 100          
 101          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 102          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x00080304u)
 103          
 104          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 105          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080310u)
 106          
 107          
 108          /*******************************************************************************
 109          * Function Name: ClockSetup
 110          ********************************************************************************
 111          *
 112          * Summary:
 113          *  Performs the initialization of all of the clocks in the device based on the
 114          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 115          *  clocks and setting the necessary dividers to produce the desired frequency. 
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 3   

 116          *
 117          * Parameters:
 118          *  void
 119          *
 120          * Return:
 121          *  void
 122          *
 123          *******************************************************************************/
 124          static void ClockSetup(void);
 125          static void ClockSetup(void)
 126          {
 127   1              uint8 x32TrHold;
 128   1              uint32 timeout;
 129   1              uint8 pllLock;
 130   1      
 131   1              x32TrHold = CY_GET_REG8((void CYXDATA *)CYREG_X32_TR);
 132   1      
 133   1              /* Configure Digital Clocks based on settings from Clock DWR */
 134   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0002u);
 135   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 136   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x000Fu);
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 138   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x003Bu);
 139   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 140   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x0BB7u);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x0CCCu);
 143   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x1Du);
 144   1      
 145   1              /* Configure Analog Clocks based on settings from Clock DWR */
 146   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 147   1      
 148   1              /* Configure ILO based on settings from Clock DWR */
 149   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 150   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 151   1      
 152   1              /* Configure XTAL 32kHz based on settings from Clock DWR */
 153   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_TST), 0xF3u);
 154   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), 0x03u);
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CFG), 0x84u);
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CR), 0x05u);
 157   1              /* Wait up to 1000000us for the XTAL 32kHz to lock */
 158   1              for (timeout = 1000000u / 10u; (timeout > 0u) && ((CY_GET_REG8((void CYXDATA *)CYREG_SLOWCLK_X32_CR) & 0x
             -20u) == 0u); timeout--) { 
 159   2                      
 160   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 161   2              }
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), (x32TrHold));
 163   1      
 164   1              /* Configure IMO based on settings from Clock DWR */
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 167   1      
 168   1              /* Configure PLL based on settings from Clock DWR */
 169   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 170   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051u);
 171   1              /* Wait up to 250us for the PLL to lock */
 172   1              pllLock = 0u;
 173   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--) { 
 174   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 4   

             -0x01u) >> 0));
 175   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 176   2              }
 177   1      
 178   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 179   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 180   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 181   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 182   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 183   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 184   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 186   1      
 187   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x1Fu
             -)));
 188   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 189   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 190   1      }
 191          
 192          
 193          /* Analog API Functions */
 194          
 195          
 196          /*******************************************************************************
 197          * Function Name: AnalogSetDefault
 198          ********************************************************************************
 199          *
 200          * Summary:
 201          *  Sets up the analog portions of the chip to default values based on chip
 202          *  configuration options from the project.
 203          *
 204          * Parameters:
 205          *  void
 206          *
 207          * Return:
 208          *  void
 209          *
 210          *******************************************************************************/
 211          static void AnalogSetDefault(void);
 212          static void AnalogSetDefault(void)
 213          {
 214   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 215   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 216   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_DFT1, ((uint8)((uint8)bg_xover_inl_trim >> 4)) & 0x0Fu);
 217   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT3_AG, 0x04u);
 218   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x40u);
 219   1              CY_SET_REG8((void CYXDATA *)CYREG_BUS_SW0, 0x40u);
 220   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 221   1      }
 222          
 223          
 224          /*******************************************************************************
 225          * Function Name: SetAnalogRoutingPumps
 226          ********************************************************************************
 227          *
 228          * Summary:
 229          * Enables or disables the analog pumps feeding analog routing switches.
 230          * Intended to be called at startup, based on the Vdda system configuration;
 231          * may be called during operation when the user informs us that the Vdda voltage
 232          * crossed the pump threshold.
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 5   

 233          *
 234          * Parameters:
 235          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 236          *
 237          * Return:
 238          *  void
 239          *
 240          *******************************************************************************/
 241          void SetAnalogRoutingPumps(uint8 enabled)
 242          {
 243   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 244   1              if (enabled != 0u)
 245   1              {
 246   2                      regValue |= 0x22u;
 247   2              }
 248   1              else
 249   1              {
 250   2                      regValue &= (uint8)~0x22u;
 251   2              }
 252   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 253   1      }
 254          
 255          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 256          /* This is an implementation detail of the AMux. Code that depends on it may be
 257             incompatible with other versions of PSoC Creator. */
 258          uint8 CYXDATA * const CYCODE adcVFan_AMux__addrTable[2] = {
 259                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 260                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 261          };
 262          
 263          /* This is an implementation detail of the AMux. Code that depends on it may be
 264             incompatible with other versions of PSoC Creator. */
 265          const uint8 CYCODE adcVFan_AMux__maskTable[2] = {
 266                  0x40u, 
 267                  0x40u, 
 268          };
 269          
 270          /*******************************************************************************
 271          * Function Name: adcVFan_AMux_Set
 272          ********************************************************************************
 273          * Summary:
 274          *  This function is used to set a particular channel as active on the AMux.
 275          *
 276          * Parameters:  
 277          *   channel - The mux channel input to set as active
 278          *
 279          * Return:
 280          *   void
 281          *
 282          *******************************************************************************/
 283          void adcVFan_AMux_Set(uint8 channel)
 284          {
 285   1              if (channel < 2)
 286   1              {
 287   2                      *adcVFan_AMux__addrTable[channel] |= adcVFan_AMux__maskTable[channel];
 288   2              }
 289   1      }
 290          
 291          /*******************************************************************************
 292          * Function Name: adcVFan_AMux_Unset
 293          ********************************************************************************
 294          * Summary:
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 6   

 295          *  This function is used to clear a particular channel from being active on the
 296          *  AMux.
 297          *
 298          * Parameters:  
 299          *   channel - The mux channel input to mark inactive
 300          *
 301          * Return:
 302          *   void
 303          *
 304          *******************************************************************************/
 305          void adcVFan_AMux_Unset(uint8 channel)
 306          {
 307   1              if (channel < 2)
 308   1              {
 309   2                      *adcVFan_AMux__addrTable[channel] &= (uint8)~adcVFan_AMux__maskTable[channel];
 310   2              }
 311   1      }
 312          
 313          
 314          
 315          /*******************************************************************************
 316          * Function Name: cyfitter_cfg
 317          ********************************************************************************
 318          * Summary:
 319          *  This function is called by the start-up code for the selected device. It
 320          *  performs all of the necessary device configuration based on the design
 321          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 322          *  as Clocks and Pins as well as any component configuration that is necessary.
 323          *
 324          * Parameters:  
 325          *   void
 326          *
 327          * Return:
 328          *   void
 329          *
 330          *******************************************************************************/
 331          
 332          void cyfitter_cfg(void)
 333          {
 334   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 335   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 336   1      
 337   1              {
 338   2      
 339   2                      typedef struct {
 340   2                              void CYFAR *address;
 341   2                              uint16 size;
 342   2                      } CYPACKED cfg_memset_t;
 343   2      
 344   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 345   2                              /* address, size */
 346   2                              {(void CYFAR *)(CYREG_PRT0_DR), 32u},
 347   2                              {(void CYFAR *)(CYREG_PRT4_DR), 32u},
 348   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 349   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 350   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 351   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 352   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 353   2                      };
 354   2      
 355   2                      uint8 CYDATA i;
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 7   

 356   2      
 357   2                      /* Zero out critical memory blocks before beginning configuration */
 358   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 359   2                      {
 360   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 361   3                              CYMEMZERO(ms->address, ms->size);
 362   3                      }
 363   2      
 364   2                      cfg_write_bytes(cfg_byte_table);
 365   2      
 366   2                      /* Enable digital routing */
 367   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 368   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 369   2      
 370   2                      /* Enable UDB array */
 371   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 372   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 373   2              }
 374   1      
 375   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 376   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 377   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 378   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 379   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (const void CYFAR *)(BS_IOPINS0_3_VAL), 8u);
 380   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (const void CYFAR *)(BS_IOPINS0_6_VAL), 10u);
 381   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 382   1      
 383   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 384   1              CY_SET_REG8((void CYXDATA *)CYDEV_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYDEV_BOOST_CR2) | 0x08u));
 385   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 386   1              {
 387   2                      CY_SET_REG8((void CYXDATA *)CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3Au);
 388   2              }
 389   1      
 390   1      
 391   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 392   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 393   1              /* Setup clocks based on selections from Clock DWR */
 394   1              ClockSetup();
 395   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 396   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 397   1      
 398   1              /* Perform basic analog initialization to defaults */
 399   1              AnalogSetDefault();
 400   1      
 401   1              /* Configure alternate active mode */
 402   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 403   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 404   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 131
0000 904698            MOV     DPTR,#04698H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#x32TrHold
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
000A 7B00              MOV     R3,#00H
000C 7A40              MOV     R2,#040H
000E 7980              MOV     R1,#080H
0010 7D02              MOV     R5,#02H
0012 7C00              MOV     R4,#00H
0014 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 135
0017 904082            MOV     DPTR,#04082H
001A 7418              MOV     A,#018H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7D0F              MOV     R5,#0FH
0025 7C00              MOV     R4,#00H
0027 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 137
002A 904086            MOV     DPTR,#04086H
002D 7418              MOV     A,#018H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0030 7B00              MOV     R3,#00H
0032 7A40              MOV     R2,#040H
0034 7988              MOV     R1,#088H
0036 7D3B              MOV     R5,#03BH
0038 7C00              MOV     R4,#00H
003A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 139
003D 90408A            MOV     DPTR,#0408AH
0040 7418              MOV     A,#018H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
0043 7B00              MOV     R3,#00H
0045 7A40              MOV     R2,#040H
0047 798C              MOV     R1,#08CH
0049 7DB7              MOV     R5,#0B7H
004B 7C0B              MOV     R4,#0BH
004D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
0050 90408E            MOV     DPTR,#0408EH
0053 7419              MOV     A,#019H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0056 7B00              MOV     R3,#00H
0058 7A40              MOV     R2,#040H
005A 7990              MOV     R1,#090H
005C 7DCC              MOV     R5,#0CCH
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 9   

005E 7C0C              MOV     R4,#0CH
0060 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 143
0063 904092            MOV     DPTR,#04092H
0066 741D              MOV     A,#01DH
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0069 7B08              MOV     R3,#08H
006B 7A03              MOV     R2,#03H
006D 7910              MOV     R1,#010H
006F C003              PUSH    AR3
0071 C002              PUSH    AR2
0073 C001              PUSH    AR1
0075 7B00              MOV     R3,#00H
0077 7A41              MOV     R2,#041H
0079 7900              MOV     R1,#00H
007B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
007E 120000      E     LCALL   ?C?PSTXDATA
0081 D001              POP     AR1
0083 D002              POP     AR2
0085 D003              POP     AR3
0087 7F04              MOV     R7,#04H
0089 7E00              MOV     R6,#00H
008B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 149
008E 904300            MOV     DPTR,#04300H
0091 7402              MOV     A,#02H
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
0094 904000            MOV     DPTR,#04000H
0097 7408              MOV     A,#08H
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
009A 90430A            MOV     DPTR,#0430AH
009D 74F3              MOV     A,#0F3H
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
00A0 904698            MOV     DPTR,#04698H
00A3 7403              MOV     A,#03H
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00A6 904309            MOV     DPTR,#04309H
00A9 7484              MOV     A,#084H
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
00AC 904308            MOV     DPTR,#04308H
00AF 7405              MOV     A,#05H
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
00B2 7FA0              MOV     R7,#0A0H
00B4 7E86              MOV     R6,#086H
00B6 7D01              MOV     R5,#01H
00B8 7C00              MOV     R4,#00H
00BA 900000      R     MOV     DPTR,#timeout
00BD 120000      E     LCALL   ?C?LSTXDATA
00C0         ?C0001:
00C0 900000      R     MOV     DPTR,#timeout
00C3 120000      E     LCALL   ?C?LLDXDATA
00C6 D3                SETB    C
00C7 EF                MOV     A,R7
00C8 9400              SUBB    A,#00H
00CA EE                MOV     A,R6
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 10  

00CB 9400              SUBB    A,#00H
00CD 4033              JC      ?C0002
00CF 904308            MOV     DPTR,#04308H
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 5420              ANL     A,#020H
00D7 FF                MOV     R7,A
00D8 7E00              MOV     R6,#00H
00DA EF                MOV     A,R7
00DB 4E                ORL     A,R6
00DC 7024              JNZ     ?C0002
                                           ; SOURCE LINE # 160
00DE 7FE0              MOV     R7,#0E0H
00E0 7E01              MOV     R6,#01H
00E2 7D00              MOV     R5,#00H
00E4 7C00              MOV     R4,#00H
00E6 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 161
00E9 900000      R     MOV     DPTR,#timeout
00EC 120000      E     LCALL   ?C?LLDXDATA
00EF 7BFF              MOV     R3,#0FFH
00F1 7AFF              MOV     R2,#0FFH
00F3 79FF              MOV     R1,#0FFH
00F5 78FF              MOV     R0,#0FFH
00F7 120000      E     LCALL   ?C?LADD
00FA 900000      R     MOV     DPTR,#timeout
00FD 120000      E     LCALL   ?C?LSTXDATA
0100 80BE              SJMP    ?C0001
0102         ?C0002:
                                           ; SOURCE LINE # 162
0102 900000      R     MOV     DPTR,#x32TrHold
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 904698            MOV     DPTR,#04698H
010A EF                MOV     A,R7
010B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
010C 904200            MOV     DPTR,#04200H
010F 7403              MOV     A,#03H
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0112 7B0C              MOV     R3,#0CH
0114 7A01              MOV     R2,#01H
0116 7908              MOV     R1,#08H
0118 120000      E     LCALL   _cyread8
011B 9046A1            MOV     DPTR,#046A1H
011E EF                MOV     A,R7
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
0120 7B00              MOV     R3,#00H
0122 7A42              MOV     R2,#042H
0124 7922              MOV     R1,#022H
0126 7D08              MOV     R5,#08H
0128 7C00              MOV     R4,#00H
012A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 170
012D 7B00              MOV     R3,#00H
012F 7A42              MOV     R2,#042H
0131 7920              MOV     R1,#020H
0133 7D51              MOV     R5,#051H
0135 7C10              MOV     R4,#010H
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 11  

0137 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 172
013A 900000      R     MOV     DPTR,#pllLock
013D E4                CLR     A
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
013F 7F19              MOV     R7,#019H
0141 7E00              MOV     R6,#00H
0143 7D00              MOV     R5,#00H
0145 7C00              MOV     R4,#00H
0147 900000      R     MOV     DPTR,#timeout
014A 120000      E     LCALL   ?C?LSTXDATA
014D         ?C0004:
014D 900000      R     MOV     DPTR,#timeout
0150 120000      E     LCALL   ?C?LLDXDATA
0153 D3                SETB    C
0154 EF                MOV     A,R7
0155 9400              SUBB    A,#00H
0157 EE                MOV     A,R6
0158 9400              SUBB    A,#00H
015A 404E              JC      ?C0005
015C 900000      R     MOV     DPTR,#pllLock
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 EF                MOV     A,R7
0162 6403              XRL     A,#03H
0164 6044              JZ      ?C0005
                                           ; SOURCE LINE # 174
0166 904225            MOV     DPTR,#04225H
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B EF                MOV     A,R7
016C 5401              ANL     A,#01H
016E FF                MOV     R7,A
016F 7E00              MOV     R6,#00H
0171 900000      R     MOV     DPTR,#pllLock
0174 E0                MOVX    A,@DPTR
0175 FE                MOV     R6,A
0176 EE                MOV     A,R6
0177 25E0              ADD     A,ACC
0179 FE                MOV     R6,A
017A EE                MOV     A,R6
017B 4F                ORL     A,R7
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 5403              ANL     A,#03H
0180 FF                MOV     R7,A
0181 900000      R     MOV     DPTR,#pllLock
0184 EF                MOV     A,R7
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
0186 7FE0              MOV     R7,#0E0H
0188 7E01              MOV     R6,#01H
018A 7D00              MOV     R5,#00H
018C 7C00              MOV     R4,#00H
018E 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 176
0191 900000      R     MOV     DPTR,#timeout
0194 120000      E     LCALL   ?C?LLDXDATA
0197 7BFF              MOV     R3,#0FFH
0199 7AFF              MOV     R2,#0FFH
019B 79FF              MOV     R1,#0FFH
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 12  

019D 78FF              MOV     R0,#0FFH
019F 120000      E     LCALL   ?C?LADD
01A2 900000      R     MOV     DPTR,#timeout
01A5 120000      E     LCALL   ?C?LSTXDATA
01A8 80A3              SJMP    ?C0004
01AA         ?C0005:
                                           ; SOURCE LINE # 179
01AA 7B00              MOV     R3,#00H
01AC 7A40              MOV     R2,#040H
01AE 7904              MOV     R1,#04H
01B0 7D00              MOV     R5,#00H
01B2 7C01              MOV     R4,#01H
01B4 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 180
01B7 904004            MOV     DPTR,#04004H
01BA 7407              MOV     A,#07H
01BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
01BD 904006            MOV     DPTR,#04006H
01C0 E4                CLR     A
01C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
01C2 904008            MOV     DPTR,#04008H
01C5 7448              MOV     A,#048H
01C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
01C8 904004            MOV     DPTR,#04004H
01CB E4                CLR     A
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
01CD 904001            MOV     DPTR,#04001H
01D0 7402              MOV     A,#02H
01D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
01D3 90400B            MOV     DPTR,#0400BH
01D6 7404              MOV     A,#04H
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
01D9 9043A2            MOV     DPTR,#043A2H
01DC E0                MOVX    A,@DPTR
01DD FF                MOV     R7,A
01DE EF                MOV     A,R7
01DF 441F              ORL     A,#01FH
01E1 FF                MOV     R7,A
01E2 9043A2            MOV     DPTR,#043A2H
01E5 EF                MOV     A,R7
01E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
01E7 9043A1            MOV     DPTR,#043A1H
01EA E0                MOVX    A,@DPTR
01EB FF                MOV     R7,A
01EC EF                MOV     A,R7
01ED 4401              ORL     A,#01H
01EF FF                MOV     R7,A
01F0 9043A1            MOV     DPTR,#043A1H
01F3 EF                MOV     A,R7
01F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
01F5 9043A0            MOV     DPTR,#043A0H
01F8 E0                MOVX    A,@DPTR
01F9 FF                MOV     R7,A
01FA EF                MOV     A,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 13  

01FB 4480              ORL     A,#080H
01FD FF                MOV     R7,A
01FE 9043A0            MOV     DPTR,#043A0H
0201 EF                MOV     A,R7
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
0203 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
002F 90513D            MOV     DPTR,#0513DH
0032 7404              MOV     A,#04H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
0035 905B00            MOV     DPTR,#05B00H
0038 7440              MOV     A,#040H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
003B 905B58            MOV     DPTR,#05B58H
003E 7440              MOV     A,#040H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
0041 905876            MOV     DPTR,#05876H
0044 7444              MOV     A,#044H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0047 22                RET     
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 14  

             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 241
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
0035         ?C0010:
                                           ; SOURCE LINE # 252
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 253
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _adcVFan_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 283
0000 900000      R     MOV     DPTR,#channel
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 15  

0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0013
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW adcVFan_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH adcVFan_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#adcVFan_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
0046         ?C0013:
0046 22                RET     
             ; FUNCTION _adcVFan_AMux_Set (END)

             ; FUNCTION _adcVFan_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 305
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 16  

0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0015
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW adcVFan_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH adcVFan_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#adcVFan_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
0049         ?C0015:
0049 22                RET     
             ; FUNCTION _adcVFan_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
                                           ; SOURCE LINE # 335
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 17  

0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 337
                                           ; SOURCE LINE # 358
0016 750000      R     MOV     i,#00H
0019         ?C0016:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9407              SUBB    A,#07H
001E 503A              JNC     ?C0017
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 360
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 361
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 362
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0016
005A         ?C0017:
                                           ; SOURCE LINE # 364
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 367
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 18  

006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 368
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 371
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 376
00AB 7B08              MOV     R3,#08H
00AD 7A02              MOV     R2,#02H
00AF 79E0              MOV     R1,#0E0H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 79C2              MOV     R1,#0C2H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F08              MOV     R7,#08H
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 377
00D0 7B08              MOV     R3,#08H
00D2 7A02              MOV     R2,#02H
00D4 79E8              MOV     R1,#0E8H
00D6 C003              PUSH    AR3
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 19  

00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 79F0              MOV     R1,#0F0H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F0A              MOV     R7,#0AH
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 378
00F5 7B08              MOV     R3,#08H
00F7 7A02              MOV     R2,#02H
00F9 79F4              MOV     R1,#0F4H
00FB C003              PUSH    AR3
00FD C002              PUSH    AR2
00FF C001              PUSH    AR1
0101 7B00              MOV     R3,#00H
0103 7A51              MOV     R2,#051H
0105 7922              MOV     R1,#022H
0107 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010A 120000      E     LCALL   ?C?PSTXDATA
010D D001              POP     AR1
010F D002              POP     AR2
0111 D003              POP     AR3
0113 7F08              MOV     R7,#08H
0115 7E00              MOV     R6,#00H
0117 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 379
011A 7B08              MOV     R3,#08H
011C 7A02              MOV     R2,#02H
011E 79FC              MOV     R1,#0FCH
0120 C003              PUSH    AR3
0122 C002              PUSH    AR2
0124 C001              PUSH    AR1
0126 7B00              MOV     R3,#00H
0128 7A51              MOV     R2,#051H
012A 7932              MOV     R1,#032H
012C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
012F 120000      E     LCALL   ?C?PSTXDATA
0132 D001              POP     AR1
0134 D002              POP     AR2
0136 D003              POP     AR3
0138 7F08              MOV     R7,#08H
013A 7E00              MOV     R6,#00H
013C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 380
013F 7B08              MOV     R3,#08H
0141 7A03              MOV     R2,#03H
0143 7904              MOV     R1,#04H
0145 C003              PUSH    AR3
0147 C002              PUSH    AR2
0149 C001              PUSH    AR1
014B 7B00              MOV     R3,#00H
014D 7A51              MOV     R2,#051H
014F 7960              MOV     R1,#060H
0151 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0154 120000      E     LCALL   ?C?PSTXDATA
0157 D001              POP     AR1
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 20  

0159 D002              POP     AR2
015B D003              POP     AR3
015D 7F0A              MOV     R7,#0AH
015F 7E00              MOV     R6,#00H
0161 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 381
0164 9044F4            MOV     DPTR,#044F4H
0167 7401              MOV     A,#01H
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
016A 904322            MOV     DPTR,#04322H
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
016F EF                MOV     A,R7
0170 4408              ORL     A,#08H
0172 FF                MOV     R7,A
0173 904322            MOV     DPTR,#04322H
0176 EF                MOV     A,R7
0177 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 385
0178 9046EC            MOV     DPTR,#046ECH
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E C3                CLR     C
017F 9405              SUBB    A,#05H
0181 5006              JNC     ?C0019
                                           ; SOURCE LINE # 386
                                           ; SOURCE LINE # 387
0183 904689            MOV     DPTR,#04689H
0186 743A              MOV     A,#03AH
0188 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 388
0189         ?C0019:
                                           ; SOURCE LINE # 392
0189 904800            MOV     DPTR,#04800H
018C 74F1              MOV     A,#0F1H
018E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 394
018F 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 396
0192 904800            MOV     DPTR,#04800H
0195 74B1              MOV     A,#0B1H
0197 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 399
0198 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 402
019B 7B00              MOV     R3,#00H
019D 7A43              MOV     R2,#043H
019F 79A0              MOV     R1,#0A0H
01A1 C003              PUSH    AR3
01A3 C002              PUSH    AR2
01A5 C001              PUSH    AR1
01A7 7B00              MOV     R3,#00H
01A9 7A43              MOV     R2,#043H
01AB 79B0              MOV     R1,#0B0H
01AD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01B0 120000      E     LCALL   ?C?PSTXDATA
01B3 D001              POP     AR1
01B5 D002              POP     AR2
01B7 D003              POP     AR3
01B9 7F0E              MOV     R7,#0EH
C51 COMPILER V9.03   CYFITTER_CFG                                                          07/19/2013 02:54:50 PAGE 21  

01BB 7E00              MOV     R6,#00H
01BD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 403
01C0 9043B0            MOV     DPTR,#043B0H
01C3 E0                MOVX    A,@DPTR
01C4 FF                MOV     R7,A
01C5 EF                MOV     A,R7
01C6 54FD              ANL     A,#0FDH
01C8 FF                MOV     R7,A
01C9 EF                MOV     A,R7
01CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 404
01CB 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1257    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
