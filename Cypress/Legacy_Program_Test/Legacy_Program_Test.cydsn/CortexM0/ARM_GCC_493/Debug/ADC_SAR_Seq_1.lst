ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000100u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 4


 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 2149     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 204B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 204B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 5


 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 1F49     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 1F49     		ldr	r1, .L6+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 204A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 1F4A     		ldr	r2, .L6+24
  64 0030 1F4B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 1F4A     		ldr	r2, .L6+32
  68 0036 204B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 1F4A     		ldr	r2, .L6+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 1F4A     		ldr	r2, .L6+44
  76 0042 2049     		ldr	r1, .L6+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 2049     		ldr	r1, .L6+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  81              		.loc 1 197 0 discriminator 4
  82 004a 204A     		ldr	r2, .L6+56
  83 004c 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  84              		.loc 1 198 0 discriminator 4
  85 004e 204A     		ldr	r2, .L6+60
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 6


  86 0050 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  87              		.loc 1 199 0 discriminator 4
  88 0052 0133     		add	r3, r3, #1
  89 0054 1F4A     		ldr	r2, .L6+64
  90 0056 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
  91              		.loc 1 202 0 discriminator 4
  92 0058 0221     		mov	r1, #2
  93 005a 1F4A     		ldr	r2, .L6+68
  94 005c 1160     		str	r1, [r2]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
  95              		.loc 1 206 0 discriminator 4
  96 005e 1F49     		ldr	r1, .L6+72
  97 0060 0868     		ldr	r0, [r1]
  98              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
  99              		.loc 1 207 0 discriminator 4
 100 0062 1F4A     		ldr	r2, .L6+76
 101 0064 0240     		and	r2, r0
 102              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 103              		.loc 1 213 0 discriminator 4
 104 0066 1343     		orr	r3, r2
 105              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 106              		.loc 1 226 0 discriminator 4
 107 0068 0B60     		str	r3, [r1]
 108              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 7


 109              		.loc 1 232 0 discriminator 4
 110 006a 0023     		mov	r3, #0
 111              	.LVL6:
 112 006c 0FE0     		b	.L3
 113              	.LVL7:
 114              	.L4:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 115              		.loc 1 253 0
 116 006e 9A00     		lsl	r2, r3, #2
 117 0070 1C49     		ldr	r1, .L6+80
 118 0072 8C46     		mov	ip, r1
 119 0074 6244     		add	r2, r2, ip
 120 0076 8021     		mov	r1, #128
 121 0078 4900     		lsl	r1, r1, #1
 122 007a 1160     		str	r1, [r2]
 123              	.LVL8:
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 8


 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 124              		.loc 1 307 0
 125 007c 5900     		lsl	r1, r3, #1
 126 007e 0020     		mov	r0, #0
 127 0080 194A     		ldr	r2, .L6+84
 128 0082 8852     		strh	r0, [r1, r2]
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 129              		.loc 1 311 0
 130 0084 9900     		lsl	r1, r3, #2
 131 0086 1948     		ldr	r0, .L6+88
 132 0088 194A     		ldr	r2, .L6+92
 133 008a 8850     		str	r0, [r1, r2]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 134              		.loc 1 232 0
 135 008c 0133     		add	r3, r3, #1
 136              	.LVL9:
 137              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 138              		.loc 1 232 0 is_stmt 0 discriminator 1
 139 008e 002B     		cmp	r3, #0
 140 0090 EDD0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 9


 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 141              		.loc 1 314 0 is_stmt 1
 142              		@ sp needed
 143 0092 08BD     		pop	{r3, pc}
 144              	.L7:
 145              		.align	2
 146              	.L6:
 147 0094 00000000 		.word	ADC_SAR_Seq_1_ISR
 148 0098 20001A40 		.word	1075445792
 149 009c 80031A40 		.word	1075446656
 150 00a0 70021051 		.word	1360003696
 151 00a4 70020051 		.word	1358955120
 152 00a8 00001A40 		.word	1075445760
 153 00ac 8C000080 		.word	-2147483508
 154 00b0 04001A40 		.word	1075445764
 155 00b4 0000FF07 		.word	134152192
 156 00b8 18001A40 		.word	1075445784
 157 00bc 1C001A40 		.word	1075445788
 158 00c0 04000400 		.word	262148
 159 00c4 10001A40 		.word	1075445776
 160 00c8 14001A40 		.word	1075445780
 161 00cc 28021A40 		.word	1075446312
 162 00d0 38021A40 		.word	1075446328
 163 00d4 18021A40 		.word	1075446296
 164 00d8 000F1A40 		.word	1075449600
 165 00dc 30001A40 		.word	1075445808
 166 00e0 FFFFFFDF 		.word	-536870913
 167 00e4 80001A40 		.word	1075445888
 168 00e8 00000000 		.word	ADC_SAR_Seq_1_offset
 169 00ec 3E180000 		.word	6206
 170 00f0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 171              		.cfi_endproc
 172              	.LFE1:
 173              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 174              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 175              		.align	2
 176              		.global	ADC_SAR_Seq_1_Enable
 177              		.code	16
 178              		.thumb_func
 179              		.type	ADC_SAR_Seq_1_Enable, %function
 180              	ADC_SAR_Seq_1_Enable:
 181              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 10


 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 182              		.loc 1 331 0
 183              		.cfi_startproc
 184 0000 08B5     		push	{r3, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 188              		.loc 1 332 0
 189 0002 074B     		ldr	r3, .L10
 190 0004 1B68     		ldr	r3, [r3]
 191 0006 002B     		cmp	r3, #0
 192 0008 08DB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 193              		.loc 1 342 0
 194 000a 054A     		ldr	r2, .L10
 195 000c 1368     		ldr	r3, [r2]
 196 000e 8021     		mov	r1, #128
 197 0010 0906     		lsl	r1, r1, #24
 198 0012 0B43     		orr	r3, r1
 199 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 200              		.loc 1 345 0
 201 0016 0A20     		mov	r0, #10
 202 0018 FFF7FEFF 		bl	CyDelayUs
 203              	.LVL10:
 204              	.L8:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 205              		.loc 1 347 0
 206              		@ sp needed
 207 001c 08BD     		pop	{r3, pc}
 208              	.L11:
 209 001e C046     		.align	2
 210              	.L10:
 211 0020 00001A40 		.word	1075445760
 212              		.cfi_endproc
 213              	.LFE2:
 214              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 215              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 216              		.align	2
 217              		.global	ADC_SAR_Seq_1_Start
 218              		.code	16
 219              		.thumb_func
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 11


 220              		.type	ADC_SAR_Seq_1_Start, %function
 221              	ADC_SAR_Seq_1_Start:
 222              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 223              		.loc 1 64 0
 224              		.cfi_startproc
 225 0000 08B5     		push	{r3, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 229              		.loc 1 66 0
 230 0002 064B     		ldr	r3, .L14
 231 0004 1B78     		ldrb	r3, [r3]
 232 0006 002B     		cmp	r3, #0
 233 0008 04D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 234              		.loc 1 68 0
 235 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 236              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 237              		.loc 1 69 0
 238 000e 0122     		mov	r2, #1
 239 0010 024B     		ldr	r3, .L14
 240 0012 1A70     		strb	r2, [r3]
 241              	.L13:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 242              		.loc 1 71 0
 243 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 244              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 245              		.loc 1 72 0
 246              		@ sp needed
 247 0018 08BD     		pop	{r3, pc}
 248              	.L15:
 249 001a C046     		.align	2
 250              	.L14:
 251 001c 00000000 		.word	.LANCHOR0
 252              		.cfi_endproc
 253              	.LFE0:
 254              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 255              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 256              		.align	2
 257              		.global	ADC_SAR_Seq_1_Stop
 258              		.code	16
 259              		.thumb_func
 260              		.type	ADC_SAR_Seq_1_Stop, %function
 261              	ADC_SAR_Seq_1_Stop:
 262              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 12


 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 263              		.loc 1 366 0
 264              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 265              		.loc 1 367 0
 266 0000 024A     		ldr	r2, .L17
 267 0002 1368     		ldr	r3, [r2]
 268 0004 5B00     		lsl	r3, r3, #1
 269 0006 5B08     		lsr	r3, r3, #1
 270 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 271              		.loc 1 368 0
 272              		@ sp needed
 273 000a 7047     		bx	lr
 274              	.L18:
 275              		.align	2
 276              	.L17:
 277 000c 00001A40 		.word	1075445760
 278              		.cfi_endproc
 279              	.LFE3:
 280              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 281              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 282              		.align	2
 283              		.global	ADC_SAR_Seq_1_StartConvert
 284              		.code	16
 285              		.thumb_func
 286              		.type	ADC_SAR_Seq_1_StartConvert, %function
 287              	ADC_SAR_Seq_1_StartConvert:
 288              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 13


 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 289              		.loc 1 392 0
 290              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 291              		.loc 1 394 0
 292 0000 034A     		ldr	r2, .L20
 293 0002 1368     		ldr	r3, [r2]
 294 0004 8021     		mov	r1, #128
 295 0006 4902     		lsl	r1, r1, #9
 296 0008 0B43     		orr	r3, r1
 297 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 298              		.loc 1 399 0
 299              		@ sp needed
 300 000c 7047     		bx	lr
 301              	.L21:
 302 000e C046     		.align	2
 303              	.L20:
 304 0010 04001A40 		.word	1075445764
 305              		.cfi_endproc
 306              	.LFE4:
 307              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 308              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 309              		.align	2
 310              		.global	ADC_SAR_Seq_1_StopConvert
 311              		.code	16
 312              		.thumb_func
 313              		.type	ADC_SAR_Seq_1_StopConvert, %function
 314              	ADC_SAR_Seq_1_StopConvert:
 315              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 14


 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 316              		.loc 1 417 0
 317              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 318              		.loc 1 419 0
 319 0000 024A     		ldr	r2, .L23
 320 0002 1168     		ldr	r1, [r2]
 321 0004 024B     		ldr	r3, .L23+4
 322 0006 0B40     		and	r3, r1
 323 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 324              		.loc 1 421 0
 325              		@ sp needed
 326 000a 7047     		bx	lr
 327              	.L24:
 328              		.align	2
 329              	.L23:
 330 000c 04001A40 		.word	1075445764
 331 0010 FFFFFEFF 		.word	-65537
 332              		.cfi_endproc
 333              	.LFE5:
 334              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 335              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 336              		.align	2
 337              		.global	ADC_SAR_Seq_1_IsEndConversion
 338              		.code	16
 339              		.thumb_func
 340              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 341              	ADC_SAR_Seq_1_IsEndConversion:
 342              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 15


 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 343              		.loc 1 451 0
 344              		.cfi_startproc
 345              	.LVL13:
 346 0000 021C     		mov	r2, r0
 347              	.LVL14:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 348              		.loc 1 454 0
 349 0002 8307     		lsl	r3, r0, #30
 350 0004 0CD0     		beq	.L29
 351              	.LVL15:
 352              	.L28:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 353              		.loc 1 458 0 discriminator 2
 354 0006 074B     		ldr	r3, .L30
 355 0008 1B68     		ldr	r3, [r3]
 356 000a 0120     		mov	r0, #1
 357 000c 1840     		and	r0, r3
 358              	.LVL16:
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 359              		.loc 1 459 0 discriminator 2
 360 000e 01D1     		bne	.L27
 361              		.loc 1 459 0 is_stmt 0 discriminator 1
 362 0010 9307     		lsl	r3, r2, #30
 363 0012 F8D4     		bmi	.L28
 364              	.L27:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 365              		.loc 1 461 0 is_stmt 1
 366 0014 0028     		cmp	r0, #0
 367 0016 04D0     		beq	.L26
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 368              		.loc 1 464 0
 369 0018 0122     		mov	r2, #1
 370              	.LVL17:
 371 001a 024B     		ldr	r3, .L30
 372 001c 1A60     		str	r2, [r3]
 373 001e 00E0     		b	.L26
 374              	.LVL18:
 375              	.L29:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 376              		.loc 1 452 0
 377 0020 0020     		mov	r0, #0
 378              	.LVL19:
 379              	.L26:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 16


 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 380              		.loc 1 486 0
 381              		@ sp needed
 382 0022 7047     		bx	lr
 383              	.L31:
 384              		.align	2
 385              	.L30:
 386 0024 10021A40 		.word	1075446288
 387              		.cfi_endproc
 388              	.LFE6:
 389              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 390              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 391              		.align	2
 392              		.global	ADC_SAR_Seq_1_GetResult16
 393              		.code	16
 394              		.thumb_func
 395              		.type	ADC_SAR_Seq_1_GetResult16, %function
 396              	ADC_SAR_Seq_1_GetResult16:
 397              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 17


 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 398              		.loc 1 505 0
 399              		.cfi_startproc
 400              	.LVL20:
 401 0000 10B5     		push	{r4, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 405 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 406              		.loc 1 509 0
 407 0004 02D0     		beq	.L33
 408              		.loc 1 509 0 is_stmt 0 discriminator 1
 409 0006 0020     		mov	r0, #0
 410              	.LVL21:
 411 0008 FFF7FEFF 		bl	CyHalt
 412              	.LVL22:
 413              	.L33:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 414              		.loc 1 511 0 is_stmt 1
 415 000c 002C     		cmp	r4, #0
 416 000e 07D1     		bne	.L35
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 417              		.loc 1 513 0
 418 0010 A400     		lsl	r4, r4, #2
 419              	.LVL23:
 420 0012 054B     		ldr	r3, .L36
 421 0014 9C46     		mov	ip, r3
 422 0016 6444     		add	r4, r4, ip
 423 0018 2068     		ldr	r0, [r4]
 424 001a 0004     		lsl	r0, r0, #16
 425 001c 000C     		lsr	r0, r0, #16
 426              	.LVL24:
 427 001e 00E0     		b	.L34
 428              	.LVL25:
 429              	.L35:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 430              		.loc 1 521 0
 431 0020 0020     		mov	r0, #0
 432              	.LVL26:
 433              	.L34:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 18


 434              		.loc 1 525 0
 435 0022 00B2     		sxth	r0, r0
 436              	.LVL27:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 437              		.loc 1 526 0
 438              		@ sp needed
 439 0024 10BD     		pop	{r4, pc}
 440              	.L37:
 441 0026 C046     		.align	2
 442              	.L36:
 443 0028 80011A40 		.word	1075446144
 444              		.cfi_endproc
 445              	.LFE7:
 446              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 447              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 448              		.align	2
 449              		.global	ADC_SAR_Seq_1_SetChanMask
 450              		.code	16
 451              		.thumb_func
 452              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 453              	ADC_SAR_Seq_1_SetChanMask:
 454              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 455              		.loc 1 550 0
 456              		.cfi_startproc
 457              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 458              		.loc 1 551 0
 459 0000 0123     		mov	r3, #1
 460 0002 1840     		and	r0, r3
 461              	.LVL29:
 462 0004 014B     		ldr	r3, .L39
 463 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 19


 464              		.loc 1 552 0
 465              		@ sp needed
 466 0008 7047     		bx	lr
 467              	.L40:
 468 000a C046     		.align	2
 469              	.L39:
 470 000c 20001A40 		.word	1075445792
 471              		.cfi_endproc
 472              	.LFE8:
 473              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 474              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 475              		.align	2
 476              		.global	ADC_SAR_Seq_1_SetLowLimit
 477              		.code	16
 478              		.thumb_func
 479              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 480              	ADC_SAR_Seq_1_SetLowLimit:
 481              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 20


 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 482              		.loc 1 594 0
 483              		.cfi_startproc
 484              	.LVL30:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 485              		.loc 1 595 0
 486 0000 054A     		ldr	r2, .L42
 487 0002 1368     		ldr	r3, [r2]
 488 0004 1B0C     		lsr	r3, r3, #16
 489 0006 1B04     		lsl	r3, r3, #16
 490 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 491              		.loc 1 596 0
 492 000a 1368     		ldr	r3, [r2]
 493 000c 0004     		lsl	r0, r0, #16
 494              	.LVL31:
 495 000e 000C     		lsr	r0, r0, #16
 496 0010 1843     		orr	r0, r3
 497 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 498              		.loc 1 597 0
 499              		@ sp needed
 500 0014 7047     		bx	lr
 501              	.L43:
 502 0016 C046     		.align	2
 503              	.L42:
 504 0018 18001A40 		.word	1075445784
 505              		.cfi_endproc
 506              	.LFE9:
 507              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 508              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 509              		.align	2
 510              		.global	ADC_SAR_Seq_1_SetHighLimit
 511              		.code	16
 512              		.thumb_func
 513              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 514              	ADC_SAR_Seq_1_SetHighLimit:
 515              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 21


 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 516              		.loc 1 615 0
 517              		.cfi_startproc
 518              	.LVL32:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 519              		.loc 1 616 0
 520 0000 044A     		ldr	r2, .L45
 521 0002 1368     		ldr	r3, [r2]
 522 0004 1B04     		lsl	r3, r3, #16
 523 0006 1B0C     		lsr	r3, r3, #16
 524 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 525              		.loc 1 617 0
 526 000a 1368     		ldr	r3, [r2]
 527 000c 0004     		lsl	r0, r0, #16
 528              	.LVL33:
 529 000e 1843     		orr	r0, r3
 530 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 531              		.loc 1 618 0
 532              		@ sp needed
 533 0012 7047     		bx	lr
 534              	.L46:
 535              		.align	2
 536              	.L45:
 537 0014 18001A40 		.word	1075445784
 538              		.cfi_endproc
 539              	.LFE10:
 540              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 541              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 542              		.align	2
 543              		.global	ADC_SAR_Seq_1_SetLimitMask
 544              		.code	16
 545              		.thumb_func
 546              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 547              	ADC_SAR_Seq_1_SetLimitMask:
 548              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 22


 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 549              		.loc 1 639 0
 550              		.cfi_startproc
 551              	.LVL34:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 552              		.loc 1 640 0
 553 0000 0123     		mov	r3, #1
 554 0002 1840     		and	r0, r3
 555              	.LVL35:
 556 0004 014B     		ldr	r3, .L48
 557 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 558              		.loc 1 641 0
 559              		@ sp needed
 560 0008 7047     		bx	lr
 561              	.L49:
 562 000a C046     		.align	2
 563              	.L48:
 564 000c 38021A40 		.word	1075446328
 565              		.cfi_endproc
 566              	.LFE11:
 567              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 568              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 569              		.align	2
 570              		.global	ADC_SAR_Seq_1_SetSatMask
 571              		.code	16
 572              		.thumb_func
 573              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 574              	ADC_SAR_Seq_1_SetSatMask:
 575              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 576              		.loc 1 662 0
 577              		.cfi_startproc
 578              	.LVL36:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 579              		.loc 1 663 0
 580 0000 0123     		mov	r3, #1
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 23


 581 0002 1840     		and	r0, r3
 582              	.LVL37:
 583 0004 014B     		ldr	r3, .L51
 584 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 585              		.loc 1 664 0
 586              		@ sp needed
 587 0008 7047     		bx	lr
 588              	.L52:
 589 000a C046     		.align	2
 590              	.L51:
 591 000c 28021A40 		.word	1075446312
 592              		.cfi_endproc
 593              	.LFE12:
 594              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 595              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_SAR_Seq_1_SetOffset
 598              		.code	16
 599              		.thumb_func
 600              		.type	ADC_SAR_Seq_1_SetOffset, %function
 601              	ADC_SAR_Seq_1_SetOffset:
 602              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 603              		.loc 1 690 0
 604              		.cfi_startproc
 605              	.LVL38:
 606 0000 38B5     		push	{r3, r4, r5, lr}
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 3, -16
 609              		.cfi_offset 4, -12
 610              		.cfi_offset 5, -8
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 24


 611              		.cfi_offset 14, -4
 612 0002 041C     		mov	r4, r0
 613 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 614              		.loc 1 692 0
 615 0006 0028     		cmp	r0, #0
 616 0008 02D0     		beq	.L54
 617              		.loc 1 692 0 is_stmt 0 discriminator 1
 618 000a 0020     		mov	r0, #0
 619              	.LVL39:
 620 000c FFF7FEFF 		bl	CyHalt
 621              	.LVL40:
 622              	.L54:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 623              		.loc 1 694 0 is_stmt 1
 624 0010 6400     		lsl	r4, r4, #1
 625              	.LVL41:
 626 0012 014B     		ldr	r3, .L55
 627 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 628              		.loc 1 695 0
 629              		@ sp needed
 630 0016 38BD     		pop	{r3, r4, r5, pc}
 631              	.L56:
 632              		.align	2
 633              	.L55:
 634 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 635              		.cfi_endproc
 636              	.LFE13:
 637              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 638              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 639              		.align	2
 640              		.global	ADC_SAR_Seq_1_SetGain
 641              		.code	16
 642              		.thumb_func
 643              		.type	ADC_SAR_Seq_1_SetGain, %function
 644              	ADC_SAR_Seq_1_SetGain:
 645              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 25


 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 646              		.loc 1 724 0
 647              		.cfi_startproc
 648              	.LVL42:
 649 0000 38B5     		push	{r3, r4, r5, lr}
 650              		.cfi_def_cfa_offset 16
 651              		.cfi_offset 3, -16
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
 655 0002 041C     		mov	r4, r0
 656 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 657              		.loc 1 726 0
 658 0006 0028     		cmp	r0, #0
 659 0008 02D0     		beq	.L58
 660              		.loc 1 726 0 is_stmt 0 discriminator 1
 661 000a 0020     		mov	r0, #0
 662              	.LVL43:
 663 000c FFF7FEFF 		bl	CyHalt
 664              	.LVL44:
 665              	.L58:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 666              		.loc 1 728 0 is_stmt 1
 667 0010 A400     		lsl	r4, r4, #2
 668              	.LVL45:
 669 0012 014B     		ldr	r3, .L59
 670 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 671              		.loc 1 729 0
 672              		@ sp needed
 673              	.LVL46:
 674 0016 38BD     		pop	{r3, r4, r5, pc}
 675              	.L60:
 676              		.align	2
 677              	.L59:
 678 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 679              		.cfi_endproc
 680              	.LFE14:
 681              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 682              		.global	__aeabi_idiv
 683              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 684              		.align	2
 685              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 26


 686              		.code	16
 687              		.thumb_func
 688              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 689              	ADC_SAR_Seq_1_CountsTo_mVolts:
 690              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 691              		.loc 1 757 0
 692              		.cfi_startproc
 693              	.LVL47:
 694 0000 38B5     		push	{r3, r4, r5, lr}
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 3, -16
 697              		.cfi_offset 4, -12
 698              		.cfi_offset 5, -8
 699              		.cfi_offset 14, -4
 700 0002 041C     		mov	r4, r0
 701 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 702              		.loc 1 761 0
 703 0006 0028     		cmp	r0, #0
 704 0008 02D0     		beq	.L62
 705              		.loc 1 761 0 is_stmt 0 discriminator 1
 706 000a 0020     		mov	r0, #0
 707              	.LVL48:
 708 000c FFF7FEFF 		bl	CyHalt
 709              	.LVL49:
 710              	.L62:
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 27


 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 711              		.loc 1 772 0 is_stmt 1
 712 0010 6300     		lsl	r3, r4, #1
 713 0012 0F4A     		ldr	r2, .L65
 714 0014 995A     		ldrh	r1, [r3, r2]
 715 0016 691A     		sub	r1, r5, r1
 716 0018 09B2     		sxth	r1, r1
 717              	.LVL50:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 718              		.loc 1 774 0
 719 001a 0E48     		ldr	r0, .L65+4
 720 001c 021C     		mov	r2, r0
 721 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 722              		.loc 1 775 0
 723 0020 0029     		cmp	r1, #0
 724 0022 06DD     		ble	.L63
 725              		.loc 1 775 0 is_stmt 0 discriminator 1
 726 0024 A300     		lsl	r3, r4, #2
 727 0026 0C49     		ldr	r1, .L65+8
 728              	.LVL51:
 729 0028 5B58     		ldr	r3, [r3, r1]
 730 002a D80F     		lsr	r0, r3, #31
 731 002c C018     		add	r0, r0, r3
 732 002e 4310     		asr	r3, r0, #1
 733 0030 06E0     		b	.L64
 734              	.LVL52:
 735              	.L63:
 736              		.loc 1 775 0 discriminator 2
 737 0032 A300     		lsl	r3, r4, #2
 738 0034 0849     		ldr	r1, .L65+8
 739              	.LVL53:
 740 0036 5B58     		ldr	r3, [r3, r1]
 741 0038 D80F     		lsr	r0, r3, #31
 742 003a C318     		add	r3, r0, r3
 743 003c 5B10     		asr	r3, r3, #1
 744 003e 5B42     		neg	r3, r3
 745              	.L64:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 746              		.loc 1 774 0 is_stmt 1
 747 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 748              		.loc 1 776 0
 749 0042 A400     		lsl	r4, r4, #2
 750              	.LVL54:
 751 0044 044B     		ldr	r3, .L65+8
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 28


 752 0046 E158     		ldr	r1, [r4, r3]
 753 0048 FFF7FEFF 		bl	__aeabi_idiv
 754              	.LVL55:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 755              		.loc 1 778 0
 756 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 757              		.loc 1 779 0
 758              		@ sp needed
 759 004e 38BD     		pop	{r3, r4, r5, pc}
 760              	.L66:
 761              		.align	2
 762              	.L65:
 763 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 764 0054 10270000 		.word	10000
 765 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 766              		.cfi_endproc
 767              	.LFE15:
 768              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 769              		.global	__aeabi_lmul
 770              		.global	__aeabi_ldivmod
 771              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 772              		.align	2
 773              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 774              		.code	16
 775              		.thumb_func
 776              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 777              	ADC_SAR_Seq_1_CountsTo_uVolts:
 778              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 29


 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 779              		.loc 1 811 0
 780              		.cfi_startproc
 781              	.LVL56:
 782 0000 38B5     		push	{r3, r4, r5, lr}
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 3, -16
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 5, -8
 787              		.cfi_offset 14, -4
 788 0002 051C     		mov	r5, r0
 789 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 790              		.loc 1 815 0
 791 0006 0028     		cmp	r0, #0
 792 0008 02D0     		beq	.L68
 793              		.loc 1 815 0 is_stmt 0 discriminator 1
 794 000a 0020     		mov	r0, #0
 795              	.LVL57:
 796 000c FFF7FEFF 		bl	CyHalt
 797              	.LVL58:
 798              	.L68:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 799              		.loc 1 826 0 is_stmt 1
 800 0010 6A00     		lsl	r2, r5, #1
 801 0012 084B     		ldr	r3, .L69
 802 0014 D05A     		ldrh	r0, [r2, r3]
 803 0016 201A     		sub	r0, r4, r0
 804 0018 00B2     		sxth	r0, r0
 805              	.LVL59:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 806              		.loc 1 828 0
 807 001a C117     		asr	r1, r0, #31
 808 001c 064A     		ldr	r2, .L69+4
 809 001e 0023     		mov	r3, #0
 810 0020 FFF7FEFF 		bl	__aeabi_lmul
 811              	.LVL60:
 812 0024 AD00     		lsl	r5, r5, #2
 813              	.LVL61:
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 30


 814 0026 054B     		ldr	r3, .L69+8
 815 0028 EA58     		ldr	r2, [r5, r3]
 816 002a D317     		asr	r3, r2, #31
 817 002c FFF7FEFF 		bl	__aeabi_ldivmod
 818              	.LVL62:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 819              		.loc 1 831 0
 820              		@ sp needed
 821 0030 38BD     		pop	{r3, r4, r5, pc}
 822              	.L70:
 823 0032 C046     		.align	2
 824              	.L69:
 825 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 826 0038 80969800 		.word	10000000
 827 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 828              		.cfi_endproc
 829              	.LFE16:
 830              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 831              		.global	__aeabi_i2f
 832              		.global	__aeabi_fmul
 833              		.global	__aeabi_fdiv
 834              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 835              		.align	2
 836              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 837              		.code	16
 838              		.thumb_func
 839              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 840              	ADC_SAR_Seq_1_CountsTo_Volts:
 841              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 842              		.loc 1 856 0
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 31


 843              		.cfi_startproc
 844              	.LVL63:
 845 0000 38B5     		push	{r3, r4, r5, lr}
 846              		.cfi_def_cfa_offset 16
 847              		.cfi_offset 3, -16
 848              		.cfi_offset 4, -12
 849              		.cfi_offset 5, -8
 850              		.cfi_offset 14, -4
 851 0002 041C     		mov	r4, r0
 852 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 853              		.loc 1 860 0
 854 0006 0028     		cmp	r0, #0
 855 0008 02D0     		beq	.L72
 856              		.loc 1 860 0 is_stmt 0 discriminator 1
 857 000a 0020     		mov	r0, #0
 858              	.LVL64:
 859 000c FFF7FEFF 		bl	CyHalt
 860              	.LVL65:
 861              	.L72:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 862              		.loc 1 871 0 is_stmt 1
 863 0010 6200     		lsl	r2, r4, #1
 864 0012 0A4B     		ldr	r3, .L73
 865 0014 D05A     		ldrh	r0, [r2, r3]
 866 0016 281A     		sub	r0, r5, r0
 867 0018 00B2     		sxth	r0, r0
 868              	.LVL66:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 869              		.loc 1 873 0
 870 001a FFF7FEFF 		bl	__aeabi_i2f
 871              	.LVL67:
 872 001e 0849     		ldr	r1, .L73+4
 873 0020 FFF7FEFF 		bl	__aeabi_fmul
 874              	.LVL68:
 875 0024 051C     		add	r5, r0, #0
 876 0026 A400     		lsl	r4, r4, #2
 877              	.LVL69:
 878 0028 064B     		ldr	r3, .L73+8
 879 002a E058     		ldr	r0, [r4, r3]
 880 002c FFF7FEFF 		bl	__aeabi_i2f
 881              	.LVL70:
 882 0030 011C     		add	r1, r0, #0
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 32


 883 0032 281C     		add	r0, r5, #0
 884 0034 FFF7FEFF 		bl	__aeabi_fdiv
 885              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 886              		.loc 1 876 0
 887              		@ sp needed
 888 0038 38BD     		pop	{r3, r4, r5, pc}
 889              	.L74:
 890 003a C046     		.align	2
 891              	.L73:
 892 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 893 0040 00002041 		.word	1092616192
 894 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 895              		.cfi_endproc
 896              	.LFE17:
 897              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 898              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 899              		.comm	ADC_SAR_Seq_1_offset,2,4
 900              		.global	ADC_SAR_Seq_1_initVar
 901              		.bss
 902              		.set	.LANCHOR0,. + 0
 903              		.type	ADC_SAR_Seq_1_initVar, %object
 904              		.size	ADC_SAR_Seq_1_initVar, 1
 905              	ADC_SAR_Seq_1_initVar:
 906 0000 00       		.space	1
 907              		.text
 908              	.Letext0:
 909              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 910              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 911              		.section	.debug_info,"",%progbits
 912              	.Ldebug_info0:
 913 0000 94050000 		.4byte	0x594
 914 0004 0400     		.2byte	0x4
 915 0006 00000000 		.4byte	.Ldebug_abbrev0
 916 000a 04       		.byte	0x4
 917 000b 01       		.uleb128 0x1
 918 000c CC020000 		.4byte	.LASF61
 919 0010 01       		.byte	0x1
 920 0011 51020000 		.4byte	.LASF62
 921 0015 D6010000 		.4byte	.LASF63
 922 0019 00000000 		.4byte	.Ldebug_ranges0+0
 923 001d 00000000 		.4byte	0
 924 0021 00000000 		.4byte	.Ldebug_line0
 925 0025 02       		.uleb128 0x2
 926 0026 01       		.byte	0x1
 927 0027 06       		.byte	0x6
 928 0028 DA000000 		.4byte	.LASF0
 929 002c 02       		.uleb128 0x2
 930 002d 01       		.byte	0x1
 931 002e 08       		.byte	0x8
 932 002f B1030000 		.4byte	.LASF1
 933 0033 02       		.uleb128 0x2
 934 0034 02       		.byte	0x2
 935 0035 05       		.byte	0x5
 936 0036 BF030000 		.4byte	.LASF2
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 33


 937 003a 02       		.uleb128 0x2
 938 003b 02       		.byte	0x2
 939 003c 07       		.byte	0x7
 940 003d C3010000 		.4byte	.LASF3
 941 0041 02       		.uleb128 0x2
 942 0042 04       		.byte	0x4
 943 0043 05       		.byte	0x5
 944 0044 25010000 		.4byte	.LASF4
 945 0048 02       		.uleb128 0x2
 946 0049 04       		.byte	0x4
 947 004a 07       		.byte	0x7
 948 004b A1010000 		.4byte	.LASF5
 949 004f 02       		.uleb128 0x2
 950 0050 08       		.byte	0x8
 951 0051 05       		.byte	0x5
 952 0052 CC000000 		.4byte	.LASF6
 953 0056 02       		.uleb128 0x2
 954 0057 08       		.byte	0x8
 955 0058 07       		.byte	0x7
 956 0059 86000000 		.4byte	.LASF7
 957 005d 03       		.uleb128 0x3
 958 005e 04       		.byte	0x4
 959 005f 05       		.byte	0x5
 960 0060 696E7400 		.ascii	"int\000"
 961 0064 02       		.uleb128 0x2
 962 0065 04       		.byte	0x4
 963 0066 07       		.byte	0x7
 964 0067 8D010000 		.4byte	.LASF8
 965 006b 04       		.uleb128 0x4
 966 006c 2E010000 		.4byte	.LASF9
 967 0070 02       		.byte	0x2
 968 0071 3801     		.2byte	0x138
 969 0073 2C000000 		.4byte	0x2c
 970 0077 04       		.uleb128 0x4
 971 0078 15000000 		.4byte	.LASF10
 972 007c 02       		.byte	0x2
 973 007d 3901     		.2byte	0x139
 974 007f 3A000000 		.4byte	0x3a
 975 0083 04       		.uleb128 0x4
 976 0084 45010000 		.4byte	.LASF11
 977 0088 02       		.byte	0x2
 978 0089 3A01     		.2byte	0x13a
 979 008b 48000000 		.4byte	0x48
 980 008f 04       		.uleb128 0x4
 981 0090 85040000 		.4byte	.LASF12
 982 0094 02       		.byte	0x2
 983 0095 3C01     		.2byte	0x13c
 984 0097 33000000 		.4byte	0x33
 985 009b 04       		.uleb128 0x4
 986 009c 01010000 		.4byte	.LASF13
 987 00a0 02       		.byte	0x2
 988 00a1 3D01     		.2byte	0x13d
 989 00a3 41000000 		.4byte	0x41
 990 00a7 04       		.uleb128 0x4
 991 00a8 7A020000 		.4byte	.LASF14
 992 00ac 02       		.byte	0x2
 993 00ad 3E01     		.2byte	0x13e
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 34


 994 00af B3000000 		.4byte	0xb3
 995 00b3 02       		.uleb128 0x2
 996 00b4 04       		.byte	0x4
 997 00b5 04       		.byte	0x4
 998 00b6 71030000 		.4byte	.LASF15
 999 00ba 02       		.uleb128 0x2
 1000 00bb 08       		.byte	0x8
 1001 00bc 04       		.byte	0x4
 1002 00bd 3E010000 		.4byte	.LASF16
 1003 00c1 04       		.uleb128 0x4
 1004 00c2 5A030000 		.4byte	.LASF17
 1005 00c6 02       		.byte	0x2
 1006 00c7 4301     		.2byte	0x143
 1007 00c9 4F000000 		.4byte	0x4f
 1008 00cd 02       		.uleb128 0x2
 1009 00ce 01       		.byte	0x1
 1010 00cf 08       		.byte	0x8
 1011 00d0 0B040000 		.4byte	.LASF18
 1012 00d4 04       		.uleb128 0x4
 1013 00d5 4B020000 		.4byte	.LASF19
 1014 00d9 02       		.byte	0x2
 1015 00da E401     		.2byte	0x1e4
 1016 00dc E0000000 		.4byte	0xe0
 1017 00e0 05       		.uleb128 0x5
 1018 00e1 83000000 		.4byte	0x83
 1019 00e5 04       		.uleb128 0x4
 1020 00e6 10040000 		.4byte	.LASF20
 1021 00ea 02       		.byte	0x2
 1022 00eb F401     		.2byte	0x1f4
 1023 00ed F1000000 		.4byte	0xf1
 1024 00f1 06       		.uleb128 0x6
 1025 00f2 04       		.byte	0x4
 1026 00f3 F7000000 		.4byte	0xf7
 1027 00f7 07       		.uleb128 0x7
 1028 00f8 02       		.uleb128 0x2
 1029 00f9 04       		.byte	0x4
 1030 00fa 07       		.byte	0x7
 1031 00fb 82020000 		.4byte	.LASF21
 1032 00ff 08       		.uleb128 0x8
 1033 0100 1C000000 		.4byte	.LASF25
 1034 0104 01       		.byte	0x1
 1035 0105 5E       		.byte	0x5e
 1036 0106 00000000 		.4byte	.LFB1
 1037 010a F4000000 		.4byte	.LFE1-.LFB1
 1038 010e 01       		.uleb128 0x1
 1039 010f 9C       		.byte	0x9c
 1040 0110 69010000 		.4byte	0x169
 1041 0114 09       		.uleb128 0x9
 1042 0115 00040000 		.4byte	.LASF22
 1043 0119 01       		.byte	0x1
 1044 011a 60       		.byte	0x60
 1045 011b 83000000 		.4byte	0x83
 1046 011f 00000000 		.4byte	.LLST0
 1047 0123 09       		.uleb128 0x9
 1048 0124 B9010000 		.4byte	.LASF23
 1049 0128 01       		.byte	0x1
 1050 0129 61       		.byte	0x61
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 35


 1051 012a 83000000 		.4byte	0x83
 1052 012e 1F000000 		.4byte	.LLST1
 1053 0132 09       		.uleb128 0x9
 1054 0133 37000000 		.4byte	.LASF24
 1055 0137 01       		.byte	0x1
 1056 0138 62       		.byte	0x62
 1057 0139 9B000000 		.4byte	0x9b
 1058 013d 62000000 		.4byte	.LLST2
 1059 0141 0A       		.uleb128 0xa
 1060 0142 0A000000 		.4byte	.LVL0
 1061 0146 49050000 		.4byte	0x549
 1062 014a 59010000 		.4byte	0x159
 1063 014e 0B       		.uleb128 0xb
 1064 014f 01       		.uleb128 0x1
 1065 0150 51       		.byte	0x51
 1066 0151 01       		.uleb128 0x1
 1067 0152 33       		.byte	0x33
 1068 0153 0B       		.uleb128 0xb
 1069 0154 01       		.uleb128 0x1
 1070 0155 50       		.byte	0x50
 1071 0156 01       		.uleb128 0x1
 1072 0157 3E       		.byte	0x3e
 1073 0158 00       		.byte	0
 1074 0159 0C       		.uleb128 0xc
 1075 015a 12000000 		.4byte	.LVL1
 1076 015e 5F050000 		.4byte	0x55f
 1077 0162 0B       		.uleb128 0xb
 1078 0163 01       		.uleb128 0x1
 1079 0164 50       		.byte	0x50
 1080 0165 01       		.uleb128 0x1
 1081 0166 3E       		.byte	0x3e
 1082 0167 00       		.byte	0
 1083 0168 00       		.byte	0
 1084 0169 0D       		.uleb128 0xd
 1085 016a 9D000000 		.4byte	.LASF26
 1086 016e 01       		.byte	0x1
 1087 016f 4A01     		.2byte	0x14a
 1088 0171 00000000 		.4byte	.LFB2
 1089 0175 24000000 		.4byte	.LFE2-.LFB2
 1090 0179 01       		.uleb128 0x1
 1091 017a 9C       		.byte	0x9c
 1092 017b 8F010000 		.4byte	0x18f
 1093 017f 0C       		.uleb128 0xc
 1094 0180 1C000000 		.4byte	.LVL10
 1095 0184 79050000 		.4byte	0x579
 1096 0188 0B       		.uleb128 0xb
 1097 0189 01       		.uleb128 0x1
 1098 018a 50       		.byte	0x50
 1099 018b 01       		.uleb128 0x1
 1100 018c 3A       		.byte	0x3a
 1101 018d 00       		.byte	0
 1102 018e 00       		.byte	0
 1103 018f 08       		.uleb128 0x8
 1104 0190 72000000 		.4byte	.LASF27
 1105 0194 01       		.byte	0x1
 1106 0195 3F       		.byte	0x3f
 1107 0196 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 36


 1108 019a 20000000 		.4byte	.LFE0-.LFB0
 1109 019e 01       		.uleb128 0x1
 1110 019f 9C       		.byte	0x9c
 1111 01a0 B7010000 		.4byte	0x1b7
 1112 01a4 0E       		.uleb128 0xe
 1113 01a5 0E000000 		.4byte	.LVL11
 1114 01a9 FF000000 		.4byte	0xff
 1115 01ad 0E       		.uleb128 0xe
 1116 01ae 18000000 		.4byte	.LVL12
 1117 01b2 69010000 		.4byte	0x169
 1118 01b6 00       		.byte	0
 1119 01b7 0F       		.uleb128 0xf
 1120 01b8 8D030000 		.4byte	.LASF28
 1121 01bc 01       		.byte	0x1
 1122 01bd 6D01     		.2byte	0x16d
 1123 01bf 00000000 		.4byte	.LFB3
 1124 01c3 10000000 		.4byte	.LFE3-.LFB3
 1125 01c7 01       		.uleb128 0x1
 1126 01c8 9C       		.byte	0x9c
 1127 01c9 0F       		.uleb128 0xf
 1128 01ca 3E000000 		.4byte	.LASF29
 1129 01ce 01       		.byte	0x1
 1130 01cf 8701     		.2byte	0x187
 1131 01d1 00000000 		.4byte	.LFB4
 1132 01d5 14000000 		.4byte	.LFE4-.LFB4
 1133 01d9 01       		.uleb128 0x1
 1134 01da 9C       		.byte	0x9c
 1135 01db 0F       		.uleb128 0xf
 1136 01dc B2020000 		.4byte	.LASF30
 1137 01e0 01       		.byte	0x1
 1138 01e1 A001     		.2byte	0x1a0
 1139 01e3 00000000 		.4byte	.LFB5
 1140 01e7 14000000 		.4byte	.LFE5-.LFB5
 1141 01eb 01       		.uleb128 0x1
 1142 01ec 9C       		.byte	0x9c
 1143 01ed 10       		.uleb128 0x10
 1144 01ee 94020000 		.4byte	.LASF32
 1145 01f2 01       		.byte	0x1
 1146 01f3 C201     		.2byte	0x1c2
 1147 01f5 83000000 		.4byte	0x83
 1148 01f9 00000000 		.4byte	.LFB6
 1149 01fd 28000000 		.4byte	.LFE6-.LFB6
 1150 0201 01       		.uleb128 0x1
 1151 0202 9C       		.byte	0x9c
 1152 0203 28020000 		.4byte	0x228
 1153 0207 11       		.uleb128 0x11
 1154 0208 6F010000 		.4byte	.LASF34
 1155 020c 01       		.byte	0x1
 1156 020d C201     		.2byte	0x1c2
 1157 020f 83000000 		.4byte	0x83
 1158 0213 78000000 		.4byte	.LLST3
 1159 0217 12       		.uleb128 0x12
 1160 0218 66040000 		.4byte	.LASF31
 1161 021c 01       		.byte	0x1
 1162 021d C401     		.2byte	0x1c4
 1163 021f 83000000 		.4byte	0x83
 1164 0223 BD000000 		.4byte	.LLST4
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 37


 1165 0227 00       		.byte	0
 1166 0228 10       		.uleb128 0x10
 1167 0229 B2000000 		.4byte	.LASF33
 1168 022d 01       		.byte	0x1
 1169 022e F801     		.2byte	0x1f8
 1170 0230 8F000000 		.4byte	0x8f
 1171 0234 00000000 		.4byte	.LFB7
 1172 0238 2C000000 		.4byte	.LFE7-.LFB7
 1173 023c 01       		.uleb128 0x1
 1174 023d 9C       		.byte	0x9c
 1175 023e 72020000 		.4byte	0x272
 1176 0242 11       		.uleb128 0x11
 1177 0243 06040000 		.4byte	.LASF35
 1178 0247 01       		.byte	0x1
 1179 0248 F801     		.2byte	0x1f8
 1180 024a 83000000 		.4byte	0x83
 1181 024e F3000000 		.4byte	.LLST5
 1182 0252 12       		.uleb128 0x12
 1183 0253 A6040000 		.4byte	.LASF36
 1184 0257 01       		.byte	0x1
 1185 0258 FA01     		.2byte	0x1fa
 1186 025a 83000000 		.4byte	0x83
 1187 025e 38010000 		.4byte	.LLST6
 1188 0262 0C       		.uleb128 0xc
 1189 0263 0C000000 		.4byte	.LVL22
 1190 0267 8A050000 		.4byte	0x58a
 1191 026b 0B       		.uleb128 0xb
 1192 026c 01       		.uleb128 0x1
 1193 026d 50       		.byte	0x50
 1194 026e 01       		.uleb128 0x1
 1195 026f 30       		.byte	0x30
 1196 0270 00       		.byte	0
 1197 0271 00       		.byte	0
 1198 0272 0D       		.uleb128 0xd
 1199 0273 E6030000 		.4byte	.LASF37
 1200 0277 01       		.byte	0x1
 1201 0278 2502     		.2byte	0x225
 1202 027a 00000000 		.4byte	.LFB8
 1203 027e 10000000 		.4byte	.LFE8-.LFB8
 1204 0282 01       		.uleb128 0x1
 1205 0283 9C       		.byte	0x9c
 1206 0284 99020000 		.4byte	0x299
 1207 0288 11       		.uleb128 0x11
 1208 0289 4C010000 		.4byte	.LASF38
 1209 028d 01       		.byte	0x1
 1210 028e 2502     		.2byte	0x225
 1211 0290 83000000 		.4byte	0x83
 1212 0294 56010000 		.4byte	.LLST7
 1213 0298 00       		.byte	0
 1214 0299 0D       		.uleb128 0xd
 1215 029a 1D040000 		.4byte	.LASF39
 1216 029e 01       		.byte	0x1
 1217 029f 5102     		.2byte	0x251
 1218 02a1 00000000 		.4byte	.LFB9
 1219 02a5 1C000000 		.4byte	.LFE9-.LFB9
 1220 02a9 01       		.uleb128 0x1
 1221 02aa 9C       		.byte	0x9c
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 38


 1222 02ab C0020000 		.4byte	0x2c0
 1223 02af 11       		.uleb128 0x11
 1224 02b0 8B020000 		.4byte	.LASF40
 1225 02b4 01       		.byte	0x1
 1226 02b5 5102     		.2byte	0x251
 1227 02b7 83000000 		.4byte	0x83
 1228 02bb 77010000 		.4byte	.LLST8
 1229 02bf 00       		.byte	0
 1230 02c0 0D       		.uleb128 0xd
 1231 02c1 E6000000 		.4byte	.LASF41
 1232 02c5 01       		.byte	0x1
 1233 02c6 6602     		.2byte	0x266
 1234 02c8 00000000 		.4byte	.LFB10
 1235 02cc 18000000 		.4byte	.LFE10-.LFB10
 1236 02d0 01       		.uleb128 0x1
 1237 02d1 9C       		.byte	0x9c
 1238 02d2 E7020000 		.4byte	0x2e7
 1239 02d6 11       		.uleb128 0x11
 1240 02d7 A0030000 		.4byte	.LASF42
 1241 02db 01       		.byte	0x1
 1242 02dc 6602     		.2byte	0x266
 1243 02de 83000000 		.4byte	0x83
 1244 02e2 98010000 		.4byte	.LLST9
 1245 02e6 00       		.byte	0
 1246 02e7 0D       		.uleb128 0xd
 1247 02e8 8B040000 		.4byte	.LASF43
 1248 02ec 01       		.byte	0x1
 1249 02ed 7E02     		.2byte	0x27e
 1250 02ef 00000000 		.4byte	.LFB11
 1251 02f3 10000000 		.4byte	.LFE11-.LFB11
 1252 02f7 01       		.uleb128 0x1
 1253 02f8 9C       		.byte	0x9c
 1254 02f9 0E030000 		.4byte	0x30e
 1255 02fd 11       		.uleb128 0x11
 1256 02fe 4C010000 		.4byte	.LASF38
 1257 0302 01       		.byte	0x1
 1258 0303 7E02     		.2byte	0x27e
 1259 0305 83000000 		.4byte	0x83
 1260 0309 B9010000 		.4byte	.LLST10
 1261 030d 00       		.byte	0
 1262 030e 0D       		.uleb128 0xd
 1263 030f 59000000 		.4byte	.LASF44
 1264 0313 01       		.byte	0x1
 1265 0314 9502     		.2byte	0x295
 1266 0316 00000000 		.4byte	.LFB12
 1267 031a 10000000 		.4byte	.LFE12-.LFB12
 1268 031e 01       		.uleb128 0x1
 1269 031f 9C       		.byte	0x9c
 1270 0320 35030000 		.4byte	0x335
 1271 0324 11       		.uleb128 0x11
 1272 0325 4C010000 		.4byte	.LASF38
 1273 0329 01       		.byte	0x1
 1274 032a 9502     		.2byte	0x295
 1275 032c 83000000 		.4byte	0x83
 1276 0330 DA010000 		.4byte	.LLST11
 1277 0334 00       		.byte	0
 1278 0335 0D       		.uleb128 0xd
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 39


 1279 0336 6D040000 		.4byte	.LASF45
 1280 033a 01       		.byte	0x1
 1281 033b B102     		.2byte	0x2b1
 1282 033d 00000000 		.4byte	.LFB13
 1283 0341 1C000000 		.4byte	.LFE13-.LFB13
 1284 0345 01       		.uleb128 0x1
 1285 0346 9C       		.byte	0x9c
 1286 0347 7B030000 		.4byte	0x37b
 1287 034b 11       		.uleb128 0x11
 1288 034c 06040000 		.4byte	.LASF35
 1289 0350 01       		.byte	0x1
 1290 0351 B102     		.2byte	0x2b1
 1291 0353 83000000 		.4byte	0x83
 1292 0357 FB010000 		.4byte	.LLST12
 1293 035b 11       		.uleb128 0x11
 1294 035c 37040000 		.4byte	.LASF46
 1295 0360 01       		.byte	0x1
 1296 0361 B102     		.2byte	0x2b1
 1297 0363 8F000000 		.4byte	0x8f
 1298 0367 27020000 		.4byte	.LLST13
 1299 036b 0C       		.uleb128 0xc
 1300 036c 10000000 		.4byte	.LVL40
 1301 0370 8A050000 		.4byte	0x58a
 1302 0374 0B       		.uleb128 0xb
 1303 0375 01       		.uleb128 0x1
 1304 0376 50       		.byte	0x50
 1305 0377 01       		.uleb128 0x1
 1306 0378 30       		.byte	0x30
 1307 0379 00       		.byte	0
 1308 037a 00       		.byte	0
 1309 037b 0D       		.uleb128 0xd
 1310 037c 77030000 		.4byte	.LASF47
 1311 0380 01       		.byte	0x1
 1312 0381 D302     		.2byte	0x2d3
 1313 0383 00000000 		.4byte	.LFB14
 1314 0387 1C000000 		.4byte	.LFE14-.LFB14
 1315 038b 01       		.uleb128 0x1
 1316 038c 9C       		.byte	0x9c
 1317 038d C1030000 		.4byte	0x3c1
 1318 0391 11       		.uleb128 0x11
 1319 0392 06040000 		.4byte	.LASF35
 1320 0396 01       		.byte	0x1
 1321 0397 D302     		.2byte	0x2d3
 1322 0399 83000000 		.4byte	0x83
 1323 039d 48020000 		.4byte	.LLST14
 1324 03a1 11       		.uleb128 0x11
 1325 03a2 2F000000 		.4byte	.LASF48
 1326 03a6 01       		.byte	0x1
 1327 03a7 D302     		.2byte	0x2d3
 1328 03a9 9B000000 		.4byte	0x9b
 1329 03ad 74020000 		.4byte	.LLST15
 1330 03b1 0C       		.uleb128 0xc
 1331 03b2 10000000 		.4byte	.LVL44
 1332 03b6 8A050000 		.4byte	0x58a
 1333 03ba 0B       		.uleb128 0xb
 1334 03bb 01       		.uleb128 0x1
 1335 03bc 50       		.byte	0x50
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 40


 1336 03bd 01       		.uleb128 0x1
 1337 03be 30       		.byte	0x30
 1338 03bf 00       		.byte	0
 1339 03c0 00       		.byte	0
 1340 03c1 13       		.uleb128 0x13
 1341 03c2 51010000 		.4byte	.LASF49
 1342 03c6 01       		.byte	0x1
 1343 03c7 F402     		.2byte	0x2f4
 1344 03c9 8F000000 		.4byte	0x8f
 1345 03cd 00000000 		.4byte	.LFB15
 1346 03d1 5C000000 		.4byte	.LFE15-.LFB15
 1347 03d5 01       		.uleb128 0x1
 1348 03d6 9C       		.byte	0x9c
 1349 03d7 19040000 		.4byte	0x419
 1350 03db 11       		.uleb128 0x11
 1351 03dc 06040000 		.4byte	.LASF35
 1352 03e0 01       		.byte	0x1
 1353 03e1 F402     		.2byte	0x2f4
 1354 03e3 83000000 		.4byte	0x83
 1355 03e7 A4020000 		.4byte	.LLST16
 1356 03eb 11       		.uleb128 0x11
 1357 03ec 3E040000 		.4byte	.LASF50
 1358 03f0 01       		.byte	0x1
 1359 03f1 F402     		.2byte	0x2f4
 1360 03f3 8F000000 		.4byte	0x8f
 1361 03f7 D0020000 		.4byte	.LLST17
 1362 03fb 14       		.uleb128 0x14
 1363 03fc 44020000 		.4byte	.LASF51
 1364 0400 01       		.byte	0x1
 1365 0401 F602     		.2byte	0x2f6
 1366 0403 8F000000 		.4byte	0x8f
 1367 0407 01       		.uleb128 0x1
 1368 0408 50       		.byte	0x50
 1369 0409 0C       		.uleb128 0xc
 1370 040a 10000000 		.4byte	.LVL49
 1371 040e 8A050000 		.4byte	0x58a
 1372 0412 0B       		.uleb128 0xb
 1373 0413 01       		.uleb128 0x1
 1374 0414 50       		.byte	0x50
 1375 0415 01       		.uleb128 0x1
 1376 0416 30       		.byte	0x30
 1377 0417 00       		.byte	0
 1378 0418 00       		.byte	0
 1379 0419 13       		.uleb128 0x13
 1380 041a 07010000 		.4byte	.LASF52
 1381 041e 01       		.byte	0x1
 1382 041f 2A03     		.2byte	0x32a
 1383 0421 9B000000 		.4byte	0x9b
 1384 0425 00000000 		.4byte	.LFB16
 1385 0429 40000000 		.4byte	.LFE16-.LFB16
 1386 042d 01       		.uleb128 0x1
 1387 042e 9C       		.byte	0x9c
 1388 042f 6F040000 		.4byte	0x46f
 1389 0433 11       		.uleb128 0x11
 1390 0434 06040000 		.4byte	.LASF35
 1391 0438 01       		.byte	0x1
 1392 0439 2A03     		.2byte	0x32a
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 41


 1393 043b 83000000 		.4byte	0x83
 1394 043f 07030000 		.4byte	.LLST18
 1395 0443 11       		.uleb128 0x11
 1396 0444 3E040000 		.4byte	.LASF50
 1397 0448 01       		.byte	0x1
 1398 0449 2A03     		.2byte	0x32a
 1399 044b 8F000000 		.4byte	0x8f
 1400 044f 33030000 		.4byte	.LLST19
 1401 0453 15       		.uleb128 0x15
 1402 0454 9A010000 		.4byte	.LASF64
 1403 0458 01       		.byte	0x1
 1404 0459 2C03     		.2byte	0x32c
 1405 045b C1000000 		.4byte	0xc1
 1406 045f 0C       		.uleb128 0xc
 1407 0460 10000000 		.4byte	.LVL58
 1408 0464 8A050000 		.4byte	0x58a
 1409 0468 0B       		.uleb128 0xb
 1410 0469 01       		.uleb128 0x1
 1411 046a 50       		.byte	0x50
 1412 046b 01       		.uleb128 0x1
 1413 046c 30       		.byte	0x30
 1414 046d 00       		.byte	0
 1415 046e 00       		.byte	0
 1416 046f 13       		.uleb128 0x13
 1417 0470 C9030000 		.4byte	.LASF53
 1418 0474 01       		.byte	0x1
 1419 0475 5703     		.2byte	0x357
 1420 0477 A7000000 		.4byte	0xa7
 1421 047b 00000000 		.4byte	.LFB17
 1422 047f 48000000 		.4byte	.LFE17-.LFB17
 1423 0483 01       		.uleb128 0x1
 1424 0484 9C       		.byte	0x9c
 1425 0485 C7040000 		.4byte	0x4c7
 1426 0489 11       		.uleb128 0x11
 1427 048a 06040000 		.4byte	.LASF35
 1428 048e 01       		.byte	0x1
 1429 048f 5703     		.2byte	0x357
 1430 0491 83000000 		.4byte	0x83
 1431 0495 5F030000 		.4byte	.LLST20
 1432 0499 11       		.uleb128 0x11
 1433 049a 3E040000 		.4byte	.LASF50
 1434 049e 01       		.byte	0x1
 1435 049f 5703     		.2byte	0x357
 1436 04a1 8F000000 		.4byte	0x8f
 1437 04a5 8B030000 		.4byte	.LLST21
 1438 04a9 14       		.uleb128 0x14
 1439 04aa B3010000 		.4byte	.LASF54
 1440 04ae 01       		.byte	0x1
 1441 04af 5903     		.2byte	0x359
 1442 04b1 A7000000 		.4byte	0xa7
 1443 04b5 01       		.uleb128 0x1
 1444 04b6 50       		.byte	0x50
 1445 04b7 0C       		.uleb128 0xc
 1446 04b8 10000000 		.4byte	.LVL65
 1447 04bc 8A050000 		.4byte	0x58a
 1448 04c0 0B       		.uleb128 0xb
 1449 04c1 01       		.uleb128 0x1
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 42


 1450 04c2 50       		.byte	0x50
 1451 04c3 01       		.uleb128 0x1
 1452 04c4 30       		.byte	0x30
 1453 04c5 00       		.byte	0
 1454 04c6 00       		.byte	0
 1455 04c7 16       		.uleb128 0x16
 1456 04c8 83000000 		.4byte	0x83
 1457 04cc D7040000 		.4byte	0x4d7
 1458 04d0 17       		.uleb128 0x17
 1459 04d1 F8000000 		.4byte	0xf8
 1460 04d5 00       		.byte	0
 1461 04d6 00       		.byte	0
 1462 04d7 18       		.uleb128 0x18
 1463 04d8 27020000 		.4byte	.LASF55
 1464 04dc 01       		.byte	0x1
 1465 04dd 21       		.byte	0x21
 1466 04de E7040000 		.4byte	0x4e7
 1467 04e2 04       		.byte	0x4
 1468 04e3 00       		.byte	0
 1469 04e4 01       		.byte	0x1
 1470 04e5 00       		.byte	0
 1471 04e6 00       		.byte	0
 1472 04e7 19       		.uleb128 0x19
 1473 04e8 C7040000 		.4byte	0x4c7
 1474 04ec 1A       		.uleb128 0x1a
 1475 04ed 77010000 		.4byte	.LASF56
 1476 04f1 01       		.byte	0x1
 1477 04f2 18       		.byte	0x18
 1478 04f3 6B000000 		.4byte	0x6b
 1479 04f7 05       		.uleb128 0x5
 1480 04f8 03       		.byte	0x3
 1481 04f9 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1482 04fd 16       		.uleb128 0x16
 1483 04fe 8F000000 		.4byte	0x8f
 1484 0502 0D050000 		.4byte	0x50d
 1485 0506 17       		.uleb128 0x17
 1486 0507 F8000000 		.4byte	0xf8
 1487 050b 00       		.byte	0
 1488 050c 00       		.byte	0
 1489 050d 1A       		.uleb128 0x1a
 1490 050e 00000000 		.4byte	.LASF57
 1491 0512 01       		.byte	0x1
 1492 0513 19       		.byte	0x19
 1493 0514 1E050000 		.4byte	0x51e
 1494 0518 05       		.uleb128 0x5
 1495 0519 03       		.byte	0x3
 1496 051a 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1497 051e 05       		.uleb128 0x5
 1498 051f FD040000 		.4byte	0x4fd
 1499 0523 16       		.uleb128 0x16
 1500 0524 9B000000 		.4byte	0x9b
 1501 0528 33050000 		.4byte	0x533
 1502 052c 17       		.uleb128 0x17
 1503 052d F8000000 		.4byte	0xf8
 1504 0531 00       		.byte	0
 1505 0532 00       		.byte	0
 1506 0533 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 43


 1507 0534 48040000 		.4byte	.LASF58
 1508 0538 01       		.byte	0x1
 1509 0539 1A       		.byte	0x1a
 1510 053a 44050000 		.4byte	0x544
 1511 053e 05       		.uleb128 0x5
 1512 053f 03       		.byte	0x3
 1513 0540 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1514 0544 05       		.uleb128 0x5
 1515 0545 23050000 		.4byte	0x523
 1516 0549 1B       		.uleb128 0x1b
 1517 054a 60030000 		.4byte	.LASF59
 1518 054e 03       		.byte	0x3
 1519 054f 4C       		.byte	0x4c
 1520 0550 5F050000 		.4byte	0x55f
 1521 0554 1C       		.uleb128 0x1c
 1522 0555 6B000000 		.4byte	0x6b
 1523 0559 1C       		.uleb128 0x1c
 1524 055a 6B000000 		.4byte	0x6b
 1525 055e 00       		.byte	0
 1526 055f 1D       		.uleb128 0x1d
 1527 0560 18020000 		.4byte	.LASF65
 1528 0564 03       		.byte	0x3
 1529 0565 49       		.byte	0x49
 1530 0566 E5000000 		.4byte	0xe5
 1531 056a 79050000 		.4byte	0x579
 1532 056e 1C       		.uleb128 0x1c
 1533 056f 6B000000 		.4byte	0x6b
 1534 0573 1C       		.uleb128 0x1c
 1535 0574 E5000000 		.4byte	0xe5
 1536 0578 00       		.byte	0
 1537 0579 1B       		.uleb128 0x1b
 1538 057a 34010000 		.4byte	.LASF60
 1539 057e 03       		.byte	0x3
 1540 057f 5B       		.byte	0x5b
 1541 0580 8A050000 		.4byte	0x58a
 1542 0584 1C       		.uleb128 0x1c
 1543 0585 77000000 		.4byte	0x77
 1544 0589 00       		.byte	0
 1545 058a 1E       		.uleb128 0x1e
 1546 058b AA030000 		.4byte	.LASF66
 1547 058f 03       		.byte	0x3
 1548 0590 63       		.byte	0x63
 1549 0591 1C       		.uleb128 0x1c
 1550 0592 6B000000 		.4byte	0x6b
 1551 0596 00       		.byte	0
 1552 0597 00       		.byte	0
 1553              		.section	.debug_abbrev,"",%progbits
 1554              	.Ldebug_abbrev0:
 1555 0000 01       		.uleb128 0x1
 1556 0001 11       		.uleb128 0x11
 1557 0002 01       		.byte	0x1
 1558 0003 25       		.uleb128 0x25
 1559 0004 0E       		.uleb128 0xe
 1560 0005 13       		.uleb128 0x13
 1561 0006 0B       		.uleb128 0xb
 1562 0007 03       		.uleb128 0x3
 1563 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 44


 1564 0009 1B       		.uleb128 0x1b
 1565 000a 0E       		.uleb128 0xe
 1566 000b 55       		.uleb128 0x55
 1567 000c 17       		.uleb128 0x17
 1568 000d 11       		.uleb128 0x11
 1569 000e 01       		.uleb128 0x1
 1570 000f 10       		.uleb128 0x10
 1571 0010 17       		.uleb128 0x17
 1572 0011 00       		.byte	0
 1573 0012 00       		.byte	0
 1574 0013 02       		.uleb128 0x2
 1575 0014 24       		.uleb128 0x24
 1576 0015 00       		.byte	0
 1577 0016 0B       		.uleb128 0xb
 1578 0017 0B       		.uleb128 0xb
 1579 0018 3E       		.uleb128 0x3e
 1580 0019 0B       		.uleb128 0xb
 1581 001a 03       		.uleb128 0x3
 1582 001b 0E       		.uleb128 0xe
 1583 001c 00       		.byte	0
 1584 001d 00       		.byte	0
 1585 001e 03       		.uleb128 0x3
 1586 001f 24       		.uleb128 0x24
 1587 0020 00       		.byte	0
 1588 0021 0B       		.uleb128 0xb
 1589 0022 0B       		.uleb128 0xb
 1590 0023 3E       		.uleb128 0x3e
 1591 0024 0B       		.uleb128 0xb
 1592 0025 03       		.uleb128 0x3
 1593 0026 08       		.uleb128 0x8
 1594 0027 00       		.byte	0
 1595 0028 00       		.byte	0
 1596 0029 04       		.uleb128 0x4
 1597 002a 16       		.uleb128 0x16
 1598 002b 00       		.byte	0
 1599 002c 03       		.uleb128 0x3
 1600 002d 0E       		.uleb128 0xe
 1601 002e 3A       		.uleb128 0x3a
 1602 002f 0B       		.uleb128 0xb
 1603 0030 3B       		.uleb128 0x3b
 1604 0031 05       		.uleb128 0x5
 1605 0032 49       		.uleb128 0x49
 1606 0033 13       		.uleb128 0x13
 1607 0034 00       		.byte	0
 1608 0035 00       		.byte	0
 1609 0036 05       		.uleb128 0x5
 1610 0037 35       		.uleb128 0x35
 1611 0038 00       		.byte	0
 1612 0039 49       		.uleb128 0x49
 1613 003a 13       		.uleb128 0x13
 1614 003b 00       		.byte	0
 1615 003c 00       		.byte	0
 1616 003d 06       		.uleb128 0x6
 1617 003e 0F       		.uleb128 0xf
 1618 003f 00       		.byte	0
 1619 0040 0B       		.uleb128 0xb
 1620 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 45


 1621 0042 49       		.uleb128 0x49
 1622 0043 13       		.uleb128 0x13
 1623 0044 00       		.byte	0
 1624 0045 00       		.byte	0
 1625 0046 07       		.uleb128 0x7
 1626 0047 15       		.uleb128 0x15
 1627 0048 00       		.byte	0
 1628 0049 27       		.uleb128 0x27
 1629 004a 19       		.uleb128 0x19
 1630 004b 00       		.byte	0
 1631 004c 00       		.byte	0
 1632 004d 08       		.uleb128 0x8
 1633 004e 2E       		.uleb128 0x2e
 1634 004f 01       		.byte	0x1
 1635 0050 3F       		.uleb128 0x3f
 1636 0051 19       		.uleb128 0x19
 1637 0052 03       		.uleb128 0x3
 1638 0053 0E       		.uleb128 0xe
 1639 0054 3A       		.uleb128 0x3a
 1640 0055 0B       		.uleb128 0xb
 1641 0056 3B       		.uleb128 0x3b
 1642 0057 0B       		.uleb128 0xb
 1643 0058 27       		.uleb128 0x27
 1644 0059 19       		.uleb128 0x19
 1645 005a 11       		.uleb128 0x11
 1646 005b 01       		.uleb128 0x1
 1647 005c 12       		.uleb128 0x12
 1648 005d 06       		.uleb128 0x6
 1649 005e 40       		.uleb128 0x40
 1650 005f 18       		.uleb128 0x18
 1651 0060 9742     		.uleb128 0x2117
 1652 0062 19       		.uleb128 0x19
 1653 0063 01       		.uleb128 0x1
 1654 0064 13       		.uleb128 0x13
 1655 0065 00       		.byte	0
 1656 0066 00       		.byte	0
 1657 0067 09       		.uleb128 0x9
 1658 0068 34       		.uleb128 0x34
 1659 0069 00       		.byte	0
 1660 006a 03       		.uleb128 0x3
 1661 006b 0E       		.uleb128 0xe
 1662 006c 3A       		.uleb128 0x3a
 1663 006d 0B       		.uleb128 0xb
 1664 006e 3B       		.uleb128 0x3b
 1665 006f 0B       		.uleb128 0xb
 1666 0070 49       		.uleb128 0x49
 1667 0071 13       		.uleb128 0x13
 1668 0072 02       		.uleb128 0x2
 1669 0073 17       		.uleb128 0x17
 1670 0074 00       		.byte	0
 1671 0075 00       		.byte	0
 1672 0076 0A       		.uleb128 0xa
 1673 0077 898201   		.uleb128 0x4109
 1674 007a 01       		.byte	0x1
 1675 007b 11       		.uleb128 0x11
 1676 007c 01       		.uleb128 0x1
 1677 007d 31       		.uleb128 0x31
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 46


 1678 007e 13       		.uleb128 0x13
 1679 007f 01       		.uleb128 0x1
 1680 0080 13       		.uleb128 0x13
 1681 0081 00       		.byte	0
 1682 0082 00       		.byte	0
 1683 0083 0B       		.uleb128 0xb
 1684 0084 8A8201   		.uleb128 0x410a
 1685 0087 00       		.byte	0
 1686 0088 02       		.uleb128 0x2
 1687 0089 18       		.uleb128 0x18
 1688 008a 9142     		.uleb128 0x2111
 1689 008c 18       		.uleb128 0x18
 1690 008d 00       		.byte	0
 1691 008e 00       		.byte	0
 1692 008f 0C       		.uleb128 0xc
 1693 0090 898201   		.uleb128 0x4109
 1694 0093 01       		.byte	0x1
 1695 0094 11       		.uleb128 0x11
 1696 0095 01       		.uleb128 0x1
 1697 0096 31       		.uleb128 0x31
 1698 0097 13       		.uleb128 0x13
 1699 0098 00       		.byte	0
 1700 0099 00       		.byte	0
 1701 009a 0D       		.uleb128 0xd
 1702 009b 2E       		.uleb128 0x2e
 1703 009c 01       		.byte	0x1
 1704 009d 3F       		.uleb128 0x3f
 1705 009e 19       		.uleb128 0x19
 1706 009f 03       		.uleb128 0x3
 1707 00a0 0E       		.uleb128 0xe
 1708 00a1 3A       		.uleb128 0x3a
 1709 00a2 0B       		.uleb128 0xb
 1710 00a3 3B       		.uleb128 0x3b
 1711 00a4 05       		.uleb128 0x5
 1712 00a5 27       		.uleb128 0x27
 1713 00a6 19       		.uleb128 0x19
 1714 00a7 11       		.uleb128 0x11
 1715 00a8 01       		.uleb128 0x1
 1716 00a9 12       		.uleb128 0x12
 1717 00aa 06       		.uleb128 0x6
 1718 00ab 40       		.uleb128 0x40
 1719 00ac 18       		.uleb128 0x18
 1720 00ad 9742     		.uleb128 0x2117
 1721 00af 19       		.uleb128 0x19
 1722 00b0 01       		.uleb128 0x1
 1723 00b1 13       		.uleb128 0x13
 1724 00b2 00       		.byte	0
 1725 00b3 00       		.byte	0
 1726 00b4 0E       		.uleb128 0xe
 1727 00b5 898201   		.uleb128 0x4109
 1728 00b8 00       		.byte	0
 1729 00b9 11       		.uleb128 0x11
 1730 00ba 01       		.uleb128 0x1
 1731 00bb 31       		.uleb128 0x31
 1732 00bc 13       		.uleb128 0x13
 1733 00bd 00       		.byte	0
 1734 00be 00       		.byte	0
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 47


 1735 00bf 0F       		.uleb128 0xf
 1736 00c0 2E       		.uleb128 0x2e
 1737 00c1 00       		.byte	0
 1738 00c2 3F       		.uleb128 0x3f
 1739 00c3 19       		.uleb128 0x19
 1740 00c4 03       		.uleb128 0x3
 1741 00c5 0E       		.uleb128 0xe
 1742 00c6 3A       		.uleb128 0x3a
 1743 00c7 0B       		.uleb128 0xb
 1744 00c8 3B       		.uleb128 0x3b
 1745 00c9 05       		.uleb128 0x5
 1746 00ca 27       		.uleb128 0x27
 1747 00cb 19       		.uleb128 0x19
 1748 00cc 11       		.uleb128 0x11
 1749 00cd 01       		.uleb128 0x1
 1750 00ce 12       		.uleb128 0x12
 1751 00cf 06       		.uleb128 0x6
 1752 00d0 40       		.uleb128 0x40
 1753 00d1 18       		.uleb128 0x18
 1754 00d2 9742     		.uleb128 0x2117
 1755 00d4 19       		.uleb128 0x19
 1756 00d5 00       		.byte	0
 1757 00d6 00       		.byte	0
 1758 00d7 10       		.uleb128 0x10
 1759 00d8 2E       		.uleb128 0x2e
 1760 00d9 01       		.byte	0x1
 1761 00da 3F       		.uleb128 0x3f
 1762 00db 19       		.uleb128 0x19
 1763 00dc 03       		.uleb128 0x3
 1764 00dd 0E       		.uleb128 0xe
 1765 00de 3A       		.uleb128 0x3a
 1766 00df 0B       		.uleb128 0xb
 1767 00e0 3B       		.uleb128 0x3b
 1768 00e1 05       		.uleb128 0x5
 1769 00e2 27       		.uleb128 0x27
 1770 00e3 19       		.uleb128 0x19
 1771 00e4 49       		.uleb128 0x49
 1772 00e5 13       		.uleb128 0x13
 1773 00e6 11       		.uleb128 0x11
 1774 00e7 01       		.uleb128 0x1
 1775 00e8 12       		.uleb128 0x12
 1776 00e9 06       		.uleb128 0x6
 1777 00ea 40       		.uleb128 0x40
 1778 00eb 18       		.uleb128 0x18
 1779 00ec 9742     		.uleb128 0x2117
 1780 00ee 19       		.uleb128 0x19
 1781 00ef 01       		.uleb128 0x1
 1782 00f0 13       		.uleb128 0x13
 1783 00f1 00       		.byte	0
 1784 00f2 00       		.byte	0
 1785 00f3 11       		.uleb128 0x11
 1786 00f4 05       		.uleb128 0x5
 1787 00f5 00       		.byte	0
 1788 00f6 03       		.uleb128 0x3
 1789 00f7 0E       		.uleb128 0xe
 1790 00f8 3A       		.uleb128 0x3a
 1791 00f9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 48


 1792 00fa 3B       		.uleb128 0x3b
 1793 00fb 05       		.uleb128 0x5
 1794 00fc 49       		.uleb128 0x49
 1795 00fd 13       		.uleb128 0x13
 1796 00fe 02       		.uleb128 0x2
 1797 00ff 17       		.uleb128 0x17
 1798 0100 00       		.byte	0
 1799 0101 00       		.byte	0
 1800 0102 12       		.uleb128 0x12
 1801 0103 34       		.uleb128 0x34
 1802 0104 00       		.byte	0
 1803 0105 03       		.uleb128 0x3
 1804 0106 0E       		.uleb128 0xe
 1805 0107 3A       		.uleb128 0x3a
 1806 0108 0B       		.uleb128 0xb
 1807 0109 3B       		.uleb128 0x3b
 1808 010a 05       		.uleb128 0x5
 1809 010b 49       		.uleb128 0x49
 1810 010c 13       		.uleb128 0x13
 1811 010d 02       		.uleb128 0x2
 1812 010e 17       		.uleb128 0x17
 1813 010f 00       		.byte	0
 1814 0110 00       		.byte	0
 1815 0111 13       		.uleb128 0x13
 1816 0112 2E       		.uleb128 0x2e
 1817 0113 01       		.byte	0x1
 1818 0114 3F       		.uleb128 0x3f
 1819 0115 19       		.uleb128 0x19
 1820 0116 03       		.uleb128 0x3
 1821 0117 0E       		.uleb128 0xe
 1822 0118 3A       		.uleb128 0x3a
 1823 0119 0B       		.uleb128 0xb
 1824 011a 3B       		.uleb128 0x3b
 1825 011b 05       		.uleb128 0x5
 1826 011c 27       		.uleb128 0x27
 1827 011d 19       		.uleb128 0x19
 1828 011e 49       		.uleb128 0x49
 1829 011f 13       		.uleb128 0x13
 1830 0120 11       		.uleb128 0x11
 1831 0121 01       		.uleb128 0x1
 1832 0122 12       		.uleb128 0x12
 1833 0123 06       		.uleb128 0x6
 1834 0124 40       		.uleb128 0x40
 1835 0125 18       		.uleb128 0x18
 1836 0126 9642     		.uleb128 0x2116
 1837 0128 19       		.uleb128 0x19
 1838 0129 01       		.uleb128 0x1
 1839 012a 13       		.uleb128 0x13
 1840 012b 00       		.byte	0
 1841 012c 00       		.byte	0
 1842 012d 14       		.uleb128 0x14
 1843 012e 34       		.uleb128 0x34
 1844 012f 00       		.byte	0
 1845 0130 03       		.uleb128 0x3
 1846 0131 0E       		.uleb128 0xe
 1847 0132 3A       		.uleb128 0x3a
 1848 0133 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 49


 1849 0134 3B       		.uleb128 0x3b
 1850 0135 05       		.uleb128 0x5
 1851 0136 49       		.uleb128 0x49
 1852 0137 13       		.uleb128 0x13
 1853 0138 02       		.uleb128 0x2
 1854 0139 18       		.uleb128 0x18
 1855 013a 00       		.byte	0
 1856 013b 00       		.byte	0
 1857 013c 15       		.uleb128 0x15
 1858 013d 34       		.uleb128 0x34
 1859 013e 00       		.byte	0
 1860 013f 03       		.uleb128 0x3
 1861 0140 0E       		.uleb128 0xe
 1862 0141 3A       		.uleb128 0x3a
 1863 0142 0B       		.uleb128 0xb
 1864 0143 3B       		.uleb128 0x3b
 1865 0144 05       		.uleb128 0x5
 1866 0145 49       		.uleb128 0x49
 1867 0146 13       		.uleb128 0x13
 1868 0147 00       		.byte	0
 1869 0148 00       		.byte	0
 1870 0149 16       		.uleb128 0x16
 1871 014a 01       		.uleb128 0x1
 1872 014b 01       		.byte	0x1
 1873 014c 49       		.uleb128 0x49
 1874 014d 13       		.uleb128 0x13
 1875 014e 01       		.uleb128 0x1
 1876 014f 13       		.uleb128 0x13
 1877 0150 00       		.byte	0
 1878 0151 00       		.byte	0
 1879 0152 17       		.uleb128 0x17
 1880 0153 21       		.uleb128 0x21
 1881 0154 00       		.byte	0
 1882 0155 49       		.uleb128 0x49
 1883 0156 13       		.uleb128 0x13
 1884 0157 2F       		.uleb128 0x2f
 1885 0158 0B       		.uleb128 0xb
 1886 0159 00       		.byte	0
 1887 015a 00       		.byte	0
 1888 015b 18       		.uleb128 0x18
 1889 015c 34       		.uleb128 0x34
 1890 015d 00       		.byte	0
 1891 015e 03       		.uleb128 0x3
 1892 015f 0E       		.uleb128 0xe
 1893 0160 3A       		.uleb128 0x3a
 1894 0161 0B       		.uleb128 0xb
 1895 0162 3B       		.uleb128 0x3b
 1896 0163 0B       		.uleb128 0xb
 1897 0164 49       		.uleb128 0x49
 1898 0165 13       		.uleb128 0x13
 1899 0166 1C       		.uleb128 0x1c
 1900 0167 0A       		.uleb128 0xa
 1901 0168 00       		.byte	0
 1902 0169 00       		.byte	0
 1903 016a 19       		.uleb128 0x19
 1904 016b 26       		.uleb128 0x26
 1905 016c 00       		.byte	0
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 50


 1906 016d 49       		.uleb128 0x49
 1907 016e 13       		.uleb128 0x13
 1908 016f 00       		.byte	0
 1909 0170 00       		.byte	0
 1910 0171 1A       		.uleb128 0x1a
 1911 0172 34       		.uleb128 0x34
 1912 0173 00       		.byte	0
 1913 0174 03       		.uleb128 0x3
 1914 0175 0E       		.uleb128 0xe
 1915 0176 3A       		.uleb128 0x3a
 1916 0177 0B       		.uleb128 0xb
 1917 0178 3B       		.uleb128 0x3b
 1918 0179 0B       		.uleb128 0xb
 1919 017a 49       		.uleb128 0x49
 1920 017b 13       		.uleb128 0x13
 1921 017c 3F       		.uleb128 0x3f
 1922 017d 19       		.uleb128 0x19
 1923 017e 02       		.uleb128 0x2
 1924 017f 18       		.uleb128 0x18
 1925 0180 00       		.byte	0
 1926 0181 00       		.byte	0
 1927 0182 1B       		.uleb128 0x1b
 1928 0183 2E       		.uleb128 0x2e
 1929 0184 01       		.byte	0x1
 1930 0185 3F       		.uleb128 0x3f
 1931 0186 19       		.uleb128 0x19
 1932 0187 03       		.uleb128 0x3
 1933 0188 0E       		.uleb128 0xe
 1934 0189 3A       		.uleb128 0x3a
 1935 018a 0B       		.uleb128 0xb
 1936 018b 3B       		.uleb128 0x3b
 1937 018c 0B       		.uleb128 0xb
 1938 018d 27       		.uleb128 0x27
 1939 018e 19       		.uleb128 0x19
 1940 018f 3C       		.uleb128 0x3c
 1941 0190 19       		.uleb128 0x19
 1942 0191 01       		.uleb128 0x1
 1943 0192 13       		.uleb128 0x13
 1944 0193 00       		.byte	0
 1945 0194 00       		.byte	0
 1946 0195 1C       		.uleb128 0x1c
 1947 0196 05       		.uleb128 0x5
 1948 0197 00       		.byte	0
 1949 0198 49       		.uleb128 0x49
 1950 0199 13       		.uleb128 0x13
 1951 019a 00       		.byte	0
 1952 019b 00       		.byte	0
 1953 019c 1D       		.uleb128 0x1d
 1954 019d 2E       		.uleb128 0x2e
 1955 019e 01       		.byte	0x1
 1956 019f 3F       		.uleb128 0x3f
 1957 01a0 19       		.uleb128 0x19
 1958 01a1 03       		.uleb128 0x3
 1959 01a2 0E       		.uleb128 0xe
 1960 01a3 3A       		.uleb128 0x3a
 1961 01a4 0B       		.uleb128 0xb
 1962 01a5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 51


 1963 01a6 0B       		.uleb128 0xb
 1964 01a7 27       		.uleb128 0x27
 1965 01a8 19       		.uleb128 0x19
 1966 01a9 49       		.uleb128 0x49
 1967 01aa 13       		.uleb128 0x13
 1968 01ab 3C       		.uleb128 0x3c
 1969 01ac 19       		.uleb128 0x19
 1970 01ad 01       		.uleb128 0x1
 1971 01ae 13       		.uleb128 0x13
 1972 01af 00       		.byte	0
 1973 01b0 00       		.byte	0
 1974 01b1 1E       		.uleb128 0x1e
 1975 01b2 2E       		.uleb128 0x2e
 1976 01b3 01       		.byte	0x1
 1977 01b4 3F       		.uleb128 0x3f
 1978 01b5 19       		.uleb128 0x19
 1979 01b6 03       		.uleb128 0x3
 1980 01b7 0E       		.uleb128 0xe
 1981 01b8 3A       		.uleb128 0x3a
 1982 01b9 0B       		.uleb128 0xb
 1983 01ba 3B       		.uleb128 0x3b
 1984 01bb 0B       		.uleb128 0xb
 1985 01bc 27       		.uleb128 0x27
 1986 01bd 19       		.uleb128 0x19
 1987 01be 3C       		.uleb128 0x3c
 1988 01bf 19       		.uleb128 0x19
 1989 01c0 00       		.byte	0
 1990 01c1 00       		.byte	0
 1991 01c2 00       		.byte	0
 1992              		.section	.debug_loc,"",%progbits
 1993              	.Ldebug_loc0:
 1994              	.LLST0:
 1995 0000 6A000000 		.4byte	.LVL5
 1996 0004 6E000000 		.4byte	.LVL7
 1997 0008 0200     		.2byte	0x2
 1998 000a 30       		.byte	0x30
 1999 000b 9F       		.byte	0x9f
 2000 000c 6E000000 		.4byte	.LVL7
 2001 0010 F4000000 		.4byte	.LFE1
 2002 0014 0100     		.2byte	0x1
 2003 0016 53       		.byte	0x53
 2004 0017 00000000 		.4byte	0
 2005 001b 00000000 		.4byte	0
 2006              	.LLST1:
 2007 001f 62000000 		.4byte	.LVL2
 2008 0023 66000000 		.4byte	.LVL3
 2009 0027 0100     		.2byte	0x1
 2010 0029 50       		.byte	0x50
 2011 002a 66000000 		.4byte	.LVL3
 2012 002e 68000000 		.4byte	.LVL4
 2013 0032 0100     		.2byte	0x1
 2014 0034 52       		.byte	0x52
 2015 0035 68000000 		.4byte	.LVL4
 2016 0039 6C000000 		.4byte	.LVL6
 2017 003d 0100     		.2byte	0x1
 2018 003f 53       		.byte	0x53
 2019 0040 6C000000 		.4byte	.LVL6
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 52


 2020 0044 6E000000 		.4byte	.LVL7
 2021 0048 0200     		.2byte	0x2
 2022 004a 71       		.byte	0x71
 2023 004b 00       		.sleb128 0
 2024 004c 6E000000 		.4byte	.LVL7
 2025 0050 8E000000 		.4byte	.LVL9
 2026 0054 0400     		.2byte	0x4
 2027 0056 0A       		.byte	0xa
 2028 0057 0001     		.2byte	0x100
 2029 0059 9F       		.byte	0x9f
 2030 005a 00000000 		.4byte	0
 2031 005e 00000000 		.4byte	0
 2032              	.LLST2:
 2033 0062 7C000000 		.4byte	.LVL8
 2034 0066 8E000000 		.4byte	.LVL9
 2035 006a 0400     		.2byte	0x4
 2036 006c 0A       		.byte	0xa
 2037 006d 0010     		.2byte	0x1000
 2038 006f 9F       		.byte	0x9f
 2039 0070 00000000 		.4byte	0
 2040 0074 00000000 		.4byte	0
 2041              	.LLST3:
 2042 0078 00000000 		.4byte	.LVL13
 2043 007c 06000000 		.4byte	.LVL15
 2044 0080 0100     		.2byte	0x1
 2045 0082 50       		.byte	0x50
 2046 0083 06000000 		.4byte	.LVL15
 2047 0087 1A000000 		.4byte	.LVL17
 2048 008b 0100     		.2byte	0x1
 2049 008d 52       		.byte	0x52
 2050 008e 1A000000 		.4byte	.LVL17
 2051 0092 20000000 		.4byte	.LVL18
 2052 0096 0400     		.2byte	0x4
 2053 0098 F3       		.byte	0xf3
 2054 0099 01       		.uleb128 0x1
 2055 009a 50       		.byte	0x50
 2056 009b 9F       		.byte	0x9f
 2057 009c 20000000 		.4byte	.LVL18
 2058 00a0 22000000 		.4byte	.LVL19
 2059 00a4 0100     		.2byte	0x1
 2060 00a6 50       		.byte	0x50
 2061 00a7 22000000 		.4byte	.LVL19
 2062 00ab 28000000 		.4byte	.LFE6
 2063 00af 0400     		.2byte	0x4
 2064 00b1 F3       		.byte	0xf3
 2065 00b2 01       		.uleb128 0x1
 2066 00b3 50       		.byte	0x50
 2067 00b4 9F       		.byte	0x9f
 2068 00b5 00000000 		.4byte	0
 2069 00b9 00000000 		.4byte	0
 2070              	.LLST4:
 2071 00bd 02000000 		.4byte	.LVL14
 2072 00c1 06000000 		.4byte	.LVL15
 2073 00c5 0200     		.2byte	0x2
 2074 00c7 30       		.byte	0x30
 2075 00c8 9F       		.byte	0x9f
 2076 00c9 0E000000 		.4byte	.LVL16
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 53


 2077 00cd 20000000 		.4byte	.LVL18
 2078 00d1 0100     		.2byte	0x1
 2079 00d3 50       		.byte	0x50
 2080 00d4 20000000 		.4byte	.LVL18
 2081 00d8 22000000 		.4byte	.LVL19
 2082 00dc 0200     		.2byte	0x2
 2083 00de 30       		.byte	0x30
 2084 00df 9F       		.byte	0x9f
 2085 00e0 22000000 		.4byte	.LVL19
 2086 00e4 28000000 		.4byte	.LFE6
 2087 00e8 0100     		.2byte	0x1
 2088 00ea 50       		.byte	0x50
 2089 00eb 00000000 		.4byte	0
 2090 00ef 00000000 		.4byte	0
 2091              	.LLST5:
 2092 00f3 00000000 		.4byte	.LVL20
 2093 00f7 08000000 		.4byte	.LVL21
 2094 00fb 0100     		.2byte	0x1
 2095 00fd 50       		.byte	0x50
 2096 00fe 08000000 		.4byte	.LVL21
 2097 0102 12000000 		.4byte	.LVL23
 2098 0106 0100     		.2byte	0x1
 2099 0108 54       		.byte	0x54
 2100 0109 12000000 		.4byte	.LVL23
 2101 010d 20000000 		.4byte	.LVL25
 2102 0111 0400     		.2byte	0x4
 2103 0113 F3       		.byte	0xf3
 2104 0114 01       		.uleb128 0x1
 2105 0115 50       		.byte	0x50
 2106 0116 9F       		.byte	0x9f
 2107 0117 20000000 		.4byte	.LVL25
 2108 011b 22000000 		.4byte	.LVL26
 2109 011f 0100     		.2byte	0x1
 2110 0121 54       		.byte	0x54
 2111 0122 22000000 		.4byte	.LVL26
 2112 0126 2C000000 		.4byte	.LFE7
 2113 012a 0400     		.2byte	0x4
 2114 012c F3       		.byte	0xf3
 2115 012d 01       		.uleb128 0x1
 2116 012e 50       		.byte	0x50
 2117 012f 9F       		.byte	0x9f
 2118 0130 00000000 		.4byte	0
 2119 0134 00000000 		.4byte	0
 2120              	.LLST6:
 2121 0138 1E000000 		.4byte	.LVL24
 2122 013c 20000000 		.4byte	.LVL25
 2123 0140 0100     		.2byte	0x1
 2124 0142 50       		.byte	0x50
 2125 0143 22000000 		.4byte	.LVL26
 2126 0147 24000000 		.4byte	.LVL27
 2127 014b 0100     		.2byte	0x1
 2128 014d 50       		.byte	0x50
 2129 014e 00000000 		.4byte	0
 2130 0152 00000000 		.4byte	0
 2131              	.LLST7:
 2132 0156 00000000 		.4byte	.LVL28
 2133 015a 04000000 		.4byte	.LVL29
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 54


 2134 015e 0100     		.2byte	0x1
 2135 0160 50       		.byte	0x50
 2136 0161 04000000 		.4byte	.LVL29
 2137 0165 10000000 		.4byte	.LFE8
 2138 0169 0400     		.2byte	0x4
 2139 016b F3       		.byte	0xf3
 2140 016c 01       		.uleb128 0x1
 2141 016d 50       		.byte	0x50
 2142 016e 9F       		.byte	0x9f
 2143 016f 00000000 		.4byte	0
 2144 0173 00000000 		.4byte	0
 2145              	.LLST8:
 2146 0177 00000000 		.4byte	.LVL30
 2147 017b 0E000000 		.4byte	.LVL31
 2148 017f 0100     		.2byte	0x1
 2149 0181 50       		.byte	0x50
 2150 0182 0E000000 		.4byte	.LVL31
 2151 0186 1C000000 		.4byte	.LFE9
 2152 018a 0400     		.2byte	0x4
 2153 018c F3       		.byte	0xf3
 2154 018d 01       		.uleb128 0x1
 2155 018e 50       		.byte	0x50
 2156 018f 9F       		.byte	0x9f
 2157 0190 00000000 		.4byte	0
 2158 0194 00000000 		.4byte	0
 2159              	.LLST9:
 2160 0198 00000000 		.4byte	.LVL32
 2161 019c 0E000000 		.4byte	.LVL33
 2162 01a0 0100     		.2byte	0x1
 2163 01a2 50       		.byte	0x50
 2164 01a3 0E000000 		.4byte	.LVL33
 2165 01a7 18000000 		.4byte	.LFE10
 2166 01ab 0400     		.2byte	0x4
 2167 01ad F3       		.byte	0xf3
 2168 01ae 01       		.uleb128 0x1
 2169 01af 50       		.byte	0x50
 2170 01b0 9F       		.byte	0x9f
 2171 01b1 00000000 		.4byte	0
 2172 01b5 00000000 		.4byte	0
 2173              	.LLST10:
 2174 01b9 00000000 		.4byte	.LVL34
 2175 01bd 04000000 		.4byte	.LVL35
 2176 01c1 0100     		.2byte	0x1
 2177 01c3 50       		.byte	0x50
 2178 01c4 04000000 		.4byte	.LVL35
 2179 01c8 10000000 		.4byte	.LFE11
 2180 01cc 0400     		.2byte	0x4
 2181 01ce F3       		.byte	0xf3
 2182 01cf 01       		.uleb128 0x1
 2183 01d0 50       		.byte	0x50
 2184 01d1 9F       		.byte	0x9f
 2185 01d2 00000000 		.4byte	0
 2186 01d6 00000000 		.4byte	0
 2187              	.LLST11:
 2188 01da 00000000 		.4byte	.LVL36
 2189 01de 04000000 		.4byte	.LVL37
 2190 01e2 0100     		.2byte	0x1
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 55


 2191 01e4 50       		.byte	0x50
 2192 01e5 04000000 		.4byte	.LVL37
 2193 01e9 10000000 		.4byte	.LFE12
 2194 01ed 0400     		.2byte	0x4
 2195 01ef F3       		.byte	0xf3
 2196 01f0 01       		.uleb128 0x1
 2197 01f1 50       		.byte	0x50
 2198 01f2 9F       		.byte	0x9f
 2199 01f3 00000000 		.4byte	0
 2200 01f7 00000000 		.4byte	0
 2201              	.LLST12:
 2202 01fb 00000000 		.4byte	.LVL38
 2203 01ff 0C000000 		.4byte	.LVL39
 2204 0203 0100     		.2byte	0x1
 2205 0205 50       		.byte	0x50
 2206 0206 0C000000 		.4byte	.LVL39
 2207 020a 12000000 		.4byte	.LVL41
 2208 020e 0100     		.2byte	0x1
 2209 0210 54       		.byte	0x54
 2210 0211 12000000 		.4byte	.LVL41
 2211 0215 1C000000 		.4byte	.LFE13
 2212 0219 0400     		.2byte	0x4
 2213 021b F3       		.byte	0xf3
 2214 021c 01       		.uleb128 0x1
 2215 021d 50       		.byte	0x50
 2216 021e 9F       		.byte	0x9f
 2217 021f 00000000 		.4byte	0
 2218 0223 00000000 		.4byte	0
 2219              	.LLST13:
 2220 0227 00000000 		.4byte	.LVL38
 2221 022b 0F000000 		.4byte	.LVL40-1
 2222 022f 0100     		.2byte	0x1
 2223 0231 51       		.byte	0x51
 2224 0232 0F000000 		.4byte	.LVL40-1
 2225 0236 1C000000 		.4byte	.LFE13
 2226 023a 0400     		.2byte	0x4
 2227 023c F3       		.byte	0xf3
 2228 023d 01       		.uleb128 0x1
 2229 023e 51       		.byte	0x51
 2230 023f 9F       		.byte	0x9f
 2231 0240 00000000 		.4byte	0
 2232 0244 00000000 		.4byte	0
 2233              	.LLST14:
 2234 0248 00000000 		.4byte	.LVL42
 2235 024c 0C000000 		.4byte	.LVL43
 2236 0250 0100     		.2byte	0x1
 2237 0252 50       		.byte	0x50
 2238 0253 0C000000 		.4byte	.LVL43
 2239 0257 12000000 		.4byte	.LVL45
 2240 025b 0100     		.2byte	0x1
 2241 025d 54       		.byte	0x54
 2242 025e 12000000 		.4byte	.LVL45
 2243 0262 1C000000 		.4byte	.LFE14
 2244 0266 0400     		.2byte	0x4
 2245 0268 F3       		.byte	0xf3
 2246 0269 01       		.uleb128 0x1
 2247 026a 50       		.byte	0x50
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 56


 2248 026b 9F       		.byte	0x9f
 2249 026c 00000000 		.4byte	0
 2250 0270 00000000 		.4byte	0
 2251              	.LLST15:
 2252 0274 00000000 		.4byte	.LVL42
 2253 0278 0F000000 		.4byte	.LVL44-1
 2254 027c 0100     		.2byte	0x1
 2255 027e 51       		.byte	0x51
 2256 027f 0F000000 		.4byte	.LVL44-1
 2257 0283 16000000 		.4byte	.LVL46
 2258 0287 0100     		.2byte	0x1
 2259 0289 55       		.byte	0x55
 2260 028a 16000000 		.4byte	.LVL46
 2261 028e 1C000000 		.4byte	.LFE14
 2262 0292 0800     		.2byte	0x8
 2263 0294 F3       		.byte	0xf3
 2264 0295 01       		.uleb128 0x1
 2265 0296 50       		.byte	0x50
 2266 0297 32       		.byte	0x32
 2267 0298 24       		.byte	0x24
 2268 0299 73       		.byte	0x73
 2269 029a 00       		.sleb128 0
 2270 029b 22       		.byte	0x22
 2271 029c 00000000 		.4byte	0
 2272 02a0 00000000 		.4byte	0
 2273              	.LLST16:
 2274 02a4 00000000 		.4byte	.LVL47
 2275 02a8 0C000000 		.4byte	.LVL48
 2276 02ac 0100     		.2byte	0x1
 2277 02ae 50       		.byte	0x50
 2278 02af 0C000000 		.4byte	.LVL48
 2279 02b3 44000000 		.4byte	.LVL54
 2280 02b7 0100     		.2byte	0x1
 2281 02b9 54       		.byte	0x54
 2282 02ba 44000000 		.4byte	.LVL54
 2283 02be 5C000000 		.4byte	.LFE15
 2284 02c2 0400     		.2byte	0x4
 2285 02c4 F3       		.byte	0xf3
 2286 02c5 01       		.uleb128 0x1
 2287 02c6 50       		.byte	0x50
 2288 02c7 9F       		.byte	0x9f
 2289 02c8 00000000 		.4byte	0
 2290 02cc 00000000 		.4byte	0
 2291              	.LLST17:
 2292 02d0 00000000 		.4byte	.LVL47
 2293 02d4 0F000000 		.4byte	.LVL49-1
 2294 02d8 0100     		.2byte	0x1
 2295 02da 51       		.byte	0x51
 2296 02db 0F000000 		.4byte	.LVL49-1
 2297 02df 1A000000 		.4byte	.LVL50
 2298 02e3 0400     		.2byte	0x4
 2299 02e5 F3       		.byte	0xf3
 2300 02e6 01       		.uleb128 0x1
 2301 02e7 51       		.byte	0x51
 2302 02e8 9F       		.byte	0x9f
 2303 02e9 1A000000 		.4byte	.LVL50
 2304 02ed 28000000 		.4byte	.LVL51
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 57


 2305 02f1 0100     		.2byte	0x1
 2306 02f3 51       		.byte	0x51
 2307 02f4 32000000 		.4byte	.LVL52
 2308 02f8 36000000 		.4byte	.LVL53
 2309 02fc 0100     		.2byte	0x1
 2310 02fe 51       		.byte	0x51
 2311 02ff 00000000 		.4byte	0
 2312 0303 00000000 		.4byte	0
 2313              	.LLST18:
 2314 0307 00000000 		.4byte	.LVL56
 2315 030b 0C000000 		.4byte	.LVL57
 2316 030f 0100     		.2byte	0x1
 2317 0311 50       		.byte	0x50
 2318 0312 0C000000 		.4byte	.LVL57
 2319 0316 26000000 		.4byte	.LVL61
 2320 031a 0100     		.2byte	0x1
 2321 031c 55       		.byte	0x55
 2322 031d 26000000 		.4byte	.LVL61
 2323 0321 40000000 		.4byte	.LFE16
 2324 0325 0400     		.2byte	0x4
 2325 0327 F3       		.byte	0xf3
 2326 0328 01       		.uleb128 0x1
 2327 0329 50       		.byte	0x50
 2328 032a 9F       		.byte	0x9f
 2329 032b 00000000 		.4byte	0
 2330 032f 00000000 		.4byte	0
 2331              	.LLST19:
 2332 0333 00000000 		.4byte	.LVL56
 2333 0337 0F000000 		.4byte	.LVL58-1
 2334 033b 0100     		.2byte	0x1
 2335 033d 51       		.byte	0x51
 2336 033e 0F000000 		.4byte	.LVL58-1
 2337 0342 1A000000 		.4byte	.LVL59
 2338 0346 0400     		.2byte	0x4
 2339 0348 F3       		.byte	0xf3
 2340 0349 01       		.uleb128 0x1
 2341 034a 51       		.byte	0x51
 2342 034b 9F       		.byte	0x9f
 2343 034c 1A000000 		.4byte	.LVL59
 2344 0350 23000000 		.4byte	.LVL60-1
 2345 0354 0100     		.2byte	0x1
 2346 0356 50       		.byte	0x50
 2347 0357 00000000 		.4byte	0
 2348 035b 00000000 		.4byte	0
 2349              	.LLST20:
 2350 035f 00000000 		.4byte	.LVL63
 2351 0363 0C000000 		.4byte	.LVL64
 2352 0367 0100     		.2byte	0x1
 2353 0369 50       		.byte	0x50
 2354 036a 0C000000 		.4byte	.LVL64
 2355 036e 28000000 		.4byte	.LVL69
 2356 0372 0100     		.2byte	0x1
 2357 0374 54       		.byte	0x54
 2358 0375 28000000 		.4byte	.LVL69
 2359 0379 48000000 		.4byte	.LFE17
 2360 037d 0400     		.2byte	0x4
 2361 037f F3       		.byte	0xf3
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 58


 2362 0380 01       		.uleb128 0x1
 2363 0381 50       		.byte	0x50
 2364 0382 9F       		.byte	0x9f
 2365 0383 00000000 		.4byte	0
 2366 0387 00000000 		.4byte	0
 2367              	.LLST21:
 2368 038b 00000000 		.4byte	.LVL63
 2369 038f 0F000000 		.4byte	.LVL65-1
 2370 0393 0100     		.2byte	0x1
 2371 0395 51       		.byte	0x51
 2372 0396 0F000000 		.4byte	.LVL65-1
 2373 039a 1A000000 		.4byte	.LVL66
 2374 039e 0400     		.2byte	0x4
 2375 03a0 F3       		.byte	0xf3
 2376 03a1 01       		.uleb128 0x1
 2377 03a2 51       		.byte	0x51
 2378 03a3 9F       		.byte	0x9f
 2379 03a4 1A000000 		.4byte	.LVL66
 2380 03a8 1D000000 		.4byte	.LVL67-1
 2381 03ac 0100     		.2byte	0x1
 2382 03ae 50       		.byte	0x50
 2383 03af 00000000 		.4byte	0
 2384 03b3 00000000 		.4byte	0
 2385              		.section	.debug_aranges,"",%progbits
 2386 0000 A4000000 		.4byte	0xa4
 2387 0004 0200     		.2byte	0x2
 2388 0006 00000000 		.4byte	.Ldebug_info0
 2389 000a 04       		.byte	0x4
 2390 000b 00       		.byte	0
 2391 000c 0000     		.2byte	0
 2392 000e 0000     		.2byte	0
 2393 0010 00000000 		.4byte	.LFB1
 2394 0014 F4000000 		.4byte	.LFE1-.LFB1
 2395 0018 00000000 		.4byte	.LFB2
 2396 001c 24000000 		.4byte	.LFE2-.LFB2
 2397 0020 00000000 		.4byte	.LFB0
 2398 0024 20000000 		.4byte	.LFE0-.LFB0
 2399 0028 00000000 		.4byte	.LFB3
 2400 002c 10000000 		.4byte	.LFE3-.LFB3
 2401 0030 00000000 		.4byte	.LFB4
 2402 0034 14000000 		.4byte	.LFE4-.LFB4
 2403 0038 00000000 		.4byte	.LFB5
 2404 003c 14000000 		.4byte	.LFE5-.LFB5
 2405 0040 00000000 		.4byte	.LFB6
 2406 0044 28000000 		.4byte	.LFE6-.LFB6
 2407 0048 00000000 		.4byte	.LFB7
 2408 004c 2C000000 		.4byte	.LFE7-.LFB7
 2409 0050 00000000 		.4byte	.LFB8
 2410 0054 10000000 		.4byte	.LFE8-.LFB8
 2411 0058 00000000 		.4byte	.LFB9
 2412 005c 1C000000 		.4byte	.LFE9-.LFB9
 2413 0060 00000000 		.4byte	.LFB10
 2414 0064 18000000 		.4byte	.LFE10-.LFB10
 2415 0068 00000000 		.4byte	.LFB11
 2416 006c 10000000 		.4byte	.LFE11-.LFB11
 2417 0070 00000000 		.4byte	.LFB12
 2418 0074 10000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 59


 2419 0078 00000000 		.4byte	.LFB13
 2420 007c 1C000000 		.4byte	.LFE13-.LFB13
 2421 0080 00000000 		.4byte	.LFB14
 2422 0084 1C000000 		.4byte	.LFE14-.LFB14
 2423 0088 00000000 		.4byte	.LFB15
 2424 008c 5C000000 		.4byte	.LFE15-.LFB15
 2425 0090 00000000 		.4byte	.LFB16
 2426 0094 40000000 		.4byte	.LFE16-.LFB16
 2427 0098 00000000 		.4byte	.LFB17
 2428 009c 48000000 		.4byte	.LFE17-.LFB17
 2429 00a0 00000000 		.4byte	0
 2430 00a4 00000000 		.4byte	0
 2431              		.section	.debug_ranges,"",%progbits
 2432              	.Ldebug_ranges0:
 2433 0000 00000000 		.4byte	.LFB1
 2434 0004 F4000000 		.4byte	.LFE1
 2435 0008 00000000 		.4byte	.LFB2
 2436 000c 24000000 		.4byte	.LFE2
 2437 0010 00000000 		.4byte	.LFB0
 2438 0014 20000000 		.4byte	.LFE0
 2439 0018 00000000 		.4byte	.LFB3
 2440 001c 10000000 		.4byte	.LFE3
 2441 0020 00000000 		.4byte	.LFB4
 2442 0024 14000000 		.4byte	.LFE4
 2443 0028 00000000 		.4byte	.LFB5
 2444 002c 14000000 		.4byte	.LFE5
 2445 0030 00000000 		.4byte	.LFB6
 2446 0034 28000000 		.4byte	.LFE6
 2447 0038 00000000 		.4byte	.LFB7
 2448 003c 2C000000 		.4byte	.LFE7
 2449 0040 00000000 		.4byte	.LFB8
 2450 0044 10000000 		.4byte	.LFE8
 2451 0048 00000000 		.4byte	.LFB9
 2452 004c 1C000000 		.4byte	.LFE9
 2453 0050 00000000 		.4byte	.LFB10
 2454 0054 18000000 		.4byte	.LFE10
 2455 0058 00000000 		.4byte	.LFB11
 2456 005c 10000000 		.4byte	.LFE11
 2457 0060 00000000 		.4byte	.LFB12
 2458 0064 10000000 		.4byte	.LFE12
 2459 0068 00000000 		.4byte	.LFB13
 2460 006c 1C000000 		.4byte	.LFE13
 2461 0070 00000000 		.4byte	.LFB14
 2462 0074 1C000000 		.4byte	.LFE14
 2463 0078 00000000 		.4byte	.LFB15
 2464 007c 5C000000 		.4byte	.LFE15
 2465 0080 00000000 		.4byte	.LFB16
 2466 0084 40000000 		.4byte	.LFE16
 2467 0088 00000000 		.4byte	.LFB17
 2468 008c 48000000 		.4byte	.LFE17
 2469 0090 00000000 		.4byte	0
 2470 0094 00000000 		.4byte	0
 2471              		.section	.debug_line,"",%progbits
 2472              	.Ldebug_line0:
 2473 0000 7A020000 		.section	.debug_str,"MS",%progbits,1
 2473      02005700 
 2473      00000201 
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 60


 2473      FB0E0D00 
 2473      01010101 
 2474              	.LASF57:
 2475 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2475      5341525F 
 2475      5365715F 
 2475      315F6F66 
 2475      66736574 
 2476              	.LASF10:
 2477 0015 75696E74 		.ascii	"uint16\000"
 2477      313600
 2478              	.LASF25:
 2479 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2479      5341525F 
 2479      5365715F 
 2479      315F496E 
 2479      697400
 2480              	.LASF48:
 2481 002f 61646347 		.ascii	"adcGain\000"
 2481      61696E00 
 2482              	.LASF24:
 2483 0037 636F756E 		.ascii	"counts\000"
 2483      747300
 2484              	.LASF29:
 2485 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2485      5341525F 
 2485      5365715F 
 2485      315F5374 
 2485      61727443 
 2486              	.LASF44:
 2487 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2487      5341525F 
 2487      5365715F 
 2487      315F5365 
 2487      74536174 
 2488              	.LASF27:
 2489 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2489      5341525F 
 2489      5365715F 
 2489      315F5374 
 2489      61727400 
 2490              	.LASF7:
 2491 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2491      206C6F6E 
 2491      6720756E 
 2491      7369676E 
 2491      65642069 
 2492              	.LASF26:
 2493 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2493      5341525F 
 2493      5365715F 
 2493      315F456E 
 2493      61626C65 
 2494              	.LASF33:
 2495 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2495      5341525F 
 2495      5365715F 
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 61


 2495      315F4765 
 2495      74526573 
 2496              	.LASF6:
 2497 00cc 6C6F6E67 		.ascii	"long long int\000"
 2497      206C6F6E 
 2497      6720696E 
 2497      7400
 2498              	.LASF0:
 2499 00da 7369676E 		.ascii	"signed char\000"
 2499      65642063 
 2499      68617200 
 2500              	.LASF41:
 2501 00e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2501      5341525F 
 2501      5365715F 
 2501      315F5365 
 2501      74486967 
 2502              	.LASF13:
 2503 0101 696E7433 		.ascii	"int32\000"
 2503      3200
 2504              	.LASF52:
 2505 0107 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2505      5341525F 
 2505      5365715F 
 2505      315F436F 
 2505      756E7473 
 2506              	.LASF4:
 2507 0125 6C6F6E67 		.ascii	"long int\000"
 2507      20696E74 
 2507      00
 2508              	.LASF9:
 2509 012e 75696E74 		.ascii	"uint8\000"
 2509      3800
 2510              	.LASF60:
 2511 0134 43794465 		.ascii	"CyDelayUs\000"
 2511      6C617955 
 2511      7300
 2512              	.LASF16:
 2513 013e 646F7562 		.ascii	"double\000"
 2513      6C6500
 2514              	.LASF11:
 2515 0145 75696E74 		.ascii	"uint32\000"
 2515      333200
 2516              	.LASF38:
 2517 014c 6D61736B 		.ascii	"mask\000"
 2517      00
 2518              	.LASF49:
 2519 0151 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2519      5341525F 
 2519      5365715F 
 2519      315F436F 
 2519      756E7473 
 2520              	.LASF34:
 2521 016f 7265744D 		.ascii	"retMode\000"
 2521      6F646500 
 2522              	.LASF56:
 2523 0177 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 62


 2523      5341525F 
 2523      5365715F 
 2523      315F696E 
 2523      69745661 
 2524              	.LASF8:
 2525 018d 756E7369 		.ascii	"unsigned int\000"
 2525      676E6564 
 2525      20696E74 
 2525      00
 2526              	.LASF64:
 2527 019a 75566F6C 		.ascii	"uVolts\000"
 2527      747300
 2528              	.LASF5:
 2529 01a1 6C6F6E67 		.ascii	"long unsigned int\000"
 2529      20756E73 
 2529      69676E65 
 2529      6420696E 
 2529      7400
 2530              	.LASF54:
 2531 01b3 766F6C74 		.ascii	"volts\000"
 2531      7300
 2532              	.LASF23:
 2533 01b9 746D7052 		.ascii	"tmpRegVal\000"
 2533      65675661 
 2533      6C00
 2534              	.LASF3:
 2535 01c3 73686F72 		.ascii	"short unsigned int\000"
 2535      7420756E 
 2535      7369676E 
 2535      65642069 
 2535      6E7400
 2536              	.LASF63:
 2537 01d6 433A5C55 		.ascii	"C:\\Users\\Bryan\\Desktop\\Display Templates\\Jace_"
 2537      73657273 
 2537      5C427279 
 2537      616E5C44 
 2537      65736B74 
 2538 0204 426F7964 		.ascii	"Boyd\\Design01.cydsn\000"
 2538      5C446573 
 2538      69676E30 
 2538      312E6379 
 2538      64736E00 
 2539              	.LASF65:
 2540 0218 4379496E 		.ascii	"CyIntSetVector\000"
 2540      74536574 
 2540      56656374 
 2540      6F7200
 2541              	.LASF55:
 2542 0227 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2542      5341525F 
 2542      5365715F 
 2542      315F6368 
 2542      616E6E65 
 2543              	.LASF51:
 2544 0244 6D566F6C 		.ascii	"mVolts\000"
 2544      747300
 2545              	.LASF19:
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 63


 2546 024b 72656733 		.ascii	"reg32\000"
 2546      3200
 2547              	.LASF62:
 2548 0251 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2548      6E657261 
 2548      7465645F 
 2548      536F7572 
 2548      63655C50 
 2549              	.LASF14:
 2550 027a 666C6F61 		.ascii	"float32\000"
 2550      74333200 
 2551              	.LASF21:
 2552 0282 73697A65 		.ascii	"sizetype\000"
 2552      74797065 
 2552      00
 2553              	.LASF40:
 2554 028b 6C6F774C 		.ascii	"lowLimit\000"
 2554      696D6974 
 2554      00
 2555              	.LASF32:
 2556 0294 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2556      5341525F 
 2556      5365715F 
 2556      315F4973 
 2556      456E6443 
 2557              	.LASF30:
 2558 02b2 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2558      5341525F 
 2558      5365715F 
 2558      315F5374 
 2558      6F70436F 
 2559              	.LASF61:
 2560 02cc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2560      4320342E 
 2560      392E3320 
 2560      32303135 
 2560      30333033 
 2561 02ff 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2561      20726576 
 2561      6973696F 
 2561      6E203232 
 2561      31323230 
 2562 0332 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2562      66756E63 
 2562      74696F6E 
 2562      2D736563 
 2562      74696F6E 
 2563              	.LASF17:
 2564 035a 696E7436 		.ascii	"int64\000"
 2564      3400
 2565              	.LASF59:
 2566 0360 4379496E 		.ascii	"CyIntSetPriority\000"
 2566      74536574 
 2566      5072696F 
 2566      72697479 
 2566      00
 2567              	.LASF15:
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 64


 2568 0371 666C6F61 		.ascii	"float\000"
 2568      7400
 2569              	.LASF47:
 2570 0377 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2570      5341525F 
 2570      5365715F 
 2570      315F5365 
 2570      74476169 
 2571              	.LASF28:
 2572 038d 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2572      5341525F 
 2572      5365715F 
 2572      315F5374 
 2572      6F7000
 2573              	.LASF42:
 2574 03a0 68696768 		.ascii	"highLimit\000"
 2574      4C696D69 
 2574      7400
 2575              	.LASF66:
 2576 03aa 43794861 		.ascii	"CyHalt\000"
 2576      6C7400
 2577              	.LASF1:
 2578 03b1 756E7369 		.ascii	"unsigned char\000"
 2578      676E6564 
 2578      20636861 
 2578      7200
 2579              	.LASF2:
 2580 03bf 73686F72 		.ascii	"short int\000"
 2580      7420696E 
 2580      7400
 2581              	.LASF53:
 2582 03c9 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2582      5341525F 
 2582      5365715F 
 2582      315F436F 
 2582      756E7473 
 2583              	.LASF37:
 2584 03e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2584      5341525F 
 2584      5365715F 
 2584      315F5365 
 2584      74436861 
 2585              	.LASF22:
 2586 0400 63684E75 		.ascii	"chNum\000"
 2586      6D00
 2587              	.LASF35:
 2588 0406 6368616E 		.ascii	"chan\000"
 2588      00
 2589              	.LASF18:
 2590 040b 63686172 		.ascii	"char\000"
 2590      00
 2591              	.LASF20:
 2592 0410 63796973 		.ascii	"cyisraddress\000"
 2592      72616464 
 2592      72657373 
 2592      00
 2593              	.LASF39:
ARM GAS  C:\Users\Bryan\AppData\Local\Temp\ccckzTjf.s 			page 65


 2594 041d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2594      5341525F 
 2594      5365715F 
 2594      315F5365 
 2594      744C6F77 
 2595              	.LASF46:
 2596 0437 6F666673 		.ascii	"offset\000"
 2596      657400
 2597              	.LASF50:
 2598 043e 61646343 		.ascii	"adcCounts\000"
 2598      6F756E74 
 2598      7300
 2599              	.LASF58:
 2600 0448 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2600      5341525F 
 2600      5365715F 
 2600      315F636F 
 2600      756E7473 
 2601              	.LASF31:
 2602 0466 73746174 		.ascii	"status\000"
 2602      757300
 2603              	.LASF45:
 2604 046d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2604      5341525F 
 2604      5365715F 
 2604      315F5365 
 2604      744F6666 
 2605              	.LASF12:
 2606 0485 696E7431 		.ascii	"int16\000"
 2606      3600
 2607              	.LASF43:
 2608 048b 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2608      5341525F 
 2608      5365715F 
 2608      315F5365 
 2608      744C696D 
 2609              	.LASF36:
 2610 04a6 72657375 		.ascii	"result\000"
 2610      6C7400
 2611              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
