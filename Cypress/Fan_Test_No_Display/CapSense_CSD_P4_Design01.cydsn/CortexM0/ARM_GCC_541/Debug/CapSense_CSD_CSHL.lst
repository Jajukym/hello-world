ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_rawFilterData1,10,4
  20              		.global	CapSense_CSD_sensorBaseline
  21              		.bss
  22              		.align	2
  23              		.type	CapSense_CSD_sensorBaseline, %object
  24              		.size	CapSense_CSD_sensorBaseline, 10
  25              	CapSense_CSD_sensorBaseline:
  26 0000 00000000 		.space	10
  26      00000000 
  26      0000
  27              		.global	CapSense_CSD_sensorBaselineLow
  28 000a 0000     		.align	2
  29              		.type	CapSense_CSD_sensorBaselineLow, %object
  30              		.size	CapSense_CSD_sensorBaselineLow, 5
  31              	CapSense_CSD_sensorBaselineLow:
  32 000c 00000000 		.space	5
  32      00
  33              		.global	CapSense_CSD_sensorSignal
  34 0011 000000   		.align	2
  35              		.type	CapSense_CSD_sensorSignal, %object
  36              		.size	CapSense_CSD_sensorSignal, 5
  37              	CapSense_CSD_sensorSignal:
  38 0014 00000000 		.space	5
  38      00
  39              		.global	CapSense_CSD_sensorOnMask
  40 0019 000000   		.align	2
  41              		.type	CapSense_CSD_sensorOnMask, %object
  42              		.size	CapSense_CSD_sensorOnMask, 1
  43              	CapSense_CSD_sensorOnMask:
  44 001c 00       		.space	1
  45              		.comm	CapSense_CSD_lowBaselineResetCnt,5,4
  46              		.global	CapSense_CSD_lowBaselineReset
  47              		.data
  48              		.align	2
  49              		.type	CapSense_CSD_lowBaselineReset, %object
  50              		.size	CapSense_CSD_lowBaselineReset, 5
  51              	CapSense_CSD_lowBaselineReset:
  52 0000 1E       		.byte	30
  53 0001 1E       		.byte	30
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 2


  54 0002 1E       		.byte	30
  55 0003 1E       		.byte	30
  56 0004 1E       		.byte	30
  57              		.global	CapSense_CSD_enableRawFilters
  58              		.type	CapSense_CSD_enableRawFilters, %object
  59              		.size	CapSense_CSD_enableRawFilters, 1
  60              	CapSense_CSD_enableRawFilters:
  61 0005 01       		.byte	1
  62              		.comm	CapSense_CSD_fingerThreshold,1,4
  63              		.comm	CapSense_CSD_noiseThreshold,1,4
  64              		.comm	CapSense_CSD_negativeNoiseThreshold,1,4
  65              		.comm	CapSense_CSD_hysteresis,1,4
  66              		.global	CapSense_CSD_debounce
  67 0006 0000     		.align	2
  68              		.type	CapSense_CSD_debounce, %object
  69              		.size	CapSense_CSD_debounce, 1
  70              	CapSense_CSD_debounce:
  71 0008 01       		.byte	1
  72              		.global	CapSense_CSD_rawDataIndex
  73              		.section	.rodata
  74              		.align	2
  75              		.type	CapSense_CSD_rawDataIndex, %object
  76              		.size	CapSense_CSD_rawDataIndex, 1
  77              	CapSense_CSD_rawDataIndex:
  78 0000 00       		.space	1
  79              		.global	CapSense_CSD_numberOfSensors
  80 0001 000000   		.align	2
  81              		.type	CapSense_CSD_numberOfSensors, %object
  82              		.size	CapSense_CSD_numberOfSensors, 1
  83              	CapSense_CSD_numberOfSensors:
  84 0004 05       		.byte	5
  85 0005 000000   		.align	2
  86              		.type	CapSense_CSD_centroidMult, %object
  87              		.size	CapSense_CSD_centroidMult, 2
  88              	CapSense_CSD_centroidMult:
  89 0008 C01F     		.short	8128
  90              		.data
  91 0009 000000   		.align	2
  92              		.type	CapSense_CSD_posFiltersMask, %object
  93              		.size	CapSense_CSD_posFiltersMask, 1
  94              	CapSense_CSD_posFiltersMask:
  95 000c 10       		.byte	16
  96 000d 000000   		.align	2
  97              		.type	CapSense_CSD_posFiltersData, %object
  98              		.size	CapSense_CSD_posFiltersData, 3
  99              	CapSense_CSD_posFiltersData:
 100 0010 01       		.byte	1
 101 0011 00       		.byte	0
 102 0012 00       		.byte	0
 103              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 104              		.align	2
 105              		.global	CapSense_CSD_BaseInit
 106              		.code	16
 107              		.thumb_func
 108              		.type	CapSense_CSD_BaseInit, %function
 109              	CapSense_CSD_BaseInit:
 110              	.LFB34:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 3


 111              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 4


  57:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_60 CapSense_CSD_config;
  66:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  86:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
  90:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static const uint16 CapSense_CSD_centroidMult[] = {
  94:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     8128u, 
  95:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersMask[] = {
  98:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0x10u, 
  99:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersData[] = {
 102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
 103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 5


 114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 112              		.loc 1 143 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0000 80B5     		push	{r7, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 82B0     		sub	sp, sp, #8
 121              		.cfi_def_cfa_offset 16
 122 0004 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 124 0006 7860     		str	r0, [r7, #4]
 144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 6


 158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 125              		.loc 1 160 0
 126 0008 0E4B     		ldr	r3, .L2
 127 000a 7A68     		ldr	r2, [r7, #4]
 128 000c 5200     		lsls	r2, r2, #1
 129 000e D15A     		ldrh	r1, [r2, r3]
 130 0010 0D4B     		ldr	r3, .L2+4
 131 0012 7A68     		ldr	r2, [r7, #4]
 132 0014 5200     		lsls	r2, r2, #1
 133 0016 D152     		strh	r1, [r2, r3]
 161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 134              		.loc 1 161 0
 135 0018 0C4A     		ldr	r2, .L2+8
 136 001a 7B68     		ldr	r3, [r7, #4]
 137 001c D318     		adds	r3, r2, r3
 138 001e 0022     		movs	r2, #0
 139 0020 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 140              		.loc 1 162 0
 141 0022 0B4A     		ldr	r2, .L2+12
 142 0024 7B68     		ldr	r3, [r7, #4]
 143 0026 D318     		adds	r3, r2, r3
 144 0028 0022     		movs	r2, #0
 145 002a 1A70     		strb	r2, [r3]
 163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 146              		.loc 1 178 0
 147 002c 054B     		ldr	r3, .L2
 148 002e 7A68     		ldr	r2, [r7, #4]
 149 0030 5200     		lsls	r2, r2, #1
 150 0032 D15A     		ldrh	r1, [r2, r3]
 151 0034 074B     		ldr	r3, .L2+16
 152 0036 7A68     		ldr	r2, [r7, #4]
 153 0038 5200     		lsls	r2, r2, #1
 154 003a D152     		strh	r1, [r2, r3]
 179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 7


 185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 155              		.loc 1 190 0
 156 003c C046     		nop
 157 003e BD46     		mov	sp, r7
 158 0040 02B0     		add	sp, sp, #8
 159              		@ sp needed
 160 0042 80BD     		pop	{r7, pc}
 161              	.L3:
 162              		.align	2
 163              	.L2:
 164 0044 00000000 		.word	CapSense_CSD_sensorRaw
 165 0048 00000000 		.word	CapSense_CSD_sensorBaseline
 166 004c 00000000 		.word	CapSense_CSD_sensorBaselineLow
 167 0050 00000000 		.word	CapSense_CSD_sensorSignal
 168 0054 00000000 		.word	CapSense_CSD_rawFilterData1
 169              		.cfi_endproc
 170              	.LFE34:
 171              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 172              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 173              		.align	2
 174              		.global	CapSense_CSD_InitializeSensorBaseline
 175              		.code	16
 176              		.thumb_func
 177              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 178              	CapSense_CSD_InitializeSensorBaseline:
 179              	.LFB35:
 191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 8


 217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 180              		.loc 1 218 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 193              		.loc 1 220 0
 194 0008 7B68     		ldr	r3, [r7, #4]
 195 000a 1800     		movs	r0, r3
 196 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 197              		.loc 1 221 0
 198 0010 C046     		nop
 199              	.L5:
 200              		.loc 1 221 0 is_stmt 0 discriminator 1
 201 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 202 0016 031E     		subs	r3, r0, #0
 203 0018 FBD1     		bne	.L5
 222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 204              		.loc 1 227 0 is_stmt 1
 205 001a 7B68     		ldr	r3, [r7, #4]
 206 001c 1800     		movs	r0, r3
 207 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 208              		.loc 1 228 0
 209 0022 C046     		nop
 210 0024 BD46     		mov	sp, r7
 211 0026 02B0     		add	sp, sp, #8
 212              		@ sp needed
 213 0028 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE35:
 216              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 217 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_CSD_InitializeAllBaselines
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_CSD_InitializeAllBaselines, %function
 223              	CapSense_CSD_InitializeAllBaselines:
 224              	.LFB36:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 9


 229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 225              		.loc 1 255 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 237              		.loc 1 258 0
 238 0006 0023     		movs	r3, #0
 239 0008 7B60     		str	r3, [r7, #4]
 240 000a 06E0     		b	.L7
 241              	.L8:
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 242              		.loc 1 260 0 discriminator 3
 243 000c 7B68     		ldr	r3, [r7, #4]
 244 000e 1800     		movs	r0, r3
 245 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 246              		.loc 1 258 0 discriminator 3
 247 0014 7B68     		ldr	r3, [r7, #4]
 248 0016 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 10


 249 0018 7B60     		str	r3, [r7, #4]
 250              	.L7:
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 251              		.loc 1 258 0 is_stmt 0 discriminator 1
 252 001a 7B68     		ldr	r3, [r7, #4]
 253 001c 042B     		cmp	r3, #4
 254 001e F5D9     		bls	.L8
 261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 255              		.loc 1 262 0 is_stmt 1
 256 0020 C046     		nop
 257 0022 BD46     		mov	sp, r7
 258 0024 02B0     		add	sp, sp, #8
 259              		@ sp needed
 260 0026 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE36:
 263              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 264              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 265              		.align	2
 266              		.global	CapSense_CSD_InitializeEnabledBaselines
 267              		.code	16
 268              		.thumb_func
 269              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 270              	CapSense_CSD_InitializeEnabledBaselines:
 271              	.LFB37:
 263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 272              		.loc 1 290 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 11


 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 82B0     		sub	sp, sp, #8
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 284              		.loc 1 294 0
 285 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 286              		.loc 1 295 0
 287 000a C046     		nop
 288              	.L10:
 289              		.loc 1 295 0 is_stmt 0 discriminator 1
 290 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 291 0010 031E     		subs	r3, r0, #0
 292 0012 FBD1     		bne	.L10
 296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 293              		.loc 1 300 0 is_stmt 1
 294 0014 0023     		movs	r3, #0
 295 0016 7B60     		str	r3, [r7, #4]
 296 0018 11E0     		b	.L11
 297              	.L13:
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 298              		.loc 1 302 0
 299 001a 7A68     		ldr	r2, [r7, #4]
 300 001c 0B4B     		ldr	r3, .L14
 301 001e 1100     		movs	r1, r2
 302 0020 1800     		movs	r0, r3
 303 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 304 0026 0300     		movs	r3, r0
 305 0028 3B60     		str	r3, [r7]
 303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 306              		.loc 1 305 0
 307 002a 3B68     		ldr	r3, [r7]
 308 002c 002B     		cmp	r3, #0
 309 002e 03D0     		beq	.L12
 306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 310              		.loc 1 308 0
 311 0030 7B68     		ldr	r3, [r7, #4]
 312 0032 1800     		movs	r0, r3
 313 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 12


 314              	.L12:
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 315              		.loc 1 300 0 discriminator 2
 316 0038 7B68     		ldr	r3, [r7, #4]
 317 003a 0133     		adds	r3, r3, #1
 318 003c 7B60     		str	r3, [r7, #4]
 319              	.L11:
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 320              		.loc 1 300 0 is_stmt 0 discriminator 1
 321 003e 7B68     		ldr	r3, [r7, #4]
 322 0040 042B     		cmp	r3, #4
 323 0042 EAD9     		bls	.L13
 309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 324              		.loc 1 311 0 is_stmt 1
 325 0044 C046     		nop
 326 0046 BD46     		mov	sp, r7
 327 0048 02B0     		add	sp, sp, #8
 328              		@ sp needed
 329 004a 80BD     		pop	{r7, pc}
 330              	.L15:
 331              		.align	2
 332              	.L14:
 333 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 334              		.cfi_endproc
 335              	.LFE37:
 336              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 337              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 338              		.align	2
 339              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 340              		.code	16
 341              		.thumb_func
 342              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 343              	CapSense_CSD_UpdateBaselineNoThreshold:
 344              	.LFB38:
 312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 13


 333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 345              		.loc 1 355 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 24
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 90B5     		push	{r4, r7, lr}
 350              		.cfi_def_cfa_offset 12
 351              		.cfi_offset 4, -12
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 87B0     		sub	sp, sp, #28
 355              		.cfi_def_cfa_offset 40
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 358 0006 7860     		str	r0, [r7, #4]
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 359              		.loc 1 360 0
 360 0008 0F23     		movs	r3, #15
 361 000a FB18     		adds	r3, r7, r3
 362 000c 7D49     		ldr	r1, .L29
 363 000e 7A68     		ldr	r2, [r7, #4]
 364 0010 8A18     		adds	r2, r1, r2
 365 0012 1278     		ldrb	r2, [r2]
 366 0014 1A70     		strb	r2, [r3]
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 14


 368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 367              		.loc 1 369 0
 368 0016 0F23     		movs	r3, #15
 369 0018 FB18     		adds	r3, r7, r3
 370 001a 1A78     		ldrb	r2, [r3]
 371 001c 0E23     		movs	r3, #14
 372 001e FB18     		adds	r3, r7, r3
 373 0020 7949     		ldr	r1, .L29+4
 374 0022 8A5C     		ldrb	r2, [r1, r2]
 375 0024 1A70     		strb	r2, [r3]
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 376              		.loc 1 370 0
 377 0026 1023     		movs	r3, #16
 378 0028 FB18     		adds	r3, r7, r3
 379 002a 784A     		ldr	r2, .L29+8
 380 002c 7968     		ldr	r1, [r7, #4]
 381 002e 4900     		lsls	r1, r1, #1
 382 0030 8A5A     		ldrh	r2, [r1, r2]
 383 0032 1A80     		strh	r2, [r3]
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 384              		.loc 1 373 0
 385 0034 764B     		ldr	r3, .L29+12
 386 0036 1B78     		ldrb	r3, [r3]
 387 0038 002B     		cmp	r3, #0
 388 003a 15D0     		beq	.L17
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 389              		.loc 1 394 0
 390 003c 754B     		ldr	r3, .L29+16
 391 003e 7A68     		ldr	r2, [r7, #4]
 392 0040 5200     		lsls	r2, r2, #1
 393 0042 D25A     		ldrh	r2, [r2, r3]
 394 0044 1023     		movs	r3, #16
 395 0046 FC18     		adds	r4, r7, r3
 396 0048 1023     		movs	r3, #16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 15


 397 004a FB18     		adds	r3, r7, r3
 398 004c 1B88     		ldrh	r3, [r3]
 399 004e 1100     		movs	r1, r2
 400 0050 1800     		movs	r0, r3
 401 0052 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 402 0056 0300     		movs	r3, r0
 403 0058 2380     		strh	r3, [r4]
 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 404              		.loc 1 395 0
 405 005a 6E4B     		ldr	r3, .L29+16
 406 005c 7A68     		ldr	r2, [r7, #4]
 407 005e 5200     		lsls	r2, r2, #1
 408 0060 1021     		movs	r1, #16
 409 0062 7918     		adds	r1, r7, r1
 410 0064 0988     		ldrh	r1, [r1]
 411 0066 D152     		strh	r1, [r2, r3]
 412              	.L17:
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 413              		.loc 1 416 0
 414 0068 7B68     		ldr	r3, [r7, #4]
 415 006a D9B2     		uxtb	r1, r3
 416 006c 674A     		ldr	r2, .L29+8
 417 006e 6A4B     		ldr	r3, .L29+20
 418 0070 1800     		movs	r0, r3
 419 0072 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 420              		.loc 1 421 0
 421 0076 694B     		ldr	r3, .L29+24
 422 0078 7A68     		ldr	r2, [r7, #4]
 423 007a 5200     		lsls	r2, r2, #1
 424 007c D35A     		ldrh	r3, [r2, r3]
 425 007e 1022     		movs	r2, #16
 426 0080 BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 16


 427 0082 1288     		ldrh	r2, [r2]
 428 0084 9A42     		cmp	r2, r3
 429 0086 12D3     		bcc	.L18
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 430              		.loc 1 423 0
 431 0088 654A     		ldr	r2, .L29+28
 432 008a 7B68     		ldr	r3, [r7, #4]
 433 008c D318     		adds	r3, r2, r3
 434 008e 0022     		movs	r2, #0
 435 0090 1A70     		strb	r2, [r3]
 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 436              		.loc 1 424 0
 437 0092 624B     		ldr	r3, .L29+24
 438 0094 7A68     		ldr	r2, [r7, #4]
 439 0096 5200     		lsls	r2, r2, #1
 440 0098 D25A     		ldrh	r2, [r2, r3]
 441 009a 1223     		movs	r3, #18
 442 009c FB18     		adds	r3, r7, r3
 443 009e 1021     		movs	r1, #16
 444 00a0 7918     		adds	r1, r7, r1
 445 00a2 0988     		ldrh	r1, [r1]
 446 00a4 8A1A     		subs	r2, r1, r2
 447 00a6 1A80     		strh	r2, [r3]
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 448              		.loc 1 425 0
 449 00a8 0123     		movs	r3, #1
 450 00aa 7B61     		str	r3, [r7, #20]
 451 00ac 0CE0     		b	.L19
 452              	.L18:
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 453              		.loc 1 429 0
 454 00ae 5B4B     		ldr	r3, .L29+24
 455 00b0 7A68     		ldr	r2, [r7, #4]
 456 00b2 5200     		lsls	r2, r2, #1
 457 00b4 D15A     		ldrh	r1, [r2, r3]
 458 00b6 1223     		movs	r3, #18
 459 00b8 FB18     		adds	r3, r7, r3
 460 00ba 1022     		movs	r2, #16
 461 00bc BA18     		adds	r2, r7, r2
 462 00be 1288     		ldrh	r2, [r2]
 463 00c0 8A1A     		subs	r2, r1, r2
 464 00c2 1A80     		strh	r2, [r3]
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 465              		.loc 1 430 0
 466 00c4 0023     		movs	r3, #0
 467 00c6 7B61     		str	r3, [r7, #20]
 468              	.L19:
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 469              		.loc 1 434 0
 470 00c8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 17


 471 00ca 002B     		cmp	r3, #0
 472 00cc 2AD1     		bne	.L20
 473              		.loc 1 434 0 is_stmt 0 discriminator 1
 474 00ce 0F23     		movs	r3, #15
 475 00d0 FB18     		adds	r3, r7, r3
 476 00d2 1B78     		ldrb	r3, [r3]
 477 00d4 534A     		ldr	r2, .L29+32
 478 00d6 D35C     		ldrb	r3, [r2, r3]
 479 00d8 9BB2     		uxth	r3, r3
 480 00da 1222     		movs	r2, #18
 481 00dc BA18     		adds	r2, r7, r2
 482 00de 1288     		ldrh	r2, [r2]
 483 00e0 9A42     		cmp	r2, r3
 484 00e2 1FD9     		bls	.L20
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 485              		.loc 1 439 0 is_stmt 1
 486 00e4 4E4A     		ldr	r2, .L29+28
 487 00e6 7B68     		ldr	r3, [r7, #4]
 488 00e8 D318     		adds	r3, r2, r3
 489 00ea 1A78     		ldrb	r2, [r3]
 490 00ec 4E49     		ldr	r1, .L29+36
 491 00ee 7B68     		ldr	r3, [r7, #4]
 492 00f0 CB18     		adds	r3, r1, r3
 493 00f2 1B78     		ldrb	r3, [r3]
 494 00f4 9A42     		cmp	r2, r3
 495 00f6 09D3     		bcc	.L21
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 496              		.loc 1 441 0
 497 00f8 7B68     		ldr	r3, [r7, #4]
 498 00fa 1800     		movs	r0, r3
 499 00fc FFF7FEFF 		bl	CapSense_CSD_BaseInit
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 500              		.loc 1 442 0
 501 0100 474A     		ldr	r2, .L29+28
 502 0102 7B68     		ldr	r3, [r7, #4]
 503 0104 D318     		adds	r3, r2, r3
 504 0106 0022     		movs	r2, #0
 505 0108 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 506              		.loc 1 439 0
 507 010a 51E0     		b	.L23
 508              	.L21:
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 509              		.loc 1 446 0
 510 010c 444A     		ldr	r2, .L29+28
 511 010e 7B68     		ldr	r3, [r7, #4]
 512 0110 D318     		adds	r3, r2, r3
 513 0112 1B78     		ldrb	r3, [r3]
 514 0114 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 18


 515 0116 D9B2     		uxtb	r1, r3
 516 0118 414A     		ldr	r2, .L29+28
 517 011a 7B68     		ldr	r3, [r7, #4]
 518 011c D318     		adds	r3, r2, r3
 519 011e 0A1C     		adds	r2, r1, #0
 520 0120 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 521              		.loc 1 439 0
 522 0122 45E0     		b	.L23
 523              	.L20:
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 524              		.loc 1 454 0
 525 0124 0E23     		movs	r3, #14
 526 0126 FB18     		adds	r3, r7, r3
 527 0128 1B78     		ldrb	r3, [r3]
 528 012a 9BB2     		uxth	r3, r3
 529 012c 1222     		movs	r2, #18
 530 012e BA18     		adds	r2, r7, r2
 531 0130 1288     		ldrh	r2, [r2]
 532 0132 9A42     		cmp	r2, r3
 533 0134 0DD9     		bls	.L24
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 534              		.loc 1 455 0 discriminator 1
 535 0136 0F23     		movs	r3, #15
 536 0138 FB18     		adds	r3, r7, r3
 537 013a 1B78     		ldrb	r3, [r3]
 538 013c 394A     		ldr	r2, .L29+32
 539 013e D35C     		ldrb	r3, [r2, r3]
 540 0140 9BB2     		uxth	r3, r3
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 541              		.loc 1 454 0 discriminator 1
 542 0142 1222     		movs	r2, #18
 543 0144 BA18     		adds	r2, r7, r2
 544 0146 1288     		ldrh	r2, [r2]
 545 0148 9A42     		cmp	r2, r3
 546 014a 31D2     		bcs	.L23
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 547              		.loc 1 456 0
 548 014c 7B69     		ldr	r3, [r7, #20]
 549 014e 002B     		cmp	r3, #0
 550 0150 2ED1     		bne	.L23
 551              	.L24:
 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 19


 465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 552              		.loc 1 467 0
 553 0152 324B     		ldr	r3, .L29+24
 554 0154 7A68     		ldr	r2, [r7, #4]
 555 0156 5200     		lsls	r2, r2, #1
 556 0158 D35A     		ldrh	r3, [r2, r3]
 557 015a 1B02     		lsls	r3, r3, #8
 558 015c BB60     		str	r3, [r7, #8]
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 559              		.loc 1 468 0
 560 015e 334A     		ldr	r2, .L29+40
 561 0160 7B68     		ldr	r3, [r7, #4]
 562 0162 D318     		adds	r3, r2, r3
 563 0164 1B78     		ldrb	r3, [r3]
 564 0166 1A00     		movs	r2, r3
 565 0168 BB68     		ldr	r3, [r7, #8]
 566 016a 1343     		orrs	r3, r2
 567 016c BB60     		str	r3, [r7, #8]
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 568              		.loc 1 471 0
 569 016e 1023     		movs	r3, #16
 570 0170 FB18     		adds	r3, r7, r3
 571 0172 1B88     		ldrh	r3, [r3]
 572 0174 BA68     		ldr	r2, [r7, #8]
 573 0176 D318     		adds	r3, r2, r3
 574 0178 BB60     		str	r3, [r7, #8]
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 575              		.loc 1 474 0
 576 017a 284B     		ldr	r3, .L29+24
 577 017c 7A68     		ldr	r2, [r7, #4]
 578 017e 5200     		lsls	r2, r2, #1
 579 0180 D35A     		ldrh	r3, [r2, r3]
 580 0182 1A00     		movs	r2, r3
 581 0184 BB68     		ldr	r3, [r7, #8]
 582 0186 9B1A     		subs	r3, r3, r2
 583 0188 BB60     		str	r3, [r7, #8]
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 584              		.loc 1 477 0
 585 018a BB68     		ldr	r3, [r7, #8]
 586 018c 1B0A     		lsrs	r3, r3, #8
 587 018e 99B2     		uxth	r1, r3
 588 0190 224B     		ldr	r3, .L29+24
 589 0192 7A68     		ldr	r2, [r7, #4]
 590 0194 5200     		lsls	r2, r2, #1
 591 0196 D152     		strh	r1, [r2, r3]
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 592              		.loc 1 478 0
 593 0198 BB68     		ldr	r3, [r7, #8]
 594 019a D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 20


 595 019c 234A     		ldr	r2, .L29+40
 596 019e 7B68     		ldr	r3, [r7, #4]
 597 01a0 D318     		adds	r3, r2, r3
 598 01a2 0A1C     		adds	r2, r1, #0
 599 01a4 1A70     		strb	r2, [r3]
 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 600              		.loc 1 480 0
 601 01a6 1E4A     		ldr	r2, .L29+28
 602 01a8 7B68     		ldr	r3, [r7, #4]
 603 01aa D318     		adds	r3, r2, r3
 604 01ac 0022     		movs	r2, #0
 605 01ae 1A70     		strb	r2, [r3]
 606              	.L23:
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 607              		.loc 1 487 0
 608 01b0 0E23     		movs	r3, #14
 609 01b2 FB18     		adds	r3, r7, r3
 610 01b4 1B78     		ldrb	r3, [r3]
 611 01b6 9BB2     		uxth	r3, r3
 612 01b8 1222     		movs	r2, #18
 613 01ba BA18     		adds	r2, r7, r2
 614 01bc 1288     		ldrh	r2, [r2]
 615 01be 9A42     		cmp	r2, r3
 616 01c0 17D9     		bls	.L25
 617              		.loc 1 487 0 is_stmt 0 discriminator 1
 618 01c2 7B69     		ldr	r3, [r7, #20]
 619 01c4 002B     		cmp	r3, #0
 620 01c6 14D0     		beq	.L25
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 621              		.loc 1 491 0 is_stmt 1
 622 01c8 1223     		movs	r3, #18
 623 01ca FB18     		adds	r3, r7, r3
 624 01cc 1B88     		ldrh	r3, [r3]
 625 01ce FF2B     		cmp	r3, #255
 626 01d0 05D9     		bls	.L26
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 627              		.loc 1 493 0
 628 01d2 174A     		ldr	r2, .L29+44
 629 01d4 7B68     		ldr	r3, [r7, #4]
 630 01d6 D318     		adds	r3, r2, r3
 631 01d8 FF22     		movs	r2, #255
 632 01da 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 633              		.loc 1 491 0
 634 01dc 0EE0     		b	.L28
 635              	.L26:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 21


 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 636              		.loc 1 497 0
 637 01de 1223     		movs	r3, #18
 638 01e0 FB18     		adds	r3, r7, r3
 639 01e2 1B88     		ldrh	r3, [r3]
 640 01e4 D9B2     		uxtb	r1, r3
 641 01e6 124A     		ldr	r2, .L29+44
 642 01e8 7B68     		ldr	r3, [r7, #4]
 643 01ea D318     		adds	r3, r2, r3
 644 01ec 0A1C     		adds	r2, r1, #0
 645 01ee 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 646              		.loc 1 491 0
 647 01f0 04E0     		b	.L28
 648              	.L25:
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 649              		.loc 1 506 0
 650 01f2 0F4A     		ldr	r2, .L29+44
 651 01f4 7B68     		ldr	r3, [r7, #4]
 652 01f6 D318     		adds	r3, r2, r3
 653 01f8 0022     		movs	r2, #0
 654 01fa 1A70     		strb	r2, [r3]
 655              	.L28:
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 656              		.loc 1 513 0
 657 01fc C046     		nop
 658 01fe BD46     		mov	sp, r7
 659 0200 07B0     		add	sp, sp, #28
 660              		@ sp needed
 661 0202 90BD     		pop	{r4, r7, pc}
 662              	.L30:
 663              		.align	2
 664              	.L29:
 665 0204 00000000 		.word	CapSense_CSD_widgetNumber
 666 0208 00000000 		.word	CapSense_CSD_noiseThreshold
 667 020c 00000000 		.word	CapSense_CSD_sensorRaw
 668 0210 00000000 		.word	CapSense_CSD_enableRawFilters
 669 0214 00000000 		.word	CapSense_CSD_rawFilterData1
 670 0218 00000000 		.word	CapSense_CSD_config
 671 021c 00000000 		.word	CapSense_CSD_sensorBaseline
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 22


 672 0220 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 673 0224 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 674 0228 00000000 		.word	CapSense_CSD_lowBaselineReset
 675 022c 00000000 		.word	CapSense_CSD_sensorBaselineLow
 676 0230 00000000 		.word	CapSense_CSD_sensorSignal
 677              		.cfi_endproc
 678              	.LFE38:
 679              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 680              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 681              		.align	2
 682              		.global	CapSense_CSD_UpdateSensorBaseline
 683              		.code	16
 684              		.thumb_func
 685              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 686              	CapSense_CSD_UpdateSensorBaseline:
 687              	.LFB39:
 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 688              		.loc 1 547 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 80B5     		push	{r7, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 7, -8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 23


 695              		.cfi_offset 14, -4
 696 0002 82B0     		sub	sp, sp, #8
 697              		.cfi_def_cfa_offset 16
 698 0004 00AF     		add	r7, sp, #0
 699              		.cfi_def_cfa_register 7
 700 0006 7860     		str	r0, [r7, #4]
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 701              		.loc 1 559 0
 702 0008 7B68     		ldr	r3, [r7, #4]
 703 000a 1800     		movs	r0, r3
 704 000c FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 705              		.loc 1 562 0
 706 0010 7B68     		ldr	r3, [r7, #4]
 707 0012 1800     		movs	r0, r3
 708 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 709              		.loc 1 568 0
 710 0018 C046     		nop
 711 001a BD46     		mov	sp, r7
 712 001c 02B0     		add	sp, sp, #8
 713              		@ sp needed
 714 001e 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE39:
 717              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 718              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 719              		.align	2
 720              		.global	CapSense_CSD_UpdateEnabledBaselines
 721              		.code	16
 722              		.thumb_func
 723              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 724              	CapSense_CSD_UpdateEnabledBaselines:
 725              	.LFB40:
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 24


 574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 726              		.loc 1 601 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 82B0     		sub	sp, sp, #8
 735              		.cfi_def_cfa_offset 16
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 738              		.loc 1 605 0
 739 0006 0023     		movs	r3, #0
 740 0008 7B60     		str	r3, [r7, #4]
 741 000a 11E0     		b	.L33
 742              	.L35:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 743              		.loc 1 607 0
 744 000c 7A68     		ldr	r2, [r7, #4]
 745 000e 0C4B     		ldr	r3, .L36
 746 0010 1100     		movs	r1, r2
 747 0012 1800     		movs	r0, r3
 748 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 25


 749 0018 0300     		movs	r3, r0
 750 001a 3B60     		str	r3, [r7]
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 751              		.loc 1 609 0
 752 001c 3B68     		ldr	r3, [r7]
 753 001e 002B     		cmp	r3, #0
 754 0020 03D0     		beq	.L34
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 755              		.loc 1 611 0
 756 0022 7B68     		ldr	r3, [r7, #4]
 757 0024 1800     		movs	r0, r3
 758 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 759              	.L34:
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 760              		.loc 1 605 0 discriminator 2
 761 002a 7B68     		ldr	r3, [r7, #4]
 762 002c 0133     		adds	r3, r3, #1
 763 002e 7B60     		str	r3, [r7, #4]
 764              	.L33:
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 765              		.loc 1 605 0 is_stmt 0 discriminator 1
 766 0030 7B68     		ldr	r3, [r7, #4]
 767 0032 042B     		cmp	r3, #4
 768 0034 EAD9     		bls	.L35
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 769              		.loc 1 614 0 is_stmt 1
 770 0036 C046     		nop
 771 0038 BD46     		mov	sp, r7
 772 003a 02B0     		add	sp, sp, #8
 773              		@ sp needed
 774 003c 80BD     		pop	{r7, pc}
 775              	.L37:
 776 003e C046     		.align	2
 777              	.L36:
 778 0040 00000000 		.word	CapSense_CSD_sensorEnableMask
 779              		.cfi_endproc
 780              	.LFE40:
 781              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 782              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 783              		.align	2
 784              		.global	CapSense_CSD_UpdateWidgetBaseline
 785              		.code	16
 786              		.thumb_func
 787              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 788              	CapSense_CSD_UpdateWidgetBaseline:
 789              	.LFB41:
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 26


 622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 790              		.loc 1 646 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 32
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 88B0     		sub	sp, sp, #32
 799              		.cfi_def_cfa_offset 40
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 802 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 803              		.loc 1 654 0
 804 0008 0523     		movs	r3, #5
 805 000a BB61     		str	r3, [r7, #24]
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 806              		.loc 1 657 0
 807 000c 0023     		movs	r3, #0
 808 000e 7B61     		str	r3, [r7, #20]
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 27


 660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 809              		.loc 1 660 0
 810 0010 0023     		movs	r3, #0
 811 0012 1A00     		movs	r2, r3
 812 0014 BB69     		ldr	r3, [r7, #24]
 813 0016 D318     		adds	r3, r2, r3
 814 0018 3B61     		str	r3, [r7, #16]
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 815              		.loc 1 662 0
 816 001a 7B69     		ldr	r3, [r7, #20]
 817 001c FB61     		str	r3, [r7, #28]
 818 001e 11E0     		b	.L39
 819              	.L41:
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 820              		.loc 1 664 0
 821 0020 FA69     		ldr	r2, [r7, #28]
 822 0022 0C4B     		ldr	r3, .L42
 823 0024 1100     		movs	r1, r2
 824 0026 1800     		movs	r0, r3
 825 0028 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 826 002c 0300     		movs	r3, r0
 827 002e FB60     		str	r3, [r7, #12]
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 828              		.loc 1 666 0
 829 0030 FB68     		ldr	r3, [r7, #12]
 830 0032 002B     		cmp	r3, #0
 831 0034 03D0     		beq	.L40
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 832              		.loc 1 668 0
 833 0036 FB69     		ldr	r3, [r7, #28]
 834 0038 1800     		movs	r0, r3
 835 003a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 836              	.L40:
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 837              		.loc 1 662 0 discriminator 2
 838 003e FB69     		ldr	r3, [r7, #28]
 839 0040 0133     		adds	r3, r3, #1
 840 0042 FB61     		str	r3, [r7, #28]
 841              	.L39:
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 842              		.loc 1 662 0 is_stmt 0 discriminator 1
 843 0044 FA69     		ldr	r2, [r7, #28]
 844 0046 3B69     		ldr	r3, [r7, #16]
 845 0048 9A42     		cmp	r2, r3
 846 004a E9D3     		bcc	.L41
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 847              		.loc 1 671 0 is_stmt 1
 848 004c C046     		nop
 849 004e BD46     		mov	sp, r7
 850 0050 08B0     		add	sp, sp, #32
 851              		@ sp needed
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 28


 852 0052 80BD     		pop	{r7, pc}
 853              	.L43:
 854              		.align	2
 855              	.L42:
 856 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 857              		.cfi_endproc
 858              	.LFE41:
 859              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 860              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 861              		.align	2
 862              		.global	CapSense_CSD_GetBaselineData
 863              		.code	16
 864              		.thumb_func
 865              		.type	CapSense_CSD_GetBaselineData, %function
 866              	CapSense_CSD_GetBaselineData:
 867              	.LFB42:
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 868              		.loc 1 695 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 8
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872 0000 80B5     		push	{r7, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 7, -8
 875              		.cfi_offset 14, -4
 876 0002 82B0     		sub	sp, sp, #8
 877              		.cfi_def_cfa_offset 16
 878 0004 00AF     		add	r7, sp, #0
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 881              		.loc 1 696 0
 882 0008 034B     		ldr	r3, .L46
 883 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 29


 884 000c 5200     		lsls	r2, r2, #1
 885 000e D35A     		ldrh	r3, [r2, r3]
 697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 886              		.loc 1 697 0
 887 0010 1800     		movs	r0, r3
 888 0012 BD46     		mov	sp, r7
 889 0014 02B0     		add	sp, sp, #8
 890              		@ sp needed
 891 0016 80BD     		pop	{r7, pc}
 892              	.L47:
 893              		.align	2
 894              	.L46:
 895 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 896              		.cfi_endproc
 897              	.LFE42:
 898              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 899              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 900              		.align	2
 901              		.global	CapSense_CSD_SetBaselineData
 902              		.code	16
 903              		.thumb_func
 904              		.type	CapSense_CSD_SetBaselineData, %function
 905              	CapSense_CSD_SetBaselineData:
 906              	.LFB43:
 698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 907              		.loc 1 722 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 30


 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 920 0008 0A00     		movs	r2, r1
 921 000a BB1C     		adds	r3, r7, #2
 922 000c 1A80     		strh	r2, [r3]
 723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 923              		.loc 1 723 0
 924 000e 054B     		ldr	r3, .L49
 925 0010 7A68     		ldr	r2, [r7, #4]
 926 0012 5200     		lsls	r2, r2, #1
 927 0014 B91C     		adds	r1, r7, #2
 928 0016 0988     		ldrh	r1, [r1]
 929 0018 D152     		strh	r1, [r2, r3]
 724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 930              		.loc 1 724 0
 931 001a C046     		nop
 932 001c BD46     		mov	sp, r7
 933 001e 02B0     		add	sp, sp, #8
 934              		@ sp needed
 935 0020 80BD     		pop	{r7, pc}
 936              	.L50:
 937 0022 C046     		.align	2
 938              	.L49:
 939 0024 00000000 		.word	CapSense_CSD_sensorBaseline
 940              		.cfi_endproc
 941              	.LFE43:
 942              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 943              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 944              		.align	2
 945              		.global	CapSense_CSD_GetDiffCountData
 946              		.code	16
 947              		.thumb_func
 948              		.type	CapSense_CSD_GetDiffCountData, %function
 949              	CapSense_CSD_GetDiffCountData:
 950              	.LFB44:
 725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 31


 744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 951              		.loc 1 749 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 82B0     		sub	sp, sp, #8
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
 750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 964              		.loc 1 750 0
 965 0008 034A     		ldr	r2, .L53
 966 000a 7B68     		ldr	r3, [r7, #4]
 967 000c D318     		adds	r3, r2, r3
 968 000e 1B78     		ldrb	r3, [r3]
 751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 969              		.loc 1 751 0
 970 0010 1800     		movs	r0, r3
 971 0012 BD46     		mov	sp, r7
 972 0014 02B0     		add	sp, sp, #8
 973              		@ sp needed
 974 0016 80BD     		pop	{r7, pc}
 975              	.L54:
 976              		.align	2
 977              	.L53:
 978 0018 00000000 		.word	CapSense_CSD_sensorSignal
 979              		.cfi_endproc
 980              	.LFE44:
 981              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 982              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 983              		.align	2
 984              		.global	CapSense_CSD_SetDiffCountData
 985              		.code	16
 986              		.thumb_func
 987              		.type	CapSense_CSD_SetDiffCountData, %function
 988              	CapSense_CSD_SetDiffCountData:
 989              	.LFB45:
 752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 32


 762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 990              		.loc 1 776 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 8
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 1003 0008 0A00     		movs	r2, r1
 1004 000a FB1C     		adds	r3, r7, #3
 1005 000c 1A70     		strb	r2, [r3]
 777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 1006              		.loc 1 777 0
 1007 000e 054A     		ldr	r2, .L56
 1008 0010 7B68     		ldr	r3, [r7, #4]
 1009 0012 D318     		adds	r3, r2, r3
 1010 0014 FA1C     		adds	r2, r7, #3
 1011 0016 1278     		ldrb	r2, [r2]
 1012 0018 1A70     		strb	r2, [r3]
 778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1013              		.loc 1 778 0
 1014 001a C046     		nop
 1015 001c BD46     		mov	sp, r7
 1016 001e 02B0     		add	sp, sp, #8
 1017              		@ sp needed
 1018 0020 80BD     		pop	{r7, pc}
 1019              	.L57:
 1020 0022 C046     		.align	2
 1021              	.L56:
 1022 0024 00000000 		.word	CapSense_CSD_sensorSignal
 1023              		.cfi_endproc
 1024              	.LFE45:
 1025              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 1026              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1027              		.align	2
 1028              		.global	CapSense_CSD_GetFingerThreshold
 1029              		.code	16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 33


 1030              		.thumb_func
 1031              		.type	CapSense_CSD_GetFingerThreshold, %function
 1032              	CapSense_CSD_GetFingerThreshold:
 1033              	.LFB46:
 779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1034              		.loc 1 803 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 8
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 82B0     		sub	sp, sp, #8
 1043              		.cfi_def_cfa_offset 16
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 7860     		str	r0, [r7, #4]
 804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1047              		.loc 1 804 0
 1048 0008 034A     		ldr	r2, .L60
 1049 000a 7B68     		ldr	r3, [r7, #4]
 1050 000c D318     		adds	r3, r2, r3
 1051 000e 1B78     		ldrb	r3, [r3]
 805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1052              		.loc 1 805 0
 1053 0010 1800     		movs	r0, r3
 1054 0012 BD46     		mov	sp, r7
 1055 0014 02B0     		add	sp, sp, #8
 1056              		@ sp needed
 1057 0016 80BD     		pop	{r7, pc}
 1058              	.L61:
 1059              		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 34


 1060              	.L60:
 1061 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1062              		.cfi_endproc
 1063              	.LFE46:
 1064              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1065              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1066              		.align	2
 1067              		.global	CapSense_CSD_GetNoiseThreshold
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1071              	CapSense_CSD_GetNoiseThreshold:
 1072              	.LFB47:
 806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1073              		.loc 1 830 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 8
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 80B5     		push	{r7, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1086              		.loc 1 831 0
 1087 0008 034A     		ldr	r2, .L64
 1088 000a 7B68     		ldr	r3, [r7, #4]
 1089 000c D318     		adds	r3, r2, r3
 1090 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 35


 832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1091              		.loc 1 832 0
 1092 0010 1800     		movs	r0, r3
 1093 0012 BD46     		mov	sp, r7
 1094 0014 02B0     		add	sp, sp, #8
 1095              		@ sp needed
 1096 0016 80BD     		pop	{r7, pc}
 1097              	.L65:
 1098              		.align	2
 1099              	.L64:
 1100 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1101              		.cfi_endproc
 1102              	.LFE47:
 1103              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1104              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_CSD_GetFingerHysteresis
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1110              	CapSense_CSD_GetFingerHysteresis:
 1111              	.LFB48:
 833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1112              		.loc 1 858 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 36


 1121              		.cfi_def_cfa_offset 16
 1122 0004 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
 1124 0006 7860     		str	r0, [r7, #4]
 859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1125              		.loc 1 859 0
 1126 0008 034A     		ldr	r2, .L68
 1127 000a 7B68     		ldr	r3, [r7, #4]
 1128 000c D318     		adds	r3, r2, r3
 1129 000e 1B78     		ldrb	r3, [r3]
 860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1130              		.loc 1 860 0
 1131 0010 1800     		movs	r0, r3
 1132 0012 BD46     		mov	sp, r7
 1133 0014 02B0     		add	sp, sp, #8
 1134              		@ sp needed
 1135 0016 80BD     		pop	{r7, pc}
 1136              	.L69:
 1137              		.align	2
 1138              	.L68:
 1139 0018 00000000 		.word	CapSense_CSD_hysteresis
 1140              		.cfi_endproc
 1141              	.LFE48:
 1142              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1143              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1144              		.align	2
 1145              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1146              		.code	16
 1147              		.thumb_func
 1148              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1149              	CapSense_CSD_GetNegativeNoiseThreshold:
 1150              	.LFB49:
 861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 37


 886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1151              		.loc 1 886 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 80B5     		push	{r7, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 82B0     		sub	sp, sp, #8
 1160              		.cfi_def_cfa_offset 16
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1164              		.loc 1 888 0
 1165 0008 034A     		ldr	r2, .L72
 1166 000a 7B68     		ldr	r3, [r7, #4]
 1167 000c D318     		adds	r3, r2, r3
 1168 000e 1B78     		ldrb	r3, [r3]
 889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1169              		.loc 1 892 0
 1170 0010 1800     		movs	r0, r3
 1171 0012 BD46     		mov	sp, r7
 1172 0014 02B0     		add	sp, sp, #8
 1173              		@ sp needed
 1174 0016 80BD     		pop	{r7, pc}
 1175              	.L73:
 1176              		.align	2
 1177              	.L72:
 1178 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1179              		.cfi_endproc
 1180              	.LFE49:
 1181              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1182              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1183              		.align	2
 1184              		.global	CapSense_CSD_SetFingerThreshold
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	CapSense_CSD_SetFingerThreshold, %function
 1188              	CapSense_CSD_SetFingerThreshold:
 1189              	.LFB50:
 893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 38


 904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1190              		.loc 1 919 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 82B0     		sub	sp, sp, #8
 1199              		.cfi_def_cfa_offset 16
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 0006 7860     		str	r0, [r7, #4]
 1203 0008 0A00     		movs	r2, r1
 1204 000a FB1C     		adds	r3, r7, #3
 1205 000c 1A70     		strb	r2, [r3]
 920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 1206              		.loc 1 920 0
 1207 000e 054A     		ldr	r2, .L75
 1208 0010 7B68     		ldr	r3, [r7, #4]
 1209 0012 D318     		adds	r3, r2, r3
 1210 0014 FA1C     		adds	r2, r7, #3
 1211 0016 1278     		ldrb	r2, [r2]
 1212 0018 1A70     		strb	r2, [r3]
 921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1213              		.loc 1 921 0
 1214 001a C046     		nop
 1215 001c BD46     		mov	sp, r7
 1216 001e 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 0020 80BD     		pop	{r7, pc}
 1219              	.L76:
 1220 0022 C046     		.align	2
 1221              	.L75:
 1222 0024 00000000 		.word	CapSense_CSD_fingerThreshold
 1223              		.cfi_endproc
 1224              	.LFE50:
 1225              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1226              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1227              		.align	2
 1228              		.global	CapSense_CSD_SetNoiseThreshold
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 39


 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1232              	CapSense_CSD_SetNoiseThreshold:
 1233              	.LFB51:
 922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
 947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1234              		.loc 1 947 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 82B0     		sub	sp, sp, #8
 1243              		.cfi_def_cfa_offset 16
 1244 0004 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
 1246 0006 7860     		str	r0, [r7, #4]
 1247 0008 0A00     		movs	r2, r1
 1248 000a FB1C     		adds	r3, r7, #3
 1249 000c 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 1250              		.loc 1 948 0
 1251 000e 054A     		ldr	r2, .L78
 1252 0010 7B68     		ldr	r3, [r7, #4]
 1253 0012 D318     		adds	r3, r2, r3
 1254 0014 FA1C     		adds	r2, r7, #3
 1255 0016 1278     		ldrb	r2, [r2]
 1256 0018 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1257              		.loc 1 949 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 40


 1258 001a C046     		nop
 1259 001c BD46     		mov	sp, r7
 1260 001e 02B0     		add	sp, sp, #8
 1261              		@ sp needed
 1262 0020 80BD     		pop	{r7, pc}
 1263              	.L79:
 1264 0022 C046     		.align	2
 1265              	.L78:
 1266 0024 00000000 		.word	CapSense_CSD_noiseThreshold
 1267              		.cfi_endproc
 1268              	.LFE51:
 1269              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1270              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1271              		.align	2
 1272              		.global	CapSense_CSD_SetFingerHysteresis
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1276              	CapSense_CSD_SetFingerHysteresis:
 1277              	.LFB52:
 950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1278              		.loc 1 975 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 41


 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
 1291 0008 0A00     		movs	r2, r1
 1292 000a FB1C     		adds	r3, r7, #3
 1293 000c 1A70     		strb	r2, [r3]
 976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1294              		.loc 1 976 0
 1295 000e 054A     		ldr	r2, .L81
 1296 0010 7B68     		ldr	r3, [r7, #4]
 1297 0012 D318     		adds	r3, r2, r3
 1298 0014 FA1C     		adds	r2, r7, #3
 1299 0016 1278     		ldrb	r2, [r2]
 1300 0018 1A70     		strb	r2, [r3]
 977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1301              		.loc 1 977 0
 1302 001a C046     		nop
 1303 001c BD46     		mov	sp, r7
 1304 001e 02B0     		add	sp, sp, #8
 1305              		@ sp needed
 1306 0020 80BD     		pop	{r7, pc}
 1307              	.L82:
 1308 0022 C046     		.align	2
 1309              	.L81:
 1310 0024 00000000 		.word	CapSense_CSD_hysteresis
 1311              		.cfi_endproc
 1312              	.LFE52:
 1313              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1314              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1315              		.align	2
 1316              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1320              	CapSense_CSD_SetNegativeNoiseThreshold:
 1321              	.LFB53:
 978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
 990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
 996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
 998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 42


1000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1322              		.loc 1 1004 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 8
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 0000 80B5     		push	{r7, lr}
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 7, -8
 1329              		.cfi_offset 14, -4
 1330 0002 82B0     		sub	sp, sp, #8
 1331              		.cfi_def_cfa_offset 16
 1332 0004 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 1334 0006 7860     		str	r0, [r7, #4]
 1335 0008 0A00     		movs	r2, r1
 1336 000a FB1C     		adds	r3, r7, #3
 1337 000c 1A70     		strb	r2, [r3]
1005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1338              		.loc 1 1005 0
 1339 000e 054A     		ldr	r2, .L84
 1340 0010 7B68     		ldr	r3, [r7, #4]
 1341 0012 D318     		adds	r3, r2, r3
 1342 0014 FA1C     		adds	r2, r7, #3
 1343 0016 1278     		ldrb	r2, [r2]
 1344 0018 1A70     		strb	r2, [r3]
1006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1345              		.loc 1 1006 0
 1346 001a C046     		nop
 1347 001c BD46     		mov	sp, r7
 1348 001e 02B0     		add	sp, sp, #8
 1349              		@ sp needed
 1350 0020 80BD     		pop	{r7, pc}
 1351              	.L85:
 1352 0022 C046     		.align	2
 1353              	.L84:
 1354 0024 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1355              		.cfi_endproc
 1356              	.LFE53:
 1357              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1358              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1359              		.align	2
 1360              		.global	CapSense_CSD_SetDebounce
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CapSense_CSD_SetDebounce, %function
 1364              	CapSense_CSD_SetDebounce:
 1365              	.LFB54:
1007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 43


1013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1366              		.loc 1 1032 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 82B0     		sub	sp, sp, #8
 1375              		.cfi_def_cfa_offset 16
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
 1379 0008 0A00     		movs	r2, r1
 1380 000a FB1C     		adds	r3, r7, #3
 1381 000c 1A70     		strb	r2, [r3]
1033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1382              		.loc 1 1033 0
 1383 000e 054A     		ldr	r2, .L87
 1384 0010 7B68     		ldr	r3, [r7, #4]
 1385 0012 D318     		adds	r3, r2, r3
 1386 0014 FA1C     		adds	r2, r7, #3
 1387 0016 1278     		ldrb	r2, [r2]
 1388 0018 1A70     		strb	r2, [r3]
1034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1389              		.loc 1 1034 0
 1390 001a C046     		nop
 1391 001c BD46     		mov	sp, r7
 1392 001e 02B0     		add	sp, sp, #8
 1393              		@ sp needed
 1394 0020 80BD     		pop	{r7, pc}
 1395              	.L88:
 1396 0022 C046     		.align	2
 1397              	.L87:
 1398 0024 00000000 		.word	CapSense_CSD_debounce
 1399              		.cfi_endproc
 1400              	.LFE54:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 44


 1401              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1402              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1403              		.align	2
 1404              		.global	CapSense_CSD_SetLowBaselineReset
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1408              	CapSense_CSD_SetLowBaselineReset:
 1409              	.LFB55:
1035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1410              		.loc 1 1060 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 8
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 82B0     		sub	sp, sp, #8
 1419              		.cfi_def_cfa_offset 16
 1420 0004 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 1422 0006 7860     		str	r0, [r7, #4]
 1423 0008 0A00     		movs	r2, r1
 1424 000a FB1C     		adds	r3, r7, #3
 1425 000c 1A70     		strb	r2, [r3]
1061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1426              		.loc 1 1061 0
 1427 000e 054A     		ldr	r2, .L90
 1428 0010 7B68     		ldr	r3, [r7, #4]
 1429 0012 D318     		adds	r3, r2, r3
 1430 0014 FA1C     		adds	r2, r7, #3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 45


 1431 0016 1278     		ldrb	r2, [r2]
 1432 0018 1A70     		strb	r2, [r3]
1062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1433              		.loc 1 1062 0
 1434 001a C046     		nop
 1435 001c BD46     		mov	sp, r7
 1436 001e 02B0     		add	sp, sp, #8
 1437              		@ sp needed
 1438 0020 80BD     		pop	{r7, pc}
 1439              	.L91:
 1440 0022 C046     		.align	2
 1441              	.L90:
 1442 0024 00000000 		.word	CapSense_CSD_lowBaselineReset
 1443              		.cfi_endproc
 1444              	.LFE55:
 1445              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1446              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1447              		.align	2
 1448              		.global	CapSense_CSD_CheckIsSensorActive
 1449              		.code	16
 1450              		.thumb_func
 1451              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1452              	CapSense_CSD_CheckIsSensorActive:
 1453              	.LFB56:
1063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 46


1096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1454              		.loc 1 1106 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 16
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458 0000 80B5     		push	{r7, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
 1462 0002 84B0     		sub	sp, sp, #16
 1463              		.cfi_def_cfa_offset 24
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 7860     		str	r0, [r7, #4]
1107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold;
1112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 hysteresis;
1113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     static uint8 CapSense_CSD_debounceCounter[] = {
1114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 
1115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
1116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1467              		.loc 1 1120 0
 1468 0008 0F23     		movs	r3, #15
 1469 000a FB18     		adds	r3, r7, r3
 1470 000c 4349     		ldr	r1, .L101
 1471 000e 7A68     		ldr	r2, [r7, #4]
 1472 0010 8A18     		adds	r2, r1, r2
 1473 0012 1278     		ldrb	r2, [r2]
 1474 0014 1A70     		strb	r2, [r3]
1121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1475              		.loc 1 1122 0
 1476 0016 0F23     		movs	r3, #15
 1477 0018 FB18     		adds	r3, r7, r3
 1478 001a 1A78     		ldrb	r2, [r3]
 1479 001c 0E23     		movs	r3, #14
 1480 001e FB18     		adds	r3, r7, r3
 1481 0020 3F49     		ldr	r1, .L101+4
 1482 0022 8A5C     		ldrb	r2, [r1, r2]
 1483 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 47


1123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1484              		.loc 1 1123 0
 1485 0026 0F23     		movs	r3, #15
 1486 0028 FB18     		adds	r3, r7, r3
 1487 002a 1A78     		ldrb	r2, [r3]
 1488 002c 0D23     		movs	r3, #13
 1489 002e FB18     		adds	r3, r7, r3
 1490 0030 3C49     		ldr	r1, .L101+8
 1491 0032 8A5C     		ldrb	r2, [r1, r2]
 1492 0034 1A70     		strb	r2, [r3]
1124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1493              		.loc 1 1124 0
 1494 0036 0F23     		movs	r3, #15
 1495 0038 FB18     		adds	r3, r7, r3
 1496 003a 1A78     		ldrb	r2, [r3]
 1497 003c 0C23     		movs	r3, #12
 1498 003e FB18     		adds	r3, r7, r3
 1499 0040 3949     		ldr	r1, .L101+12
 1500 0042 8A5C     		ldrb	r2, [r1, r2]
 1501 0044 1A70     		strb	r2, [r3]
1125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1502              		.loc 1 1126 0
 1503 0046 0B23     		movs	r3, #11
 1504 0048 FB18     		adds	r3, r7, r3
 1505 004a 0022     		movs	r2, #0
 1506 004c 1A70     		strb	r2, [r3]
1127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 1507              		.loc 1 1127 0
 1508 004e 0B23     		movs	r3, #11
 1509 0050 FB18     		adds	r3, r7, r3
 1510 0052 1B78     		ldrb	r3, [r3]
 1511 0054 354A     		ldr	r2, .L101+16
 1512 0056 0121     		movs	r1, #1
 1513 0058 D154     		strb	r1, [r2, r3]
1128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1514              		.loc 1 1131 0
 1515 005a 7A68     		ldr	r2, [r7, #4]
 1516 005c 344B     		ldr	r3, .L101+20
 1517 005e 1100     		movs	r1, r2
 1518 0060 1800     		movs	r0, r3
 1519 0062 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1520 0066 031E     		subs	r3, r0, #0
 1521 0068 1CD0     		beq	.L93
1132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1522              		.loc 1 1134 0
 1523 006a 324A     		ldr	r2, .L101+24
 1524 006c 7B68     		ldr	r3, [r7, #4]
 1525 006e D318     		adds	r3, r2, r3
 1526 0070 1B78     		ldrb	r3, [r3]
 1527 0072 1900     		movs	r1, r3
 1528 0074 0E23     		movs	r3, #14
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 48


 1529 0076 FB18     		adds	r3, r7, r3
 1530 0078 1A78     		ldrb	r2, [r3]
 1531 007a 0D23     		movs	r3, #13
 1532 007c FB18     		adds	r3, r7, r3
 1533 007e 1B78     		ldrb	r3, [r3]
 1534 0080 D31A     		subs	r3, r2, r3
 1535 0082 9942     		cmp	r1, r3
 1536 0084 3BDA     		bge	.L95
1135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1537              		.loc 1 1136 0
 1538 0086 7968     		ldr	r1, [r7, #4]
 1539 0088 294B     		ldr	r3, .L101+20
 1540 008a 0022     		movs	r2, #0
 1541 008c 1800     		movs	r0, r3
 1542 008e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1543              		.loc 1 1138 0
 1544 0092 0B23     		movs	r3, #11
 1545 0094 FB18     		adds	r3, r7, r3
 1546 0096 1B78     		ldrb	r3, [r3]
 1547 0098 244A     		ldr	r2, .L101+16
 1548 009a 0C21     		movs	r1, #12
 1549 009c 7918     		adds	r1, r7, r1
 1550 009e 0978     		ldrb	r1, [r1]
 1551 00a0 D154     		strb	r1, [r2, r3]
 1552 00a2 2CE0     		b	.L95
 1553              	.L93:
1139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1554              		.loc 1 1144 0
 1555 00a4 234A     		ldr	r2, .L101+24
 1556 00a6 7B68     		ldr	r3, [r7, #4]
 1557 00a8 D318     		adds	r3, r2, r3
 1558 00aa 1B78     		ldrb	r3, [r3]
 1559 00ac 1900     		movs	r1, r3
 1560 00ae 0E23     		movs	r3, #14
 1561 00b0 FB18     		adds	r3, r7, r3
 1562 00b2 1A78     		ldrb	r2, [r3]
 1563 00b4 0D23     		movs	r3, #13
 1564 00b6 FB18     		adds	r3, r7, r3
 1565 00b8 1B78     		ldrb	r3, [r3]
 1566 00ba D318     		adds	r3, r2, r3
 1567 00bc 9942     		cmp	r1, r3
 1568 00be 16DB     		blt	.L96
1145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1569              		.loc 1 1146 0
 1570 00c0 0B23     		movs	r3, #11
 1571 00c2 FB18     		adds	r3, r7, r3
 1572 00c4 1B78     		ldrb	r3, [r3]
 1573 00c6 194A     		ldr	r2, .L101+16
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 49


 1574 00c8 D25C     		ldrb	r2, [r2, r3]
 1575 00ca 013A     		subs	r2, r2, #1
 1576 00cc D1B2     		uxtb	r1, r2
 1577 00ce 174A     		ldr	r2, .L101+16
 1578 00d0 D154     		strb	r1, [r2, r3]
1147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1579              		.loc 1 1148 0
 1580 00d2 0B23     		movs	r3, #11
 1581 00d4 FB18     		adds	r3, r7, r3
 1582 00d6 1B78     		ldrb	r3, [r3]
 1583 00d8 144A     		ldr	r2, .L101+16
 1584 00da D35C     		ldrb	r3, [r2, r3]
 1585 00dc 002B     		cmp	r3, #0
 1586 00de 0ED1     		bne	.L95
1149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1587              		.loc 1 1150 0
 1588 00e0 7968     		ldr	r1, [r7, #4]
 1589 00e2 134B     		ldr	r3, .L101+20
 1590 00e4 0122     		movs	r2, #1
 1591 00e6 1800     		movs	r0, r3
 1592 00e8 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1593 00ec 07E0     		b	.L95
 1594              	.L96:
1151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1595              		.loc 1 1156 0
 1596 00ee 0B23     		movs	r3, #11
 1597 00f0 FB18     		adds	r3, r7, r3
 1598 00f2 1B78     		ldrb	r3, [r3]
 1599 00f4 0D4A     		ldr	r2, .L101+16
 1600 00f6 0C21     		movs	r1, #12
 1601 00f8 7918     		adds	r1, r7, r1
 1602 00fa 0978     		ldrb	r1, [r1]
 1603 00fc D154     		strb	r1, [r2, r3]
 1604              	.L95:
1157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1605              		.loc 1 1160 0
 1606 00fe 7A68     		ldr	r2, [r7, #4]
 1607 0100 0B4B     		ldr	r3, .L101+20
 1608 0102 1100     		movs	r1, r2
 1609 0104 1800     		movs	r0, r3
 1610 0106 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1611 010a 031E     		subs	r3, r0, #0
 1612 010c 01D0     		beq	.L98
 1613              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1614 010e 0123     		movs	r3, #1
 1615 0110 00E0     		b	.L100
 1616              	.L98:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 50


 1617              		.loc 1 1160 0 discriminator 2
 1618 0112 0023     		movs	r3, #0
 1619              	.L100:
1161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1620              		.loc 1 1161 0 is_stmt 1 discriminator 5
 1621 0114 1800     		movs	r0, r3
 1622 0116 BD46     		mov	sp, r7
 1623 0118 04B0     		add	sp, sp, #16
 1624              		@ sp needed
 1625 011a 80BD     		pop	{r7, pc}
 1626              	.L102:
 1627              		.align	2
 1628              	.L101:
 1629 011c 00000000 		.word	CapSense_CSD_widgetNumber
 1630 0120 00000000 		.word	CapSense_CSD_fingerThreshold
 1631 0124 00000000 		.word	CapSense_CSD_hysteresis
 1632 0128 00000000 		.word	CapSense_CSD_debounce
 1633 012c 20000000 		.word	CapSense_CSD_debounceCounter.5530
 1634 0130 00000000 		.word	CapSense_CSD_sensorOnMask
 1635 0134 00000000 		.word	CapSense_CSD_sensorSignal
 1636              		.cfi_endproc
 1637              	.LFE56:
 1638              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1639              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1640              		.align	2
 1641              		.global	CapSense_CSD_CheckIsWidgetActive
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1645              	CapSense_CSD_CheckIsWidgetActive:
 1646              	.LFB57:
1162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 51


1188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1647              		.loc 1 1193 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 24
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 86B0     		sub	sp, sp, #24
 1656              		.cfi_def_cfa_offset 32
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1660              		.loc 1 1194 0
 1661 0008 0023     		movs	r3, #0
 1662 000a 7B61     		str	r3, [r7, #20]
1195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1663              		.loc 1 1195 0
 1664 000c 0523     		movs	r3, #5
 1665 000e 1A00     		movs	r2, r3
 1666 0010 7B69     		ldr	r3, [r7, #20]
 1667 0012 D318     		adds	r3, r2, r3
 1668 0014 FB60     		str	r3, [r7, #12]
1196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1669              		.loc 1 1196 0
 1670 0016 0023     		movs	r3, #0
 1671 0018 3B61     		str	r3, [r7, #16]
 1672              	.L105:
1197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1673              		.loc 1 1201 0
 1674 001a 7B69     		ldr	r3, [r7, #20]
 1675 001c 1800     		movs	r0, r3
 1676 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1677 0022 031E     		subs	r3, r0, #0
 1678 0024 01D0     		beq	.L104
1202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1679              		.loc 1 1203 0
 1680 0026 0123     		movs	r3, #1
 1681 0028 3B61     		str	r3, [r7, #16]
 1682              	.L104:
1204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1683              		.loc 1 1205 0
 1684 002a 7B69     		ldr	r3, [r7, #20]
 1685 002c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 52


 1686 002e 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1687              		.loc 1 1207 0
 1688 0030 7A69     		ldr	r2, [r7, #20]
 1689 0032 FB68     		ldr	r3, [r7, #12]
 1690 0034 9A42     		cmp	r2, r3
 1691 0036 F0D3     		bcc	.L105
1208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1692              		.loc 1 1211 0
 1693 0038 3B69     		ldr	r3, [r7, #16]
1212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1694              		.loc 1 1212 0
 1695 003a 1800     		movs	r0, r3
 1696 003c BD46     		mov	sp, r7
 1697 003e 06B0     		add	sp, sp, #24
 1698              		@ sp needed
 1699 0040 80BD     		pop	{r7, pc}
 1700              		.cfi_endproc
 1701              	.LFE57:
 1702              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1703 0042 C046     		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1704              		.align	2
 1705              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1706              		.code	16
 1707              		.thumb_func
 1708              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1709              	CapSense_CSD_CheckIsAnyWidgetActive:
 1710              	.LFB58:
1213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 53


1238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1711              		.loc 1 1239 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 8
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              		.cfi_def_cfa_offset 8
 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 82B0     		sub	sp, sp, #8
 1720              		.cfi_def_cfa_offset 16
 1721 0004 00AF     		add	r7, sp, #0
 1722              		.cfi_def_cfa_register 7
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1723              		.loc 1 1242 0
 1724 0006 0023     		movs	r3, #0
 1725 0008 3B60     		str	r3, [r7]
1243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1726              		.loc 1 1244 0
 1727 000a 0023     		movs	r3, #0
 1728 000c 7B60     		str	r3, [r7, #4]
 1729 000e 0AE0     		b	.L108
 1730              	.L110:
1245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1731              		.loc 1 1246 0
 1732 0010 7B68     		ldr	r3, [r7, #4]
 1733 0012 1800     		movs	r0, r3
 1734 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1735 0018 031E     		subs	r3, r0, #0
 1736 001a 01D0     		beq	.L109
1247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1737              		.loc 1 1248 0
 1738 001c 0123     		movs	r3, #1
 1739 001e 3B60     		str	r3, [r7]
 1740              	.L109:
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1741              		.loc 1 1244 0 discriminator 2
 1742 0020 7B68     		ldr	r3, [r7, #4]
 1743 0022 0133     		adds	r3, r3, #1
 1744 0024 7B60     		str	r3, [r7, #4]
 1745              	.L108:
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1746              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1747 0026 7B68     		ldr	r3, [r7, #4]
 1748 0028 002B     		cmp	r3, #0
 1749 002a F1D0     		beq	.L110
1249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 54


1254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1750              		.loc 1 1254 0 is_stmt 1
 1751 002c 3B68     		ldr	r3, [r7]
1255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1752              		.loc 1 1255 0
 1753 002e 1800     		movs	r0, r3
 1754 0030 BD46     		mov	sp, r7
 1755 0032 02B0     		add	sp, sp, #8
 1756              		@ sp needed
 1757 0034 80BD     		pop	{r7, pc}
 1758              		.cfi_endproc
 1759              	.LFE58:
 1760              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1761 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1762              		.align	2
 1763              		.global	CapSense_CSD_EnableWidget
 1764              		.code	16
 1765              		.thumb_func
 1766              		.type	CapSense_CSD_EnableWidget, %function
 1767              	CapSense_CSD_EnableWidget:
 1768              	.LFB59:
1256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1769              		.loc 1 1286 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 16
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 55


 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 7, -8
 1776              		.cfi_offset 14, -4
 1777 0002 84B0     		sub	sp, sp, #16
 1778              		.cfi_def_cfa_offset 24
 1779 0004 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
 1781 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1782              		.loc 1 1288 0
 1783 0008 0F23     		movs	r3, #15
 1784 000a FB18     		adds	r3, r7, r3
 1785 000c 0022     		movs	r2, #0
 1786 000e 1A70     		strb	r2, [r3]
1289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1787              		.loc 1 1289 0
 1788 0010 0521     		movs	r1, #5
 1789 0012 0E23     		movs	r3, #14
 1790 0014 FB18     		adds	r3, r7, r3
 1791 0016 0F22     		movs	r2, #15
 1792 0018 BA18     		adds	r2, r7, r2
 1793 001a 1278     		ldrb	r2, [r2]
 1794 001c 8A18     		adds	r2, r1, r2
 1795 001e 1A70     		strb	r2, [r3]
 1796              	.L113:
1290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1797              		.loc 1 1294 0 discriminator 1
 1798 0020 0F23     		movs	r3, #15
 1799 0022 FB18     		adds	r3, r7, r3
 1800 0024 1978     		ldrb	r1, [r3]
 1801 0026 0C4B     		ldr	r3, .L114
 1802 0028 0122     		movs	r2, #1
 1803 002a 1800     		movs	r0, r3
 1804 002c FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1805              		.loc 1 1295 0 discriminator 1
 1806 0030 0F23     		movs	r3, #15
 1807 0032 FB18     		adds	r3, r7, r3
 1808 0034 1A78     		ldrb	r2, [r3]
 1809 0036 0F23     		movs	r3, #15
 1810 0038 FB18     		adds	r3, r7, r3
 1811 003a 0132     		adds	r2, r2, #1
 1812 003c 1A70     		strb	r2, [r3]
1296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1813              		.loc 1 1297 0 discriminator 1
 1814 003e 0F23     		movs	r3, #15
 1815 0040 FA18     		adds	r2, r7, r3
 1816 0042 0E23     		movs	r3, #14
 1817 0044 FB18     		adds	r3, r7, r3
 1818 0046 1278     		ldrb	r2, [r2]
 1819 0048 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 56


 1820 004a 9A42     		cmp	r2, r3
 1821 004c E8D3     		bcc	.L113
1298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1822              		.loc 1 1298 0
 1823 004e C046     		nop
 1824 0050 BD46     		mov	sp, r7
 1825 0052 04B0     		add	sp, sp, #16
 1826              		@ sp needed
 1827 0054 80BD     		pop	{r7, pc}
 1828              	.L115:
 1829 0056 C046     		.align	2
 1830              	.L114:
 1831 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1832              		.cfi_endproc
 1833              	.LFE59:
 1834              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1835              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1836              		.align	2
 1837              		.global	CapSense_CSD_DisableWidget
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	CapSense_CSD_DisableWidget, %function
 1841              	CapSense_CSD_DisableWidget:
 1842              	.LFB60:
1299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1843              		.loc 1 1329 0
 1844              		.cfi_startproc
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 57


 1845              		@ args = 0, pretend = 0, frame = 16
 1846              		@ frame_needed = 1, uses_anonymous_args = 0
 1847 0000 80B5     		push	{r7, lr}
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 7, -8
 1850              		.cfi_offset 14, -4
 1851 0002 84B0     		sub	sp, sp, #16
 1852              		.cfi_def_cfa_offset 24
 1853 0004 00AF     		add	r7, sp, #0
 1854              		.cfi_def_cfa_register 7
 1855 0006 7860     		str	r0, [r7, #4]
1330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1856              		.loc 1 1330 0
 1857 0008 0F23     		movs	r3, #15
 1858 000a FB18     		adds	r3, r7, r3
 1859 000c 0022     		movs	r2, #0
 1860 000e 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1861              		.loc 1 1331 0
 1862 0010 0521     		movs	r1, #5
 1863 0012 0E23     		movs	r3, #14
 1864 0014 FB18     		adds	r3, r7, r3
 1865 0016 0F22     		movs	r2, #15
 1866 0018 BA18     		adds	r2, r7, r2
 1867 001a 1278     		ldrb	r2, [r2]
 1868 001c 8A18     		adds	r2, r1, r2
 1869 001e 1A70     		strb	r2, [r3]
 1870              	.L117:
1332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1871              		.loc 1 1337 0 discriminator 1
 1872 0020 0F23     		movs	r3, #15
 1873 0022 FB18     		adds	r3, r7, r3
 1874 0024 1978     		ldrb	r1, [r3]
 1875 0026 0C4B     		ldr	r3, .L118
 1876 0028 0022     		movs	r2, #0
 1877 002a 1800     		movs	r0, r3
 1878 002c FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1879              		.loc 1 1338 0 discriminator 1
 1880 0030 0F23     		movs	r3, #15
 1881 0032 FB18     		adds	r3, r7, r3
 1882 0034 1A78     		ldrb	r2, [r3]
 1883 0036 0F23     		movs	r3, #15
 1884 0038 FB18     		adds	r3, r7, r3
 1885 003a 0132     		adds	r2, r2, #1
 1886 003c 1A70     		strb	r2, [r3]
1339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1887              		.loc 1 1340 0 discriminator 1
 1888 003e 0F23     		movs	r3, #15
 1889 0040 FA18     		adds	r2, r7, r3
 1890 0042 0E23     		movs	r3, #14
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 58


 1891 0044 FB18     		adds	r3, r7, r3
 1892 0046 1278     		ldrb	r2, [r2]
 1893 0048 1B78     		ldrb	r3, [r3]
 1894 004a 9A42     		cmp	r2, r3
 1895 004c E8D3     		bcc	.L117
1341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1896              		.loc 1 1341 0
 1897 004e C046     		nop
 1898 0050 BD46     		mov	sp, r7
 1899 0052 04B0     		add	sp, sp, #16
 1900              		@ sp needed
 1901 0054 80BD     		pop	{r7, pc}
 1902              	.L119:
 1903 0056 C046     		.align	2
 1904              	.L118:
 1905 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1906              		.cfi_endproc
 1907              	.LFE60:
 1908              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1909              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1910              		.align	2
 1911              		.global	CapSense_CSD_FindMaximum
 1912              		.code	16
 1913              		.thumb_func
 1914              		.type	CapSense_CSD_FindMaximum, %function
 1915              	CapSense_CSD_FindMaximum:
 1916              	.LFB61:
1342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 59


1372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
1377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1917              		.loc 1 1380 0
 1918              		.cfi_startproc
 1919              		@ args = 0, pretend = 0, frame = 16
 1920              		@ frame_needed = 1, uses_anonymous_args = 0
 1921 0000 90B5     		push	{r4, r7, lr}
 1922              		.cfi_def_cfa_offset 12
 1923              		.cfi_offset 4, -12
 1924              		.cfi_offset 7, -8
 1925              		.cfi_offset 14, -4
 1926 0002 85B0     		sub	sp, sp, #20
 1927              		.cfi_def_cfa_offset 32
 1928 0004 00AF     		add	r7, sp, #0
 1929              		.cfi_def_cfa_register 7
 1930 0006 0400     		movs	r4, r0
 1931 0008 0800     		movs	r0, r1
 1932 000a 1100     		movs	r1, r2
 1933 000c FB1D     		adds	r3, r7, #7
 1934 000e 221C     		adds	r2, r4, #0
 1935 0010 1A70     		strb	r2, [r3]
 1936 0012 BB1D     		adds	r3, r7, #6
 1937 0014 021C     		adds	r2, r0, #0
 1938 0016 1A70     		strb	r2, [r3]
 1939 0018 7B1D     		adds	r3, r7, #5
 1940 001a 0A1C     		adds	r2, r1, #0
 1941 001c 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
 1942              		.loc 1 1391 0
 1943 001e 0E23     		movs	r3, #14
 1944 0020 FB18     		adds	r3, r7, r3
 1945 0022 FF22     		movs	r2, #255
 1946 0024 1A70     		strb	r2, [r3]
1392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 1947              		.loc 1 1393 0
 1948 0026 0D23     		movs	r3, #13
 1949 0028 FB18     		adds	r3, r7, r3
 1950 002a 0022     		movs	r2, #0
 1951 002c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 60


1394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1952              		.loc 1 1394 0
 1953 002e FB1D     		adds	r3, r7, #7
 1954 0030 1A78     		ldrb	r2, [r3]
 1955 0032 204B     		ldr	r3, .L125
 1956 0034 D318     		adds	r3, r2, r3
 1957 0036 BB60     		str	r3, [r7, #8]
1395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 61


1445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1958              		.loc 1 1491 0
 1959 0038 0F23     		movs	r3, #15
 1960 003a FB18     		adds	r3, r7, r3
 1961 003c 0022     		movs	r2, #0
 1962 003e 1A70     		strb	r2, [r3]
 1963 0040 2AE0     		b	.L121
 1964              	.L123:
1492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 62


 1965              		.loc 1 1494 0
 1966 0042 0F23     		movs	r3, #15
 1967 0044 FB18     		adds	r3, r7, r3
 1968 0046 1B78     		ldrb	r3, [r3]
 1969 0048 BA68     		ldr	r2, [r7, #8]
 1970 004a D318     		adds	r3, r2, r3
 1971 004c 1B78     		ldrb	r3, [r3]
 1972 004e 7A1D     		adds	r2, r7, #5
 1973 0050 1278     		ldrb	r2, [r2]
 1974 0052 9A42     		cmp	r2, r3
 1975 0054 19D2     		bcs	.L122
1495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1976              		.loc 1 1496 0
 1977 0056 0F23     		movs	r3, #15
 1978 0058 FB18     		adds	r3, r7, r3
 1979 005a 1B78     		ldrb	r3, [r3]
 1980 005c BA68     		ldr	r2, [r7, #8]
 1981 005e D318     		adds	r3, r2, r3
 1982 0060 1B78     		ldrb	r3, [r3]
 1983 0062 0D22     		movs	r2, #13
 1984 0064 BA18     		adds	r2, r7, r2
 1985 0066 1278     		ldrb	r2, [r2]
 1986 0068 9A42     		cmp	r2, r3
 1987 006a 0ED2     		bcs	.L122
1497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
 1988              		.loc 1 1498 0
 1989 006c 0E23     		movs	r3, #14
 1990 006e FB18     		adds	r3, r7, r3
 1991 0070 0F22     		movs	r2, #15
 1992 0072 BA18     		adds	r2, r7, r2
 1993 0074 1278     		ldrb	r2, [r2]
 1994 0076 1A70     		strb	r2, [r3]
1499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1995              		.loc 1 1499 0
 1996 0078 0F23     		movs	r3, #15
 1997 007a FB18     		adds	r3, r7, r3
 1998 007c 1B78     		ldrb	r3, [r3]
 1999 007e BA68     		ldr	r2, [r7, #8]
 2000 0080 D218     		adds	r2, r2, r3
 2001 0082 0D23     		movs	r3, #13
 2002 0084 FB18     		adds	r3, r7, r3
 2003 0086 1278     		ldrb	r2, [r2]
 2004 0088 1A70     		strb	r2, [r3]
 2005              	.L122:
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 2006              		.loc 1 1491 0 discriminator 2
 2007 008a 0F23     		movs	r3, #15
 2008 008c FB18     		adds	r3, r7, r3
 2009 008e 1A78     		ldrb	r2, [r3]
 2010 0090 0F23     		movs	r3, #15
 2011 0092 FB18     		adds	r3, r7, r3
 2012 0094 0132     		adds	r2, r2, #1
 2013 0096 1A70     		strb	r2, [r3]
 2014              	.L121:
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 63


 2015              		.loc 1 1491 0 is_stmt 0 discriminator 1
 2016 0098 0F23     		movs	r3, #15
 2017 009a FA18     		adds	r2, r7, r3
 2018 009c BB1D     		adds	r3, r7, #6
 2019 009e 1278     		ldrb	r2, [r2]
 2020 00a0 1B78     		ldrb	r3, [r3]
 2021 00a2 9A42     		cmp	r2, r3
 2022 00a4 CDD3     		bcc	.L123
1500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
 2023              		.loc 1 1504 0 is_stmt 1
 2024 00a6 0E23     		movs	r3, #14
 2025 00a8 FB18     		adds	r3, r7, r3
 2026 00aa 1B78     		ldrb	r3, [r3]
1505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2027              		.loc 1 1505 0
 2028 00ac 1800     		movs	r0, r3
 2029 00ae BD46     		mov	sp, r7
 2030 00b0 05B0     		add	sp, sp, #20
 2031              		@ sp needed
 2032 00b2 90BD     		pop	{r4, r7, pc}
 2033              	.L126:
 2034              		.align	2
 2035              	.L125:
 2036 00b4 00000000 		.word	CapSense_CSD_sensorSignal
 2037              		.cfi_endproc
 2038              	.LFE61:
 2039              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 2040              		.global	__aeabi_idiv
 2041              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 2042              		.align	2
 2043              		.global	CapSense_CSD_CalcCentroid
 2044              		.code	16
 2045              		.thumb_func
 2046              		.type	CapSense_CSD_CalcCentroid, %function
 2047              	CapSense_CSD_CalcCentroid:
 2048              	.LFB62:
1506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 64


1523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2049              		.loc 1 1540 0
 2050              		.cfi_startproc
 2051              		@ args = 4, pretend = 0, frame = 32
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053 0000 B0B5     		push	{r4, r5, r7, lr}
 2054              		.cfi_def_cfa_offset 16
 2055              		.cfi_offset 4, -16
 2056              		.cfi_offset 5, -12
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 88B0     		sub	sp, sp, #32
 2060              		.cfi_def_cfa_offset 48
 2061 0004 00AF     		add	r7, sp, #0
 2062              		.cfi_def_cfa_register 7
 2063 0006 0500     		movs	r5, r0
 2064 0008 0C00     		movs	r4, r1
 2065 000a 1000     		movs	r0, r2
 2066 000c 1900     		movs	r1, r3
 2067 000e FB1D     		adds	r3, r7, #7
 2068 0010 2A1C     		adds	r2, r5, #0
 2069 0012 1A70     		strb	r2, [r3]
 2070 0014 BB1D     		adds	r3, r7, #6
 2071 0016 221C     		adds	r2, r4, #0
 2072 0018 1A70     		strb	r2, [r3]
 2073 001a 7B1D     		adds	r3, r7, #5
 2074 001c 021C     		adds	r2, r0, #0
 2075 001e 1A70     		strb	r2, [r3]
 2076 0020 BB1C     		adds	r3, r7, #2
 2077 0022 0A1C     		adds	r2, r1, #0
 2078 0024 1A80     		strh	r2, [r3]
1541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint8 CapSense_CSD_centroid[3u];
1549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 65


1550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 2079              		.loc 1 1559 0
 2080 0026 BB1D     		adds	r3, r7, #6
 2081 0028 1A78     		ldrb	r2, [r3]
 2082 002a 5B4B     		ldr	r3, .L137
 2083 002c D318     		adds	r3, r2, r3
 2084 002e BB61     		str	r3, [r7, #24]
1560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
 2085              		.loc 1 1562 0
 2086 0030 1F23     		movs	r3, #31
 2087 0032 FB18     		adds	r3, r7, r3
 2088 0034 0022     		movs	r2, #0
 2089 0036 1A70     		strb	r2, [r3]
1563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 66


1596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 2090              		.loc 1 1622 0
 2091 0038 FB1D     		adds	r3, r7, #7
 2092 003a 1B78     		ldrb	r3, [r3]
 2093 003c 002B     		cmp	r3, #0
 2094 003e 05D0     		beq	.L128
1623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 2095              		.loc 1 1624 0
 2096 0040 1F23     		movs	r3, #31
 2097 0042 FB18     		adds	r3, r7, r3
 2098 0044 FA1D     		adds	r2, r7, #7
 2099 0046 1278     		ldrb	r2, [r2]
 2100 0048 013A     		subs	r2, r2, #1
 2101 004a 1A70     		strb	r2, [r3]
 2102              	.L128:
1625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
 2103              		.loc 1 1626 0
 2104 004c 1723     		movs	r3, #23
 2105 004e FB18     		adds	r3, r7, r3
 2106 0050 FA1D     		adds	r2, r7, #7
 2107 0052 1278     		ldrb	r2, [r2]
 2108 0054 0132     		adds	r2, r2, #1
 2109 0056 1A70     		strb	r2, [r3]
1627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 67


1633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 2110              		.loc 1 1633 0
 2111 0058 FB1D     		adds	r3, r7, #7
 2112 005a 1B78     		ldrb	r3, [r3]
 2113 005c BA69     		ldr	r2, [r7, #24]
 2114 005e D318     		adds	r3, r2, r3
 2115 0060 1A78     		ldrb	r2, [r3]
 2116 0062 4E4B     		ldr	r3, .L137+4
 2117 0064 5A70     		strb	r2, [r3, #1]
1634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2118              		.loc 1 1637 0
 2119 0066 FB1D     		adds	r3, r7, #7
 2120 0068 1B78     		ldrb	r3, [r3]
 2121 006a 002B     		cmp	r3, #0
 2122 006c 0BD1     		bne	.L129
1638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2123              		.loc 1 1639 0
 2124 006e 4B4B     		ldr	r3, .L137+4
 2125 0070 0022     		movs	r2, #0
 2126 0072 1A70     		strb	r2, [r3]
1640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2127              		.loc 1 1640 0
 2128 0074 1723     		movs	r3, #23
 2129 0076 FB18     		adds	r3, r7, r3
 2130 0078 1B78     		ldrb	r3, [r3]
 2131 007a BA69     		ldr	r2, [r7, #24]
 2132 007c D318     		adds	r3, r2, r3
 2133 007e 1A78     		ldrb	r2, [r3]
 2134 0080 464B     		ldr	r3, .L137+4
 2135 0082 9A70     		strb	r2, [r3, #2]
 2136 0084 22E0     		b	.L130
 2137              	.L129:
1641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2138              		.loc 1 1642 0
 2139 0086 FB1D     		adds	r3, r7, #7
 2140 0088 1A78     		ldrb	r2, [r3]
 2141 008a 7B1D     		adds	r3, r7, #5
 2142 008c 1B78     		ldrb	r3, [r3]
 2143 008e 013B     		subs	r3, r3, #1
 2144 0090 9A42     		cmp	r2, r3
 2145 0092 0BD1     		bne	.L131
1643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2146              		.loc 1 1644 0
 2147 0094 1F23     		movs	r3, #31
 2148 0096 FB18     		adds	r3, r7, r3
 2149 0098 1B78     		ldrb	r3, [r3]
 2150 009a BA69     		ldr	r2, [r7, #24]
 2151 009c D318     		adds	r3, r2, r3
 2152 009e 1A78     		ldrb	r2, [r3]
 2153 00a0 3E4B     		ldr	r3, .L137+4
 2154 00a2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 68


1645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2155              		.loc 1 1645 0
 2156 00a4 3D4B     		ldr	r3, .L137+4
 2157 00a6 0022     		movs	r2, #0
 2158 00a8 9A70     		strb	r2, [r3, #2]
 2159 00aa 0FE0     		b	.L130
 2160              	.L131:
1646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2161              		.loc 1 1649 0
 2162 00ac 1F23     		movs	r3, #31
 2163 00ae FB18     		adds	r3, r7, r3
 2164 00b0 1B78     		ldrb	r3, [r3]
 2165 00b2 BA69     		ldr	r2, [r7, #24]
 2166 00b4 D318     		adds	r3, r2, r3
 2167 00b6 1A78     		ldrb	r2, [r3]
 2168 00b8 384B     		ldr	r3, .L137+4
 2169 00ba 1A70     		strb	r2, [r3]
1650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2170              		.loc 1 1650 0
 2171 00bc 1723     		movs	r3, #23
 2172 00be FB18     		adds	r3, r7, r3
 2173 00c0 1B78     		ldrb	r3, [r3]
 2174 00c2 BA69     		ldr	r2, [r7, #24]
 2175 00c4 D318     		adds	r3, r2, r3
 2176 00c6 1A78     		ldrb	r2, [r3]
 2177 00c8 344B     		ldr	r3, .L137+4
 2178 00ca 9A70     		strb	r2, [r3, #2]
 2179              	.L130:
1651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 2180              		.loc 1 1659 0
 2181 00cc 334B     		ldr	r3, .L137+4
 2182 00ce 1B78     		ldrb	r3, [r3]
 2183 00d0 3022     		movs	r2, #48
 2184 00d2 BA18     		adds	r2, r7, r2
 2185 00d4 1278     		ldrb	r2, [r2]
 2186 00d6 9A42     		cmp	r2, r3
 2187 00d8 09D2     		bcs	.L132
1660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 2188              		.loc 1 1661 0
 2189 00da 304B     		ldr	r3, .L137+4
 2190 00dc 1A78     		ldrb	r2, [r3]
 2191 00de 3023     		movs	r3, #48
 2192 00e0 FB18     		adds	r3, r7, r3
 2193 00e2 1B78     		ldrb	r3, [r3]
 2194 00e4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 69


 2195 00e6 DAB2     		uxtb	r2, r3
 2196 00e8 2C4B     		ldr	r3, .L137+4
 2197 00ea 1A70     		strb	r2, [r3]
 2198 00ec 02E0     		b	.L133
 2199              	.L132:
1662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2200              		.loc 1 1665 0
 2201 00ee 2B4B     		ldr	r3, .L137+4
 2202 00f0 0022     		movs	r2, #0
 2203 00f2 1A70     		strb	r2, [r3]
 2204              	.L133:
1666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 2205              		.loc 1 1669 0
 2206 00f4 294B     		ldr	r3, .L137+4
 2207 00f6 5A78     		ldrb	r2, [r3, #1]
 2208 00f8 3023     		movs	r3, #48
 2209 00fa FB18     		adds	r3, r7, r3
 2210 00fc 1B78     		ldrb	r3, [r3]
 2211 00fe D31A     		subs	r3, r2, r3
 2212 0100 DAB2     		uxtb	r2, r3
 2213 0102 264B     		ldr	r3, .L137+4
 2214 0104 5A70     		strb	r2, [r3, #1]
1670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 2215              		.loc 1 1672 0
 2216 0106 254B     		ldr	r3, .L137+4
 2217 0108 9B78     		ldrb	r3, [r3, #2]
 2218 010a 3022     		movs	r2, #48
 2219 010c BA18     		adds	r2, r7, r2
 2220 010e 1278     		ldrb	r2, [r2]
 2221 0110 9A42     		cmp	r2, r3
 2222 0112 09D2     		bcs	.L134
1673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 2223              		.loc 1 1674 0
 2224 0114 214B     		ldr	r3, .L137+4
 2225 0116 9A78     		ldrb	r2, [r3, #2]
 2226 0118 3023     		movs	r3, #48
 2227 011a FB18     		adds	r3, r7, r3
 2228 011c 1B78     		ldrb	r3, [r3]
 2229 011e D31A     		subs	r3, r2, r3
 2230 0120 DAB2     		uxtb	r2, r3
 2231 0122 1E4B     		ldr	r3, .L137+4
 2232 0124 9A70     		strb	r2, [r3, #2]
 2233 0126 02E0     		b	.L135
 2234              	.L134:
1675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 70


 2235              		.loc 1 1678 0
 2236 0128 1C4B     		ldr	r3, .L137+4
 2237 012a 0022     		movs	r2, #0
 2238 012c 9A70     		strb	r2, [r3, #2]
 2239              	.L135:
1679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 2240              		.loc 1 1683 0
 2241 012e 1B4B     		ldr	r3, .L137+4
 2242 0130 9B78     		ldrb	r3, [r3, #2]
 2243 0132 1A00     		movs	r2, r3
1684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2244              		.loc 1 1684 0
 2245 0134 194B     		ldr	r3, .L137+4
 2246 0136 1B78     		ldrb	r3, [r3]
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2247              		.loc 1 1683 0
 2248 0138 D31A     		subs	r3, r2, r3
 2249 013a 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
 2250              		.loc 1 1687 0
 2251 013c 174B     		ldr	r3, .L137+4
 2252 013e 1B78     		ldrb	r3, [r3]
 2253 0140 1A00     		movs	r2, r3
1688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2254              		.loc 1 1688 0
 2255 0142 164B     		ldr	r3, .L137+4
 2256 0144 5B78     		ldrb	r3, [r3, #1]
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2257              		.loc 1 1687 0
 2258 0146 D318     		adds	r3, r2, r3
1689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 2259              		.loc 1 1689 0
 2260 0148 144A     		ldr	r2, .L137+4
 2261 014a 9278     		ldrb	r2, [r2, #2]
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2262              		.loc 1 1687 0
 2263 014c 9B18     		adds	r3, r3, r2
 2264 014e FB60     		str	r3, [r7, #12]
1690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2265              		.loc 1 1692 0
 2266 0150 3B69     		ldr	r3, [r7, #16]
 2267 0152 1B02     		lsls	r3, r3, #8
 2268 0154 F968     		ldr	r1, [r7, #12]
 2269 0156 1800     		movs	r0, r3
 2270 0158 FFF7FEFF 		bl	__aeabi_idiv
 2271 015c 0300     		movs	r3, r0
 2272 015e 1A00     		movs	r2, r3
 2273 0160 FB1D     		adds	r3, r7, #7
 2274 0162 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 71


 2275 0164 1B02     		lsls	r3, r3, #8
 2276 0166 D318     		adds	r3, r2, r3
 2277 0168 FB60     		str	r3, [r7, #12]
1693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 2278              		.loc 1 1702 0
 2279 016a BB1C     		adds	r3, r7, #2
 2280 016c 0022     		movs	r2, #0
 2281 016e 9B5E     		ldrsh	r3, [r3, r2]
 2282 0170 1A00     		movs	r2, r3
 2283 0172 FB68     		ldr	r3, [r7, #12]
 2284 0174 5343     		muls	r3, r2
 2285 0176 FB60     		str	r3, [r7, #12]
1703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 2286              		.loc 1 1705 0
 2287 0178 FB68     		ldr	r3, [r7, #12]
 2288 017a FE22     		movs	r2, #254
 2289 017c D201     		lsls	r2, r2, #7
 2290 017e 9446     		mov	ip, r2
 2291 0180 6344     		add	r3, r3, ip
 2292 0182 1A0C     		lsrs	r2, r3, #16
 2293 0184 0B23     		movs	r3, #11
 2294 0186 FB18     		adds	r3, r7, r3
 2295 0188 1A70     		strb	r2, [r3]
1706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2296              		.loc 1 1707 0
 2297 018a 0B23     		movs	r3, #11
 2298 018c FB18     		adds	r3, r7, r3
 2299 018e 1B78     		ldrb	r3, [r3]
1708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2300              		.loc 1 1708 0
 2301 0190 1800     		movs	r0, r3
 2302 0192 BD46     		mov	sp, r7
 2303 0194 08B0     		add	sp, sp, #32
 2304              		@ sp needed
 2305 0196 B0BD     		pop	{r4, r5, r7, pc}
 2306              	.L138:
 2307              		.align	2
 2308              	.L137:
 2309 0198 00000000 		.word	CapSense_CSD_sensorSignal
 2310 019c 24000000 		.word	CapSense_CSD_centroid.5582
 2311              		.cfi_endproc
 2312              	.LFE62:
 2313              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 2314              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 2315              		.align	2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 72


 2316              		.global	CapSense_CSD_GetCentroidPos
 2317              		.code	16
 2318              		.thumb_func
 2319              		.type	CapSense_CSD_GetCentroidPos, %function
 2320              	CapSense_CSD_GetCentroidPos:
 2321              	.LFB63:
1709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2322              		.loc 1 1749 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 16
 2325              		@ frame_needed = 1, uses_anonymous_args = 0
 2326 0000 B0B5     		push	{r4, r5, r7, lr}
 2327              		.cfi_def_cfa_offset 16
 2328              		.cfi_offset 4, -16
 2329              		.cfi_offset 5, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 73


 2332 0002 86B0     		sub	sp, sp, #24
 2333              		.cfi_def_cfa_offset 40
 2334 0004 02AF     		add	r7, sp, #8
 2335              		.cfi_def_cfa 7, 32
 2336 0006 7860     		str	r0, [r7, #4]
1750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
 2337              		.loc 1 1756 0
 2338 0008 0D23     		movs	r3, #13
 2339 000a FB18     		adds	r3, r7, r3
 2340 000c 4F49     		ldr	r1, .L145
 2341 000e 7A68     		ldr	r2, [r7, #4]
 2342 0010 8A18     		adds	r2, r1, r2
 2343 0012 1278     		ldrb	r2, [r2]
 2344 0014 1A70     		strb	r2, [r3]
1757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
 2345              		.loc 1 1757 0
 2346 0016 0C23     		movs	r3, #12
 2347 0018 FB18     		adds	r3, r7, r3
 2348 001a 4D49     		ldr	r1, .L145+4
 2349 001c 7A68     		ldr	r2, [r7, #4]
 2350 001e 8A18     		adds	r2, r1, r2
 2351 0020 1278     		ldrb	r2, [r2]
 2352 0022 1A70     		strb	r2, [r3]
1758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2353              		.loc 1 1769 0
 2354 0024 0B23     		movs	r3, #11
 2355 0026 FB18     		adds	r3, r7, r3
 2356 0028 0022     		movs	r2, #0
 2357 002a 1A70     		strb	r2, [r3]
1770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2358              		.loc 1 1770 0
 2359 002c 0A23     		movs	r3, #10
 2360 002e FB18     		adds	r3, r7, r3
 2361 0030 0522     		movs	r2, #5
 2362 0032 1A70     		strb	r2, [r3]
1771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 74


1776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
 2363              		.loc 1 1788 0
 2364 0034 474A     		ldr	r2, .L145+8
 2365 0036 7B68     		ldr	r3, [r7, #4]
 2366 0038 D318     		adds	r3, r2, r3
 2367 003a 1A78     		ldrb	r2, [r3]
 2368 003c 0923     		movs	r3, #9
 2369 003e FC18     		adds	r4, r7, r3
 2370 0040 0A23     		movs	r3, #10
 2371 0042 FB18     		adds	r3, r7, r3
 2372 0044 1978     		ldrb	r1, [r3]
 2373 0046 0B23     		movs	r3, #11
 2374 0048 FB18     		adds	r3, r7, r3
 2375 004a 1B78     		ldrb	r3, [r3]
 2376 004c 1800     		movs	r0, r3
 2377 004e FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2378 0052 0300     		movs	r3, r0
 2379 0054 2370     		strb	r3, [r4]
1789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 2380              		.loc 1 1791 0
 2381 0056 0923     		movs	r3, #9
 2382 0058 FB18     		adds	r3, r7, r3
 2383 005a 1B78     		ldrb	r3, [r3]
 2384 005c FF2B     		cmp	r3, #255
 2385 005e 5DD0     		beq	.L140
1792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2386              		.loc 1 1794 0
 2387 0060 FE23     		movs	r3, #254
 2388 0062 5D01     		lsls	r5, r3, #5
 2389 0064 3C4A     		ldr	r2, .L145+12
 2390 0066 7B68     		ldr	r3, [r7, #4]
 2391 0068 D318     		adds	r3, r2, r3
 2392 006a 1B78     		ldrb	r3, [r3]
 2393 006c 0A22     		movs	r2, #10
 2394 006e BA18     		adds	r2, r7, r2
 2395 0070 1478     		ldrb	r4, [r2]
 2396 0072 0B22     		movs	r2, #11
 2397 0074 BA18     		adds	r2, r7, r2
 2398 0076 1178     		ldrb	r1, [r2]
 2399 0078 0922     		movs	r2, #9
 2400 007a BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 75


 2401 007c 1078     		ldrb	r0, [r2]
 2402 007e 0093     		str	r3, [sp]
 2403 0080 2B00     		movs	r3, r5
 2404 0082 2200     		movs	r2, r4
 2405 0084 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2406 0088 0300     		movs	r3, r0
 2407 008a 1A00     		movs	r2, r3
 2408 008c 0E23     		movs	r3, #14
 2409 008e FB18     		adds	r3, r7, r3
 2410 0090 1A80     		strh	r2, [r3]
1795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2411              		.loc 1 1799 0
 2412 0092 0C23     		movs	r3, #12
 2413 0094 FB18     		adds	r3, r7, r3
 2414 0096 1B78     		ldrb	r3, [r3]
 2415 0098 1F22     		movs	r2, #31
 2416 009a 1340     		ands	r3, r2
 2417 009c 4FD0     		beq	.L143
1800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2418              		.loc 1 1802 0
 2419 009e 0823     		movs	r3, #8
 2420 00a0 FB18     		adds	r3, r7, r3
 2421 00a2 0D22     		movs	r2, #13
 2422 00a4 BA18     		adds	r2, r7, r2
 2423 00a6 1278     		ldrb	r2, [r2]
 2424 00a8 0132     		adds	r2, r2, #1
 2425 00aa 1A70     		strb	r2, [r3]
1803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
 2426              		.loc 1 1804 0
 2427 00ac 0D23     		movs	r3, #13
 2428 00ae FB18     		adds	r3, r7, r3
 2429 00b0 1B78     		ldrb	r3, [r3]
 2430 00b2 264A     		ldr	r2, .L145
 2431 00b4 D35C     		ldrb	r3, [r2, r3]
 2432 00b6 002B     		cmp	r3, #0
 2433 00b8 0FD1     		bne	.L142
1805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2434              		.loc 1 1807 0
 2435 00ba 0823     		movs	r3, #8
 2436 00bc FB18     		adds	r3, r7, r3
 2437 00be 1B78     		ldrb	r3, [r3]
 2438 00c0 0E22     		movs	r2, #14
 2439 00c2 BA18     		adds	r2, r7, r2
 2440 00c4 1288     		ldrh	r2, [r2]
 2441 00c6 D1B2     		uxtb	r1, r2
 2442 00c8 204A     		ldr	r2, .L145
 2443 00ca D154     		strb	r1, [r2, r3]
1808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 76


1809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
 2444              		.loc 1 1824 0
 2445 00cc 0D23     		movs	r3, #13
 2446 00ce FB18     		adds	r3, r7, r3
 2447 00d0 1B78     		ldrb	r3, [r3]
 2448 00d2 1E4A     		ldr	r2, .L145
 2449 00d4 0121     		movs	r1, #1
 2450 00d6 D154     		strb	r1, [r2, r3]
 2451 00d8 31E0     		b	.L143
 2452              	.L142:
1825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 77


1857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
 2453              		.loc 1 1881 0
 2454 00da 0C23     		movs	r3, #12
 2455 00dc FB18     		adds	r3, r7, r3
 2456 00de 1B78     		ldrb	r3, [r3]
 2457 00e0 1022     		movs	r2, #16
 2458 00e2 1340     		ands	r3, r2
 2459 00e4 2BD0     		beq	.L143
1882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2460              		.loc 1 1884 0
 2461 00e6 0823     		movs	r3, #8
 2462 00e8 FB18     		adds	r3, r7, r3
 2463 00ea 1B78     		ldrb	r3, [r3]
 2464 00ec 174A     		ldr	r2, .L145
 2465 00ee D35C     		ldrb	r3, [r2, r3]
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2466              		.loc 1 1883 0
 2467 00f0 9AB2     		uxth	r2, r3
 2468 00f2 0E23     		movs	r3, #14
 2469 00f4 FC18     		adds	r4, r7, r3
 2470 00f6 0E23     		movs	r3, #14
 2471 00f8 FB18     		adds	r3, r7, r3
 2472 00fa 1B88     		ldrh	r3, [r3]
 2473 00fc 1100     		movs	r1, r2
 2474 00fe 1800     		movs	r0, r3
 2475 0100 FFF7FEFF 		bl	CapSense_CSD_JitterFilter
 2476 0104 0300     		movs	r3, r0
 2477 0106 2380     		strh	r3, [r4]
1885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2478              		.loc 1 1885 0
 2479 0108 0823     		movs	r3, #8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 78


 2480 010a FB18     		adds	r3, r7, r3
 2481 010c 1B78     		ldrb	r3, [r3]
 2482 010e 0E22     		movs	r2, #14
 2483 0110 BA18     		adds	r2, r7, r2
 2484 0112 1288     		ldrh	r2, [r2]
 2485 0114 D1B2     		uxtb	r1, r2
 2486 0116 0D4A     		ldr	r2, .L145
 2487 0118 D154     		strb	r1, [r2, r3]
 2488 011a 10E0     		b	.L143
 2489              	.L140:
1886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2490              		.loc 1 1898 0
 2491 011c 0E23     		movs	r3, #14
 2492 011e FB18     		adds	r3, r7, r3
 2493 0120 0122     		movs	r2, #1
 2494 0122 5242     		rsbs	r2, r2, #0
 2495 0124 1A80     		strh	r2, [r3]
1899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2496              		.loc 1 1902 0
 2497 0126 0C23     		movs	r3, #12
 2498 0128 FB18     		adds	r3, r7, r3
 2499 012a 1B78     		ldrb	r3, [r3]
 2500 012c 1F22     		movs	r2, #31
 2501 012e 1340     		ands	r3, r2
 2502 0130 05D0     		beq	.L143
1903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
 2503              		.loc 1 1904 0
 2504 0132 0D23     		movs	r3, #13
 2505 0134 FB18     		adds	r3, r7, r3
 2506 0136 1B78     		ldrb	r3, [r3]
 2507 0138 044A     		ldr	r2, .L145
 2508 013a 0021     		movs	r1, #0
 2509 013c D154     		strb	r1, [r2, r3]
 2510              	.L143:
1905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2511              		.loc 1 1910 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 79


 2512 013e 0E23     		movs	r3, #14
 2513 0140 FB18     		adds	r3, r7, r3
 2514 0142 1B88     		ldrh	r3, [r3]
1911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2515              		.loc 1 1911 0
 2516 0144 1800     		movs	r0, r3
 2517 0146 BD46     		mov	sp, r7
 2518 0148 04B0     		add	sp, sp, #16
 2519              		@ sp needed
 2520 014a B0BD     		pop	{r4, r5, r7, pc}
 2521              	.L146:
 2522              		.align	2
 2523              	.L145:
 2524 014c 10000000 		.word	CapSense_CSD_posFiltersData
 2525 0150 0C000000 		.word	CapSense_CSD_posFiltersMask
 2526 0154 00000000 		.word	CapSense_CSD_fingerThreshold
 2527 0158 00000000 		.word	CapSense_CSD_noiseThreshold
 2528              		.cfi_endproc
 2529              	.LFE63:
 2530              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 2531              		.section	.text.CapSense_CSD_GetRadialCentroidPos,"ax",%progbits
 2532              		.align	2
 2533              		.global	CapSense_CSD_GetRadialCentroidPos
 2534              		.code	16
 2535              		.thumb_func
 2536              		.type	CapSense_CSD_GetRadialCentroidPos, %function
 2537              	CapSense_CSD_GetRadialCentroidPos:
 2538              	.LFB64:
1912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 80


1941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2539              		.loc 1 1952 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 16
 2542              		@ frame_needed = 1, uses_anonymous_args = 0
 2543 0000 B0B5     		push	{r4, r5, r7, lr}
 2544              		.cfi_def_cfa_offset 16
 2545              		.cfi_offset 4, -16
 2546              		.cfi_offset 5, -12
 2547              		.cfi_offset 7, -8
 2548              		.cfi_offset 14, -4
 2549 0002 86B0     		sub	sp, sp, #24
 2550              		.cfi_def_cfa_offset 40
 2551 0004 02AF     		add	r7, sp, #8
 2552              		.cfi_def_cfa 7, 32
 2553 0006 7860     		str	r0, [r7, #4]
1953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2554              		.loc 1 1968 0
 2555 0008 0D23     		movs	r3, #13
 2556 000a FB18     		adds	r3, r7, r3
 2557 000c 0022     		movs	r2, #0
 2558 000e 1A70     		strb	r2, [r3]
1969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2559              		.loc 1 1969 0
 2560 0010 0C23     		movs	r3, #12
 2561 0012 FB18     		adds	r3, r7, r3
 2562 0014 0522     		movs	r2, #5
 2563 0016 1A70     		strb	r2, [r3]
1970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 81


1973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
 2564              		.loc 1 1975 0
 2565 0018 1D4A     		ldr	r2, .L151
 2566 001a 7B68     		ldr	r3, [r7, #4]
 2567 001c D318     		adds	r3, r2, r3
 2568 001e 1A78     		ldrb	r2, [r3]
 2569 0020 0B23     		movs	r3, #11
 2570 0022 FC18     		adds	r4, r7, r3
 2571 0024 0C23     		movs	r3, #12
 2572 0026 FB18     		adds	r3, r7, r3
 2573 0028 1978     		ldrb	r1, [r3]
 2574 002a 0D23     		movs	r3, #13
 2575 002c FB18     		adds	r3, r7, r3
 2576 002e 1B78     		ldrb	r3, [r3]
 2577 0030 1800     		movs	r0, r3
 2578 0032 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2579 0036 0300     		movs	r3, r0
 2580 0038 2370     		strb	r3, [r4]
1976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
 2581              		.loc 1 1978 0
 2582 003a 0B23     		movs	r3, #11
 2583 003c FB18     		adds	r3, r7, r3
 2584 003e 1B78     		ldrb	r3, [r3]
 2585 0040 FF2B     		cmp	r3, #255
 2586 0042 19D0     		beq	.L148
1979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2587              		.loc 1 1981 0
 2588 0044 FE23     		movs	r3, #254
 2589 0046 5D01     		lsls	r5, r3, #5
 2590 0048 124A     		ldr	r2, .L151+4
 2591 004a 7B68     		ldr	r3, [r7, #4]
 2592 004c D318     		adds	r3, r2, r3
 2593 004e 1B78     		ldrb	r3, [r3]
 2594 0050 0C22     		movs	r2, #12
 2595 0052 BA18     		adds	r2, r7, r2
 2596 0054 1478     		ldrb	r4, [r2]
 2597 0056 0D22     		movs	r2, #13
 2598 0058 BA18     		adds	r2, r7, r2
 2599 005a 1178     		ldrb	r1, [r2]
 2600 005c 0B22     		movs	r2, #11
 2601 005e BA18     		adds	r2, r7, r2
 2602 0060 1078     		ldrb	r0, [r2]
 2603 0062 0093     		str	r3, [sp]
 2604 0064 2B00     		movs	r3, r5
 2605 0066 2200     		movs	r2, r4
 2606 0068 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2607 006c 0300     		movs	r3, r0
 2608 006e 1A00     		movs	r2, r3
 2609 0070 0E23     		movs	r3, #14
 2610 0072 FB18     		adds	r3, r7, r3
 2611 0074 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 82


 2612 0076 04E0     		b	.L149
 2613              	.L148:
1982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 83


2037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2614              		.loc 1 2086 0
 2615 0078 0E23     		movs	r3, #14
 2616 007a FB18     		adds	r3, r7, r3
 2617 007c 0122     		movs	r2, #1
 2618 007e 5242     		rsbs	r2, r2, #0
 2619 0080 1A80     		strh	r2, [r3]
 2620              	.L149:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 84


2087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2621              		.loc 1 2097 0
 2622 0082 0E23     		movs	r3, #14
 2623 0084 FB18     		adds	r3, r7, r3
 2624 0086 1B88     		ldrh	r3, [r3]
2098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2625              		.loc 1 2098 0
 2626 0088 1800     		movs	r0, r3
 2627 008a BD46     		mov	sp, r7
 2628 008c 04B0     		add	sp, sp, #16
 2629              		@ sp needed
 2630 008e B0BD     		pop	{r4, r5, r7, pc}
 2631              	.L152:
 2632              		.align	2
 2633              	.L151:
 2634 0090 00000000 		.word	CapSense_CSD_fingerThreshold
 2635 0094 00000000 		.word	CapSense_CSD_noiseThreshold
 2636              		.cfi_endproc
 2637              	.LFE64:
 2638              		.size	CapSense_CSD_GetRadialCentroidPos, .-CapSense_CSD_GetRadialCentroidPos
 2639              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2640              		.align	2
 2641              		.global	CapSense_CSD_MedianFilter
 2642              		.code	16
 2643              		.thumb_func
 2644              		.type	CapSense_CSD_MedianFilter, %function
 2645              	CapSense_CSD_MedianFilter:
 2646              	.LFB65:
2099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 85


2118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 86


2175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 87


2232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 88


2289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 89


2346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2647              		.loc 1 2381 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 16
 2650              		@ frame_needed = 1, uses_anonymous_args = 0
 2651 0000 90B5     		push	{r4, r7, lr}
 2652              		.cfi_def_cfa_offset 12
 2653              		.cfi_offset 4, -12
 2654              		.cfi_offset 7, -8
 2655              		.cfi_offset 14, -4
 2656 0002 85B0     		sub	sp, sp, #20
 2657              		.cfi_def_cfa_offset 32
 2658 0004 00AF     		add	r7, sp, #0
 2659              		.cfi_def_cfa_register 7
 2660 0006 0400     		movs	r4, r0
 2661 0008 0800     		movs	r0, r1
 2662 000a 1100     		movs	r1, r2
 2663 000c BB1D     		adds	r3, r7, #6
 2664 000e 221C     		adds	r2, r4, #0
 2665 0010 1A80     		strh	r2, [r3]
 2666 0012 3B1D     		adds	r3, r7, #4
 2667 0014 021C     		adds	r2, r0, #0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 90


 2668 0016 1A80     		strh	r2, [r3]
 2669 0018 BB1C     		adds	r3, r7, #2
 2670 001a 0A1C     		adds	r2, r1, #0
 2671 001c 1A80     		strh	r2, [r3]
2382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2672              		.loc 1 2384 0
 2673 001e BA1D     		adds	r2, r7, #6
 2674 0020 3B1D     		adds	r3, r7, #4
 2675 0022 1288     		ldrh	r2, [r2]
 2676 0024 1B88     		ldrh	r3, [r3]
 2677 0026 9A42     		cmp	r2, r3
 2678 0028 0DD9     		bls	.L154
2385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2679              		.loc 1 2386 0
 2680 002a 0E23     		movs	r3, #14
 2681 002c FB18     		adds	r3, r7, r3
 2682 002e 3A1D     		adds	r2, r7, #4
 2683 0030 1288     		ldrh	r2, [r2]
 2684 0032 1A80     		strh	r2, [r3]
2387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2685              		.loc 1 2387 0
 2686 0034 3B1D     		adds	r3, r7, #4
 2687 0036 BA1D     		adds	r2, r7, #6
 2688 0038 1288     		ldrh	r2, [r2]
 2689 003a 1A80     		strh	r2, [r3]
2388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2690              		.loc 1 2388 0
 2691 003c BB1D     		adds	r3, r7, #6
 2692 003e 0E22     		movs	r2, #14
 2693 0040 BA18     		adds	r2, r7, r2
 2694 0042 1288     		ldrh	r2, [r2]
 2695 0044 1A80     		strh	r2, [r3]
 2696              	.L154:
2389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2697              		.loc 1 2391 0
 2698 0046 3A1D     		adds	r2, r7, #4
 2699 0048 BB1C     		adds	r3, r7, #2
 2700 004a 1288     		ldrh	r2, [r2]
 2701 004c 1B88     		ldrh	r3, [r3]
 2702 004e 9A42     		cmp	r2, r3
 2703 0050 03D9     		bls	.L155
2392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2704              		.loc 1 2393 0
 2705 0052 3B1D     		adds	r3, r7, #4
 2706 0054 BA1C     		adds	r2, r7, #2
 2707 0056 1288     		ldrh	r2, [r2]
 2708 0058 1A80     		strh	r2, [r3]
 2709              	.L155:
2394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 91


 2710              		.loc 1 2396 0
 2711 005a 3B1D     		adds	r3, r7, #4
 2712 005c BA1D     		adds	r2, r7, #6
 2713 005e 1088     		ldrh	r0, [r2]
 2714 0060 1B88     		ldrh	r3, [r3]
 2715 0062 99B2     		uxth	r1, r3
 2716 0064 82B2     		uxth	r2, r0
 2717 0066 9142     		cmp	r1, r2
 2718 0068 00D2     		bcs	.L156
 2719 006a 031C     		adds	r3, r0, #0
 2720              	.L156:
 2721 006c 9BB2     		uxth	r3, r3
2397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2722              		.loc 1 2397 0
 2723 006e 1800     		movs	r0, r3
 2724 0070 BD46     		mov	sp, r7
 2725 0072 05B0     		add	sp, sp, #20
 2726              		@ sp needed
 2727 0074 90BD     		pop	{r4, r7, pc}
 2728              		.cfi_endproc
 2729              	.LFE65:
 2730              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2731 0076 C046     		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 2732              		.align	2
 2733              		.global	CapSense_CSD_IIR4Filter
 2734              		.code	16
 2735              		.thumb_func
 2736              		.type	CapSense_CSD_IIR4Filter, %function
 2737              	CapSense_CSD_IIR4Filter:
 2738              	.LFB66:
2398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 92


2425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 93


2482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2739              		.loc 1 2501 0
 2740              		.cfi_startproc
 2741              		@ args = 0, pretend = 0, frame = 16
 2742              		@ frame_needed = 1, uses_anonymous_args = 0
 2743 0000 80B5     		push	{r7, lr}
 2744              		.cfi_def_cfa_offset 8
 2745              		.cfi_offset 7, -8
 2746              		.cfi_offset 14, -4
 2747 0002 84B0     		sub	sp, sp, #16
 2748              		.cfi_def_cfa_offset 24
 2749 0004 00AF     		add	r7, sp, #0
 2750              		.cfi_def_cfa_register 7
 2751 0006 0200     		movs	r2, r0
 2752 0008 BB1D     		adds	r3, r7, #6
 2753 000a 1A80     		strh	r2, [r3]
 2754 000c 3B1D     		adds	r3, r7, #4
 2755 000e 0A1C     		adds	r2, r1, #0
 2756 0010 1A80     		strh	r2, [r3]
2502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2757              		.loc 1 2505 0
 2758 0012 BB1D     		adds	r3, r7, #6
 2759 0014 1A88     		ldrh	r2, [r3]
 2760 0016 3B1D     		adds	r3, r7, #4
 2761 0018 1B88     		ldrh	r3, [r3]
 2762 001a D318     		adds	r3, r2, r3
 2763 001c FB60     		str	r3, [r7, #12]
2506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2764              		.loc 1 2506 0
 2765 001e 3B1D     		adds	r3, r7, #4
 2766 0020 1B88     		ldrh	r3, [r3]
 2767 0022 5B00     		lsls	r3, r3, #1
 2768 0024 FA68     		ldr	r2, [r7, #12]
 2769 0026 D318     		adds	r3, r2, r3
 2770 0028 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 94


2507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 2771              		.loc 1 2507 0
 2772 002a FB68     		ldr	r3, [r7, #12]
 2773 002c 9B08     		lsrs	r3, r3, #2
 2774 002e FB60     		str	r3, [r7, #12]
2508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 2775              		.loc 1 2509 0
 2776 0030 FB68     		ldr	r3, [r7, #12]
 2777 0032 9BB2     		uxth	r3, r3
2510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2778              		.loc 1 2510 0
 2779 0034 1800     		movs	r0, r3
 2780 0036 BD46     		mov	sp, r7
 2781 0038 04B0     		add	sp, sp, #16
 2782              		@ sp needed
 2783 003a 80BD     		pop	{r7, pc}
 2784              		.cfi_endproc
 2785              	.LFE66:
 2786              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 2787              		.section	.text.CapSense_CSD_JitterFilter,"ax",%progbits
 2788              		.align	2
 2789              		.global	CapSense_CSD_JitterFilter
 2790              		.code	16
 2791              		.thumb_func
 2792              		.type	CapSense_CSD_JitterFilter, %function
 2793              	CapSense_CSD_JitterFilter:
 2794              	.LFB67:
2511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 95


2540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2795              		.loc 1 2541 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 8
 2798              		@ frame_needed = 1, uses_anonymous_args = 0
 2799 0000 80B5     		push	{r7, lr}
 2800              		.cfi_def_cfa_offset 8
 2801              		.cfi_offset 7, -8
 2802              		.cfi_offset 14, -4
 2803 0002 82B0     		sub	sp, sp, #8
 2804              		.cfi_def_cfa_offset 16
 2805 0004 00AF     		add	r7, sp, #0
 2806              		.cfi_def_cfa_register 7
 2807 0006 0200     		movs	r2, r0
 2808 0008 BB1D     		adds	r3, r7, #6
 2809 000a 1A80     		strh	r2, [r3]
 2810 000c 3B1D     		adds	r3, r7, #4
 2811 000e 0A1C     		adds	r2, r1, #0
 2812 0010 1A80     		strh	r2, [r3]
2542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2813              		.loc 1 2542 0
 2814 0012 BA1D     		adds	r2, r7, #6
 2815 0014 3B1D     		adds	r3, r7, #4
 2816 0016 1288     		ldrh	r2, [r2]
 2817 0018 1B88     		ldrh	r3, [r3]
 2818 001a 9A42     		cmp	r2, r3
 2819 001c 05D9     		bls	.L161
2543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
 2820              		.loc 1 2544 0
 2821 001e BB1D     		adds	r3, r7, #6
 2822 0020 1A88     		ldrh	r2, [r3]
 2823 0022 BB1D     		adds	r3, r7, #6
 2824 0024 013A     		subs	r2, r2, #1
 2825 0026 1A80     		strh	r2, [r3]
 2826 0028 0AE0     		b	.L162
 2827              	.L161:
2545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
 2828              		.loc 1 2548 0
 2829 002a BA1D     		adds	r2, r7, #6
 2830 002c 3B1D     		adds	r3, r7, #4
 2831 002e 1288     		ldrh	r2, [r2]
 2832 0030 1B88     		ldrh	r3, [r3]
 2833 0032 9A42     		cmp	r2, r3
 2834 0034 04D2     		bcs	.L162
2549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
 2835              		.loc 1 2550 0
 2836 0036 BB1D     		adds	r3, r7, #6
 2837 0038 1A88     		ldrh	r2, [r3]
 2838 003a BB1D     		adds	r3, r7, #6
 2839 003c 0132     		adds	r2, r2, #1
 2840 003e 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 96


 2841              	.L162:
2551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
 2842              		.loc 1 2554 0
 2843 0040 BB1D     		adds	r3, r7, #6
 2844 0042 1B88     		ldrh	r3, [r3]
2555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2845              		.loc 1 2555 0
 2846 0044 1800     		movs	r0, r3
 2847 0046 BD46     		mov	sp, r7
 2848 0048 02B0     		add	sp, sp, #8
 2849              		@ sp needed
 2850 004a 80BD     		pop	{r7, pc}
 2851              		.cfi_endproc
 2852              	.LFE67:
 2853              		.size	CapSense_CSD_JitterFilter, .-CapSense_CSD_JitterFilter
 2854              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2855              		.align	2
 2856              		.global	CapSense_CSD_GetWidgetNumber
 2857              		.code	16
 2858              		.thumb_func
 2859              		.type	CapSense_CSD_GetWidgetNumber, %function
 2860              	CapSense_CSD_GetWidgetNumber:
 2861              	.LFB68:
2556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 97


2587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 98


2644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 99


2701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2862              		.loc 1 2734 0
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 8
 2865              		@ frame_needed = 1, uses_anonymous_args = 0
 2866 0000 80B5     		push	{r7, lr}
 2867              		.cfi_def_cfa_offset 8
 2868              		.cfi_offset 7, -8
 2869              		.cfi_offset 14, -4
 2870 0002 82B0     		sub	sp, sp, #8
 2871              		.cfi_def_cfa_offset 16
 2872 0004 00AF     		add	r7, sp, #0
 2873              		.cfi_def_cfa_register 7
 2874 0006 7860     		str	r0, [r7, #4]
2735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2875              		.loc 1 2735 0
 2876 0008 034A     		ldr	r2, .L166
 2877 000a 7B68     		ldr	r3, [r7, #4]
 2878 000c D318     		adds	r3, r2, r3
 2879 000e 1B78     		ldrb	r3, [r3]
2736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2880              		.loc 1 2736 0
 2881 0010 1800     		movs	r0, r3
 2882 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 100


 2883 0014 02B0     		add	sp, sp, #8
 2884              		@ sp needed
 2885 0016 80BD     		pop	{r7, pc}
 2886              	.L167:
 2887              		.align	2
 2888              	.L166:
 2889 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2890              		.cfi_endproc
 2891              	.LFE68:
 2892              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2893              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2894              		.align	2
 2895              		.global	CapSense_CSD_GetLowBaselineReset
 2896              		.code	16
 2897              		.thumb_func
 2898              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2899              	CapSense_CSD_GetLowBaselineReset:
 2900              	.LFB69:
2737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2901              		.loc 1 2760 0
 2902              		.cfi_startproc
 2903              		@ args = 0, pretend = 0, frame = 8
 2904              		@ frame_needed = 1, uses_anonymous_args = 0
 2905 0000 80B5     		push	{r7, lr}
 2906              		.cfi_def_cfa_offset 8
 2907              		.cfi_offset 7, -8
 2908              		.cfi_offset 14, -4
 2909 0002 82B0     		sub	sp, sp, #8
 2910              		.cfi_def_cfa_offset 16
 2911 0004 00AF     		add	r7, sp, #0
 2912              		.cfi_def_cfa_register 7
 2913 0006 7860     		str	r0, [r7, #4]
2761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2914              		.loc 1 2761 0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 101


 2915 0008 034A     		ldr	r2, .L170
 2916 000a 7B68     		ldr	r3, [r7, #4]
 2917 000c D318     		adds	r3, r2, r3
 2918 000e 1B78     		ldrb	r3, [r3]
2762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2919              		.loc 1 2762 0
 2920 0010 1800     		movs	r0, r3
 2921 0012 BD46     		mov	sp, r7
 2922 0014 02B0     		add	sp, sp, #8
 2923              		@ sp needed
 2924 0016 80BD     		pop	{r7, pc}
 2925              	.L171:
 2926              		.align	2
 2927              	.L170:
 2928 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2929              		.cfi_endproc
 2930              	.LFE69:
 2931              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2932              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2933              		.align	2
 2934              		.global	CapSense_CSD_GetDebounce
 2935              		.code	16
 2936              		.thumb_func
 2937              		.type	CapSense_CSD_GetDebounce, %function
 2938              	CapSense_CSD_GetDebounce:
 2939              	.LFB70:
2763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2940              		.loc 1 2786 0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 8
 2943              		@ frame_needed = 1, uses_anonymous_args = 0
 2944 0000 80B5     		push	{r7, lr}
 2945              		.cfi_def_cfa_offset 8
 2946              		.cfi_offset 7, -8
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 102


 2947              		.cfi_offset 14, -4
 2948 0002 82B0     		sub	sp, sp, #8
 2949              		.cfi_def_cfa_offset 16
 2950 0004 00AF     		add	r7, sp, #0
 2951              		.cfi_def_cfa_register 7
 2952 0006 7860     		str	r0, [r7, #4]
2787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2953              		.loc 1 2787 0
 2954 0008 034A     		ldr	r2, .L174
 2955 000a 7B68     		ldr	r3, [r7, #4]
 2956 000c D318     		adds	r3, r2, r3
 2957 000e 1B78     		ldrb	r3, [r3]
2788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2958              		.loc 1 2788 0
 2959 0010 1800     		movs	r0, r3
 2960 0012 BD46     		mov	sp, r7
 2961 0014 02B0     		add	sp, sp, #8
 2962              		@ sp needed
 2963 0016 80BD     		pop	{r7, pc}
 2964              	.L175:
 2965              		.align	2
 2966              	.L174:
 2967 0018 00000000 		.word	CapSense_CSD_debounce
 2968              		.cfi_endproc
 2969              	.LFE70:
 2970              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2971              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2972              		.align	2
 2973              		.global	CapSense_CSD_EnableRawDataFilters
 2974              		.code	16
 2975              		.thumb_func
 2976              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2977              	CapSense_CSD_EnableRawDataFilters:
 2978              	.LFB71:
2789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 103


2812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2979              		.loc 1 2812 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 0
 2982              		@ frame_needed = 1, uses_anonymous_args = 0
 2983 0000 80B5     		push	{r7, lr}
 2984              		.cfi_def_cfa_offset 8
 2985              		.cfi_offset 7, -8
 2986              		.cfi_offset 14, -4
 2987 0002 00AF     		add	r7, sp, #0
 2988              		.cfi_def_cfa_register 7
2813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2989              		.loc 1 2813 0
 2990 0004 024B     		ldr	r3, .L177
 2991 0006 0122     		movs	r2, #1
 2992 0008 1A70     		strb	r2, [r3]
2814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2993              		.loc 1 2814 0
 2994 000a C046     		nop
 2995 000c BD46     		mov	sp, r7
 2996              		@ sp needed
 2997 000e 80BD     		pop	{r7, pc}
 2998              	.L178:
 2999              		.align	2
 3000              	.L177:
 3001 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 3002              		.cfi_endproc
 3003              	.LFE71:
 3004              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 3005              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 3006              		.align	2
 3007              		.global	CapSense_CSD_DisableRawDataFilters
 3008              		.code	16
 3009              		.thumb_func
 3010              		.type	CapSense_CSD_DisableRawDataFilters, %function
 3011              	CapSense_CSD_DisableRawDataFilters:
 3012              	.LFB72:
2815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 104


2835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 3013              		.loc 1 2837 0
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 0
 3016              		@ frame_needed = 1, uses_anonymous_args = 0
 3017 0000 80B5     		push	{r7, lr}
 3018              		.cfi_def_cfa_offset 8
 3019              		.cfi_offset 7, -8
 3020              		.cfi_offset 14, -4
 3021 0002 00AF     		add	r7, sp, #0
 3022              		.cfi_def_cfa_register 7
2838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 3023              		.loc 1 2838 0
 3024 0004 024B     		ldr	r3, .L180
 3025 0006 0022     		movs	r2, #0
 3026 0008 1A70     		strb	r2, [r3]
2839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 3027              		.loc 1 2839 0
 3028 000a C046     		nop
 3029 000c BD46     		mov	sp, r7
 3030              		@ sp needed
 3031 000e 80BD     		pop	{r7, pc}
 3032              	.L181:
 3033              		.align	2
 3034              	.L180:
 3035 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 3036              		.cfi_endproc
 3037              	.LFE72:
 3038              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 3039              		.bss
 3040 001d 000000   		.align	2
 3041              	CapSense_CSD_debounceCounter.5530:
 3042 0020 00       		.space	1
 3043 0021 000000   		.align	2
 3044              	CapSense_CSD_centroid.5582:
 3045 0024 000000   		.space	3
 3046              		.text
 3047              	.Letext0:
 3048              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3049              		.file 3 "Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 3050              		.section	.debug_info,"",%progbits
 3051              	.Ldebug_info0:
 3052 0000 9C0E0000 		.4byte	0xe9c
 3053 0004 0400     		.2byte	0x4
 3054 0006 00000000 		.4byte	.Ldebug_abbrev0
 3055 000a 04       		.byte	0x4
 3056 000b 01       		.uleb128 0x1
 3057 000c F6000000 		.4byte	.LASF147
 3058 0010 0C       		.byte	0xc
 3059 0011 81020000 		.4byte	.LASF148
 3060 0015 6E090000 		.4byte	.LASF149
 3061 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3062 001d 00000000 		.4byte	0
 3063 0021 00000000 		.4byte	.Ldebug_line0
 3064 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 105


 3065 0026 01       		.byte	0x1
 3066 0027 06       		.byte	0x6
 3067 0028 A40B0000 		.4byte	.LASF0
 3068 002c 02       		.uleb128 0x2
 3069 002d 01       		.byte	0x1
 3070 002e 08       		.byte	0x8
 3071 002f EB0A0000 		.4byte	.LASF1
 3072 0033 02       		.uleb128 0x2
 3073 0034 02       		.byte	0x2
 3074 0035 05       		.byte	0x5
 3075 0036 89080000 		.4byte	.LASF2
 3076 003a 02       		.uleb128 0x2
 3077 003b 02       		.byte	0x2
 3078 003c 07       		.byte	0x7
 3079 003d B00B0000 		.4byte	.LASF3
 3080 0041 02       		.uleb128 0x2
 3081 0042 04       		.byte	0x4
 3082 0043 05       		.byte	0x5
 3083 0044 93080000 		.4byte	.LASF4
 3084 0048 02       		.uleb128 0x2
 3085 0049 04       		.byte	0x4
 3086 004a 07       		.byte	0x7
 3087 004b E2090000 		.4byte	.LASF5
 3088 004f 02       		.uleb128 0x2
 3089 0050 08       		.byte	0x8
 3090 0051 05       		.byte	0x5
 3091 0052 17060000 		.4byte	.LASF6
 3092 0056 02       		.uleb128 0x2
 3093 0057 08       		.byte	0x8
 3094 0058 07       		.byte	0x7
 3095 0059 4E030000 		.4byte	.LASF7
 3096 005d 03       		.uleb128 0x3
 3097 005e 04       		.byte	0x4
 3098 005f 05       		.byte	0x5
 3099 0060 696E7400 		.ascii	"int\000"
 3100 0064 02       		.uleb128 0x2
 3101 0065 04       		.byte	0x4
 3102 0066 07       		.byte	0x7
 3103 0067 86000000 		.4byte	.LASF8
 3104 006b 04       		.uleb128 0x4
 3105 006c 1A0C0000 		.4byte	.LASF9
 3106 0070 02       		.byte	0x2
 3107 0071 E401     		.2byte	0x1e4
 3108 0073 2C000000 		.4byte	0x2c
 3109 0077 04       		.uleb128 0x4
 3110 0078 83050000 		.4byte	.LASF10
 3111 007c 02       		.byte	0x2
 3112 007d E501     		.2byte	0x1e5
 3113 007f 3A000000 		.4byte	0x3a
 3114 0083 04       		.uleb128 0x4
 3115 0084 04070000 		.4byte	.LASF11
 3116 0088 02       		.byte	0x2
 3117 0089 E601     		.2byte	0x1e6
 3118 008b 48000000 		.4byte	0x48
 3119 008f 04       		.uleb128 0x4
 3120 0090 F0000000 		.4byte	.LASF12
 3121 0094 02       		.byte	0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 106


 3122 0095 E801     		.2byte	0x1e8
 3123 0097 33000000 		.4byte	0x33
 3124 009b 04       		.uleb128 0x4
 3125 009c EE020000 		.4byte	.LASF13
 3126 00a0 02       		.byte	0x2
 3127 00a1 E901     		.2byte	0x1e9
 3128 00a3 41000000 		.4byte	0x41
 3129 00a7 02       		.uleb128 0x2
 3130 00a8 04       		.byte	0x4
 3131 00a9 04       		.byte	0x4
 3132 00aa E8020000 		.4byte	.LASF14
 3133 00ae 02       		.uleb128 0x2
 3134 00af 08       		.byte	0x8
 3135 00b0 04       		.byte	0x4
 3136 00b1 200C0000 		.4byte	.LASF15
 3137 00b5 02       		.uleb128 0x2
 3138 00b6 01       		.byte	0x1
 3139 00b7 08       		.byte	0x8
 3140 00b8 54050000 		.4byte	.LASF16
 3141 00bc 02       		.uleb128 0x2
 3142 00bd 04       		.byte	0x4
 3143 00be 07       		.byte	0x7
 3144 00bf D9090000 		.4byte	.LASF17
 3145 00c3 02       		.uleb128 0x2
 3146 00c4 08       		.byte	0x8
 3147 00c5 04       		.byte	0x4
 3148 00c6 23080000 		.4byte	.LASF18
 3149 00ca 05       		.uleb128 0x5
 3150 00cb 5C       		.byte	0x5c
 3151 00cc 03       		.byte	0x3
 3152 00cd 2F       		.byte	0x2f
 3153 00ce E7010000 		.4byte	0x1e7
 3154 00d2 06       		.uleb128 0x6
 3155 00d3 8F050000 		.4byte	.LASF19
 3156 00d7 03       		.byte	0x3
 3157 00d8 31       		.byte	0x31
 3158 00d9 E7010000 		.4byte	0x1e7
 3159 00dd 00       		.byte	0
 3160 00de 06       		.uleb128 0x6
 3161 00df 7A080000 		.4byte	.LASF20
 3162 00e3 03       		.byte	0x3
 3163 00e4 32       		.byte	0x32
 3164 00e5 E7010000 		.4byte	0x1e7
 3165 00e9 04       		.byte	0x4
 3166 00ea 06       		.uleb128 0x6
 3167 00eb 630B0000 		.4byte	.LASF21
 3168 00ef 03       		.byte	0x3
 3169 00f0 33       		.byte	0x33
 3170 00f1 E7010000 		.4byte	0x1e7
 3171 00f5 08       		.byte	0x8
 3172 00f6 06       		.uleb128 0x6
 3173 00f7 C40A0000 		.4byte	.LASF22
 3174 00fb 03       		.byte	0x3
 3175 00fc 34       		.byte	0x34
 3176 00fd E7010000 		.4byte	0x1e7
 3177 0101 0C       		.byte	0xc
 3178 0102 06       		.uleb128 0x6
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 107


 3179 0103 9A0B0000 		.4byte	.LASF23
 3180 0107 03       		.byte	0x3
 3181 0108 35       		.byte	0x35
 3182 0109 E7010000 		.4byte	0x1e7
 3183 010d 10       		.byte	0x10
 3184 010e 06       		.uleb128 0x6
 3185 010f 02090000 		.4byte	.LASF24
 3186 0113 03       		.byte	0x3
 3187 0114 36       		.byte	0x36
 3188 0115 ED010000 		.4byte	0x1ed
 3189 0119 14       		.byte	0x14
 3190 011a 06       		.uleb128 0x6
 3191 011b FA020000 		.4byte	.LASF25
 3192 011f 03       		.byte	0x3
 3193 0120 37       		.byte	0x37
 3194 0121 F8010000 		.4byte	0x1f8
 3195 0125 18       		.byte	0x18
 3196 0126 06       		.uleb128 0x6
 3197 0127 43040000 		.4byte	.LASF26
 3198 012b 03       		.byte	0x3
 3199 012c 38       		.byte	0x38
 3200 012d E7010000 		.4byte	0x1e7
 3201 0131 1C       		.byte	0x1c
 3202 0132 06       		.uleb128 0x6
 3203 0133 18030000 		.4byte	.LASF27
 3204 0137 03       		.byte	0x3
 3205 0138 39       		.byte	0x39
 3206 0139 E7010000 		.4byte	0x1e7
 3207 013d 20       		.byte	0x20
 3208 013e 06       		.uleb128 0x6
 3209 013f 91010000 		.4byte	.LASF28
 3210 0143 03       		.byte	0x3
 3211 0144 3A       		.byte	0x3a
 3212 0145 E7010000 		.4byte	0x1e7
 3213 0149 24       		.byte	0x24
 3214 014a 06       		.uleb128 0x6
 3215 014b F7060000 		.4byte	.LASF29
 3216 014f 03       		.byte	0x3
 3217 0150 3B       		.byte	0x3b
 3218 0151 FE010000 		.4byte	0x1fe
 3219 0155 28       		.byte	0x28
 3220 0156 06       		.uleb128 0x6
 3221 0157 84010000 		.4byte	.LASF30
 3222 015b 03       		.byte	0x3
 3223 015c 3C       		.byte	0x3c
 3224 015d FE010000 		.4byte	0x1fe
 3225 0161 2C       		.byte	0x2c
 3226 0162 06       		.uleb128 0x6
 3227 0163 A20A0000 		.4byte	.LASF31
 3228 0167 03       		.byte	0x3
 3229 0168 3D       		.byte	0x3d
 3230 0169 FE010000 		.4byte	0x1fe
 3231 016d 30       		.byte	0x30
 3232 016e 06       		.uleb128 0x6
 3233 016f 64090000 		.4byte	.LASF32
 3234 0173 03       		.byte	0x3
 3235 0174 3E       		.byte	0x3e
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 108


 3236 0175 E7010000 		.4byte	0x1e7
 3237 0179 34       		.byte	0x34
 3238 017a 06       		.uleb128 0x6
 3239 017b 00000000 		.4byte	.LASF33
 3240 017f 03       		.byte	0x3
 3241 0180 3F       		.byte	0x3f
 3242 0181 E7010000 		.4byte	0x1e7
 3243 0185 38       		.byte	0x38
 3244 0186 06       		.uleb128 0x6
 3245 0187 74050000 		.4byte	.LASF34
 3246 018b 03       		.byte	0x3
 3247 018c 40       		.byte	0x40
 3248 018d ED010000 		.4byte	0x1ed
 3249 0191 3C       		.byte	0x3c
 3250 0192 06       		.uleb128 0x6
 3251 0193 C0010000 		.4byte	.LASF35
 3252 0197 03       		.byte	0x3
 3253 0198 41       		.byte	0x41
 3254 0199 ED010000 		.4byte	0x1ed
 3255 019d 40       		.byte	0x40
 3256 019e 06       		.uleb128 0x6
 3257 019f 0D000000 		.4byte	.LASF36
 3258 01a3 03       		.byte	0x3
 3259 01a4 42       		.byte	0x42
 3260 01a5 ED010000 		.4byte	0x1ed
 3261 01a9 44       		.byte	0x44
 3262 01aa 06       		.uleb128 0x6
 3263 01ab 92060000 		.4byte	.LASF37
 3264 01af 03       		.byte	0x3
 3265 01b0 43       		.byte	0x43
 3266 01b1 13020000 		.4byte	0x213
 3267 01b5 48       		.byte	0x48
 3268 01b6 06       		.uleb128 0x6
 3269 01b7 66060000 		.4byte	.LASF38
 3270 01bb 03       		.byte	0x3
 3271 01bc 44       		.byte	0x44
 3272 01bd 24020000 		.4byte	0x224
 3273 01c1 4C       		.byte	0x4c
 3274 01c2 06       		.uleb128 0x6
 3275 01c3 59040000 		.4byte	.LASF39
 3276 01c7 03       		.byte	0x3
 3277 01c8 45       		.byte	0x45
 3278 01c9 13020000 		.4byte	0x213
 3279 01cd 50       		.byte	0x50
 3280 01ce 06       		.uleb128 0x6
 3281 01cf 1D000000 		.4byte	.LASF40
 3282 01d3 03       		.byte	0x3
 3283 01d4 46       		.byte	0x46
 3284 01d5 3E020000 		.4byte	0x23e
 3285 01d9 54       		.byte	0x54
 3286 01da 06       		.uleb128 0x6
 3287 01db C30B0000 		.4byte	.LASF41
 3288 01df 03       		.byte	0x3
 3289 01e0 47       		.byte	0x47
 3290 01e1 59020000 		.4byte	0x259
 3291 01e5 58       		.byte	0x58
 3292 01e6 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 109


 3293 01e7 07       		.uleb128 0x7
 3294 01e8 04       		.byte	0x4
 3295 01e9 6B000000 		.4byte	0x6b
 3296 01ed 07       		.uleb128 0x7
 3297 01ee 04       		.byte	0x4
 3298 01ef F3010000 		.4byte	0x1f3
 3299 01f3 08       		.uleb128 0x8
 3300 01f4 6B000000 		.4byte	0x6b
 3301 01f8 07       		.uleb128 0x7
 3302 01f9 04       		.byte	0x4
 3303 01fa 83000000 		.4byte	0x83
 3304 01fe 07       		.uleb128 0x7
 3305 01ff 04       		.byte	0x4
 3306 0200 77000000 		.4byte	0x77
 3307 0204 09       		.uleb128 0x9
 3308 0205 77000000 		.4byte	0x77
 3309 0209 13020000 		.4byte	0x213
 3310 020d 0A       		.uleb128 0xa
 3311 020e 83000000 		.4byte	0x83
 3312 0212 00       		.byte	0
 3313 0213 07       		.uleb128 0x7
 3314 0214 04       		.byte	0x4
 3315 0215 04020000 		.4byte	0x204
 3316 0219 0B       		.uleb128 0xb
 3317 021a 24020000 		.4byte	0x224
 3318 021e 0A       		.uleb128 0xa
 3319 021f 83000000 		.4byte	0x83
 3320 0223 00       		.byte	0
 3321 0224 07       		.uleb128 0x7
 3322 0225 04       		.byte	0x4
 3323 0226 19020000 		.4byte	0x219
 3324 022a 09       		.uleb128 0x9
 3325 022b 83000000 		.4byte	0x83
 3326 022f 3E020000 		.4byte	0x23e
 3327 0233 0A       		.uleb128 0xa
 3328 0234 ED010000 		.4byte	0x1ed
 3329 0238 0A       		.uleb128 0xa
 3330 0239 83000000 		.4byte	0x83
 3331 023d 00       		.byte	0
 3332 023e 07       		.uleb128 0x7
 3333 023f 04       		.byte	0x4
 3334 0240 2A020000 		.4byte	0x22a
 3335 0244 0B       		.uleb128 0xb
 3336 0245 59020000 		.4byte	0x259
 3337 0249 0A       		.uleb128 0xa
 3338 024a E7010000 		.4byte	0x1e7
 3339 024e 0A       		.uleb128 0xa
 3340 024f 83000000 		.4byte	0x83
 3341 0253 0A       		.uleb128 0xa
 3342 0254 83000000 		.4byte	0x83
 3343 0258 00       		.byte	0
 3344 0259 07       		.uleb128 0x7
 3345 025a 04       		.byte	0x4
 3346 025b 44020000 		.4byte	0x244
 3347 025f 0C       		.uleb128 0xc
 3348 0260 2F070000 		.4byte	.LASF42
 3349 0264 03       		.byte	0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 110


 3350 0265 48       		.byte	0x48
 3351 0266 CA000000 		.4byte	0xca
 3352 026a 05       		.uleb128 0x5
 3353 026b 0C       		.byte	0xc
 3354 026c 03       		.byte	0x3
 3355 026d 4A       		.byte	0x4a
 3356 026e BB020000 		.4byte	0x2bb
 3357 0272 06       		.uleb128 0x6
 3358 0273 EB040000 		.4byte	.LASF43
 3359 0277 03       		.byte	0x3
 3360 0278 4C       		.byte	0x4c
 3361 0279 6B000000 		.4byte	0x6b
 3362 027d 00       		.byte	0
 3363 027e 06       		.uleb128 0x6
 3364 027f CD010000 		.4byte	.LASF44
 3365 0283 03       		.byte	0x3
 3366 0284 4D       		.byte	0x4d
 3367 0285 6B000000 		.4byte	0x6b
 3368 0289 01       		.byte	0x1
 3369 028a 06       		.uleb128 0x6
 3370 028b 93000000 		.4byte	.LASF45
 3371 028f 03       		.byte	0x3
 3372 0290 4E       		.byte	0x4e
 3373 0291 6B000000 		.4byte	0x6b
 3374 0295 02       		.byte	0x2
 3375 0296 06       		.uleb128 0x6
 3376 0297 27050000 		.4byte	.LASF46
 3377 029b 03       		.byte	0x3
 3378 029c 4F       		.byte	0x4f
 3379 029d 77000000 		.4byte	0x77
 3380 02a1 04       		.byte	0x4
 3381 02a2 06       		.uleb128 0x6
 3382 02a3 4E080000 		.4byte	.LASF47
 3383 02a7 03       		.byte	0x3
 3384 02a8 50       		.byte	0x50
 3385 02a9 77000000 		.4byte	0x77
 3386 02ad 06       		.byte	0x6
 3387 02ae 06       		.uleb128 0x6
 3388 02af 100A0000 		.4byte	.LASF48
 3389 02b3 03       		.byte	0x3
 3390 02b4 51       		.byte	0x51
 3391 02b5 BB020000 		.4byte	0x2bb
 3392 02b9 08       		.byte	0x8
 3393 02ba 00       		.byte	0
 3394 02bb 07       		.uleb128 0x7
 3395 02bc 04       		.byte	0x4
 3396 02bd C1020000 		.4byte	0x2c1
 3397 02c1 08       		.uleb128 0x8
 3398 02c2 5F020000 		.4byte	0x25f
 3399 02c6 0C       		.uleb128 0xc
 3400 02c7 6A040000 		.4byte	.LASF49
 3401 02cb 03       		.byte	0x3
 3402 02cc 52       		.byte	0x52
 3403 02cd 6A020000 		.4byte	0x26a
 3404 02d1 0D       		.uleb128 0xd
 3405 02d2 2C000000 		.4byte	.LASF50
 3406 02d6 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 111


 3407 02d7 8E       		.byte	0x8e
 3408 02d8 00000000 		.4byte	.LFB34
 3409 02dc 58000000 		.4byte	.LFE34-.LFB34
 3410 02e0 01       		.uleb128 0x1
 3411 02e1 9C       		.byte	0x9c
 3412 02e2 F5020000 		.4byte	0x2f5
 3413 02e6 0E       		.uleb128 0xe
 3414 02e7 20050000 		.4byte	.LASF52
 3415 02eb 01       		.byte	0x1
 3416 02ec 8E       		.byte	0x8e
 3417 02ed 83000000 		.4byte	0x83
 3418 02f1 02       		.uleb128 0x2
 3419 02f2 91       		.byte	0x91
 3420 02f3 74       		.sleb128 -12
 3421 02f4 00       		.byte	0
 3422 02f5 0F       		.uleb128 0xf
 3423 02f6 230B0000 		.4byte	.LASF51
 3424 02fa 01       		.byte	0x1
 3425 02fb D9       		.byte	0xd9
 3426 02fc 00000000 		.4byte	.LFB35
 3427 0300 2A000000 		.4byte	.LFE35-.LFB35
 3428 0304 01       		.uleb128 0x1
 3429 0305 9C       		.byte	0x9c
 3430 0306 19030000 		.4byte	0x319
 3431 030a 0E       		.uleb128 0xe
 3432 030b 20050000 		.4byte	.LASF52
 3433 030f 01       		.byte	0x1
 3434 0310 D9       		.byte	0xd9
 3435 0311 83000000 		.4byte	0x83
 3436 0315 02       		.uleb128 0x2
 3437 0316 91       		.byte	0x91
 3438 0317 74       		.sleb128 -12
 3439 0318 00       		.byte	0
 3440 0319 0F       		.uleb128 0xf
 3441 031a EE0B0000 		.4byte	.LASF53
 3442 031e 01       		.byte	0x1
 3443 031f FE       		.byte	0xfe
 3444 0320 00000000 		.4byte	.LFB36
 3445 0324 28000000 		.4byte	.LFE36-.LFB36
 3446 0328 01       		.uleb128 0x1
 3447 0329 9C       		.byte	0x9c
 3448 032a 3C030000 		.4byte	0x33c
 3449 032e 10       		.uleb128 0x10
 3450 032f 6900     		.ascii	"i\000"
 3451 0331 01       		.byte	0x1
 3452 0332 0001     		.2byte	0x100
 3453 0334 83000000 		.4byte	0x83
 3454 0338 02       		.uleb128 0x2
 3455 0339 91       		.byte	0x91
 3456 033a 74       		.sleb128 -12
 3457 033b 00       		.byte	0
 3458 033c 11       		.uleb128 0x11
 3459 033d AB000000 		.4byte	.LASF54
 3460 0341 01       		.byte	0x1
 3461 0342 2101     		.2byte	0x121
 3462 0344 00000000 		.4byte	.LFB37
 3463 0348 50000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 112


 3464 034c 01       		.uleb128 0x1
 3465 034d 9C       		.byte	0x9c
 3466 034e 6F030000 		.4byte	0x36f
 3467 0352 10       		.uleb128 0x10
 3468 0353 6900     		.ascii	"i\000"
 3469 0355 01       		.byte	0x1
 3470 0356 2301     		.2byte	0x123
 3471 0358 83000000 		.4byte	0x83
 3472 035c 02       		.uleb128 0x2
 3473 035d 91       		.byte	0x91
 3474 035e 74       		.sleb128 -12
 3475 035f 12       		.uleb128 0x12
 3476 0360 69000000 		.4byte	.LASF55
 3477 0364 01       		.byte	0x1
 3478 0365 2401     		.2byte	0x124
 3479 0367 83000000 		.4byte	0x83
 3480 036b 02       		.uleb128 0x2
 3481 036c 91       		.byte	0x91
 3482 036d 70       		.sleb128 -16
 3483 036e 00       		.byte	0
 3484 036f 11       		.uleb128 0x11
 3485 0370 DA030000 		.4byte	.LASF56
 3486 0374 01       		.byte	0x1
 3487 0375 6201     		.2byte	0x162
 3488 0377 00000000 		.4byte	.LFB38
 3489 037b 34020000 		.4byte	.LFE38-.LFB38
 3490 037f 01       		.uleb128 0x1
 3491 0380 9C       		.byte	0x9c
 3492 0381 EF030000 		.4byte	0x3ef
 3493 0385 13       		.uleb128 0x13
 3494 0386 20050000 		.4byte	.LASF52
 3495 038a 01       		.byte	0x1
 3496 038b 6201     		.2byte	0x162
 3497 038d 83000000 		.4byte	0x83
 3498 0391 02       		.uleb128 0x2
 3499 0392 91       		.byte	0x91
 3500 0393 5C       		.sleb128 -36
 3501 0394 12       		.uleb128 0x12
 3502 0395 54040000 		.4byte	.LASF57
 3503 0399 01       		.byte	0x1
 3504 039a 6401     		.2byte	0x164
 3505 039c 83000000 		.4byte	0x83
 3506 03a0 02       		.uleb128 0x2
 3507 03a1 91       		.byte	0x91
 3508 03a2 60       		.sleb128 -32
 3509 03a3 12       		.uleb128 0x12
 3510 03a4 37040000 		.4byte	.LASF58
 3511 03a8 01       		.byte	0x1
 3512 03a9 6501     		.2byte	0x165
 3513 03ab 83000000 		.4byte	0x83
 3514 03af 02       		.uleb128 0x2
 3515 03b0 91       		.byte	0x91
 3516 03b1 6C       		.sleb128 -20
 3517 03b2 12       		.uleb128 0x12
 3518 03b3 120C0000 		.4byte	.LASF59
 3519 03b7 01       		.byte	0x1
 3520 03b8 6601     		.2byte	0x166
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 113


 3521 03ba 77000000 		.4byte	0x77
 3522 03be 02       		.uleb128 0x2
 3523 03bf 91       		.byte	0x91
 3524 03c0 6A       		.sleb128 -22
 3525 03c1 12       		.uleb128 0x12
 3526 03c2 B0040000 		.4byte	.LASF60
 3527 03c6 01       		.byte	0x1
 3528 03c7 6701     		.2byte	0x167
 3529 03c9 77000000 		.4byte	0x77
 3530 03cd 02       		.uleb128 0x2
 3531 03ce 91       		.byte	0x91
 3532 03cf 68       		.sleb128 -24
 3533 03d0 12       		.uleb128 0x12
 3534 03d1 65030000 		.4byte	.LASF61
 3535 03d5 01       		.byte	0x1
 3536 03d6 6801     		.2byte	0x168
 3537 03d8 6B000000 		.4byte	0x6b
 3538 03dc 02       		.uleb128 0x2
 3539 03dd 91       		.byte	0x91
 3540 03de 67       		.sleb128 -25
 3541 03df 12       		.uleb128 0x12
 3542 03e0 500A0000 		.4byte	.LASF62
 3543 03e4 01       		.byte	0x1
 3544 03e5 6901     		.2byte	0x169
 3545 03e7 6B000000 		.4byte	0x6b
 3546 03eb 02       		.uleb128 0x2
 3547 03ec 91       		.byte	0x91
 3548 03ed 66       		.sleb128 -26
 3549 03ee 00       		.byte	0
 3550 03ef 11       		.uleb128 0x11
 3551 03f0 86070000 		.4byte	.LASF63
 3552 03f4 01       		.byte	0x1
 3553 03f5 2202     		.2byte	0x222
 3554 03f7 00000000 		.4byte	.LFB39
 3555 03fb 20000000 		.4byte	.LFE39-.LFB39
 3556 03ff 01       		.uleb128 0x1
 3557 0400 9C       		.byte	0x9c
 3558 0401 15040000 		.4byte	0x415
 3559 0405 13       		.uleb128 0x13
 3560 0406 20050000 		.4byte	.LASF52
 3561 040a 01       		.byte	0x1
 3562 040b 2202     		.2byte	0x222
 3563 040d 83000000 		.4byte	0x83
 3564 0411 02       		.uleb128 0x2
 3565 0412 91       		.byte	0x91
 3566 0413 74       		.sleb128 -12
 3567 0414 00       		.byte	0
 3568 0415 11       		.uleb128 0x11
 3569 0416 B9060000 		.4byte	.LASF64
 3570 041a 01       		.byte	0x1
 3571 041b 5802     		.2byte	0x258
 3572 041d 00000000 		.4byte	.LFB40
 3573 0421 44000000 		.4byte	.LFE40-.LFB40
 3574 0425 01       		.uleb128 0x1
 3575 0426 9C       		.byte	0x9c
 3576 0427 48040000 		.4byte	0x448
 3577 042b 10       		.uleb128 0x10
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 114


 3578 042c 6900     		.ascii	"i\000"
 3579 042e 01       		.byte	0x1
 3580 042f 5A02     		.2byte	0x25a
 3581 0431 83000000 		.4byte	0x83
 3582 0435 02       		.uleb128 0x2
 3583 0436 91       		.byte	0x91
 3584 0437 74       		.sleb128 -12
 3585 0438 12       		.uleb128 0x12
 3586 0439 69000000 		.4byte	.LASF55
 3587 043d 01       		.byte	0x1
 3588 043e 5B02     		.2byte	0x25b
 3589 0440 83000000 		.4byte	0x83
 3590 0444 02       		.uleb128 0x2
 3591 0445 91       		.byte	0x91
 3592 0446 70       		.sleb128 -16
 3593 0447 00       		.byte	0
 3594 0448 11       		.uleb128 0x11
 3595 0449 8B030000 		.4byte	.LASF65
 3596 044d 01       		.byte	0x1
 3597 044e 8502     		.2byte	0x285
 3598 0450 00000000 		.4byte	.LFB41
 3599 0454 58000000 		.4byte	.LFE41-.LFB41
 3600 0458 01       		.uleb128 0x1
 3601 0459 9C       		.byte	0x9c
 3602 045a B7040000 		.4byte	0x4b7
 3603 045e 13       		.uleb128 0x13
 3604 045f 65030000 		.4byte	.LASF61
 3605 0463 01       		.byte	0x1
 3606 0464 8502     		.2byte	0x285
 3607 0466 83000000 		.4byte	0x83
 3608 046a 02       		.uleb128 0x2
 3609 046b 91       		.byte	0x91
 3610 046c 5C       		.sleb128 -36
 3611 046d 12       		.uleb128 0x12
 3612 046e C0040000 		.4byte	.LASF66
 3613 0472 01       		.byte	0x1
 3614 0473 8702     		.2byte	0x287
 3615 0475 83000000 		.4byte	0x83
 3616 0479 02       		.uleb128 0x2
 3617 047a 91       		.byte	0x91
 3618 047b 70       		.sleb128 -16
 3619 047c 12       		.uleb128 0x12
 3620 047d 9C080000 		.4byte	.LASF67
 3621 0481 01       		.byte	0x1
 3622 0482 8802     		.2byte	0x288
 3623 0484 83000000 		.4byte	0x83
 3624 0488 02       		.uleb128 0x2
 3625 0489 91       		.byte	0x91
 3626 048a 6C       		.sleb128 -20
 3627 048b 12       		.uleb128 0x12
 3628 048c 2F080000 		.4byte	.LASF68
 3629 0490 01       		.byte	0x1
 3630 0491 8902     		.2byte	0x289
 3631 0493 83000000 		.4byte	0x83
 3632 0497 02       		.uleb128 0x2
 3633 0498 91       		.byte	0x91
 3634 0499 68       		.sleb128 -24
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 115


 3635 049a 10       		.uleb128 0x10
 3636 049b 6900     		.ascii	"i\000"
 3637 049d 01       		.byte	0x1
 3638 049e 8A02     		.2byte	0x28a
 3639 04a0 83000000 		.4byte	0x83
 3640 04a4 02       		.uleb128 0x2
 3641 04a5 91       		.byte	0x91
 3642 04a6 74       		.sleb128 -12
 3643 04a7 12       		.uleb128 0x12
 3644 04a8 69000000 		.4byte	.LASF55
 3645 04ac 01       		.byte	0x1
 3646 04ad 8B02     		.2byte	0x28b
 3647 04af 83000000 		.4byte	0x83
 3648 04b3 02       		.uleb128 0x2
 3649 04b4 91       		.byte	0x91
 3650 04b5 64       		.sleb128 -28
 3651 04b6 00       		.byte	0
 3652 04b7 14       		.uleb128 0x14
 3653 04b8 BC090000 		.4byte	.LASF71
 3654 04bc 01       		.byte	0x1
 3655 04bd B602     		.2byte	0x2b6
 3656 04bf 77000000 		.4byte	0x77
 3657 04c3 00000000 		.4byte	.LFB42
 3658 04c7 1C000000 		.4byte	.LFE42-.LFB42
 3659 04cb 01       		.uleb128 0x1
 3660 04cc 9C       		.byte	0x9c
 3661 04cd E1040000 		.4byte	0x4e1
 3662 04d1 13       		.uleb128 0x13
 3663 04d2 20050000 		.4byte	.LASF52
 3664 04d6 01       		.byte	0x1
 3665 04d7 B602     		.2byte	0x2b6
 3666 04d9 83000000 		.4byte	0x83
 3667 04dd 02       		.uleb128 0x2
 3668 04de 91       		.byte	0x91
 3669 04df 74       		.sleb128 -12
 3670 04e0 00       		.byte	0
 3671 04e1 15       		.uleb128 0x15
 3672 04e2 D3000000 		.4byte	.LASF69
 3673 04e6 01       		.byte	0x1
 3674 04e7 D102     		.2byte	0x2d1
 3675 04e9 00000000 		.4byte	.LFB43
 3676 04ed 28000000 		.4byte	.LFE43-.LFB43
 3677 04f1 01       		.uleb128 0x1
 3678 04f2 9C       		.byte	0x9c
 3679 04f3 16050000 		.4byte	0x516
 3680 04f7 13       		.uleb128 0x13
 3681 04f8 20050000 		.4byte	.LASF52
 3682 04fc 01       		.byte	0x1
 3683 04fd D102     		.2byte	0x2d1
 3684 04ff 83000000 		.4byte	0x83
 3685 0503 02       		.uleb128 0x2
 3686 0504 91       		.byte	0x91
 3687 0505 74       		.sleb128 -12
 3688 0506 13       		.uleb128 0x13
 3689 0507 8A050000 		.4byte	.LASF70
 3690 050b 01       		.byte	0x1
 3691 050c D102     		.2byte	0x2d1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 116


 3692 050e 77000000 		.4byte	0x77
 3693 0512 02       		.uleb128 0x2
 3694 0513 91       		.byte	0x91
 3695 0514 72       		.sleb128 -14
 3696 0515 00       		.byte	0
 3697 0516 14       		.uleb128 0x14
 3698 0517 E4080000 		.4byte	.LASF72
 3699 051b 01       		.byte	0x1
 3700 051c EC02     		.2byte	0x2ec
 3701 051e 6B000000 		.4byte	0x6b
 3702 0522 00000000 		.4byte	.LFB44
 3703 0526 1C000000 		.4byte	.LFE44-.LFB44
 3704 052a 01       		.uleb128 0x1
 3705 052b 9C       		.byte	0x9c
 3706 052c 40050000 		.4byte	0x540
 3707 0530 13       		.uleb128 0x13
 3708 0531 20050000 		.4byte	.LASF52
 3709 0535 01       		.byte	0x1
 3710 0536 EC02     		.2byte	0x2ec
 3711 0538 83000000 		.4byte	0x83
 3712 053c 02       		.uleb128 0x2
 3713 053d 91       		.byte	0x91
 3714 053e 74       		.sleb128 -12
 3715 053f 00       		.byte	0
 3716 0540 15       		.uleb128 0x15
 3717 0541 68070000 		.4byte	.LASF73
 3718 0545 01       		.byte	0x1
 3719 0546 0703     		.2byte	0x307
 3720 0548 00000000 		.4byte	.LFB45
 3721 054c 28000000 		.4byte	.LFE45-.LFB45
 3722 0550 01       		.uleb128 0x1
 3723 0551 9C       		.byte	0x9c
 3724 0552 75050000 		.4byte	0x575
 3725 0556 13       		.uleb128 0x13
 3726 0557 20050000 		.4byte	.LASF52
 3727 055b 01       		.byte	0x1
 3728 055c 0703     		.2byte	0x307
 3729 055e 83000000 		.4byte	0x83
 3730 0562 02       		.uleb128 0x2
 3731 0563 91       		.byte	0x91
 3732 0564 74       		.sleb128 -12
 3733 0565 13       		.uleb128 0x13
 3734 0566 AD030000 		.4byte	.LASF74
 3735 056a 01       		.byte	0x1
 3736 056b 0703     		.2byte	0x307
 3737 056d 6B000000 		.4byte	0x6b
 3738 0571 02       		.uleb128 0x2
 3739 0572 91       		.byte	0x91
 3740 0573 73       		.sleb128 -13
 3741 0574 00       		.byte	0
 3742 0575 14       		.uleb128 0x14
 3743 0576 25060000 		.4byte	.LASF75
 3744 057a 01       		.byte	0x1
 3745 057b 2203     		.2byte	0x322
 3746 057d 6B000000 		.4byte	0x6b
 3747 0581 00000000 		.4byte	.LFB46
 3748 0585 1C000000 		.4byte	.LFE46-.LFB46
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 117


 3749 0589 01       		.uleb128 0x1
 3750 058a 9C       		.byte	0x9c
 3751 058b 9F050000 		.4byte	0x59f
 3752 058f 13       		.uleb128 0x13
 3753 0590 65030000 		.4byte	.LASF61
 3754 0594 01       		.byte	0x1
 3755 0595 2203     		.2byte	0x322
 3756 0597 83000000 		.4byte	0x83
 3757 059b 02       		.uleb128 0x2
 3758 059c 91       		.byte	0x91
 3759 059d 74       		.sleb128 -12
 3760 059e 00       		.byte	0
 3761 059f 14       		.uleb128 0x14
 3762 05a0 C9020000 		.4byte	.LASF76
 3763 05a4 01       		.byte	0x1
 3764 05a5 3D03     		.2byte	0x33d
 3765 05a7 6B000000 		.4byte	0x6b
 3766 05ab 00000000 		.4byte	.LFB47
 3767 05af 1C000000 		.4byte	.LFE47-.LFB47
 3768 05b3 01       		.uleb128 0x1
 3769 05b4 9C       		.byte	0x9c
 3770 05b5 C9050000 		.4byte	0x5c9
 3771 05b9 13       		.uleb128 0x13
 3772 05ba 65030000 		.4byte	.LASF61
 3773 05be 01       		.byte	0x1
 3774 05bf 3D03     		.2byte	0x33d
 3775 05c1 83000000 		.4byte	0x83
 3776 05c5 02       		.uleb128 0x2
 3777 05c6 91       		.byte	0x91
 3778 05c7 74       		.sleb128 -12
 3779 05c8 00       		.byte	0
 3780 05c9 14       		.uleb128 0x14
 3781 05ca 71060000 		.4byte	.LASF77
 3782 05ce 01       		.byte	0x1
 3783 05cf 5903     		.2byte	0x359
 3784 05d1 6B000000 		.4byte	0x6b
 3785 05d5 00000000 		.4byte	.LFB48
 3786 05d9 1C000000 		.4byte	.LFE48-.LFB48
 3787 05dd 01       		.uleb128 0x1
 3788 05de 9C       		.byte	0x9c
 3789 05df F3050000 		.4byte	0x5f3
 3790 05e3 13       		.uleb128 0x13
 3791 05e4 65030000 		.4byte	.LASF61
 3792 05e8 01       		.byte	0x1
 3793 05e9 5903     		.2byte	0x359
 3794 05eb 83000000 		.4byte	0x83
 3795 05ef 02       		.uleb128 0x2
 3796 05f0 91       		.byte	0x91
 3797 05f1 74       		.sleb128 -12
 3798 05f2 00       		.byte	0
 3799 05f3 14       		.uleb128 0x14
 3800 05f4 9E050000 		.4byte	.LASF78
 3801 05f8 01       		.byte	0x1
 3802 05f9 7503     		.2byte	0x375
 3803 05fb 6B000000 		.4byte	0x6b
 3804 05ff 00000000 		.4byte	.LFB49
 3805 0603 1C000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 118


 3806 0607 01       		.uleb128 0x1
 3807 0608 9C       		.byte	0x9c
 3808 0609 1D060000 		.4byte	0x61d
 3809 060d 13       		.uleb128 0x13
 3810 060e 65030000 		.4byte	.LASF61
 3811 0612 01       		.byte	0x1
 3812 0613 7503     		.2byte	0x375
 3813 0615 83000000 		.4byte	0x83
 3814 0619 02       		.uleb128 0x2
 3815 061a 91       		.byte	0x91
 3816 061b 74       		.sleb128 -12
 3817 061c 00       		.byte	0
 3818 061d 15       		.uleb128 0x15
 3819 061e FE010000 		.4byte	.LASF79
 3820 0622 01       		.byte	0x1
 3821 0623 9603     		.2byte	0x396
 3822 0625 00000000 		.4byte	.LFB50
 3823 0629 28000000 		.4byte	.LFE50-.LFB50
 3824 062d 01       		.uleb128 0x1
 3825 062e 9C       		.byte	0x9c
 3826 062f 52060000 		.4byte	0x652
 3827 0633 13       		.uleb128 0x13
 3828 0634 65030000 		.4byte	.LASF61
 3829 0638 01       		.byte	0x1
 3830 0639 9603     		.2byte	0x396
 3831 063b 83000000 		.4byte	0x83
 3832 063f 02       		.uleb128 0x2
 3833 0640 91       		.byte	0x91
 3834 0641 74       		.sleb128 -12
 3835 0642 13       		.uleb128 0x13
 3836 0643 AD030000 		.4byte	.LASF74
 3837 0647 01       		.byte	0x1
 3838 0648 9603     		.2byte	0x396
 3839 064a 6B000000 		.4byte	0x6b
 3840 064e 02       		.uleb128 0x2
 3841 064f 91       		.byte	0x91
 3842 0650 73       		.sleb128 -13
 3843 0651 00       		.byte	0
 3844 0652 15       		.uleb128 0x15
 3845 0653 6C030000 		.4byte	.LASF80
 3846 0657 01       		.byte	0x1
 3847 0658 B203     		.2byte	0x3b2
 3848 065a 00000000 		.4byte	.LFB51
 3849 065e 28000000 		.4byte	.LFE51-.LFB51
 3850 0662 01       		.uleb128 0x1
 3851 0663 9C       		.byte	0x9c
 3852 0664 87060000 		.4byte	0x687
 3853 0668 13       		.uleb128 0x13
 3854 0669 65030000 		.4byte	.LASF61
 3855 066d 01       		.byte	0x1
 3856 066e B203     		.2byte	0x3b2
 3857 0670 83000000 		.4byte	0x83
 3858 0674 02       		.uleb128 0x2
 3859 0675 91       		.byte	0x91
 3860 0676 74       		.sleb128 -12
 3861 0677 13       		.uleb128 0x13
 3862 0678 AD030000 		.4byte	.LASF74
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 119


 3863 067c 01       		.byte	0x1
 3864 067d B203     		.2byte	0x3b2
 3865 067f 6B000000 		.4byte	0x6b
 3866 0683 02       		.uleb128 0x2
 3867 0684 91       		.byte	0x91
 3868 0685 73       		.sleb128 -13
 3869 0686 00       		.byte	0
 3870 0687 15       		.uleb128 0x15
 3871 0688 810A0000 		.4byte	.LASF81
 3872 068c 01       		.byte	0x1
 3873 068d CE03     		.2byte	0x3ce
 3874 068f 00000000 		.4byte	.LFB52
 3875 0693 28000000 		.4byte	.LFE52-.LFB52
 3876 0697 01       		.uleb128 0x1
 3877 0698 9C       		.byte	0x9c
 3878 0699 BC060000 		.4byte	0x6bc
 3879 069d 13       		.uleb128 0x13
 3880 069e 65030000 		.4byte	.LASF61
 3881 06a2 01       		.byte	0x1
 3882 06a3 CE03     		.2byte	0x3ce
 3883 06a5 83000000 		.4byte	0x83
 3884 06a9 02       		.uleb128 0x2
 3885 06aa 91       		.byte	0x91
 3886 06ab 74       		.sleb128 -12
 3887 06ac 13       		.uleb128 0x13
 3888 06ad AD030000 		.4byte	.LASF74
 3889 06b1 01       		.byte	0x1
 3890 06b2 CE03     		.2byte	0x3ce
 3891 06b4 6B000000 		.4byte	0x6b
 3892 06b8 02       		.uleb128 0x2
 3893 06b9 91       		.byte	0x91
 3894 06ba 73       		.sleb128 -13
 3895 06bb 00       		.byte	0
 3896 06bc 15       		.uleb128 0x15
 3897 06bd B3030000 		.4byte	.LASF82
 3898 06c1 01       		.byte	0x1
 3899 06c2 EB03     		.2byte	0x3eb
 3900 06c4 00000000 		.4byte	.LFB53
 3901 06c8 28000000 		.4byte	.LFE53-.LFB53
 3902 06cc 01       		.uleb128 0x1
 3903 06cd 9C       		.byte	0x9c
 3904 06ce F1060000 		.4byte	0x6f1
 3905 06d2 13       		.uleb128 0x13
 3906 06d3 65030000 		.4byte	.LASF61
 3907 06d7 01       		.byte	0x1
 3908 06d8 EB03     		.2byte	0x3eb
 3909 06da 83000000 		.4byte	0x83
 3910 06de 02       		.uleb128 0x2
 3911 06df 91       		.byte	0x91
 3912 06e0 74       		.sleb128 -12
 3913 06e1 13       		.uleb128 0x13
 3914 06e2 AD030000 		.4byte	.LASF74
 3915 06e6 01       		.byte	0x1
 3916 06e7 EB03     		.2byte	0x3eb
 3917 06e9 6B000000 		.4byte	0x6b
 3918 06ed 02       		.uleb128 0x2
 3919 06ee 91       		.byte	0x91
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 120


 3920 06ef 73       		.sleb128 -13
 3921 06f0 00       		.byte	0
 3922 06f1 15       		.uleb128 0x15
 3923 06f2 97040000 		.4byte	.LASF83
 3924 06f6 01       		.byte	0x1
 3925 06f7 0704     		.2byte	0x407
 3926 06f9 00000000 		.4byte	.LFB54
 3927 06fd 28000000 		.4byte	.LFE54-.LFB54
 3928 0701 01       		.uleb128 0x1
 3929 0702 9C       		.byte	0x9c
 3930 0703 26070000 		.4byte	0x726
 3931 0707 13       		.uleb128 0x13
 3932 0708 65030000 		.4byte	.LASF61
 3933 070c 01       		.byte	0x1
 3934 070d 0704     		.2byte	0x407
 3935 070f 83000000 		.4byte	0x83
 3936 0713 02       		.uleb128 0x2
 3937 0714 91       		.byte	0x91
 3938 0715 74       		.sleb128 -12
 3939 0716 13       		.uleb128 0x13
 3940 0717 AD030000 		.4byte	.LASF74
 3941 071b 01       		.byte	0x1
 3942 071c 0704     		.2byte	0x407
 3943 071e 6B000000 		.4byte	0x6b
 3944 0722 02       		.uleb128 0x2
 3945 0723 91       		.byte	0x91
 3946 0724 73       		.sleb128 -13
 3947 0725 00       		.byte	0
 3948 0726 15       		.uleb128 0x15
 3949 0727 DE070000 		.4byte	.LASF84
 3950 072b 01       		.byte	0x1
 3951 072c 2304     		.2byte	0x423
 3952 072e 00000000 		.4byte	.LFB55
 3953 0732 28000000 		.4byte	.LFE55-.LFB55
 3954 0736 01       		.uleb128 0x1
 3955 0737 9C       		.byte	0x9c
 3956 0738 5B070000 		.4byte	0x75b
 3957 073c 13       		.uleb128 0x13
 3958 073d 20050000 		.4byte	.LASF52
 3959 0741 01       		.byte	0x1
 3960 0742 2304     		.2byte	0x423
 3961 0744 83000000 		.4byte	0x83
 3962 0748 02       		.uleb128 0x2
 3963 0749 91       		.byte	0x91
 3964 074a 74       		.sleb128 -12
 3965 074b 13       		.uleb128 0x13
 3966 074c AD030000 		.4byte	.LASF74
 3967 0750 01       		.byte	0x1
 3968 0751 2304     		.2byte	0x423
 3969 0753 6B000000 		.4byte	0x6b
 3970 0757 02       		.uleb128 0x2
 3971 0758 91       		.byte	0x91
 3972 0759 73       		.sleb128 -13
 3973 075a 00       		.byte	0
 3974 075b 16       		.uleb128 0x16
 3975 075c 43090000 		.4byte	.LASF85
 3976 0760 01       		.byte	0x1
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 121


 3977 0761 5104     		.2byte	0x451
 3978 0763 83000000 		.4byte	0x83
 3979 0767 00000000 		.4byte	.LFB56
 3980 076b 38010000 		.4byte	.LFE56-.LFB56
 3981 076f 01       		.uleb128 0x1
 3982 0770 9C       		.byte	0x9c
 3983 0771 E2070000 		.4byte	0x7e2
 3984 0775 13       		.uleb128 0x13
 3985 0776 20050000 		.4byte	.LASF52
 3986 077a 01       		.byte	0x1
 3987 077b 5104     		.2byte	0x451
 3988 077d 83000000 		.4byte	0x83
 3989 0781 02       		.uleb128 0x2
 3990 0782 91       		.byte	0x91
 3991 0783 6C       		.sleb128 -20
 3992 0784 12       		.uleb128 0x12
 3993 0785 65030000 		.4byte	.LASF61
 3994 0789 01       		.byte	0x1
 3995 078a 5304     		.2byte	0x453
 3996 078c 6B000000 		.4byte	0x6b
 3997 0790 02       		.uleb128 0x2
 3998 0791 91       		.byte	0x91
 3999 0792 77       		.sleb128 -9
 4000 0793 12       		.uleb128 0x12
 4001 0794 45060000 		.4byte	.LASF86
 4002 0798 01       		.byte	0x1
 4003 0799 5404     		.2byte	0x454
 4004 079b 6B000000 		.4byte	0x6b
 4005 079f 02       		.uleb128 0x2
 4006 07a0 91       		.byte	0x91
 4007 07a1 74       		.sleb128 -12
 4008 07a2 12       		.uleb128 0x12
 4009 07a3 F90A0000 		.4byte	.LASF87
 4010 07a7 01       		.byte	0x1
 4011 07a8 5504     		.2byte	0x455
 4012 07aa 6B000000 		.4byte	0x6b
 4013 07ae 02       		.uleb128 0x2
 4014 07af 91       		.byte	0x91
 4015 07b0 73       		.sleb128 -13
 4016 07b1 12       		.uleb128 0x12
 4017 07b2 B40A0000 		.4byte	.LASF88
 4018 07b6 01       		.byte	0x1
 4019 07b7 5704     		.2byte	0x457
 4020 07b9 6B000000 		.4byte	0x6b
 4021 07bd 02       		.uleb128 0x2
 4022 07be 91       		.byte	0x91
 4023 07bf 76       		.sleb128 -10
 4024 07c0 12       		.uleb128 0x12
 4025 07c1 8C040000 		.4byte	.LASF89
 4026 07c5 01       		.byte	0x1
 4027 07c6 5804     		.2byte	0x458
 4028 07c8 6B000000 		.4byte	0x6b
 4029 07cc 02       		.uleb128 0x2
 4030 07cd 91       		.byte	0x91
 4031 07ce 75       		.sleb128 -11
 4032 07cf 12       		.uleb128 0x12
 4033 07d0 AC020000 		.4byte	.LASF90
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 122


 4034 07d4 01       		.byte	0x1
 4035 07d5 5904     		.2byte	0x459
 4036 07d7 E2070000 		.4byte	0x7e2
 4037 07db 05       		.uleb128 0x5
 4038 07dc 03       		.byte	0x3
 4039 07dd 20000000 		.4byte	CapSense_CSD_debounceCounter.5530
 4040 07e1 00       		.byte	0
 4041 07e2 17       		.uleb128 0x17
 4042 07e3 6B000000 		.4byte	0x6b
 4043 07e7 F2070000 		.4byte	0x7f2
 4044 07eb 18       		.uleb128 0x18
 4045 07ec BC000000 		.4byte	0xbc
 4046 07f0 00       		.byte	0
 4047 07f1 00       		.byte	0
 4048 07f2 16       		.uleb128 0x16
 4049 07f3 DD010000 		.4byte	.LASF91
 4050 07f7 01       		.byte	0x1
 4051 07f8 A804     		.2byte	0x4a8
 4052 07fa 83000000 		.4byte	0x83
 4053 07fe 00000000 		.4byte	.LFB57
 4054 0802 42000000 		.4byte	.LFE57-.LFB57
 4055 0806 01       		.uleb128 0x1
 4056 0807 9C       		.byte	0x9c
 4057 0808 49080000 		.4byte	0x849
 4058 080c 13       		.uleb128 0x13
 4059 080d 65030000 		.4byte	.LASF61
 4060 0811 01       		.byte	0x1
 4061 0812 A804     		.2byte	0x4a8
 4062 0814 83000000 		.4byte	0x83
 4063 0818 02       		.uleb128 0x2
 4064 0819 91       		.byte	0x91
 4065 081a 64       		.sleb128 -28
 4066 081b 12       		.uleb128 0x12
 4067 081c D0050000 		.4byte	.LASF92
 4068 0820 01       		.byte	0x1
 4069 0821 AA04     		.2byte	0x4aa
 4070 0823 83000000 		.4byte	0x83
 4071 0827 02       		.uleb128 0x2
 4072 0828 91       		.byte	0x91
 4073 0829 74       		.sleb128 -12
 4074 082a 12       		.uleb128 0x12
 4075 082b 79000000 		.4byte	.LASF93
 4076 082f 01       		.byte	0x1
 4077 0830 AB04     		.2byte	0x4ab
 4078 0832 83000000 		.4byte	0x83
 4079 0836 02       		.uleb128 0x2
 4080 0837 91       		.byte	0x91
 4081 0838 6C       		.sleb128 -20
 4082 0839 12       		.uleb128 0x12
 4083 083a 720B0000 		.4byte	.LASF94
 4084 083e 01       		.byte	0x1
 4085 083f AC04     		.2byte	0x4ac
 4086 0841 83000000 		.4byte	0x83
 4087 0845 02       		.uleb128 0x2
 4088 0846 91       		.byte	0x91
 4089 0847 70       		.sleb128 -16
 4090 0848 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 123


 4091 0849 16       		.uleb128 0x16
 4092 084a 13090000 		.4byte	.LASF95
 4093 084e 01       		.byte	0x1
 4094 084f D604     		.2byte	0x4d6
 4095 0851 83000000 		.4byte	0x83
 4096 0855 00000000 		.4byte	.LFB58
 4097 0859 36000000 		.4byte	.LFE58-.LFB58
 4098 085d 01       		.uleb128 0x1
 4099 085e 9C       		.byte	0x9c
 4100 085f 80080000 		.4byte	0x880
 4101 0863 10       		.uleb128 0x10
 4102 0864 6900     		.ascii	"i\000"
 4103 0866 01       		.byte	0x1
 4104 0867 D904     		.2byte	0x4d9
 4105 0869 83000000 		.4byte	0x83
 4106 086d 02       		.uleb128 0x2
 4107 086e 91       		.byte	0x91
 4108 086f 74       		.sleb128 -12
 4109 0870 12       		.uleb128 0x12
 4110 0871 720B0000 		.4byte	.LASF94
 4111 0875 01       		.byte	0x1
 4112 0876 DA04     		.2byte	0x4da
 4113 0878 83000000 		.4byte	0x83
 4114 087c 02       		.uleb128 0x2
 4115 087d 91       		.byte	0x91
 4116 087e 70       		.sleb128 -16
 4117 087f 00       		.byte	0
 4118 0880 11       		.uleb128 0x11
 4119 0881 490B0000 		.4byte	.LASF96
 4120 0885 01       		.byte	0x1
 4121 0886 0505     		.2byte	0x505
 4122 0888 00000000 		.4byte	.LFB59
 4123 088c 5C000000 		.4byte	.LFE59-.LFB59
 4124 0890 01       		.uleb128 0x1
 4125 0891 9C       		.byte	0x9c
 4126 0892 C4080000 		.4byte	0x8c4
 4127 0896 13       		.uleb128 0x13
 4128 0897 65030000 		.4byte	.LASF61
 4129 089b 01       		.byte	0x1
 4130 089c 0505     		.2byte	0x505
 4131 089e 83000000 		.4byte	0x83
 4132 08a2 02       		.uleb128 0x2
 4133 08a3 91       		.byte	0x91
 4134 08a4 6C       		.sleb128 -20
 4135 08a5 12       		.uleb128 0x12
 4136 08a6 D0050000 		.4byte	.LASF92
 4137 08aa 01       		.byte	0x1
 4138 08ab 0805     		.2byte	0x508
 4139 08ad 6B000000 		.4byte	0x6b
 4140 08b1 02       		.uleb128 0x2
 4141 08b2 91       		.byte	0x91
 4142 08b3 77       		.sleb128 -9
 4143 08b4 12       		.uleb128 0x12
 4144 08b5 79000000 		.4byte	.LASF93
 4145 08b9 01       		.byte	0x1
 4146 08ba 0905     		.2byte	0x509
 4147 08bc 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 124


 4148 08c0 02       		.uleb128 0x2
 4149 08c1 91       		.byte	0x91
 4150 08c2 76       		.sleb128 -10
 4151 08c3 00       		.byte	0
 4152 08c4 11       		.uleb128 0x11
 4153 08c5 59050000 		.4byte	.LASF97
 4154 08c9 01       		.byte	0x1
 4155 08ca 3005     		.2byte	0x530
 4156 08cc 00000000 		.4byte	.LFB60
 4157 08d0 5C000000 		.4byte	.LFE60-.LFB60
 4158 08d4 01       		.uleb128 0x1
 4159 08d5 9C       		.byte	0x9c
 4160 08d6 08090000 		.4byte	0x908
 4161 08da 13       		.uleb128 0x13
 4162 08db 65030000 		.4byte	.LASF61
 4163 08df 01       		.byte	0x1
 4164 08e0 3005     		.2byte	0x530
 4165 08e2 83000000 		.4byte	0x83
 4166 08e6 02       		.uleb128 0x2
 4167 08e7 91       		.byte	0x91
 4168 08e8 6C       		.sleb128 -20
 4169 08e9 12       		.uleb128 0x12
 4170 08ea D0050000 		.4byte	.LASF92
 4171 08ee 01       		.byte	0x1
 4172 08ef 3205     		.2byte	0x532
 4173 08f1 6B000000 		.4byte	0x6b
 4174 08f5 02       		.uleb128 0x2
 4175 08f6 91       		.byte	0x91
 4176 08f7 77       		.sleb128 -9
 4177 08f8 12       		.uleb128 0x12
 4178 08f9 79000000 		.4byte	.LASF93
 4179 08fd 01       		.byte	0x1
 4180 08fe 3305     		.2byte	0x533
 4181 0900 6B000000 		.4byte	0x6b
 4182 0904 02       		.uleb128 0x2
 4183 0905 91       		.byte	0x91
 4184 0906 76       		.sleb128 -10
 4185 0907 00       		.byte	0
 4186 0908 14       		.uleb128 0x14
 4187 0909 270C0000 		.4byte	.LASF98
 4188 090d 01       		.byte	0x1
 4189 090e 6205     		.2byte	0x562
 4190 0910 6B000000 		.4byte	0x6b
 4191 0914 00000000 		.4byte	.LFB61
 4192 0918 B8000000 		.4byte	.LFE61-.LFB61
 4193 091c 01       		.uleb128 0x1
 4194 091d 9C       		.byte	0x9c
 4195 091e 8A090000 		.4byte	0x98a
 4196 0922 13       		.uleb128 0x13
 4197 0923 3C040000 		.4byte	.LASF99
 4198 0927 01       		.byte	0x1
 4199 0928 6205     		.2byte	0x562
 4200 092a 6B000000 		.4byte	0x6b
 4201 092e 02       		.uleb128 0x2
 4202 092f 91       		.byte	0x91
 4203 0930 67       		.sleb128 -25
 4204 0931 13       		.uleb128 0x13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 125


 4205 0932 F4020000 		.4byte	.LASF100
 4206 0936 01       		.byte	0x1
 4207 0937 6205     		.2byte	0x562
 4208 0939 6B000000 		.4byte	0x6b
 4209 093d 02       		.uleb128 0x2
 4210 093e 91       		.byte	0x91
 4211 093f 66       		.sleb128 -26
 4212 0940 13       		.uleb128 0x13
 4213 0941 B40A0000 		.4byte	.LASF88
 4214 0945 01       		.byte	0x1
 4215 0946 6205     		.2byte	0x562
 4216 0948 6B000000 		.4byte	0x6b
 4217 094c 02       		.uleb128 0x2
 4218 094d 91       		.byte	0x91
 4219 094e 65       		.sleb128 -27
 4220 094f 10       		.uleb128 0x10
 4221 0950 6900     		.ascii	"i\000"
 4222 0952 01       		.byte	0x1
 4223 0953 6505     		.2byte	0x565
 4224 0955 6B000000 		.4byte	0x6b
 4225 0959 02       		.uleb128 0x2
 4226 095a 91       		.byte	0x91
 4227 095b 6F       		.sleb128 -17
 4228 095c 12       		.uleb128 0x12
 4229 095d D9050000 		.4byte	.LASF101
 4230 0961 01       		.byte	0x1
 4231 0962 6F05     		.2byte	0x56f
 4232 0964 6B000000 		.4byte	0x6b
 4233 0968 02       		.uleb128 0x2
 4234 0969 91       		.byte	0x91
 4235 096a 6E       		.sleb128 -18
 4236 096b 12       		.uleb128 0x12
 4237 096c C7080000 		.4byte	.LASF102
 4238 0970 01       		.byte	0x1
 4239 0971 7105     		.2byte	0x571
 4240 0973 6B000000 		.4byte	0x6b
 4241 0977 02       		.uleb128 0x2
 4242 0978 91       		.byte	0x91
 4243 0979 6D       		.sleb128 -19
 4244 097a 12       		.uleb128 0x12
 4245 097b 5A070000 		.4byte	.LASF103
 4246 097f 01       		.byte	0x1
 4247 0980 7205     		.2byte	0x572
 4248 0982 E7010000 		.4byte	0x1e7
 4249 0986 02       		.uleb128 0x2
 4250 0987 91       		.byte	0x91
 4251 0988 68       		.sleb128 -24
 4252 0989 00       		.byte	0
 4253 098a 16       		.uleb128 0x16
 4254 098b 5F0C0000 		.4byte	.LASF104
 4255 098f 01       		.byte	0x1
 4256 0990 0106     		.2byte	0x601
 4257 0992 6B000000 		.4byte	0x6b
 4258 0996 00000000 		.4byte	.LFB62
 4259 099a A0010000 		.4byte	.LFE62-.LFB62
 4260 099e 01       		.uleb128 0x1
 4261 099f 9C       		.byte	0x9c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 126


 4262 09a0 5C0A0000 		.4byte	0xa5c
 4263 09a4 13       		.uleb128 0x13
 4264 09a5 D9050000 		.4byte	.LASF101
 4265 09a9 01       		.byte	0x1
 4266 09aa 0106     		.2byte	0x601
 4267 09ac 6B000000 		.4byte	0x6b
 4268 09b0 02       		.uleb128 0x2
 4269 09b1 91       		.byte	0x91
 4270 09b2 57       		.sleb128 -41
 4271 09b3 13       		.uleb128 0x13
 4272 09b4 3C040000 		.4byte	.LASF99
 4273 09b8 01       		.byte	0x1
 4274 09b9 0106     		.2byte	0x601
 4275 09bb 6B000000 		.4byte	0x6b
 4276 09bf 02       		.uleb128 0x2
 4277 09c0 91       		.byte	0x91
 4278 09c1 56       		.sleb128 -42
 4279 09c2 13       		.uleb128 0x13
 4280 09c3 F4020000 		.4byte	.LASF100
 4281 09c7 01       		.byte	0x1
 4282 09c8 0206     		.2byte	0x602
 4283 09ca 6B000000 		.4byte	0x6b
 4284 09ce 02       		.uleb128 0x2
 4285 09cf 91       		.byte	0x91
 4286 09d0 55       		.sleb128 -43
 4287 09d1 13       		.uleb128 0x13
 4288 09d2 C5050000 		.4byte	.LASF105
 4289 09d6 01       		.byte	0x1
 4290 09d7 0206     		.2byte	0x602
 4291 09d9 77000000 		.4byte	0x77
 4292 09dd 02       		.uleb128 0x2
 4293 09de 91       		.byte	0x91
 4294 09df 52       		.sleb128 -46
 4295 09e0 13       		.uleb128 0x13
 4296 09e1 500A0000 		.4byte	.LASF62
 4297 09e5 01       		.byte	0x1
 4298 09e6 0206     		.2byte	0x602
 4299 09e8 6B000000 		.4byte	0x6b
 4300 09ec 02       		.uleb128 0x2
 4301 09ed 91       		.byte	0x91
 4302 09ee 00       		.sleb128 0
 4303 09ef 12       		.uleb128 0x12
 4304 09f0 A1010000 		.4byte	.LASF106
 4305 09f4 01       		.byte	0x1
 4306 09f5 0606     		.2byte	0x606
 4307 09f7 6B000000 		.4byte	0x6b
 4308 09fb 02       		.uleb128 0x2
 4309 09fc 91       		.byte	0x91
 4310 09fd 6F       		.sleb128 -17
 4311 09fe 12       		.uleb128 0x12
 4312 09ff A3000000 		.4byte	.LASF107
 4313 0a03 01       		.byte	0x1
 4314 0a04 0706     		.2byte	0x607
 4315 0a06 6B000000 		.4byte	0x6b
 4316 0a0a 02       		.uleb128 0x2
 4317 0a0b 91       		.byte	0x91
 4318 0a0c 67       		.sleb128 -25
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 127


 4319 0a0d 12       		.uleb128 0x12
 4320 0a0e 400C0000 		.4byte	.LASF108
 4321 0a12 01       		.byte	0x1
 4322 0a13 0C06     		.2byte	0x60c
 4323 0a15 5C0A0000 		.4byte	0xa5c
 4324 0a19 05       		.uleb128 0x5
 4325 0a1a 03       		.byte	0x3
 4326 0a1b 24000000 		.4byte	CapSense_CSD_centroid.5582
 4327 0a1f 12       		.uleb128 0x12
 4328 0a20 560C0000 		.4byte	.LASF109
 4329 0a24 01       		.byte	0x1
 4330 0a25 1306     		.2byte	0x613
 4331 0a27 6B000000 		.4byte	0x6b
 4332 0a2b 02       		.uleb128 0x2
 4333 0a2c 91       		.byte	0x91
 4334 0a2d 5B       		.sleb128 -37
 4335 0a2e 12       		.uleb128 0x12
 4336 0a2f 19080000 		.4byte	.LASF110
 4337 0a33 01       		.byte	0x1
 4338 0a34 1406     		.2byte	0x614
 4339 0a36 83000000 		.4byte	0x83
 4340 0a3a 02       		.uleb128 0x2
 4341 0a3b 91       		.byte	0x91
 4342 0a3c 60       		.sleb128 -32
 4343 0a3d 12       		.uleb128 0x12
 4344 0a3e 37090000 		.4byte	.LASF111
 4345 0a42 01       		.byte	0x1
 4346 0a43 1506     		.2byte	0x615
 4347 0a45 9B000000 		.4byte	0x9b
 4348 0a49 02       		.uleb128 0x2
 4349 0a4a 91       		.byte	0x91
 4350 0a4b 5C       		.sleb128 -36
 4351 0a4c 12       		.uleb128 0x12
 4352 0a4d 5A070000 		.4byte	.LASF103
 4353 0a51 01       		.byte	0x1
 4354 0a52 1706     		.2byte	0x617
 4355 0a54 E7010000 		.4byte	0x1e7
 4356 0a58 02       		.uleb128 0x2
 4357 0a59 91       		.byte	0x91
 4358 0a5a 68       		.sleb128 -24
 4359 0a5b 00       		.byte	0
 4360 0a5c 17       		.uleb128 0x17
 4361 0a5d 6B000000 		.4byte	0x6b
 4362 0a61 6C0A0000 		.4byte	0xa6c
 4363 0a65 18       		.uleb128 0x18
 4364 0a66 BC000000 		.4byte	0xbc
 4365 0a6a 02       		.byte	0x2
 4366 0a6b 00       		.byte	0
 4367 0a6c 16       		.uleb128 0x16
 4368 0a6d 070B0000 		.4byte	.LASF112
 4369 0a71 01       		.byte	0x1
 4370 0a72 D406     		.2byte	0x6d4
 4371 0a74 77000000 		.4byte	0x77
 4372 0a78 00000000 		.4byte	.LFB63
 4373 0a7c 5C010000 		.4byte	.LFE63-.LFB63
 4374 0a80 01       		.uleb128 0x1
 4375 0a81 9C       		.byte	0x9c
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 128


 4376 0a82 FF0A0000 		.4byte	0xaff
 4377 0a86 13       		.uleb128 0x13
 4378 0a87 65030000 		.4byte	.LASF61
 4379 0a8b 01       		.byte	0x1
 4380 0a8c D406     		.2byte	0x6d4
 4381 0a8e 83000000 		.4byte	0x83
 4382 0a92 02       		.uleb128 0x2
 4383 0a93 91       		.byte	0x91
 4384 0a94 64       		.sleb128 -28
 4385 0a95 12       		.uleb128 0x12
 4386 0a96 60000000 		.4byte	.LASF113
 4387 0a9a 01       		.byte	0x1
 4388 0a9b DB06     		.2byte	0x6db
 4389 0a9d 6B000000 		.4byte	0x6b
 4390 0aa1 02       		.uleb128 0x2
 4391 0aa2 91       		.byte	0x91
 4392 0aa3 68       		.sleb128 -24
 4393 0aa4 12       		.uleb128 0x12
 4394 0aa5 37020000 		.4byte	.LASF114
 4395 0aa9 01       		.byte	0x1
 4396 0aaa DC06     		.2byte	0x6dc
 4397 0aac 6B000000 		.4byte	0x6b
 4398 0ab0 02       		.uleb128 0x2
 4399 0ab1 91       		.byte	0x91
 4400 0ab2 6D       		.sleb128 -19
 4401 0ab3 12       		.uleb128 0x12
 4402 0ab4 09030000 		.4byte	.LASF115
 4403 0ab8 01       		.byte	0x1
 4404 0ab9 DD06     		.2byte	0x6dd
 4405 0abb 6B000000 		.4byte	0x6b
 4406 0abf 02       		.uleb128 0x2
 4407 0ac0 91       		.byte	0x91
 4408 0ac1 6C       		.sleb128 -20
 4409 0ac2 12       		.uleb128 0x12
 4410 0ac3 D9050000 		.4byte	.LASF101
 4411 0ac7 01       		.byte	0x1
 4412 0ac8 E706     		.2byte	0x6e7
 4413 0aca 6B000000 		.4byte	0x6b
 4414 0ace 02       		.uleb128 0x2
 4415 0acf 91       		.byte	0x91
 4416 0ad0 69       		.sleb128 -23
 4417 0ad1 12       		.uleb128 0x12
 4418 0ad2 560C0000 		.4byte	.LASF109
 4419 0ad6 01       		.byte	0x1
 4420 0ad7 E806     		.2byte	0x6e8
 4421 0ad9 77000000 		.4byte	0x77
 4422 0add 02       		.uleb128 0x2
 4423 0ade 91       		.byte	0x91
 4424 0adf 6E       		.sleb128 -18
 4425 0ae0 12       		.uleb128 0x12
 4426 0ae1 3C040000 		.4byte	.LASF99
 4427 0ae5 01       		.byte	0x1
 4428 0ae6 E906     		.2byte	0x6e9
 4429 0ae8 6B000000 		.4byte	0x6b
 4430 0aec 02       		.uleb128 0x2
 4431 0aed 91       		.byte	0x91
 4432 0aee 6B       		.sleb128 -21
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 129


 4433 0aef 12       		.uleb128 0x12
 4434 0af0 F4020000 		.4byte	.LASF100
 4435 0af4 01       		.byte	0x1
 4436 0af5 EA06     		.2byte	0x6ea
 4437 0af7 6B000000 		.4byte	0x6b
 4438 0afb 02       		.uleb128 0x2
 4439 0afc 91       		.byte	0x91
 4440 0afd 6A       		.sleb128 -22
 4441 0afe 00       		.byte	0
 4442 0aff 16       		.uleb128 0x16
 4443 0b00 780B0000 		.4byte	.LASF116
 4444 0b04 01       		.byte	0x1
 4445 0b05 9F07     		.2byte	0x79f
 4446 0b07 77000000 		.4byte	0x77
 4447 0b0b 00000000 		.4byte	.LFB64
 4448 0b0f 98000000 		.4byte	.LFE64-.LFB64
 4449 0b13 01       		.uleb128 0x1
 4450 0b14 9C       		.byte	0x9c
 4451 0b15 650B0000 		.4byte	0xb65
 4452 0b19 13       		.uleb128 0x13
 4453 0b1a 65030000 		.4byte	.LASF61
 4454 0b1e 01       		.byte	0x1
 4455 0b1f 9F07     		.2byte	0x79f
 4456 0b21 83000000 		.4byte	0x83
 4457 0b25 02       		.uleb128 0x2
 4458 0b26 91       		.byte	0x91
 4459 0b27 64       		.sleb128 -28
 4460 0b28 12       		.uleb128 0x12
 4461 0b29 D9050000 		.4byte	.LASF101
 4462 0b2d 01       		.byte	0x1
 4463 0b2e AE07     		.2byte	0x7ae
 4464 0b30 6B000000 		.4byte	0x6b
 4465 0b34 02       		.uleb128 0x2
 4466 0b35 91       		.byte	0x91
 4467 0b36 6B       		.sleb128 -21
 4468 0b37 12       		.uleb128 0x12
 4469 0b38 560C0000 		.4byte	.LASF109
 4470 0b3c 01       		.byte	0x1
 4471 0b3d AF07     		.2byte	0x7af
 4472 0b3f 77000000 		.4byte	0x77
 4473 0b43 02       		.uleb128 0x2
 4474 0b44 91       		.byte	0x91
 4475 0b45 6E       		.sleb128 -18
 4476 0b46 12       		.uleb128 0x12
 4477 0b47 3C040000 		.4byte	.LASF99
 4478 0b4b 01       		.byte	0x1
 4479 0b4c B007     		.2byte	0x7b0
 4480 0b4e 6B000000 		.4byte	0x6b
 4481 0b52 02       		.uleb128 0x2
 4482 0b53 91       		.byte	0x91
 4483 0b54 6D       		.sleb128 -19
 4484 0b55 12       		.uleb128 0x12
 4485 0b56 F4020000 		.4byte	.LASF100
 4486 0b5a 01       		.byte	0x1
 4487 0b5b B107     		.2byte	0x7b1
 4488 0b5d 6B000000 		.4byte	0x6b
 4489 0b61 02       		.uleb128 0x2
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 130


 4490 0b62 91       		.byte	0x91
 4491 0b63 6C       		.sleb128 -20
 4492 0b64 00       		.byte	0
 4493 0b65 14       		.uleb128 0x14
 4494 0b66 E1050000 		.4byte	.LASF117
 4495 0b6a 01       		.byte	0x1
 4496 0b6b 4C09     		.2byte	0x94c
 4497 0b6d 77000000 		.4byte	0x77
 4498 0b71 00000000 		.4byte	.LFB65
 4499 0b75 76000000 		.4byte	.LFE65-.LFB65
 4500 0b79 01       		.uleb128 0x1
 4501 0b7a 9C       		.byte	0x9c
 4502 0b7b B90B0000 		.4byte	0xbb9
 4503 0b7f 19       		.uleb128 0x19
 4504 0b80 783100   		.ascii	"x1\000"
 4505 0b83 01       		.byte	0x1
 4506 0b84 4C09     		.2byte	0x94c
 4507 0b86 77000000 		.4byte	0x77
 4508 0b8a 02       		.uleb128 0x2
 4509 0b8b 91       		.byte	0x91
 4510 0b8c 66       		.sleb128 -26
 4511 0b8d 19       		.uleb128 0x19
 4512 0b8e 783200   		.ascii	"x2\000"
 4513 0b91 01       		.byte	0x1
 4514 0b92 4C09     		.2byte	0x94c
 4515 0b94 77000000 		.4byte	0x77
 4516 0b98 02       		.uleb128 0x2
 4517 0b99 91       		.byte	0x91
 4518 0b9a 64       		.sleb128 -28
 4519 0b9b 19       		.uleb128 0x19
 4520 0b9c 783300   		.ascii	"x3\000"
 4521 0b9f 01       		.byte	0x1
 4522 0ba0 4C09     		.2byte	0x94c
 4523 0ba2 77000000 		.4byte	0x77
 4524 0ba6 02       		.uleb128 0x2
 4525 0ba7 91       		.byte	0x91
 4526 0ba8 62       		.sleb128 -30
 4527 0ba9 10       		.uleb128 0x10
 4528 0baa 746D7000 		.ascii	"tmp\000"
 4529 0bae 01       		.byte	0x1
 4530 0baf 4E09     		.2byte	0x94e
 4531 0bb1 77000000 		.4byte	0x77
 4532 0bb5 02       		.uleb128 0x2
 4533 0bb6 91       		.byte	0x91
 4534 0bb7 6E       		.sleb128 -18
 4535 0bb8 00       		.byte	0
 4536 0bb9 14       		.uleb128 0x14
 4537 0bba 4E060000 		.4byte	.LASF118
 4538 0bbe 01       		.byte	0x1
 4539 0bbf C409     		.2byte	0x9c4
 4540 0bc1 77000000 		.4byte	0x77
 4541 0bc5 00000000 		.4byte	.LFB66
 4542 0bc9 3C000000 		.4byte	.LFE66-.LFB66
 4543 0bcd 01       		.uleb128 0x1
 4544 0bce 9C       		.byte	0x9c
 4545 0bcf FF0B0000 		.4byte	0xbff
 4546 0bd3 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 131


 4547 0bd4 783100   		.ascii	"x1\000"
 4548 0bd7 01       		.byte	0x1
 4549 0bd8 C409     		.2byte	0x9c4
 4550 0bda 77000000 		.4byte	0x77
 4551 0bde 02       		.uleb128 0x2
 4552 0bdf 91       		.byte	0x91
 4553 0be0 6E       		.sleb128 -18
 4554 0be1 19       		.uleb128 0x19
 4555 0be2 783200   		.ascii	"x2\000"
 4556 0be5 01       		.byte	0x1
 4557 0be6 C409     		.2byte	0x9c4
 4558 0be8 77000000 		.4byte	0x77
 4559 0bec 02       		.uleb128 0x2
 4560 0bed 91       		.byte	0x91
 4561 0bee 6C       		.sleb128 -20
 4562 0bef 10       		.uleb128 0x10
 4563 0bf0 746D7000 		.ascii	"tmp\000"
 4564 0bf4 01       		.byte	0x1
 4565 0bf5 C609     		.2byte	0x9c6
 4566 0bf7 83000000 		.4byte	0x83
 4567 0bfb 02       		.uleb128 0x2
 4568 0bfc 91       		.byte	0x91
 4569 0bfd 74       		.sleb128 -12
 4570 0bfe 00       		.byte	0
 4571 0bff 14       		.uleb128 0x14
 4572 0c00 D1040000 		.4byte	.LASF119
 4573 0c04 01       		.byte	0x1
 4574 0c05 EC09     		.2byte	0x9ec
 4575 0c07 77000000 		.4byte	0x77
 4576 0c0b 00000000 		.4byte	.LFB67
 4577 0c0f 4C000000 		.4byte	.LFE67-.LFB67
 4578 0c13 01       		.uleb128 0x1
 4579 0c14 9C       		.byte	0x9c
 4580 0c15 360C0000 		.4byte	0xc36
 4581 0c19 19       		.uleb128 0x19
 4582 0c1a 783100   		.ascii	"x1\000"
 4583 0c1d 01       		.byte	0x1
 4584 0c1e EC09     		.2byte	0x9ec
 4585 0c20 77000000 		.4byte	0x77
 4586 0c24 02       		.uleb128 0x2
 4587 0c25 91       		.byte	0x91
 4588 0c26 76       		.sleb128 -10
 4589 0c27 19       		.uleb128 0x19
 4590 0c28 783200   		.ascii	"x2\000"
 4591 0c2b 01       		.byte	0x1
 4592 0c2c EC09     		.2byte	0x9ec
 4593 0c2e 77000000 		.4byte	0x77
 4594 0c32 02       		.uleb128 0x2
 4595 0c33 91       		.byte	0x91
 4596 0c34 74       		.sleb128 -12
 4597 0c35 00       		.byte	0
 4598 0c36 14       		.uleb128 0x14
 4599 0c37 9C060000 		.4byte	.LASF120
 4600 0c3b 01       		.byte	0x1
 4601 0c3c AD0A     		.2byte	0xaad
 4602 0c3e 83000000 		.4byte	0x83
 4603 0c42 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 132


 4604 0c46 1C000000 		.4byte	.LFE68-.LFB68
 4605 0c4a 01       		.uleb128 0x1
 4606 0c4b 9C       		.byte	0x9c
 4607 0c4c 600C0000 		.4byte	0xc60
 4608 0c50 13       		.uleb128 0x13
 4609 0c51 20050000 		.4byte	.LASF52
 4610 0c55 01       		.byte	0x1
 4611 0c56 AD0A     		.2byte	0xaad
 4612 0c58 83000000 		.4byte	0x83
 4613 0c5c 02       		.uleb128 0x2
 4614 0c5d 91       		.byte	0x91
 4615 0c5e 74       		.sleb128 -12
 4616 0c5f 00       		.byte	0
 4617 0c60 14       		.uleb128 0x14
 4618 0c61 190A0000 		.4byte	.LASF121
 4619 0c65 01       		.byte	0x1
 4620 0c66 C70A     		.2byte	0xac7
 4621 0c68 6B000000 		.4byte	0x6b
 4622 0c6c 00000000 		.4byte	.LFB69
 4623 0c70 1C000000 		.4byte	.LFE69-.LFB69
 4624 0c74 01       		.uleb128 0x1
 4625 0c75 9C       		.byte	0x9c
 4626 0c76 8A0C0000 		.4byte	0xc8a
 4627 0c7a 13       		.uleb128 0x13
 4628 0c7b 20050000 		.4byte	.LASF52
 4629 0c7f 01       		.byte	0x1
 4630 0c80 C70A     		.2byte	0xac7
 4631 0c82 83000000 		.4byte	0x83
 4632 0c86 02       		.uleb128 0x2
 4633 0c87 91       		.byte	0x91
 4634 0c88 74       		.sleb128 -12
 4635 0c89 00       		.byte	0
 4636 0c8a 14       		.uleb128 0x14
 4637 0c8b 1E020000 		.4byte	.LASF122
 4638 0c8f 01       		.byte	0x1
 4639 0c90 E10A     		.2byte	0xae1
 4640 0c92 6B000000 		.4byte	0x6b
 4641 0c96 00000000 		.4byte	.LFB70
 4642 0c9a 1C000000 		.4byte	.LFE70-.LFB70
 4643 0c9e 01       		.uleb128 0x1
 4644 0c9f 9C       		.byte	0x9c
 4645 0ca0 B40C0000 		.4byte	0xcb4
 4646 0ca4 13       		.uleb128 0x13
 4647 0ca5 65030000 		.4byte	.LASF61
 4648 0ca9 01       		.byte	0x1
 4649 0caa E10A     		.2byte	0xae1
 4650 0cac 83000000 		.4byte	0x83
 4651 0cb0 02       		.uleb128 0x2
 4652 0cb1 91       		.byte	0x91
 4653 0cb2 74       		.sleb128 -12
 4654 0cb3 00       		.byte	0
 4655 0cb4 1A       		.uleb128 0x1a
 4656 0cb5 5F0A0000 		.4byte	.LASF123
 4657 0cb9 01       		.byte	0x1
 4658 0cba FB0A     		.2byte	0xafb
 4659 0cbc 00000000 		.4byte	.LFB71
 4660 0cc0 14000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 133


 4661 0cc4 01       		.uleb128 0x1
 4662 0cc5 9C       		.byte	0x9c
 4663 0cc6 1A       		.uleb128 0x1a
 4664 0cc7 FD040000 		.4byte	.LASF124
 4665 0ccb 01       		.byte	0x1
 4666 0ccc 140B     		.2byte	0xb14
 4667 0cce 00000000 		.4byte	.LFB72
 4668 0cd2 14000000 		.4byte	.LFE72-.LFB72
 4669 0cd6 01       		.uleb128 0x1
 4670 0cd7 9C       		.byte	0x9c
 4671 0cd8 17       		.uleb128 0x17
 4672 0cd9 E80C0000 		.4byte	0xce8
 4673 0cdd E80C0000 		.4byte	0xce8
 4674 0ce1 18       		.uleb128 0x18
 4675 0ce2 BC000000 		.4byte	0xbc
 4676 0ce6 00       		.byte	0
 4677 0ce7 00       		.byte	0
 4678 0ce8 08       		.uleb128 0x8
 4679 0ce9 77000000 		.4byte	0x77
 4680 0ced 1B       		.uleb128 0x1b
 4681 0cee 01040000 		.4byte	.LASF125
 4682 0cf2 01       		.byte	0x1
 4683 0cf3 5D       		.byte	0x5d
 4684 0cf4 FE0C0000 		.4byte	0xcfe
 4685 0cf8 05       		.uleb128 0x5
 4686 0cf9 03       		.byte	0x3
 4687 0cfa 08000000 		.4byte	CapSense_CSD_centroidMult
 4688 0cfe 08       		.uleb128 0x8
 4689 0cff D80C0000 		.4byte	0xcd8
 4690 0d03 1B       		.uleb128 0x1b
 4691 0d04 D20B0000 		.4byte	.LASF126
 4692 0d08 01       		.byte	0x1
 4693 0d09 61       		.byte	0x61
 4694 0d0a E2070000 		.4byte	0x7e2
 4695 0d0e 05       		.uleb128 0x5
 4696 0d0f 03       		.byte	0x3
 4697 0d10 0C000000 		.4byte	CapSense_CSD_posFiltersMask
 4698 0d14 1B       		.uleb128 0x1b
 4699 0d15 F4090000 		.4byte	.LASF127
 4700 0d19 01       		.byte	0x1
 4701 0d1a 65       		.byte	0x65
 4702 0d1b 5C0A0000 		.4byte	0xa5c
 4703 0d1f 05       		.uleb128 0x5
 4704 0d20 03       		.byte	0x3
 4705 0d21 10000000 		.4byte	CapSense_CSD_posFiltersData
 4706 0d25 17       		.uleb128 0x17
 4707 0d26 77000000 		.4byte	0x77
 4708 0d2a 350D0000 		.4byte	0xd35
 4709 0d2e 18       		.uleb128 0x18
 4710 0d2f BC000000 		.4byte	0xbc
 4711 0d33 04       		.byte	0x4
 4712 0d34 00       		.byte	0
 4713 0d35 1C       		.uleb128 0x1c
 4714 0d36 A9010000 		.4byte	.LASF128
 4715 0d3a 01       		.byte	0x1
 4716 0d3b 2C       		.byte	0x2c
 4717 0d3c 250D0000 		.4byte	0xd25
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 134


 4718 0d40 1C       		.uleb128 0x1c
 4719 0d41 5C080000 		.4byte	.LASF129
 4720 0d45 01       		.byte	0x1
 4721 0d46 2D       		.byte	0x2d
 4722 0d47 E2070000 		.4byte	0x7e2
 4723 0d4b 17       		.uleb128 0x17
 4724 0d4c F3010000 		.4byte	0x1f3
 4725 0d50 5B0D0000 		.4byte	0xd5b
 4726 0d54 18       		.uleb128 0x18
 4727 0d55 BC000000 		.4byte	0xbc
 4728 0d59 04       		.byte	0x4
 4729 0d5a 00       		.byte	0
 4730 0d5b 1C       		.uleb128 0x1c
 4731 0d5c D10A0000 		.4byte	.LASF130
 4732 0d60 01       		.byte	0x1
 4733 0d61 2E       		.byte	0x2e
 4734 0d62 660D0000 		.4byte	0xd66
 4735 0d66 08       		.uleb128 0x8
 4736 0d67 4B0D0000 		.4byte	0xd4b
 4737 0d6b 1D       		.uleb128 0x1d
 4738 0d6c 1B040000 		.4byte	.LASF131
 4739 0d70 01       		.byte	0x1
 4740 0d71 34       		.byte	0x34
 4741 0d72 250D0000 		.4byte	0xd25
 4742 0d76 05       		.uleb128 0x5
 4743 0d77 03       		.byte	0x3
 4744 0d78 00000000 		.4byte	CapSense_CSD_sensorBaseline
 4745 0d7c 17       		.uleb128 0x17
 4746 0d7d 6B000000 		.4byte	0x6b
 4747 0d81 8C0D0000 		.4byte	0xd8c
 4748 0d85 18       		.uleb128 0x18
 4749 0d86 BC000000 		.4byte	0xbc
 4750 0d8a 04       		.byte	0x4
 4751 0d8b 00       		.byte	0
 4752 0d8c 1D       		.uleb128 0x1d
 4753 0d8d A8080000 		.4byte	.LASF132
 4754 0d91 01       		.byte	0x1
 4755 0d92 35       		.byte	0x35
 4756 0d93 7C0D0000 		.4byte	0xd7c
 4757 0d97 05       		.uleb128 0x5
 4758 0d98 03       		.byte	0x3
 4759 0d99 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 4760 0d9d 1D       		.uleb128 0x1d
 4761 0d9e C4070000 		.4byte	.LASF133
 4762 0da2 01       		.byte	0x1
 4763 0da3 36       		.byte	0x36
 4764 0da4 7C0D0000 		.4byte	0xd7c
 4765 0da8 05       		.uleb128 0x5
 4766 0da9 03       		.byte	0x3
 4767 0daa 00000000 		.4byte	CapSense_CSD_sensorSignal
 4768 0dae 1D       		.uleb128 0x1d
 4769 0daf DD060000 		.4byte	.LASF134
 4770 0db3 01       		.byte	0x1
 4771 0db4 37       		.byte	0x37
 4772 0db5 E2070000 		.4byte	0x7e2
 4773 0db9 05       		.uleb128 0x5
 4774 0dba 03       		.byte	0x3
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 135


 4775 0dbb 00000000 		.4byte	CapSense_CSD_sensorOnMask
 4776 0dbf 1D       		.uleb128 0x1d
 4777 0dc0 2D030000 		.4byte	.LASF135
 4778 0dc4 01       		.byte	0x1
 4779 0dc5 39       		.byte	0x39
 4780 0dc6 7C0D0000 		.4byte	0xd7c
 4781 0dca 05       		.uleb128 0x5
 4782 0dcb 03       		.byte	0x3
 4783 0dcc 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 4784 0dd0 1D       		.uleb128 0x1d
 4785 0dd1 42000000 		.4byte	.LASF136
 4786 0dd5 01       		.byte	0x1
 4787 0dd6 3A       		.byte	0x3a
 4788 0dd7 7C0D0000 		.4byte	0xd7c
 4789 0ddb 05       		.uleb128 0x5
 4790 0ddc 03       		.byte	0x3
 4791 0ddd 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 4792 0de1 1D       		.uleb128 0x1d
 4793 0de2 64020000 		.4byte	.LASF137
 4794 0de6 01       		.byte	0x1
 4795 0de7 49       		.byte	0x49
 4796 0de8 E2070000 		.4byte	0x7e2
 4797 0dec 05       		.uleb128 0x5
 4798 0ded 03       		.byte	0x3
 4799 0dee 00000000 		.4byte	CapSense_CSD_fingerThreshold
 4800 0df2 1D       		.uleb128 0x1d
 4801 0df3 FB050000 		.4byte	.LASF138
 4802 0df7 01       		.byte	0x1
 4803 0df8 4B       		.byte	0x4b
 4804 0df9 E2070000 		.4byte	0x7e2
 4805 0dfd 05       		.uleb128 0x5
 4806 0dfe 03       		.byte	0x3
 4807 0dff 00000000 		.4byte	CapSense_CSD_noiseThreshold
 4808 0e03 1D       		.uleb128 0x1d
 4809 0e04 0B070000 		.4byte	.LASF139
 4810 0e08 01       		.byte	0x1
 4811 0e09 4D       		.byte	0x4d
 4812 0e0a E2070000 		.4byte	0x7e2
 4813 0e0e 05       		.uleb128 0x5
 4814 0e0f 03       		.byte	0x3
 4815 0e10 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 4816 0e14 1D       		.uleb128 0x1d
 4817 0e15 CC080000 		.4byte	.LASF140
 4818 0e19 01       		.byte	0x1
 4819 0e1a 4F       		.byte	0x4f
 4820 0e1b E2070000 		.4byte	0x7e2
 4821 0e1f 05       		.uleb128 0x5
 4822 0e20 03       		.byte	0x3
 4823 0e21 00000000 		.4byte	CapSense_CSD_hysteresis
 4824 0e25 1D       		.uleb128 0x1d
 4825 0e26 3A0A0000 		.4byte	.LASF141
 4826 0e2a 01       		.byte	0x1
 4827 0e2b 51       		.byte	0x51
 4828 0e2c E2070000 		.4byte	0x7e2
 4829 0e30 05       		.uleb128 0x5
 4830 0e31 03       		.byte	0x3
 4831 0e32 00000000 		.4byte	CapSense_CSD_debounce
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 136


 4832 0e36 17       		.uleb128 0x17
 4833 0e37 F3010000 		.4byte	0x1f3
 4834 0e3b 460E0000 		.4byte	0xe46
 4835 0e3f 18       		.uleb128 0x18
 4836 0e40 BC000000 		.4byte	0xbc
 4837 0e44 00       		.byte	0
 4838 0e45 00       		.byte	0
 4839 0e46 1D       		.uleb128 0x1d
 4840 0e47 FF070000 		.4byte	.LASF142
 4841 0e4b 01       		.byte	0x1
 4842 0e4c 55       		.byte	0x55
 4843 0e4d 570E0000 		.4byte	0xe57
 4844 0e51 05       		.uleb128 0x5
 4845 0e52 03       		.byte	0x3
 4846 0e53 00000000 		.4byte	CapSense_CSD_rawDataIndex
 4847 0e57 08       		.uleb128 0x8
 4848 0e58 360E0000 		.4byte	0xe36
 4849 0e5c 1D       		.uleb128 0x1d
 4850 0e5d 37050000 		.4byte	.LASF143
 4851 0e61 01       		.byte	0x1
 4852 0e62 59       		.byte	0x59
 4853 0e63 6D0E0000 		.4byte	0xe6d
 4854 0e67 05       		.uleb128 0x5
 4855 0e68 03       		.byte	0x3
 4856 0e69 00000000 		.4byte	CapSense_CSD_numberOfSensors
 4857 0e6d 08       		.uleb128 0x8
 4858 0e6e 360E0000 		.4byte	0xe36
 4859 0e72 1D       		.uleb128 0x1d
 4860 0e73 A8070000 		.4byte	.LASF144
 4861 0e77 01       		.byte	0x1
 4862 0e78 27       		.byte	0x27
 4863 0e79 250D0000 		.4byte	0xd25
 4864 0e7d 05       		.uleb128 0x5
 4865 0e7e 03       		.byte	0x3
 4866 0e7f 00000000 		.4byte	CapSense_CSD_rawFilterData1
 4867 0e83 1C       		.uleb128 0x1c
 4868 0e84 3A080000 		.4byte	.LASF145
 4869 0e88 01       		.byte	0x1
 4870 0e89 41       		.byte	0x41
 4871 0e8a C6020000 		.4byte	0x2c6
 4872 0e8e 1D       		.uleb128 0x1d
 4873 0e8f 46020000 		.4byte	.LASF146
 4874 0e93 01       		.byte	0x1
 4875 0e94 45       		.byte	0x45
 4876 0e95 6B000000 		.4byte	0x6b
 4877 0e99 05       		.uleb128 0x5
 4878 0e9a 03       		.byte	0x3
 4879 0e9b 00000000 		.4byte	CapSense_CSD_enableRawFilters
 4880 0e9f 00       		.byte	0
 4881              		.section	.debug_abbrev,"",%progbits
 4882              	.Ldebug_abbrev0:
 4883 0000 01       		.uleb128 0x1
 4884 0001 11       		.uleb128 0x11
 4885 0002 01       		.byte	0x1
 4886 0003 25       		.uleb128 0x25
 4887 0004 0E       		.uleb128 0xe
 4888 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 137


 4889 0006 0B       		.uleb128 0xb
 4890 0007 03       		.uleb128 0x3
 4891 0008 0E       		.uleb128 0xe
 4892 0009 1B       		.uleb128 0x1b
 4893 000a 0E       		.uleb128 0xe
 4894 000b 55       		.uleb128 0x55
 4895 000c 17       		.uleb128 0x17
 4896 000d 11       		.uleb128 0x11
 4897 000e 01       		.uleb128 0x1
 4898 000f 10       		.uleb128 0x10
 4899 0010 17       		.uleb128 0x17
 4900 0011 00       		.byte	0
 4901 0012 00       		.byte	0
 4902 0013 02       		.uleb128 0x2
 4903 0014 24       		.uleb128 0x24
 4904 0015 00       		.byte	0
 4905 0016 0B       		.uleb128 0xb
 4906 0017 0B       		.uleb128 0xb
 4907 0018 3E       		.uleb128 0x3e
 4908 0019 0B       		.uleb128 0xb
 4909 001a 03       		.uleb128 0x3
 4910 001b 0E       		.uleb128 0xe
 4911 001c 00       		.byte	0
 4912 001d 00       		.byte	0
 4913 001e 03       		.uleb128 0x3
 4914 001f 24       		.uleb128 0x24
 4915 0020 00       		.byte	0
 4916 0021 0B       		.uleb128 0xb
 4917 0022 0B       		.uleb128 0xb
 4918 0023 3E       		.uleb128 0x3e
 4919 0024 0B       		.uleb128 0xb
 4920 0025 03       		.uleb128 0x3
 4921 0026 08       		.uleb128 0x8
 4922 0027 00       		.byte	0
 4923 0028 00       		.byte	0
 4924 0029 04       		.uleb128 0x4
 4925 002a 16       		.uleb128 0x16
 4926 002b 00       		.byte	0
 4927 002c 03       		.uleb128 0x3
 4928 002d 0E       		.uleb128 0xe
 4929 002e 3A       		.uleb128 0x3a
 4930 002f 0B       		.uleb128 0xb
 4931 0030 3B       		.uleb128 0x3b
 4932 0031 05       		.uleb128 0x5
 4933 0032 49       		.uleb128 0x49
 4934 0033 13       		.uleb128 0x13
 4935 0034 00       		.byte	0
 4936 0035 00       		.byte	0
 4937 0036 05       		.uleb128 0x5
 4938 0037 13       		.uleb128 0x13
 4939 0038 01       		.byte	0x1
 4940 0039 0B       		.uleb128 0xb
 4941 003a 0B       		.uleb128 0xb
 4942 003b 3A       		.uleb128 0x3a
 4943 003c 0B       		.uleb128 0xb
 4944 003d 3B       		.uleb128 0x3b
 4945 003e 0B       		.uleb128 0xb
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 138


 4946 003f 01       		.uleb128 0x1
 4947 0040 13       		.uleb128 0x13
 4948 0041 00       		.byte	0
 4949 0042 00       		.byte	0
 4950 0043 06       		.uleb128 0x6
 4951 0044 0D       		.uleb128 0xd
 4952 0045 00       		.byte	0
 4953 0046 03       		.uleb128 0x3
 4954 0047 0E       		.uleb128 0xe
 4955 0048 3A       		.uleb128 0x3a
 4956 0049 0B       		.uleb128 0xb
 4957 004a 3B       		.uleb128 0x3b
 4958 004b 0B       		.uleb128 0xb
 4959 004c 49       		.uleb128 0x49
 4960 004d 13       		.uleb128 0x13
 4961 004e 38       		.uleb128 0x38
 4962 004f 0B       		.uleb128 0xb
 4963 0050 00       		.byte	0
 4964 0051 00       		.byte	0
 4965 0052 07       		.uleb128 0x7
 4966 0053 0F       		.uleb128 0xf
 4967 0054 00       		.byte	0
 4968 0055 0B       		.uleb128 0xb
 4969 0056 0B       		.uleb128 0xb
 4970 0057 49       		.uleb128 0x49
 4971 0058 13       		.uleb128 0x13
 4972 0059 00       		.byte	0
 4973 005a 00       		.byte	0
 4974 005b 08       		.uleb128 0x8
 4975 005c 26       		.uleb128 0x26
 4976 005d 00       		.byte	0
 4977 005e 49       		.uleb128 0x49
 4978 005f 13       		.uleb128 0x13
 4979 0060 00       		.byte	0
 4980 0061 00       		.byte	0
 4981 0062 09       		.uleb128 0x9
 4982 0063 15       		.uleb128 0x15
 4983 0064 01       		.byte	0x1
 4984 0065 27       		.uleb128 0x27
 4985 0066 19       		.uleb128 0x19
 4986 0067 49       		.uleb128 0x49
 4987 0068 13       		.uleb128 0x13
 4988 0069 01       		.uleb128 0x1
 4989 006a 13       		.uleb128 0x13
 4990 006b 00       		.byte	0
 4991 006c 00       		.byte	0
 4992 006d 0A       		.uleb128 0xa
 4993 006e 05       		.uleb128 0x5
 4994 006f 00       		.byte	0
 4995 0070 49       		.uleb128 0x49
 4996 0071 13       		.uleb128 0x13
 4997 0072 00       		.byte	0
 4998 0073 00       		.byte	0
 4999 0074 0B       		.uleb128 0xb
 5000 0075 15       		.uleb128 0x15
 5001 0076 01       		.byte	0x1
 5002 0077 27       		.uleb128 0x27
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 139


 5003 0078 19       		.uleb128 0x19
 5004 0079 01       		.uleb128 0x1
 5005 007a 13       		.uleb128 0x13
 5006 007b 00       		.byte	0
 5007 007c 00       		.byte	0
 5008 007d 0C       		.uleb128 0xc
 5009 007e 16       		.uleb128 0x16
 5010 007f 00       		.byte	0
 5011 0080 03       		.uleb128 0x3
 5012 0081 0E       		.uleb128 0xe
 5013 0082 3A       		.uleb128 0x3a
 5014 0083 0B       		.uleb128 0xb
 5015 0084 3B       		.uleb128 0x3b
 5016 0085 0B       		.uleb128 0xb
 5017 0086 49       		.uleb128 0x49
 5018 0087 13       		.uleb128 0x13
 5019 0088 00       		.byte	0
 5020 0089 00       		.byte	0
 5021 008a 0D       		.uleb128 0xd
 5022 008b 2E       		.uleb128 0x2e
 5023 008c 01       		.byte	0x1
 5024 008d 3F       		.uleb128 0x3f
 5025 008e 19       		.uleb128 0x19
 5026 008f 03       		.uleb128 0x3
 5027 0090 0E       		.uleb128 0xe
 5028 0091 3A       		.uleb128 0x3a
 5029 0092 0B       		.uleb128 0xb
 5030 0093 3B       		.uleb128 0x3b
 5031 0094 0B       		.uleb128 0xb
 5032 0095 27       		.uleb128 0x27
 5033 0096 19       		.uleb128 0x19
 5034 0097 11       		.uleb128 0x11
 5035 0098 01       		.uleb128 0x1
 5036 0099 12       		.uleb128 0x12
 5037 009a 06       		.uleb128 0x6
 5038 009b 40       		.uleb128 0x40
 5039 009c 18       		.uleb128 0x18
 5040 009d 9742     		.uleb128 0x2117
 5041 009f 19       		.uleb128 0x19
 5042 00a0 01       		.uleb128 0x1
 5043 00a1 13       		.uleb128 0x13
 5044 00a2 00       		.byte	0
 5045 00a3 00       		.byte	0
 5046 00a4 0E       		.uleb128 0xe
 5047 00a5 05       		.uleb128 0x5
 5048 00a6 00       		.byte	0
 5049 00a7 03       		.uleb128 0x3
 5050 00a8 0E       		.uleb128 0xe
 5051 00a9 3A       		.uleb128 0x3a
 5052 00aa 0B       		.uleb128 0xb
 5053 00ab 3B       		.uleb128 0x3b
 5054 00ac 0B       		.uleb128 0xb
 5055 00ad 49       		.uleb128 0x49
 5056 00ae 13       		.uleb128 0x13
 5057 00af 02       		.uleb128 0x2
 5058 00b0 18       		.uleb128 0x18
 5059 00b1 00       		.byte	0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 140


 5060 00b2 00       		.byte	0
 5061 00b3 0F       		.uleb128 0xf
 5062 00b4 2E       		.uleb128 0x2e
 5063 00b5 01       		.byte	0x1
 5064 00b6 3F       		.uleb128 0x3f
 5065 00b7 19       		.uleb128 0x19
 5066 00b8 03       		.uleb128 0x3
 5067 00b9 0E       		.uleb128 0xe
 5068 00ba 3A       		.uleb128 0x3a
 5069 00bb 0B       		.uleb128 0xb
 5070 00bc 3B       		.uleb128 0x3b
 5071 00bd 0B       		.uleb128 0xb
 5072 00be 27       		.uleb128 0x27
 5073 00bf 19       		.uleb128 0x19
 5074 00c0 11       		.uleb128 0x11
 5075 00c1 01       		.uleb128 0x1
 5076 00c2 12       		.uleb128 0x12
 5077 00c3 06       		.uleb128 0x6
 5078 00c4 40       		.uleb128 0x40
 5079 00c5 18       		.uleb128 0x18
 5080 00c6 9642     		.uleb128 0x2116
 5081 00c8 19       		.uleb128 0x19
 5082 00c9 01       		.uleb128 0x1
 5083 00ca 13       		.uleb128 0x13
 5084 00cb 00       		.byte	0
 5085 00cc 00       		.byte	0
 5086 00cd 10       		.uleb128 0x10
 5087 00ce 34       		.uleb128 0x34
 5088 00cf 00       		.byte	0
 5089 00d0 03       		.uleb128 0x3
 5090 00d1 08       		.uleb128 0x8
 5091 00d2 3A       		.uleb128 0x3a
 5092 00d3 0B       		.uleb128 0xb
 5093 00d4 3B       		.uleb128 0x3b
 5094 00d5 05       		.uleb128 0x5
 5095 00d6 49       		.uleb128 0x49
 5096 00d7 13       		.uleb128 0x13
 5097 00d8 02       		.uleb128 0x2
 5098 00d9 18       		.uleb128 0x18
 5099 00da 00       		.byte	0
 5100 00db 00       		.byte	0
 5101 00dc 11       		.uleb128 0x11
 5102 00dd 2E       		.uleb128 0x2e
 5103 00de 01       		.byte	0x1
 5104 00df 3F       		.uleb128 0x3f
 5105 00e0 19       		.uleb128 0x19
 5106 00e1 03       		.uleb128 0x3
 5107 00e2 0E       		.uleb128 0xe
 5108 00e3 3A       		.uleb128 0x3a
 5109 00e4 0B       		.uleb128 0xb
 5110 00e5 3B       		.uleb128 0x3b
 5111 00e6 05       		.uleb128 0x5
 5112 00e7 27       		.uleb128 0x27
 5113 00e8 19       		.uleb128 0x19
 5114 00e9 11       		.uleb128 0x11
 5115 00ea 01       		.uleb128 0x1
 5116 00eb 12       		.uleb128 0x12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 141


 5117 00ec 06       		.uleb128 0x6
 5118 00ed 40       		.uleb128 0x40
 5119 00ee 18       		.uleb128 0x18
 5120 00ef 9642     		.uleb128 0x2116
 5121 00f1 19       		.uleb128 0x19
 5122 00f2 01       		.uleb128 0x1
 5123 00f3 13       		.uleb128 0x13
 5124 00f4 00       		.byte	0
 5125 00f5 00       		.byte	0
 5126 00f6 12       		.uleb128 0x12
 5127 00f7 34       		.uleb128 0x34
 5128 00f8 00       		.byte	0
 5129 00f9 03       		.uleb128 0x3
 5130 00fa 0E       		.uleb128 0xe
 5131 00fb 3A       		.uleb128 0x3a
 5132 00fc 0B       		.uleb128 0xb
 5133 00fd 3B       		.uleb128 0x3b
 5134 00fe 05       		.uleb128 0x5
 5135 00ff 49       		.uleb128 0x49
 5136 0100 13       		.uleb128 0x13
 5137 0101 02       		.uleb128 0x2
 5138 0102 18       		.uleb128 0x18
 5139 0103 00       		.byte	0
 5140 0104 00       		.byte	0
 5141 0105 13       		.uleb128 0x13
 5142 0106 05       		.uleb128 0x5
 5143 0107 00       		.byte	0
 5144 0108 03       		.uleb128 0x3
 5145 0109 0E       		.uleb128 0xe
 5146 010a 3A       		.uleb128 0x3a
 5147 010b 0B       		.uleb128 0xb
 5148 010c 3B       		.uleb128 0x3b
 5149 010d 05       		.uleb128 0x5
 5150 010e 49       		.uleb128 0x49
 5151 010f 13       		.uleb128 0x13
 5152 0110 02       		.uleb128 0x2
 5153 0111 18       		.uleb128 0x18
 5154 0112 00       		.byte	0
 5155 0113 00       		.byte	0
 5156 0114 14       		.uleb128 0x14
 5157 0115 2E       		.uleb128 0x2e
 5158 0116 01       		.byte	0x1
 5159 0117 3F       		.uleb128 0x3f
 5160 0118 19       		.uleb128 0x19
 5161 0119 03       		.uleb128 0x3
 5162 011a 0E       		.uleb128 0xe
 5163 011b 3A       		.uleb128 0x3a
 5164 011c 0B       		.uleb128 0xb
 5165 011d 3B       		.uleb128 0x3b
 5166 011e 05       		.uleb128 0x5
 5167 011f 27       		.uleb128 0x27
 5168 0120 19       		.uleb128 0x19
 5169 0121 49       		.uleb128 0x49
 5170 0122 13       		.uleb128 0x13
 5171 0123 11       		.uleb128 0x11
 5172 0124 01       		.uleb128 0x1
 5173 0125 12       		.uleb128 0x12
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 142


 5174 0126 06       		.uleb128 0x6
 5175 0127 40       		.uleb128 0x40
 5176 0128 18       		.uleb128 0x18
 5177 0129 9742     		.uleb128 0x2117
 5178 012b 19       		.uleb128 0x19
 5179 012c 01       		.uleb128 0x1
 5180 012d 13       		.uleb128 0x13
 5181 012e 00       		.byte	0
 5182 012f 00       		.byte	0
 5183 0130 15       		.uleb128 0x15
 5184 0131 2E       		.uleb128 0x2e
 5185 0132 01       		.byte	0x1
 5186 0133 3F       		.uleb128 0x3f
 5187 0134 19       		.uleb128 0x19
 5188 0135 03       		.uleb128 0x3
 5189 0136 0E       		.uleb128 0xe
 5190 0137 3A       		.uleb128 0x3a
 5191 0138 0B       		.uleb128 0xb
 5192 0139 3B       		.uleb128 0x3b
 5193 013a 05       		.uleb128 0x5
 5194 013b 27       		.uleb128 0x27
 5195 013c 19       		.uleb128 0x19
 5196 013d 11       		.uleb128 0x11
 5197 013e 01       		.uleb128 0x1
 5198 013f 12       		.uleb128 0x12
 5199 0140 06       		.uleb128 0x6
 5200 0141 40       		.uleb128 0x40
 5201 0142 18       		.uleb128 0x18
 5202 0143 9742     		.uleb128 0x2117
 5203 0145 19       		.uleb128 0x19
 5204 0146 01       		.uleb128 0x1
 5205 0147 13       		.uleb128 0x13
 5206 0148 00       		.byte	0
 5207 0149 00       		.byte	0
 5208 014a 16       		.uleb128 0x16
 5209 014b 2E       		.uleb128 0x2e
 5210 014c 01       		.byte	0x1
 5211 014d 3F       		.uleb128 0x3f
 5212 014e 19       		.uleb128 0x19
 5213 014f 03       		.uleb128 0x3
 5214 0150 0E       		.uleb128 0xe
 5215 0151 3A       		.uleb128 0x3a
 5216 0152 0B       		.uleb128 0xb
 5217 0153 3B       		.uleb128 0x3b
 5218 0154 05       		.uleb128 0x5
 5219 0155 27       		.uleb128 0x27
 5220 0156 19       		.uleb128 0x19
 5221 0157 49       		.uleb128 0x49
 5222 0158 13       		.uleb128 0x13
 5223 0159 11       		.uleb128 0x11
 5224 015a 01       		.uleb128 0x1
 5225 015b 12       		.uleb128 0x12
 5226 015c 06       		.uleb128 0x6
 5227 015d 40       		.uleb128 0x40
 5228 015e 18       		.uleb128 0x18
 5229 015f 9642     		.uleb128 0x2116
 5230 0161 19       		.uleb128 0x19
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 143


 5231 0162 01       		.uleb128 0x1
 5232 0163 13       		.uleb128 0x13
 5233 0164 00       		.byte	0
 5234 0165 00       		.byte	0
 5235 0166 17       		.uleb128 0x17
 5236 0167 01       		.uleb128 0x1
 5237 0168 01       		.byte	0x1
 5238 0169 49       		.uleb128 0x49
 5239 016a 13       		.uleb128 0x13
 5240 016b 01       		.uleb128 0x1
 5241 016c 13       		.uleb128 0x13
 5242 016d 00       		.byte	0
 5243 016e 00       		.byte	0
 5244 016f 18       		.uleb128 0x18
 5245 0170 21       		.uleb128 0x21
 5246 0171 00       		.byte	0
 5247 0172 49       		.uleb128 0x49
 5248 0173 13       		.uleb128 0x13
 5249 0174 2F       		.uleb128 0x2f
 5250 0175 0B       		.uleb128 0xb
 5251 0176 00       		.byte	0
 5252 0177 00       		.byte	0
 5253 0178 19       		.uleb128 0x19
 5254 0179 05       		.uleb128 0x5
 5255 017a 00       		.byte	0
 5256 017b 03       		.uleb128 0x3
 5257 017c 08       		.uleb128 0x8
 5258 017d 3A       		.uleb128 0x3a
 5259 017e 0B       		.uleb128 0xb
 5260 017f 3B       		.uleb128 0x3b
 5261 0180 05       		.uleb128 0x5
 5262 0181 49       		.uleb128 0x49
 5263 0182 13       		.uleb128 0x13
 5264 0183 02       		.uleb128 0x2
 5265 0184 18       		.uleb128 0x18
 5266 0185 00       		.byte	0
 5267 0186 00       		.byte	0
 5268 0187 1A       		.uleb128 0x1a
 5269 0188 2E       		.uleb128 0x2e
 5270 0189 00       		.byte	0
 5271 018a 3F       		.uleb128 0x3f
 5272 018b 19       		.uleb128 0x19
 5273 018c 03       		.uleb128 0x3
 5274 018d 0E       		.uleb128 0xe
 5275 018e 3A       		.uleb128 0x3a
 5276 018f 0B       		.uleb128 0xb
 5277 0190 3B       		.uleb128 0x3b
 5278 0191 05       		.uleb128 0x5
 5279 0192 27       		.uleb128 0x27
 5280 0193 19       		.uleb128 0x19
 5281 0194 11       		.uleb128 0x11
 5282 0195 01       		.uleb128 0x1
 5283 0196 12       		.uleb128 0x12
 5284 0197 06       		.uleb128 0x6
 5285 0198 40       		.uleb128 0x40
 5286 0199 18       		.uleb128 0x18
 5287 019a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 144


 5288 019c 19       		.uleb128 0x19
 5289 019d 00       		.byte	0
 5290 019e 00       		.byte	0
 5291 019f 1B       		.uleb128 0x1b
 5292 01a0 34       		.uleb128 0x34
 5293 01a1 00       		.byte	0
 5294 01a2 03       		.uleb128 0x3
 5295 01a3 0E       		.uleb128 0xe
 5296 01a4 3A       		.uleb128 0x3a
 5297 01a5 0B       		.uleb128 0xb
 5298 01a6 3B       		.uleb128 0x3b
 5299 01a7 0B       		.uleb128 0xb
 5300 01a8 49       		.uleb128 0x49
 5301 01a9 13       		.uleb128 0x13
 5302 01aa 02       		.uleb128 0x2
 5303 01ab 18       		.uleb128 0x18
 5304 01ac 00       		.byte	0
 5305 01ad 00       		.byte	0
 5306 01ae 1C       		.uleb128 0x1c
 5307 01af 34       		.uleb128 0x34
 5308 01b0 00       		.byte	0
 5309 01b1 03       		.uleb128 0x3
 5310 01b2 0E       		.uleb128 0xe
 5311 01b3 3A       		.uleb128 0x3a
 5312 01b4 0B       		.uleb128 0xb
 5313 01b5 3B       		.uleb128 0x3b
 5314 01b6 0B       		.uleb128 0xb
 5315 01b7 49       		.uleb128 0x49
 5316 01b8 13       		.uleb128 0x13
 5317 01b9 3F       		.uleb128 0x3f
 5318 01ba 19       		.uleb128 0x19
 5319 01bb 3C       		.uleb128 0x3c
 5320 01bc 19       		.uleb128 0x19
 5321 01bd 00       		.byte	0
 5322 01be 00       		.byte	0
 5323 01bf 1D       		.uleb128 0x1d
 5324 01c0 34       		.uleb128 0x34
 5325 01c1 00       		.byte	0
 5326 01c2 03       		.uleb128 0x3
 5327 01c3 0E       		.uleb128 0xe
 5328 01c4 3A       		.uleb128 0x3a
 5329 01c5 0B       		.uleb128 0xb
 5330 01c6 3B       		.uleb128 0x3b
 5331 01c7 0B       		.uleb128 0xb
 5332 01c8 49       		.uleb128 0x49
 5333 01c9 13       		.uleb128 0x13
 5334 01ca 3F       		.uleb128 0x3f
 5335 01cb 19       		.uleb128 0x19
 5336 01cc 02       		.uleb128 0x2
 5337 01cd 18       		.uleb128 0x18
 5338 01ce 00       		.byte	0
 5339 01cf 00       		.byte	0
 5340 01d0 00       		.byte	0
 5341              		.section	.debug_aranges,"",%progbits
 5342 0000 4C010000 		.4byte	0x14c
 5343 0004 0200     		.2byte	0x2
 5344 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 145


 5345 000a 04       		.byte	0x4
 5346 000b 00       		.byte	0
 5347 000c 0000     		.2byte	0
 5348 000e 0000     		.2byte	0
 5349 0010 00000000 		.4byte	.LFB34
 5350 0014 58000000 		.4byte	.LFE34-.LFB34
 5351 0018 00000000 		.4byte	.LFB35
 5352 001c 2A000000 		.4byte	.LFE35-.LFB35
 5353 0020 00000000 		.4byte	.LFB36
 5354 0024 28000000 		.4byte	.LFE36-.LFB36
 5355 0028 00000000 		.4byte	.LFB37
 5356 002c 50000000 		.4byte	.LFE37-.LFB37
 5357 0030 00000000 		.4byte	.LFB38
 5358 0034 34020000 		.4byte	.LFE38-.LFB38
 5359 0038 00000000 		.4byte	.LFB39
 5360 003c 20000000 		.4byte	.LFE39-.LFB39
 5361 0040 00000000 		.4byte	.LFB40
 5362 0044 44000000 		.4byte	.LFE40-.LFB40
 5363 0048 00000000 		.4byte	.LFB41
 5364 004c 58000000 		.4byte	.LFE41-.LFB41
 5365 0050 00000000 		.4byte	.LFB42
 5366 0054 1C000000 		.4byte	.LFE42-.LFB42
 5367 0058 00000000 		.4byte	.LFB43
 5368 005c 28000000 		.4byte	.LFE43-.LFB43
 5369 0060 00000000 		.4byte	.LFB44
 5370 0064 1C000000 		.4byte	.LFE44-.LFB44
 5371 0068 00000000 		.4byte	.LFB45
 5372 006c 28000000 		.4byte	.LFE45-.LFB45
 5373 0070 00000000 		.4byte	.LFB46
 5374 0074 1C000000 		.4byte	.LFE46-.LFB46
 5375 0078 00000000 		.4byte	.LFB47
 5376 007c 1C000000 		.4byte	.LFE47-.LFB47
 5377 0080 00000000 		.4byte	.LFB48
 5378 0084 1C000000 		.4byte	.LFE48-.LFB48
 5379 0088 00000000 		.4byte	.LFB49
 5380 008c 1C000000 		.4byte	.LFE49-.LFB49
 5381 0090 00000000 		.4byte	.LFB50
 5382 0094 28000000 		.4byte	.LFE50-.LFB50
 5383 0098 00000000 		.4byte	.LFB51
 5384 009c 28000000 		.4byte	.LFE51-.LFB51
 5385 00a0 00000000 		.4byte	.LFB52
 5386 00a4 28000000 		.4byte	.LFE52-.LFB52
 5387 00a8 00000000 		.4byte	.LFB53
 5388 00ac 28000000 		.4byte	.LFE53-.LFB53
 5389 00b0 00000000 		.4byte	.LFB54
 5390 00b4 28000000 		.4byte	.LFE54-.LFB54
 5391 00b8 00000000 		.4byte	.LFB55
 5392 00bc 28000000 		.4byte	.LFE55-.LFB55
 5393 00c0 00000000 		.4byte	.LFB56
 5394 00c4 38010000 		.4byte	.LFE56-.LFB56
 5395 00c8 00000000 		.4byte	.LFB57
 5396 00cc 42000000 		.4byte	.LFE57-.LFB57
 5397 00d0 00000000 		.4byte	.LFB58
 5398 00d4 36000000 		.4byte	.LFE58-.LFB58
 5399 00d8 00000000 		.4byte	.LFB59
 5400 00dc 5C000000 		.4byte	.LFE59-.LFB59
 5401 00e0 00000000 		.4byte	.LFB60
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 146


 5402 00e4 5C000000 		.4byte	.LFE60-.LFB60
 5403 00e8 00000000 		.4byte	.LFB61
 5404 00ec B8000000 		.4byte	.LFE61-.LFB61
 5405 00f0 00000000 		.4byte	.LFB62
 5406 00f4 A0010000 		.4byte	.LFE62-.LFB62
 5407 00f8 00000000 		.4byte	.LFB63
 5408 00fc 5C010000 		.4byte	.LFE63-.LFB63
 5409 0100 00000000 		.4byte	.LFB64
 5410 0104 98000000 		.4byte	.LFE64-.LFB64
 5411 0108 00000000 		.4byte	.LFB65
 5412 010c 76000000 		.4byte	.LFE65-.LFB65
 5413 0110 00000000 		.4byte	.LFB66
 5414 0114 3C000000 		.4byte	.LFE66-.LFB66
 5415 0118 00000000 		.4byte	.LFB67
 5416 011c 4C000000 		.4byte	.LFE67-.LFB67
 5417 0120 00000000 		.4byte	.LFB68
 5418 0124 1C000000 		.4byte	.LFE68-.LFB68
 5419 0128 00000000 		.4byte	.LFB69
 5420 012c 1C000000 		.4byte	.LFE69-.LFB69
 5421 0130 00000000 		.4byte	.LFB70
 5422 0134 1C000000 		.4byte	.LFE70-.LFB70
 5423 0138 00000000 		.4byte	.LFB71
 5424 013c 14000000 		.4byte	.LFE71-.LFB71
 5425 0140 00000000 		.4byte	.LFB72
 5426 0144 14000000 		.4byte	.LFE72-.LFB72
 5427 0148 00000000 		.4byte	0
 5428 014c 00000000 		.4byte	0
 5429              		.section	.debug_ranges,"",%progbits
 5430              	.Ldebug_ranges0:
 5431 0000 00000000 		.4byte	.LFB34
 5432 0004 58000000 		.4byte	.LFE34
 5433 0008 00000000 		.4byte	.LFB35
 5434 000c 2A000000 		.4byte	.LFE35
 5435 0010 00000000 		.4byte	.LFB36
 5436 0014 28000000 		.4byte	.LFE36
 5437 0018 00000000 		.4byte	.LFB37
 5438 001c 50000000 		.4byte	.LFE37
 5439 0020 00000000 		.4byte	.LFB38
 5440 0024 34020000 		.4byte	.LFE38
 5441 0028 00000000 		.4byte	.LFB39
 5442 002c 20000000 		.4byte	.LFE39
 5443 0030 00000000 		.4byte	.LFB40
 5444 0034 44000000 		.4byte	.LFE40
 5445 0038 00000000 		.4byte	.LFB41
 5446 003c 58000000 		.4byte	.LFE41
 5447 0040 00000000 		.4byte	.LFB42
 5448 0044 1C000000 		.4byte	.LFE42
 5449 0048 00000000 		.4byte	.LFB43
 5450 004c 28000000 		.4byte	.LFE43
 5451 0050 00000000 		.4byte	.LFB44
 5452 0054 1C000000 		.4byte	.LFE44
 5453 0058 00000000 		.4byte	.LFB45
 5454 005c 28000000 		.4byte	.LFE45
 5455 0060 00000000 		.4byte	.LFB46
 5456 0064 1C000000 		.4byte	.LFE46
 5457 0068 00000000 		.4byte	.LFB47
 5458 006c 1C000000 		.4byte	.LFE47
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 147


 5459 0070 00000000 		.4byte	.LFB48
 5460 0074 1C000000 		.4byte	.LFE48
 5461 0078 00000000 		.4byte	.LFB49
 5462 007c 1C000000 		.4byte	.LFE49
 5463 0080 00000000 		.4byte	.LFB50
 5464 0084 28000000 		.4byte	.LFE50
 5465 0088 00000000 		.4byte	.LFB51
 5466 008c 28000000 		.4byte	.LFE51
 5467 0090 00000000 		.4byte	.LFB52
 5468 0094 28000000 		.4byte	.LFE52
 5469 0098 00000000 		.4byte	.LFB53
 5470 009c 28000000 		.4byte	.LFE53
 5471 00a0 00000000 		.4byte	.LFB54
 5472 00a4 28000000 		.4byte	.LFE54
 5473 00a8 00000000 		.4byte	.LFB55
 5474 00ac 28000000 		.4byte	.LFE55
 5475 00b0 00000000 		.4byte	.LFB56
 5476 00b4 38010000 		.4byte	.LFE56
 5477 00b8 00000000 		.4byte	.LFB57
 5478 00bc 42000000 		.4byte	.LFE57
 5479 00c0 00000000 		.4byte	.LFB58
 5480 00c4 36000000 		.4byte	.LFE58
 5481 00c8 00000000 		.4byte	.LFB59
 5482 00cc 5C000000 		.4byte	.LFE59
 5483 00d0 00000000 		.4byte	.LFB60
 5484 00d4 5C000000 		.4byte	.LFE60
 5485 00d8 00000000 		.4byte	.LFB61
 5486 00dc B8000000 		.4byte	.LFE61
 5487 00e0 00000000 		.4byte	.LFB62
 5488 00e4 A0010000 		.4byte	.LFE62
 5489 00e8 00000000 		.4byte	.LFB63
 5490 00ec 5C010000 		.4byte	.LFE63
 5491 00f0 00000000 		.4byte	.LFB64
 5492 00f4 98000000 		.4byte	.LFE64
 5493 00f8 00000000 		.4byte	.LFB65
 5494 00fc 76000000 		.4byte	.LFE65
 5495 0100 00000000 		.4byte	.LFB66
 5496 0104 3C000000 		.4byte	.LFE66
 5497 0108 00000000 		.4byte	.LFB67
 5498 010c 4C000000 		.4byte	.LFE67
 5499 0110 00000000 		.4byte	.LFB68
 5500 0114 1C000000 		.4byte	.LFE68
 5501 0118 00000000 		.4byte	.LFB69
 5502 011c 1C000000 		.4byte	.LFE69
 5503 0120 00000000 		.4byte	.LFB70
 5504 0124 1C000000 		.4byte	.LFE70
 5505 0128 00000000 		.4byte	.LFB71
 5506 012c 14000000 		.4byte	.LFE71
 5507 0130 00000000 		.4byte	.LFB72
 5508 0134 14000000 		.4byte	.LFE72
 5509 0138 00000000 		.4byte	0
 5510 013c 00000000 		.4byte	0
 5511              		.section	.debug_line,"",%progbits
 5512              	.Ldebug_line0:
 5513 0000 B9040000 		.section	.debug_str,"MS",%progbits,1
 5513      02006400 
 5513      00000201 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 148


 5513      FB0E0D00 
 5513      01010101 
 5514              	.LASF33:
 5515 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 5515      53706565 
 5515      6454626C 
 5515      00
 5516              	.LASF36:
 5517 000d 6E756D62 		.ascii	"numberOfSensors\000"
 5517      65724F66 
 5517      53656E73 
 5517      6F727300 
 5518              	.LASF40:
 5519 001d 70747247 		.ascii	"ptrGetBitValue\000"
 5519      65744269 
 5519      7456616C 
 5519      756500
 5520              	.LASF50:
 5521 002c 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 5521      656E7365 
 5521      5F435344 
 5521      5F426173 
 5521      65496E69 
 5522              	.LASF136:
 5523 0042 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 5523      656E7365 
 5523      5F435344 
 5523      5F6C6F77 
 5523      42617365 
 5524              	.LASF113:
 5525 0060 706F7349 		.ascii	"posIndex\000"
 5525      6E646578 
 5525      00
 5526              	.LASF55:
 5527 0069 69735365 		.ascii	"isSensorEnabled\000"
 5527      6E736F72 
 5527      456E6162 
 5527      6C656400 
 5528              	.LASF93:
 5529 0079 6E756D4F 		.ascii	"numOfSensors\000"
 5529      6653656E 
 5529      736F7273 
 5529      00
 5530              	.LASF8:
 5531 0086 756E7369 		.ascii	"unsigned int\000"
 5531      676E6564 
 5531      20696E74 
 5531      00
 5532              	.LASF45:
 5533 0093 746F7461 		.ascii	"totalSensorsNum\000"
 5533      6C53656E 
 5533      736F7273 
 5533      4E756D00 
 5534              	.LASF107:
 5535 00a3 706F734E 		.ascii	"posNext\000"
 5535      65787400 
 5536              	.LASF54:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 149


 5537 00ab 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 5537      656E7365 
 5537      5F435344 
 5537      5F496E69 
 5537      7469616C 
 5538              	.LASF69:
 5539 00d3 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 5539      656E7365 
 5539      5F435344 
 5539      5F536574 
 5539      42617365 
 5540              	.LASF12:
 5541 00f0 696E7431 		.ascii	"int16\000"
 5541      3600
 5542              	.LASF147:
 5543 00f6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5543      43313120 
 5543      352E342E 
 5543      31203230 
 5543      31363036 
 5544 0129 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5544      20726576 
 5544      6973696F 
 5544      6E203233 
 5544      37373135 
 5545 015c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5545      66756E63 
 5545      74696F6E 
 5545      2D736563 
 5545      74696F6E 
 5546              	.LASF30:
 5547 0184 73616D70 		.ascii	"sampleMaxTbl\000"
 5547      6C654D61 
 5547      7854626C 
 5547      00
 5548              	.LASF28:
 5549 0191 7369676E 		.ascii	"signRegisterTbl\000"
 5549      52656769 
 5549      73746572 
 5549      54626C00 
 5550              	.LASF106:
 5551 01a1 706F7350 		.ascii	"posPrev\000"
 5551      72657600 
 5552              	.LASF128:
 5553 01a9 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 5553      656E7365 
 5553      5F435344 
 5553      5F73656E 
 5553      736F7252 
 5554              	.LASF35:
 5555 01c0 72617744 		.ascii	"rawDataIndex\000"
 5555      61746149 
 5555      6E646578 
 5555      00
 5556              	.LASF44:
 5557 01cd 746F7461 		.ascii	"totalWidgetsNum\000"
 5557      6C576964 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 150


 5557      67657473 
 5557      4E756D00 
 5558              	.LASF91:
 5559 01dd 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 5559      656E7365 
 5559      5F435344 
 5559      5F436865 
 5559      636B4973 
 5560              	.LASF79:
 5561 01fe 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 5561      656E7365 
 5561      5F435344 
 5561      5F536574 
 5561      46696E67 
 5562              	.LASF122:
 5563 021e 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 5563      656E7365 
 5563      5F435344 
 5563      5F476574 
 5563      4465626F 
 5564              	.LASF114:
 5565 0237 66697273 		.ascii	"firstTimeIndex\000"
 5565      7454696D 
 5565      65496E64 
 5565      657800
 5566              	.LASF146:
 5567 0246 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 5567      656E7365 
 5567      5F435344 
 5567      5F656E61 
 5567      626C6552 
 5568              	.LASF137:
 5569 0264 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 5569      656E7365 
 5569      5F435344 
 5569      5F66696E 
 5569      67657254 
 5570              	.LASF148:
 5571 0281 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 5571      72617465 
 5571      645F536F 
 5571      75726365 
 5571      5C50536F 
 5572              	.LASF90:
 5573 02ac 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 5573      656E7365 
 5573      5F435344 
 5573      5F646562 
 5573      6F756E63 
 5574              	.LASF76:
 5575 02c9 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 5575      656E7365 
 5575      5F435344 
 5575      5F476574 
 5575      4E6F6973 
 5576              	.LASF14:
 5577 02e8 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 151


 5577      7400
 5578              	.LASF13:
 5579 02ee 696E7433 		.ascii	"int32\000"
 5579      3200
 5580              	.LASF100:
 5581 02f4 636F756E 		.ascii	"count\000"
 5581      7400
 5582              	.LASF25:
 5583 02fa 7265736F 		.ascii	"resolutionsTbl\000"
 5583      6C757469 
 5583      6F6E7354 
 5583      626C00
 5584              	.LASF115:
 5585 0309 706F7346 		.ascii	"posFiltersMask\000"
 5585      696C7465 
 5585      72734D61 
 5585      736B00
 5586              	.LASF27:
 5587 0318 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5587      696E6744 
 5587      69666665 
 5587      72656E63 
 5587      6554626C 
 5588              	.LASF135:
 5589 032d 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 5589      656E7365 
 5589      5F435344 
 5589      5F6C6F77 
 5589      42617365 
 5590              	.LASF7:
 5591 034e 6C6F6E67 		.ascii	"long long unsigned int\000"
 5591      206C6F6E 
 5591      6720756E 
 5591      7369676E 
 5591      65642069 
 5592              	.LASF61:
 5593 0365 77696467 		.ascii	"widget\000"
 5593      657400
 5594              	.LASF80:
 5595 036c 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 5595      656E7365 
 5595      5F435344 
 5595      5F536574 
 5595      4E6F6973 
 5596              	.LASF65:
 5597 038b 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 5597      656E7365 
 5597      5F435344 
 5597      5F557064 
 5597      61746557 
 5598              	.LASF74:
 5599 03ad 76616C75 		.ascii	"value\000"
 5599      6500
 5600              	.LASF82:
 5601 03b3 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 5601      656E7365 
 5601      5F435344 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 152


 5601      5F536574 
 5601      4E656761 
 5602              	.LASF56:
 5603 03da 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 5603      656E7365 
 5603      5F435344 
 5603      5F557064 
 5603      61746542 
 5604              	.LASF125:
 5605 0401 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 5605      656E7365 
 5605      5F435344 
 5605      5F63656E 
 5605      74726F69 
 5606              	.LASF131:
 5607 041b 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 5607      656E7365 
 5607      5F435344 
 5607      5F73656E 
 5607      736F7242 
 5608              	.LASF58:
 5609 0437 7369676E 		.ascii	"sign\000"
 5609      00
 5610              	.LASF99:
 5611 043c 6F666673 		.ascii	"offset\000"
 5611      657400
 5612              	.LASF26:
 5613 0443 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5613      65456E76 
 5613      656C6F70 
 5613      6554626C 
 5613      00
 5614              	.LASF57:
 5615 0454 63616C63 		.ascii	"calc\000"
 5615      00
 5616              	.LASF39:
 5617 0459 70747252 		.ascii	"ptrReadSensorRaw\000"
 5617      65616453 
 5617      656E736F 
 5617      72526177 
 5617      00
 5618              	.LASF49:
 5619 046a 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_60\000"
 5619      656E7365 
 5619      5F435344 
 5619      5F434F4E 
 5619      4649475F 
 5620              	.LASF89:
 5621 048c 68797374 		.ascii	"hysteresis\000"
 5621      65726573 
 5621      697300
 5622              	.LASF83:
 5623 0497 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 5623      656E7365 
 5623      5F435344 
 5623      5F536574 
 5623      4465626F 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 153


 5624              	.LASF60:
 5625 04b0 66696C74 		.ascii	"filteredRawData\000"
 5625      65726564 
 5625      52617744 
 5625      61746100 
 5626              	.LASF66:
 5627 04c0 73656E73 		.ascii	"sensorsPerWidget\000"
 5627      6F727350 
 5627      65725769 
 5627      64676574 
 5627      00
 5628              	.LASF119:
 5629 04d1 43617053 		.ascii	"CapSense_CSD_JitterFilter\000"
 5629      656E7365 
 5629      5F435344 
 5629      5F4A6974 
 5629      74657246 
 5630              	.LASF43:
 5631 04eb 746F7461 		.ascii	"totalScanslotsNum\000"
 5631      6C536361 
 5631      6E736C6F 
 5631      74734E75 
 5631      6D00
 5632              	.LASF124:
 5633 04fd 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 5633      656E7365 
 5633      5F435344 
 5633      5F446973 
 5633      61626C65 
 5634              	.LASF52:
 5635 0520 73656E73 		.ascii	"sensor\000"
 5635      6F7200
 5636              	.LASF46:
 5637 0527 73656E73 		.ascii	"sensetivitySeed\000"
 5637      65746976 
 5637      69747953 
 5637      65656400 
 5638              	.LASF143:
 5639 0537 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 5639      656E7365 
 5639      5F435344 
 5639      5F6E756D 
 5639      6265724F 
 5640              	.LASF16:
 5641 0554 63686172 		.ascii	"char\000"
 5641      00
 5642              	.LASF97:
 5643 0559 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 5643      656E7365 
 5643      5F435344 
 5643      5F446973 
 5643      61626C65 
 5644              	.LASF34:
 5645 0574 70726573 		.ascii	"prescalerTable\000"
 5645      63616C65 
 5645      72546162 
 5645      6C6500
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 154


 5646              	.LASF10:
 5647 0583 75696E74 		.ascii	"uint16\000"
 5647      313600
 5648              	.LASF70:
 5649 058a 64617461 		.ascii	"data\000"
 5649      00
 5650              	.LASF19:
 5651 058f 69646163 		.ascii	"idac1LevelsTbl\000"
 5651      314C6576 
 5651      656C7354 
 5651      626C00
 5652              	.LASF78:
 5653 059e 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 5653      656E7365 
 5653      5F435344 
 5653      5F476574 
 5653      4E656761 
 5654              	.LASF105:
 5655 05c5 7265736F 		.ascii	"resolution\000"
 5655      6C757469 
 5655      6F6E00
 5656              	.LASF92:
 5657 05d0 72617749 		.ascii	"rawIndex\000"
 5657      6E646578 
 5657      00
 5658              	.LASF101:
 5659 05d9 6D617869 		.ascii	"maximum\000"
 5659      6D756D00 
 5660              	.LASF117:
 5661 05e1 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 5661      656E7365 
 5661      5F435344 
 5661      5F4D6564 
 5661      69616E46 
 5662              	.LASF138:
 5663 05fb 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 5663      656E7365 
 5663      5F435344 
 5663      5F6E6F69 
 5663      73655468 
 5664              	.LASF6:
 5665 0617 6C6F6E67 		.ascii	"long long int\000"
 5665      206C6F6E 
 5665      6720696E 
 5665      7400
 5666              	.LASF75:
 5667 0625 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 5667      656E7365 
 5667      5F435344 
 5667      5F476574 
 5667      46696E67 
 5668              	.LASF86:
 5669 0645 6465626F 		.ascii	"debounce\000"
 5669      756E6365 
 5669      00
 5670              	.LASF118:
 5671 064e 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 155


 5671      656E7365 
 5671      5F435344 
 5671      5F494952 
 5671      3446696C 
 5672              	.LASF38:
 5673 0666 70747250 		.ascii	"ptrPreScan\000"
 5673      72655363 
 5673      616E00
 5674              	.LASF77:
 5675 0671 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 5675      656E7365 
 5675      5F435344 
 5675      5F476574 
 5675      46696E67 
 5676              	.LASF37:
 5677 0692 70747247 		.ascii	"ptrGetRaw\000"
 5677      65745261 
 5677      7700
 5678              	.LASF120:
 5679 069c 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 5679      656E7365 
 5679      5F435344 
 5679      5F476574 
 5679      57696467 
 5680              	.LASF64:
 5681 06b9 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 5681      656E7365 
 5681      5F435344 
 5681      5F557064 
 5681      61746545 
 5682              	.LASF134:
 5683 06dd 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 5683      656E7365 
 5683      5F435344 
 5683      5F73656E 
 5683      736F724F 
 5684              	.LASF29:
 5685 06f7 73616D70 		.ascii	"sampleMinTbl\000"
 5685      6C654D69 
 5685      6E54626C 
 5685      00
 5686              	.LASF11:
 5687 0704 75696E74 		.ascii	"uint32\000"
 5687      333200
 5688              	.LASF139:
 5689 070b 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 5689      656E7365 
 5689      5F435344 
 5689      5F6E6567 
 5689      61746976 
 5690              	.LASF42:
 5691 072f 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 5691      656E7365 
 5691      5F435344 
 5691      5F434F4E 
 5691      4649475F 
 5692              	.LASF103:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 156


 5693 075a 73746172 		.ascii	"startOfSlider\000"
 5693      744F6653 
 5693      6C696465 
 5693      7200
 5694              	.LASF73:
 5695 0768 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 5695      656E7365 
 5695      5F435344 
 5695      5F536574 
 5695      44696666 
 5696              	.LASF63:
 5697 0786 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 5697      656E7365 
 5697      5F435344 
 5697      5F557064 
 5697      61746553 
 5698              	.LASF144:
 5699 07a8 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 5699      656E7365 
 5699      5F435344 
 5699      5F726177 
 5699      46696C74 
 5700              	.LASF133:
 5701 07c4 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 5701      656E7365 
 5701      5F435344 
 5701      5F73656E 
 5701      736F7253 
 5702              	.LASF84:
 5703 07de 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 5703      656E7365 
 5703      5F435344 
 5703      5F536574 
 5703      4C6F7742 
 5704              	.LASF142:
 5705 07ff 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5705      656E7365 
 5705      5F435344 
 5705      5F726177 
 5705      44617461 
 5706              	.LASF110:
 5707 0819 6E756D65 		.ascii	"numerator\000"
 5707      7261746F 
 5707      7200
 5708              	.LASF18:
 5709 0823 6C6F6E67 		.ascii	"long double\000"
 5709      20646F75 
 5709      626C6500 
 5710              	.LASF68:
 5711 082f 6C617374 		.ascii	"lastSensor\000"
 5711      53656E73 
 5711      6F7200
 5712              	.LASF145:
 5713 083a 43617053 		.ascii	"CapSense_CSD_config\000"
 5713      656E7365 
 5713      5F435344 
 5713      5F636F6E 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 157


 5713      66696700 
 5714              	.LASF47:
 5715 084e 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5715      6B467265 
 5715      715F4D48 
 5715      7A00
 5716              	.LASF129:
 5717 085c 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5717      656E7365 
 5717      5F435344 
 5717      5F73656E 
 5717      736F7245 
 5718              	.LASF20:
 5719 087a 69646163 		.ascii	"idac2LevelsTbl\000"
 5719      324C6576 
 5719      656C7354 
 5719      626C00
 5720              	.LASF2:
 5721 0889 73686F72 		.ascii	"short int\000"
 5721      7420696E 
 5721      7400
 5722              	.LASF4:
 5723 0893 6C6F6E67 		.ascii	"long int\000"
 5723      20696E74 
 5723      00
 5724              	.LASF67:
 5725 089c 66697273 		.ascii	"firstSensor\000"
 5725      7453656E 
 5725      736F7200 
 5726              	.LASF132:
 5727 08a8 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 5727      656E7365 
 5727      5F435344 
 5727      5F73656E 
 5727      736F7242 
 5728              	.LASF102:
 5729 08c7 74656D70 		.ascii	"temp\000"
 5729      00
 5730              	.LASF140:
 5731 08cc 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 5731      656E7365 
 5731      5F435344 
 5731      5F687973 
 5731      74657265 
 5732              	.LASF72:
 5733 08e4 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 5733      656E7365 
 5733      5F435344 
 5733      5F476574 
 5733      44696666 
 5734              	.LASF24:
 5735 0902 77696467 		.ascii	"widgetNubmersTbl\000"
 5735      65744E75 
 5735      626D6572 
 5735      7354626C 
 5735      00
 5736              	.LASF95:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 158


 5737 0913 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 5737      656E7365 
 5737      5F435344 
 5737      5F436865 
 5737      636B4973 
 5738              	.LASF111:
 5739 0937 64656E6F 		.ascii	"denominator\000"
 5739      6D696E61 
 5739      746F7200 
 5740              	.LASF85:
 5741 0943 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 5741      656E7365 
 5741      5F435344 
 5741      5F436865 
 5741      636B4973 
 5742              	.LASF32:
 5743 0964 6B56616C 		.ascii	"kValueTbl\000"
 5743      75655462 
 5743      6C00
 5744              	.LASF149:
 5745 096e 433A5C55 		.ascii	"C:\\Users\\bryan.lee\\Desktop\\Fan_Test_No_Display\\"
 5745      73657273 
 5745      5C627279 
 5745      616E2E6C 
 5745      65655C44 
 5746 099d 43617053 		.ascii	"CapSense_CSD_P4_Design01.cydsn\000"
 5746      656E7365 
 5746      5F435344 
 5746      5F50345F 
 5746      44657369 
 5747              	.LASF71:
 5748 09bc 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 5748      656E7365 
 5748      5F435344 
 5748      5F476574 
 5748      42617365 
 5749              	.LASF17:
 5750 09d9 73697A65 		.ascii	"sizetype\000"
 5750      74797065 
 5750      00
 5751              	.LASF5:
 5752 09e2 6C6F6E67 		.ascii	"long unsigned int\000"
 5752      20756E73 
 5752      69676E65 
 5752      6420696E 
 5752      7400
 5753              	.LASF127:
 5754 09f4 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 5754      656E7365 
 5754      5F435344 
 5754      5F706F73 
 5754      46696C74 
 5755              	.LASF48:
 5756 0a10 706F696E 		.ascii	"pointers\000"
 5756      74657273 
 5756      00
 5757              	.LASF121:
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 159


 5758 0a19 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 5758      656E7365 
 5758      5F435344 
 5758      5F476574 
 5758      4C6F7742 
 5759              	.LASF141:
 5760 0a3a 43617053 		.ascii	"CapSense_CSD_debounce\000"
 5760      656E7365 
 5760      5F435344 
 5760      5F646562 
 5760      6F756E63 
 5761              	.LASF62:
 5762 0a50 6E6F6973 		.ascii	"noiseThreshold\000"
 5762      65546872 
 5762      6573686F 
 5762      6C6400
 5763              	.LASF123:
 5764 0a5f 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 5764      656E7365 
 5764      5F435344 
 5764      5F456E61 
 5764      626C6552 
 5765              	.LASF81:
 5766 0a81 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 5766      656E7365 
 5766      5F435344 
 5766      5F536574 
 5766      46696E67 
 5767              	.LASF31:
 5768 0aa2 70726576 		.ascii	"previousSampleTbl\000"
 5768      696F7573 
 5768      53616D70 
 5768      6C655462 
 5768      6C00
 5769              	.LASF88:
 5770 0ab4 66696E67 		.ascii	"fingerThreshold\000"
 5770      65725468 
 5770      72657368 
 5770      6F6C6400 
 5771              	.LASF22:
 5772 0ac4 63686172 		.ascii	"chargeDivTbl\000"
 5772      67654469 
 5772      7654626C 
 5772      00
 5773              	.LASF130:
 5774 0ad1 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 5774      656E7365 
 5774      5F435344 
 5774      5F776964 
 5774      6765744E 
 5775              	.LASF1:
 5776 0aeb 756E7369 		.ascii	"unsigned char\000"
 5776      676E6564 
 5776      20636861 
 5776      7200
 5777              	.LASF87:
 5778 0af9 6465626F 		.ascii	"debounceIndex\000"
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 160


 5778      756E6365 
 5778      496E6465 
 5778      7800
 5779              	.LASF112:
 5780 0b07 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 5780      656E7365 
 5780      5F435344 
 5780      5F476574 
 5780      43656E74 
 5781              	.LASF51:
 5782 0b23 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 5782      656E7365 
 5782      5F435344 
 5782      5F496E69 
 5782      7469616C 
 5783              	.LASF96:
 5784 0b49 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 5784      656E7365 
 5784      5F435344 
 5784      5F456E61 
 5784      626C6557 
 5785              	.LASF21:
 5786 0b63 73656E73 		.ascii	"sensetivityTbl\000"
 5786      65746976 
 5786      69747954 
 5786      626C00
 5787              	.LASF94:
 5788 0b72 73746174 		.ascii	"state\000"
 5788      6500
 5789              	.LASF116:
 5790 0b78 43617053 		.ascii	"CapSense_CSD_GetRadialCentroidPos\000"
 5790      656E7365 
 5790      5F435344 
 5790      5F476574 
 5790      52616469 
 5791              	.LASF23:
 5792 0b9a 6D6F6444 		.ascii	"modDivTbl\000"
 5792      69765462 
 5792      6C00
 5793              	.LASF0:
 5794 0ba4 7369676E 		.ascii	"signed char\000"
 5794      65642063 
 5794      68617200 
 5795              	.LASF3:
 5796 0bb0 73686F72 		.ascii	"short unsigned int\000"
 5796      7420756E 
 5796      7369676E 
 5796      65642069 
 5796      6E7400
 5797              	.LASF41:
 5798 0bc3 70747253 		.ascii	"ptrSetBitValue\000"
 5798      65744269 
 5798      7456616C 
 5798      756500
 5799              	.LASF126:
 5800 0bd2 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 5800      656E7365 
ARM GAS  C:\Users\bryan.lee\AppData\Local\Temp\cc2JxKmq.s 			page 161


 5800      5F435344 
 5800      5F706F73 
 5800      46696C74 
 5801              	.LASF53:
 5802 0bee 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 5802      656E7365 
 5802      5F435344 
 5802      5F496E69 
 5802      7469616C 
 5803              	.LASF59:
 5804 0c12 74656D70 		.ascii	"tempRaw\000"
 5804      52617700 
 5805              	.LASF9:
 5806 0c1a 75696E74 		.ascii	"uint8\000"
 5806      3800
 5807              	.LASF15:
 5808 0c20 646F7562 		.ascii	"double\000"
 5808      6C6500
 5809              	.LASF98:
 5810 0c27 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 5810      656E7365 
 5810      5F435344 
 5810      5F46696E 
 5810      644D6178 
 5811              	.LASF108:
 5812 0c40 43617053 		.ascii	"CapSense_CSD_centroid\000"
 5812      656E7365 
 5812      5F435344 
 5812      5F63656E 
 5812      74726F69 
 5813              	.LASF109:
 5814 0c56 706F7369 		.ascii	"position\000"
 5814      74696F6E 
 5814      00
 5815              	.LASF104:
 5816 0c5f 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 5816      656E7365 
 5816      5F435344 
 5816      5F43616C 
 5816      6343656E 
 5817              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
