C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEB
                    -UG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_c
                    -fg.obj)

line level    source

   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.2
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2018 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          
  26          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  27          
  28          
  29          #if defined(__C51__) || defined(__CX51__)
  30                  #define CYPACKED
  31                  #define CYPACKED_ATTR
  32                  #define CYALIGNED
  33                  
  34              #define CY_CFG_UNUSED
  35                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  36          
  37          
  38          
  39                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  40                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  41                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  42          #else
                      #error Unsupported toolchain
              #endif
  45          
  46          
  47          
  48          
  49          /* Clock startup error codes                                                   */
  50          #define CYCLOCKSTART_NO_ERROR    0u
  51          #define CYCLOCKSTART_XTAL_ERROR  1u
  52          #define CYCLOCKSTART_32KHZ_ERROR 2u
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 2   

  53          #define CYCLOCKSTART_PLL_ERROR   3u
  54          #define CYCLOCKSTART_FLL_ERROR   4u
  55          #define CYCLOCKSTART_WCO_ERROR   5u
  56          
  57          
  58          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  59          /*******************************************************************************
  60          * Function Name: CyClockStartupError
  61          ********************************************************************************
  62          * Summary:
  63          *  If an error is encountered during clock configuration (crystal startup error,
  64          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  65          *  the customer, this function will stop in an infinite loop.
  66          *
  67          * Parameters:
  68          *   void
  69          *
  70          * Return:
  71          *   void
  72          *
  73          *******************************************************************************/
  74          CY_CFG_UNUSED
  75          static void CyClockStartupError(uint8 errorCode);
  76          CY_CFG_UNUSED
  77          static void CyClockStartupError(uint8 errorCode)
  78          {
  79   1          /* To remove the compiler warning if errorCode not used.                */
  80   1          errorCode = errorCode;
  81   1      
  82   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  83   1          /* we will end up here to allow the customer to implement something to  */
  84   1          /* deal with the clock condition.                                       */
  85   1      
  86   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  89   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  90   1          /* `#START CyClockStartupError` */
  91   1      
  92   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  93   1          /* we will end up here to allow the customer to implement something to  */
  94   1          /* deal with the clock condition.                                       */
  95   1      
  96   1          /* `#END` */
  97   1      
  98   1          while(1) {}
  99   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 100   1      }
 101          #endif
 102          
 103          #define cfg_byte_table ((const void CYFAR *)0x080000u)
 104          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
 105          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080290u)
 106          
 107          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 108          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x0008029Cu)
 109          
 110          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 111          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x000802A4u)
 112          
 113          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 114          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000802B0u)
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 3   

 115          
 116          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 117          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000802B8u)
 118          
 119          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
 120          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x000802C0u)
 121          
 122          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 123          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x000802C8u)
 124          
 125          
 126          /*******************************************************************************
 127          * Function Name: ClockSetup
 128          ********************************************************************************
 129          *
 130          * Summary:
 131          *  Performs the initialization of all of the clocks in the device based on the
 132          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 133          *  clocks and setting the necessary dividers to produce the desired frequency. 
 134          *
 135          * Parameters:
 136          *  void
 137          *
 138          * Return:
 139          *  void
 140          *
 141          *******************************************************************************/
 142          static void ClockSetup(void);
 143          static void ClockSetup(void)
 144          {
 145   1              uint8 x32TrHold;
 146   1              uint32 timeout;
 147   1              uint8 pllLock;
 148   1      
 149   1              x32TrHold = CY_GET_REG8((void CYXDATA *)CYREG_X32_TR);
 150   1      
 151   1              /* Configure Digital Clocks based on settings from Clock DWR */
 152   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0000u);
 153   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x50u);
 154   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x000Fu);
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 156   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x00EFu);
 157   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 158   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0xC34Fu);
 159   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 160   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x1999u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x1Du);
 162   1      
 163   1              /* Configure Analog Clocks based on settings from Clock DWR */
 164   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 165   1      
 166   1              /* Configure ILO based on settings from Clock DWR */
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 168   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 169   1      
 170   1              /* Configure XTAL 32kHz based on settings from Clock DWR */
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_TST), 0xF3u);
 172   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), 0x03u);
 173   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CFG), 0x84u);
 174   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CR), 0x05u);
 175   1              /* Wait up to 1000000us for the XTAL 32kHz to lock */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 4   

 176   1              for (timeout = 1000000u / 10u; (timeout > 0u) && ((CY_GET_REG8((void CYXDATA *)CYREG_SLOWCLK_X32_CR) & 0x
             -20u) == 0u); timeout--)
 177   1              { 
 178   2                      
 179   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 180   2              }
 181   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), (x32TrHold));
 182   1      
 183   1              /* Configure IMO based on settings from Clock DWR */
 184   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 186   1      
 187   1              /* Configure PLL based on settings from Clock DWR */
 188   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 189   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 190   1              /* Wait up to 250us for the PLL to lock */
 191   1              pllLock = 0u;
 192   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 193   1              { 
 194   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 195   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 196   2              }
 197   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 198   1              if (timeout == 0u)
 199   1              {
 200   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 201   2              }
 202   1      
 203   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 204   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 205   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 206   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 207   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 208   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 209   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 210   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 211   1      
 212   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x1Fu
             -)));
 213   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 214   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 215   1      }
 216          
 217          
 218          /* Analog API Functions */
 219          
 220          
 221          /*******************************************************************************
 222          * Function Name: AnalogSetDefault
 223          ********************************************************************************
 224          *
 225          * Summary:
 226          *  Sets up the analog portions of the chip to default values based on chip
 227          *  configuration options from the project.
 228          *
 229          * Parameters:
 230          *  void
 231          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 5   

 232          * Return:
 233          *  void
 234          *
 235          *******************************************************************************/
 236          static void AnalogSetDefault(void);
 237          static void AnalogSetDefault(void)
 238          {
 239   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 240   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 241   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 242   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT3_AG, 0x04u);
 243   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x40u);
 244   1              CY_SET_REG8((void CYXDATA *)CYREG_BUS_SW0, 0x40u);
 245   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 246   1      }
 247          
 248          
 249          /*******************************************************************************
 250          * Function Name: SetAnalogRoutingPumps
 251          ********************************************************************************
 252          *
 253          * Summary:
 254          * Enables or disables the analog pumps feeding analog routing switches.
 255          * Intended to be called at startup, based on the Vdda system configuration;
 256          * may be called during operation when the user informs us that the Vdda voltage
 257          * crossed the pump threshold.
 258          *
 259          * Parameters:
 260          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 261          *
 262          * Return:
 263          *  void
 264          *
 265          *******************************************************************************/
 266          void SetAnalogRoutingPumps(uint8 enabled)
 267          {
 268   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 269   1              if (enabled != 0u)
 270   1              {
 271   2                      regValue |= 0x22u;
 272   2              }
 273   1              else
 274   1              {
 275   2                      regValue &= (uint8)~0x22u;
 276   2              }
 277   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 278   1      }
 279          
 280          
 281          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 282          /* This is an implementation detail of the AMux. Code that depends on it may be
 283             incompatible with other versions of PSoC Creator. */
 284          uint8 CYXDATA * const CYCODE adcVFan_AMux__addrTable[2] = {
 285                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 286                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 287          };
 288          
 289          /* This is an implementation detail of the AMux. Code that depends on it may be
 290             incompatible with other versions of PSoC Creator. */
 291          const uint8 CYCODE adcVFan_AMux__maskTable[2] = {
 292                  0x40u, 
 293                  0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 6   

 294          };
 295          
 296          /*******************************************************************************
 297          * Function Name: adcVFan_AMux_Set
 298          ********************************************************************************
 299          * Summary:
 300          *  This function is used to set a particular channel as active on the AMux.
 301          *
 302          * Parameters:  
 303          *   channel - The mux channel input to set as active
 304          *
 305          * Return:
 306          *   void
 307          *
 308          *******************************************************************************/
 309          void adcVFan_AMux_Set(uint8 channel)
 310          {
 311   1              if (channel < 2)
 312   1              {
 313   2                      *adcVFan_AMux__addrTable[channel] |= adcVFan_AMux__maskTable[channel];
 314   2              }
 315   1      }
 316          
 317          /*******************************************************************************
 318          * Function Name: adcVFan_AMux_Unset
 319          ********************************************************************************
 320          * Summary:
 321          *  This function is used to clear a particular channel from being active on the
 322          *  AMux.
 323          *
 324          * Parameters:  
 325          *   channel - The mux channel input to mark inactive
 326          *
 327          * Return:
 328          *   void
 329          *
 330          *******************************************************************************/
 331          void adcVFan_AMux_Unset(uint8 channel)
 332          {
 333   1              if (channel < 2)
 334   1              {
 335   2                      *adcVFan_AMux__addrTable[channel] &= (uint8)~adcVFan_AMux__maskTable[channel];
 336   2              }
 337   1      }
 338          
 339          
 340          
 341          /*******************************************************************************
 342          * Function Name: cyfitter_cfg
 343          ********************************************************************************
 344          * Summary:
 345          *  This function is called by the start-up code for the selected device. It
 346          *  performs all of the necessary device configuration based on the design
 347          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 348          *  as Clocks and Pins as well as any component configuration that is necessary.
 349          *
 350          * Parameters:
 351          *   void
 352          *
 353          * Return:
 354          *   void
 355          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 7   

 356          *******************************************************************************/
 357          
 358          void cyfitter_cfg(void)
 359          {
 360   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 361   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 362   1      
 363   1              {
 364   2      
 365   2                      CYPACKED typedef struct {
 366   2                              void CYFAR *address;
 367   2                              uint16 size;
 368   2                      } CYPACKED_ATTR cfg_memset_t;
 369   2      
 370   2                      static const cfg_memset_t CYCODE cfg_memset_list[] = {
 371   2                              /* address, size */
 372   2                              {(void CYFAR *)(CYREG_PRT4_DR), 48u},
 373   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 374   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 375   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 376   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 377   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 378   2                      };
 379   2      
 380   2                      uint8 CYDATA i;
 381   2      
 382   2                      /* Zero out critical memory blocks before beginning configuration */
 383   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 384   2                      {
 385   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 386   3                              CYMEMZERO(ms->address, ms->size);
 387   3                      }
 388   2      
 389   2                      cfg_write_bytes(cfg_byte_table);
 390   2      
 391   2                      /* Perform normal device configuration. Order is not critical for these items. */
 392   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 393   2      
 394   2                      /* Enable digital routing */
 395   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 396   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 397   2      
 398   2                      /* Enable UDB array */
 399   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 400   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 401   2              }
 402   1      
 403   1      
 404   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 405   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DR), (const void CYFAR *)(BS_IOPINS0_0_VAL), 10u);
 406   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 407   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 408   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 409   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 410   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (const void CYFAR *)(BS_IOPINS0_3_VAL), 8u);
 411   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 412   1              /* Switch Boost to the precision bandgap reference from its internal reference */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 8   

 413   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 414   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 415   1              {
 416   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 417   2              }
 418   1      
 419   1      
 420   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 421   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 422   1              /* Setup clocks based on selections from Clock DWR */
 423   1              ClockSetup();
 424   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 425   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 426   1      
 427   1              /* Perform basic analog initialization to defaults */
 428   1              AnalogSetDefault();
 429   1      
 430   1              /* Configure alternate active mode */
 431   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 432   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 433   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 77
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 80
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 98
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 149
0000 904698            MOV     DPTR,#04698H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#x32TrHold
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
000A 7B00              MOV     R3,#00H
000C 7A40              MOV     R2,#040H
000E 7980              MOV     R1,#080H
0010 7D00              MOV     R5,#00H
0012 7C00              MOV     R4,#00H
0014 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 153
0017 904082            MOV     DPTR,#04082H
001A 7450              MOV     A,#050H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7D0F              MOV     R5,#0FH
0025 7C00              MOV     R4,#00H
0027 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 155
002A 904086            MOV     DPTR,#04086H
002D 7418              MOV     A,#018H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0030 7B00              MOV     R3,#00H
0032 7A40              MOV     R2,#040H
0034 7988              MOV     R1,#088H
0036 7DEF              MOV     R5,#0EFH
0038 7C00              MOV     R4,#00H
003A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 157
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 10  

003D 90408A            MOV     DPTR,#0408AH
0040 7418              MOV     A,#018H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
0043 7B00              MOV     R3,#00H
0045 7A40              MOV     R2,#040H
0047 798C              MOV     R1,#08CH
0049 7D4F              MOV     R5,#04FH
004B 7CC3              MOV     R4,#0C3H
004D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 159
0050 90408E            MOV     DPTR,#0408EH
0053 7419              MOV     A,#019H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0056 7B00              MOV     R3,#00H
0058 7A40              MOV     R2,#040H
005A 7990              MOV     R1,#090H
005C 7D99              MOV     R5,#099H
005E 7C19              MOV     R4,#019H
0060 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 161
0063 904092            MOV     DPTR,#04092H
0066 741D              MOV     A,#01DH
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0069 7B08              MOV     R3,#08H
006B 7A02              MOV     R2,#02H
006D 79C8              MOV     R1,#0C8H
006F C003              PUSH    AR3
0071 C002              PUSH    AR2
0073 C001              PUSH    AR1
0075 7B00              MOV     R3,#00H
0077 7A41              MOV     R2,#041H
0079 7900              MOV     R1,#00H
007B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
007E 120000      E     LCALL   ?C?PSTXDATA
0081 D001              POP     AR1
0083 D002              POP     AR2
0085 D003              POP     AR3
0087 7F04              MOV     R7,#04H
0089 7E00              MOV     R6,#00H
008B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 167
008E 904300            MOV     DPTR,#04300H
0091 7402              MOV     A,#02H
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0094 904000            MOV     DPTR,#04000H
0097 7408              MOV     A,#08H
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
009A 90430A            MOV     DPTR,#0430AH
009D 74F3              MOV     A,#0F3H
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
00A0 904698            MOV     DPTR,#04698H
00A3 7403              MOV     A,#03H
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
00A6 904309            MOV     DPTR,#04309H
00A9 7484              MOV     A,#084H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 11  

00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
00AC 904308            MOV     DPTR,#04308H
00AF 7405              MOV     A,#05H
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
00B2 7FA0              MOV     R7,#0A0H
00B4 7E86              MOV     R6,#086H
00B6 7D01              MOV     R5,#01H
00B8 7C00              MOV     R4,#00H
00BA 900000      R     MOV     DPTR,#timeout
00BD 120000      E     LCALL   ?C?LSTXDATA
00C0         ?C0004:
00C0 900000      R     MOV     DPTR,#timeout
00C3 120000      E     LCALL   ?C?LLDXDATA
00C6 D3                SETB    C
00C7 EF                MOV     A,R7
00C8 9400              SUBB    A,#00H
00CA EE                MOV     A,R6
00CB 9400              SUBB    A,#00H
00CD 4033              JC      ?C0005
00CF 904308            MOV     DPTR,#04308H
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 5420              ANL     A,#020H
00D7 FF                MOV     R7,A
00D8 7E00              MOV     R6,#00H
00DA EF                MOV     A,R7
00DB 4E                ORL     A,R6
00DC 7024              JNZ     ?C0005
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 179
00DE 7FE0              MOV     R7,#0E0H
00E0 7E01              MOV     R6,#01H
00E2 7D00              MOV     R5,#00H
00E4 7C00              MOV     R4,#00H
00E6 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 180
00E9 900000      R     MOV     DPTR,#timeout
00EC 120000      E     LCALL   ?C?LLDXDATA
00EF 7BFF              MOV     R3,#0FFH
00F1 7AFF              MOV     R2,#0FFH
00F3 79FF              MOV     R1,#0FFH
00F5 78FF              MOV     R0,#0FFH
00F7 120000      E     LCALL   ?C?LADD
00FA 900000      R     MOV     DPTR,#timeout
00FD 120000      E     LCALL   ?C?LSTXDATA
0100 80BE              SJMP    ?C0004
0102         ?C0005:
                                           ; SOURCE LINE # 181
0102 900000      R     MOV     DPTR,#x32TrHold
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 904698            MOV     DPTR,#04698H
010A EF                MOV     A,R7
010B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
010C 904200            MOV     DPTR,#04200H
010F 7403              MOV     A,#03H
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 12  

0112 7B0C              MOV     R3,#0CH
0114 7A01              MOV     R2,#01H
0116 7908              MOV     R1,#08H
0118 120000      E     LCALL   _cyread8
011B 9046A1            MOV     DPTR,#046A1H
011E EF                MOV     A,R7
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0120 7B00              MOV     R3,#00H
0122 7A42              MOV     R2,#042H
0124 7922              MOV     R1,#022H
0126 7D08              MOV     R5,#08H
0128 7C00              MOV     R4,#00H
012A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 189
012D 7B00              MOV     R3,#00H
012F 7A42              MOV     R2,#042H
0131 7920              MOV     R1,#020H
0133 7D51              MOV     R5,#051H
0135 7C12              MOV     R4,#012H
0137 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 191
013A 900000      R     MOV     DPTR,#pllLock
013D E4                CLR     A
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
013F 7F19              MOV     R7,#019H
0141 7E00              MOV     R6,#00H
0143 7D00              MOV     R5,#00H
0145 7C00              MOV     R4,#00H
0147 900000      R     MOV     DPTR,#timeout
014A 120000      E     LCALL   ?C?LSTXDATA
014D         ?C0007:
014D 900000      R     MOV     DPTR,#timeout
0150 120000      E     LCALL   ?C?LLDXDATA
0153 D3                SETB    C
0154 EF                MOV     A,R7
0155 9400              SUBB    A,#00H
0157 EE                MOV     A,R6
0158 9400              SUBB    A,#00H
015A 404E              JC      ?C0008
015C 900000      R     MOV     DPTR,#pllLock
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 EF                MOV     A,R7
0162 6403              XRL     A,#03H
0164 6044              JZ      ?C0008
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0166 904225            MOV     DPTR,#04225H
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B EF                MOV     A,R7
016C 5401              ANL     A,#01H
016E FF                MOV     R7,A
016F 7E00              MOV     R6,#00H
0171 900000      R     MOV     DPTR,#pllLock
0174 E0                MOVX    A,@DPTR
0175 FE                MOV     R6,A
0176 EE                MOV     A,R6
0177 25E0              ADD     A,ACC
0179 FE                MOV     R6,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 13  

017A EE                MOV     A,R6
017B 4F                ORL     A,R7
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 5403              ANL     A,#03H
0180 FF                MOV     R7,A
0181 900000      R     MOV     DPTR,#pllLock
0184 EF                MOV     A,R7
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0186 7FE0              MOV     R7,#0E0H
0188 7E01              MOV     R6,#01H
018A 7D00              MOV     R5,#00H
018C 7C00              MOV     R4,#00H
018E 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 196
0191 900000      R     MOV     DPTR,#timeout
0194 120000      E     LCALL   ?C?LLDXDATA
0197 7BFF              MOV     R3,#0FFH
0199 7AFF              MOV     R2,#0FFH
019B 79FF              MOV     R1,#0FFH
019D 78FF              MOV     R0,#0FFH
019F 120000      E     LCALL   ?C?LADD
01A2 900000      R     MOV     DPTR,#timeout
01A5 120000      E     LCALL   ?C?LSTXDATA
01A8 80A3              SJMP    ?C0007
01AA         ?C0008:
                                           ; SOURCE LINE # 198
01AA 900000      R     MOV     DPTR,#timeout
01AD 120000      E     LCALL   ?C?LLDXDATA
01B0 EF                MOV     A,R7
01B1 4E                ORL     A,R6
01B2 7005              JNZ     ?C0010
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
01B4 7F03              MOV     R7,#03H
01B6 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 201
01B9         ?C0010:
                                           ; SOURCE LINE # 204
01B9 7B00              MOV     R3,#00H
01BB 7A40              MOV     R2,#040H
01BD 7904              MOV     R1,#04H
01BF 7D00              MOV     R5,#00H
01C1 7C01              MOV     R4,#01H
01C3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 205
01C6 904004            MOV     DPTR,#04004H
01C9 7407              MOV     A,#07H
01CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
01CC 904006            MOV     DPTR,#04006H
01CF E4                CLR     A
01D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
01D1 904008            MOV     DPTR,#04008H
01D4 7448              MOV     A,#048H
01D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
01D7 904004            MOV     DPTR,#04004H
01DA E4                CLR     A
01DB F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 14  

                                           ; SOURCE LINE # 209
01DC 904001            MOV     DPTR,#04001H
01DF 7402              MOV     A,#02H
01E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
01E2 90400B            MOV     DPTR,#0400BH
01E5 7404              MOV     A,#04H
01E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
01E8 9043A2            MOV     DPTR,#043A2H
01EB E0                MOVX    A,@DPTR
01EC FF                MOV     R7,A
01ED EF                MOV     A,R7
01EE 441F              ORL     A,#01FH
01F0 FF                MOV     R7,A
01F1 9043A2            MOV     DPTR,#043A2H
01F4 EF                MOV     A,R7
01F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
01F6 9043A1            MOV     DPTR,#043A1H
01F9 E0                MOVX    A,@DPTR
01FA FF                MOV     R7,A
01FB EF                MOV     A,R7
01FC 4401              ORL     A,#01H
01FE FF                MOV     R7,A
01FF 9043A1            MOV     DPTR,#043A1H
0202 EF                MOV     A,R7
0203 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
0204 9043A0            MOV     DPTR,#043A0H
0207 E0                MOVX    A,@DPTR
0208 FF                MOV     R7,A
0209 EF                MOV     A,R7
020A 4480              ORL     A,#080H
020C FF                MOV     R7,A
020D 9043A0            MOV     DPTR,#043A0H
0210 EF                MOV     A,R7
0211 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
0212 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 15  

001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
002F 90513D            MOV     DPTR,#0513DH
0032 7404              MOV     A,#04H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0035 905B00            MOV     DPTR,#05B00H
0038 7440              MOV     A,#040H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
003B 905B58            MOV     DPTR,#05B58H
003E 7440              MOV     A,#040H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
0041 905876            MOV     DPTR,#05876H
0044 7444              MOV     A,#044H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0047 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 266
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 268
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0013
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 271
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 16  

0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
0025 800E              SJMP    ?C0014
0027         ?C0013:
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 276
0035         ?C0014:
                                           ; SOURCE LINE # 277
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _adcVFan_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 309
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0017
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW adcVFan_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH adcVFan_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 17  

0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#adcVFan_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
0046         ?C0017:
0046 22                RET     
             ; FUNCTION _adcVFan_AMux_Set (END)

             ; FUNCTION _adcVFan_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 331
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0019
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW adcVFan_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH adcVFan_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 18  

0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#adcVFan_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
0049         ?C0019:
0049 22                RET     
             ; FUNCTION _adcVFan_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 361
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 383
0016 750000      R     MOV     i,#00H
0019         ?C0020:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9406              SUBB    A,#06H
001E 503A              JNC     ?C0021
                                           ; SOURCE LINE # 384
                                           ; SOURCE LINE # 385
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 19  

0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 386
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 387
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0020
005A         ?C0021:
                                           ; SOURCE LINE # 389
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 392
0063 905883            MOV     DPTR,#05883H
0066 740A              MOV     A,#0AH
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 395
0069 7B01              MOV     R3,#01H
006B 7A50              MOV     R2,#050H
006D 7903              MOV     R1,#03H
006F 120000      E     LCALL   _cyread8
0072 EF                MOV     A,R7
0073 4402              ORL     A,#02H
0075 FD                MOV     R5,A
0076 7B01              MOV     R3,#01H
0078 7A50              MOV     R2,#050H
007A 7903              MOV     R1,#03H
007C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 396
007F 7B01              MOV     R3,#01H
0081 7A50              MOV     R2,#050H
0083 7913              MOV     R1,#013H
0085 120000      E     LCALL   _cyread8
0088 EF                MOV     A,R7
0089 4402              ORL     A,#02H
008B FD                MOV     R5,A
008C 7B01              MOV     R3,#01H
008E 7A50              MOV     R2,#050H
0090 7913              MOV     R1,#013H
0092 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 399
0095 9043A0            MOV     DPTR,#043A0H
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B 4440              ORL     A,#040H
009D FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 20  

009E 9043A0            MOV     DPTR,#043A0H
00A1 EF                MOV     A,R7
00A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 400
00A3 9043C2            MOV     DPTR,#043C2H
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 4410              ORL     A,#010H
00AB FF                MOV     R7,A
00AC 9043C2            MOV     DPTR,#043C2H
00AF EF                MOV     A,R7
00B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 405
00B1 7B08              MOV     R3,#08H
00B3 7A02              MOV     R2,#02H
00B5 7990              MOV     R1,#090H
00B7 C003              PUSH    AR3
00B9 C002              PUSH    AR2
00BB C001              PUSH    AR1
00BD 7B00              MOV     R3,#00H
00BF 7A51              MOV     R2,#051H
00C1 7900              MOV     R1,#00H
00C3 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C6 120000      E     LCALL   ?C?PSTXDATA
00C9 D001              POP     AR1
00CB D002              POP     AR2
00CD D003              POP     AR3
00CF 7F0A              MOV     R7,#0AH
00D1 7E00              MOV     R6,#00H
00D3 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 406
00D6 7B08              MOV     R3,#08H
00D8 7A02              MOV     R2,#02H
00DA 799C              MOV     R1,#09CH
00DC C003              PUSH    AR3
00DE C002              PUSH    AR2
00E0 C001              PUSH    AR1
00E2 7B00              MOV     R3,#00H
00E4 7A51              MOV     R2,#051H
00E6 79C2              MOV     R1,#0C2H
00E8 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00EB 120000      E     LCALL   ?C?PSTXDATA
00EE D001              POP     AR1
00F0 D002              POP     AR2
00F2 D003              POP     AR3
00F4 7F08              MOV     R7,#08H
00F6 7E00              MOV     R6,#00H
00F8 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 407
00FB 7B08              MOV     R3,#08H
00FD 7A02              MOV     R2,#02H
00FF 79A4              MOV     R1,#0A4H
0101 C003              PUSH    AR3
0103 C002              PUSH    AR2
0105 C001              PUSH    AR1
0107 7B00              MOV     R3,#00H
0109 7A51              MOV     R2,#051H
010B 79F0              MOV     R1,#0F0H
010D 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0110 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 21  

0113 D001              POP     AR1
0115 D002              POP     AR2
0117 D003              POP     AR3
0119 7F0A              MOV     R7,#0AH
011B 7E00              MOV     R6,#00H
011D 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 408
0120 7B08              MOV     R3,#08H
0122 7A02              MOV     R2,#02H
0124 79B0              MOV     R1,#0B0H
0126 C003              PUSH    AR3
0128 C002              PUSH    AR2
012A C001              PUSH    AR1
012C 7B00              MOV     R3,#00H
012E 7A51              MOV     R2,#051H
0130 7912              MOV     R1,#012H
0132 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0135 120000      E     LCALL   ?C?PSTXDATA
0138 D001              POP     AR1
013A D002              POP     AR2
013C D003              POP     AR3
013E 7F08              MOV     R7,#08H
0140 7E00              MOV     R6,#00H
0142 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 409
0145 7B08              MOV     R3,#08H
0147 7A02              MOV     R2,#02H
0149 79B8              MOV     R1,#0B8H
014B C003              PUSH    AR3
014D C002              PUSH    AR2
014F C001              PUSH    AR1
0151 7B00              MOV     R3,#00H
0153 7A51              MOV     R2,#051H
0155 7922              MOV     R1,#022H
0157 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
015A 120000      E     LCALL   ?C?PSTXDATA
015D D001              POP     AR1
015F D002              POP     AR2
0161 D003              POP     AR3
0163 7F08              MOV     R7,#08H
0165 7E00              MOV     R6,#00H
0167 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 410
016A 7B08              MOV     R3,#08H
016C 7A02              MOV     R2,#02H
016E 79C0              MOV     R1,#0C0H
0170 C003              PUSH    AR3
0172 C002              PUSH    AR2
0174 C001              PUSH    AR1
0176 7B00              MOV     R3,#00H
0178 7A51              MOV     R2,#051H
017A 7932              MOV     R1,#032H
017C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
017F 120000      E     LCALL   ?C?PSTXDATA
0182 D001              POP     AR1
0184 D002              POP     AR2
0186 D003              POP     AR3
0188 7F08              MOV     R7,#08H
018A 7E00              MOV     R6,#00H
018C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 411
018F 9044F4            MOV     DPTR,#044F4H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 22  

0192 7401              MOV     A,#01H
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 413
0195 904322            MOV     DPTR,#04322H
0198 E0                MOVX    A,@DPTR
0199 FF                MOV     R7,A
019A EF                MOV     A,R7
019B 4408              ORL     A,#08H
019D FF                MOV     R7,A
019E 904322            MOV     DPTR,#04322H
01A1 EF                MOV     A,R7
01A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 414
01A3 9046EC            MOV     DPTR,#046ECH
01A6 E0                MOVX    A,@DPTR
01A7 FF                MOV     R7,A
01A8 EF                MOV     A,R7
01A9 C3                CLR     C
01AA 9405              SUBB    A,#05H
01AC 5006              JNC     ?C0023
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
01AE 904689            MOV     DPTR,#04689H
01B1 743A              MOV     A,#03AH
01B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
01B4         ?C0023:
                                           ; SOURCE LINE # 421
01B4 904800            MOV     DPTR,#04800H
01B7 74F1              MOV     A,#0F1H
01B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 423
01BA 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 425
01BD 904800            MOV     DPTR,#04800H
01C0 74B1              MOV     A,#0B1H
01C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 428
01C3 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 431
01C6 7B00              MOV     R3,#00H
01C8 7A43              MOV     R2,#043H
01CA 79A0              MOV     R1,#0A0H
01CC C003              PUSH    AR3
01CE C002              PUSH    AR2
01D0 C001              PUSH    AR1
01D2 7B00              MOV     R3,#00H
01D4 7A43              MOV     R2,#043H
01D6 79B0              MOV     R1,#0B0H
01D8 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01DB 120000      E     LCALL   ?C?PSTXDATA
01DE D001              POP     AR1
01E0 D002              POP     AR2
01E2 D003              POP     AR3
01E4 7F0E              MOV     R7,#0EH
01E6 7E00              MOV     R6,#00H
01E8 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 432
01EB 9043B0            MOV     DPTR,#043B0H
01EE E0                MOVX    A,@DPTR
01EF FF                MOV     R7,A
01F0 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/30/2018 14:56:07 PAGE 23  

01F1 54FD              ANL     A,#0FDH
01F3 FF                MOV     R7,A
01F4 EF                MOV     A,R7
01F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 433
01F6 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1333    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
